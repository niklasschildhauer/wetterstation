var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.006,1,0.654]],["body/components/AppComponent.html",[0,0.009,1,1.066,2,0.88,3,0.118,4,0.084,5,0.693,6,0.693,7,0.693,8,0.693,9,0.084,10,3.322,11,0.693,12,1.579,13,1.476,14,1.964,15,0.972,16,6.159,17,0.972,18,5.332,19,0.133,20,0.59,21,3.208,22,3.528,23,5.384,24,3.718,25,1.066,26,2.88,27,0.688,28,6.678,29,6.678,30,6.678,31,1.217,32,4.219,33,0.491,34,3.8,35,5.838,36,3.066,37,6.159,38,3.191,39,5.092,40,4.084,41,1.027,42,5.332,43,0.88,44,0.013,45,0.831,46,0.255,47,4.661,48,3.8,49,0.658,50,1.195,51,3.8,52,3.8,53,3.8,54,4.219,55,5.284,56,3.8,57,4.219,58,1.253,59,1.257,60,1.341,61,1.862,62,0.709,63,3.8,64,2.617,65,3.8,66,4.219,67,3.8,68,3.8,69,0.572,70,0.266,71,2.265,72,3.8,73,1.614,74,1.744,75,2.446,76,1.677,77,3.626,78,3.007,79,2.294,80,1.979,81,2.294,82,1.225,83,3.626,84,2.427,85,2.772,86,0.096,87,0.28,88,0.866,89,1.51,90,5.332,91,2.584,92,3.8,93,3.007,94,2.427,95,2.427,96,2.584,97,0.951,98,3.007,99,3.007,100,2.772,101,3.889,102,2.072,103,1.1,104,1.816,105,3.626,106,3.322,107,0.628,108,3.8,109,3.007,110,2.584,111,3.007,112,1.148,113,2.294,114,2.584,115,2.584,116,4.219,117,1.894,118,3.8,119,3.406,120,2.446,121,2.776,122,3.8,123,3.8,124,2.584,125,3.8,126,2.584,127,0.547,128,3.322,129,0.839,130,3.322,131,1.979,132,1.816,133,3.8,134,1.964,135,3.8,136,5.332,137,2.12,138,4.219,139,2.353,140,3.8,141,3.8,142,3.8,143,3.626,144,5.332,145,5.332,146,3.8,147,3.8,148,2.772,149,3.8,150,5.332,151,2.772,152,3.8,153,2.294,154,2.584,155,2.294,156,3.8,157,3.8,158,3.8,159,1.416,160,3.8,161,3.8,162,3.8,163,3.8,164,3.8,165,3.8,166,3.8,167,3.8,168,3.8,169,1.376,170,2.294,171,1.148,172,3.322,173,1.569,174,2.051,175,1.186,176,1.501,177,0.981,178,1.556,179,2.033,180,0.586,181,0.972,182,1.017,183,0.693,184,0.693,185,0.607,186,0.67,187,0.309,188,0.704,189,1.538,190,0.693,191,0.607,192,0.67,193,0.91,194,1.45,195,0.586,196,0.586,197,0.607,198,0.67,199,0.607,200,0.67,201,0.649,202,0.607,203,0.918,204,0.693,205,0.607,206,0.586,207,0.586,208,1.217,209,0.607,210,0.586,211,0.586,212,0.393,213,0.607,214,0.586,215,0.544,216,0.607,217,0.607,218,0.309,219,0.586,220,0.477,221,0.607,222,0.586,223,0.528,224,0.607,225,1.087,226,0.91,227,0.607,228,0.607,229,0.607,230,0.67,231,0.586,232,0.649,233,0.607,234,0.649,235,0.649,236,0.586,237,0.455,238,0.373,239,0.607,240,0.586,241,0.851,242,0.767,243,0.586,244,0.586,245,1.087,246,0.607,247,0.627,248,0.693,249,0.607,250,0.607,251,0.276,252,0.649,253,0.607,254,0.649,255,0.607,256,0.67,257,0.649,258,0.586,259,0.627,260,0.586,261,0.607,262,0.67,263,0.607,264,0.67,265,0.607,266,0.67,267,0.649,268,0.693,269,0.693,270,0.005,271,0.008,272,0.005]],["title/modules/AppModule.html",[273,2.134,274,2.99]],["body/modules/AppModule.html",[1,1.36,3,0.126,4,0.126,9,0.126,13,1.183,44,0.013,69,0.628,70,0.396,74,2.597,86,0.143,87,0.417,180,0.873,270,0.008,271,0.01,272,0.008,273,2.947,274,6.274,275,3.242,276,3.416,277,5.093,278,5.093,279,4.712,280,3.616,281,4.948,282,4.948,283,4.948,284,4.948,285,5.205,286,5.541,287,4.918,288,5.205,289,4.712,290,3.616,291,3.087,292,5.66,293,4.712,294,6.929,295,4.712,296,6.929,297,5.483,298,3.849,299,5.66,300,4.129,301,4.479,302,5.66,303,5.66,304,4.948,305,5.66,306,6.058,307,4.948,308,5.66,309,4.948,310,4.129,311,2.498,312,5.66,313,5.483,314,3.616,315,3.616,316,5.66,317,5.66,318,5.66,319,5.66,320,3.416,321,5.66,322,5.66,323,5.66,324,5.66,325,5.66,326,5.66,327,4.948,328,5.66,329,5.66,330,5.66]],["title/modules/AppRoutingModule.html",[273,2.134,285,2.618]],["body/modules/AppRoutingModule.html",[0,0.012,3,0.166,4,0.112,9,0.112,44,0.013,69,0.63,70,0.351,71,2.136,86,0.127,87,0.371,103,1.226,107,0.724,127,1.183,134,1.852,175,1.569,195,0.993,196,0.993,203,0.959,206,0.993,207,0.993,210,0.993,211,0.993,212,0.371,214,0.993,215,0.513,219,0.993,222,0.993,223,0.894,231,0.993,232,0.858,236,0.993,237,0.43,238,0.45,240,0.776,241,1.133,242,1.021,243,1.095,244,0.993,251,0.26,258,0.993,259,1.062,260,0.993,270,0.007,271,0.009,272,0.007,275,2.88,280,3.212,285,4.111,293,3.419,295,4.375,331,4.395,332,5.028,333,5.092,334,3.256,335,5.028,336,3.668,337,6.539,338,5.028,339,3.668,340,5.028,341,3.668,342,5.028,343,3.668,344,5.028,345,3.668,346,6.603,347,5.028,348,3.212,349,5.028,350,3.419,351,5.028,352,3.212,353,5.028,354,3.419,355,5.028,356,3.668,357,5.028,358,3.419,359,6.434,360,4.375,361,5.028,362,3.419,363,5.028,364,3.668,365,6.742,366,8.223,367,7.096,368,2.402,369,5.028,370,5.028,371,3.979,372,5.028,373,5.028]],["title/components/ApparentTemperatureTileViewComponent.html",[0,0.006,185,0.654]],["body/components/ApparentTemperatureTileViewComponent.html",[0,0.011,1,0.661,2,0.934,3,0.126,4,0.143,5,0.755,6,0.755,7,0.755,8,0.755,9,0.092,11,0.755,12,1.586,13,1.483,15,1.032,17,1.032,19,0.145,20,0.626,25,1.029,27,0.731,31,1.263,33,0.832,41,1.008,43,0.684,44,0.012,45,0.802,46,0.242,49,0.53,50,1.029,58,1.33,59,1.214,60,1.294,61,2.094,69,0.475,70,0.29,86,0.105,87,0.305,103,1.103,107,0.577,127,1.078,129,1.249,159,1.263,177,1.069,180,0.639,181,1.032,182,1.198,183,0.755,184,0.755,185,1.106,186,1.437,187,0.701,188,0.776,189,1.55,190,0.755,191,0.661,192,0.731,193,0.966,194,1.473,195,0.639,196,0.639,197,0.661,198,1.137,199,0.661,200,0.731,201,0.707,202,0.661,203,0.961,204,0.755,205,0.661,206,0.639,207,0.639,208,1.263,209,0.661,210,0.639,211,0.639,212,0.417,213,0.661,214,0.639,215,0.577,216,0.661,217,0.661,218,0.337,219,0.639,220,0.506,221,0.661,222,0.639,223,0.575,224,0.661,225,1.137,226,0.966,227,0.661,228,0.661,229,0.661,230,0.731,231,0.639,232,0.707,233,0.661,234,0.707,235,0.707,236,0.639,237,0.483,238,0.396,239,0.661,240,0.639,241,0.903,242,0.814,243,0.639,244,0.639,245,1.137,246,0.661,247,0.684,248,0.755,249,0.661,250,0.661,251,0.293,252,0.707,253,0.661,254,0.707,255,0.661,256,0.731,257,0.707,258,0.639,259,0.684,260,0.639,261,0.661,262,0.731,263,0.661,264,0.731,265,0.661,266,0.731,267,0.707,268,0.755,269,0.755,270,0.006,271,0.008,272,0.006,374,6.92,375,6.264,376,1.252,377,0.214,378,1.653,379,1.766,380,2.597,381,1.948,382,2.234,383,3.416,384,1.824,385,2.028,386,3.848,387,3.242,388,1.211,389,2.497,390,3.416,391,3.416,392,0.934,393,1.214,394,2.078,395,1.824,396,7.254,397,4.702,398,2.084,399,3.891,400,3.693,401,2.82,402,3.086,403,3.416,404,2.372,405,2.259,406,3.021,407,2.816,408,4.119,409,2.5,410,2.234,411,1.829,412,1.759,413,2.646,414,2.5,415,2.372,416,2.816,417,1.335,418,2.5,419,4.141,420,4.141,421,2.816,422,1.636]],["title/components/BackButtonElementComponent.html",[0,0.006,191,0.654]],["body/components/BackButtonElementComponent.html",[0,0.011,1,0.663,2,0.936,3,0.126,4,0.092,5,0.757,6,0.757,7,0.757,8,0.757,9,0.092,11,0.757,12,1.586,13,1.483,15,1.034,17,1.034,19,0.145,20,0.628,25,0.663,27,0.732,31,1.265,33,0.536,41,0.968,43,0.686,44,0.012,45,0.803,46,0.242,49,0.531,50,1.107,59,0.782,60,0.834,62,0.653,69,0.511,70,0.29,86,0.105,87,0.306,88,0.946,103,1.104,107,0.578,131,2.953,132,1.984,137,1.43,139,2.502,159,1.398,171,1.255,173,1.333,174,1.383,176,1.64,177,1.464,180,0.641,181,1.034,182,1.308,183,0.757,184,0.757,185,0.663,186,0.733,187,0.338,188,0.717,189,1.551,190,0.757,191,1.107,192,1.49,193,1.467,194,1.474,195,0.641,196,0.641,197,0.663,198,0.733,199,0.663,200,0.733,201,0.709,202,0.663,203,0.962,204,0.757,205,0.663,206,0.641,207,0.641,208,1.265,209,0.663,210,0.641,211,0.641,212,0.418,213,0.663,214,0.641,215,0.578,216,0.663,217,0.663,218,0.338,219,0.641,220,0.507,221,0.663,222,0.641,223,0.577,224,0.663,225,1.139,226,1.184,227,0.663,228,0.663,229,0.663,230,1.139,231,0.641,232,0.709,233,0.663,234,0.709,235,0.709,236,0.641,237,0.484,238,0.396,239,0.663,240,0.641,241,0.905,242,0.816,243,0.641,244,0.641,245,1.139,246,0.663,247,0.686,248,0.757,249,0.663,250,0.663,251,0.294,252,0.709,253,0.663,254,0.709,255,0.663,256,0.733,257,0.709,258,0.641,259,0.686,260,0.641,261,0.663,262,0.733,263,0.663,264,0.733,265,0.663,266,0.733,267,0.709,268,0.757,269,0.757,270,0.006,271,0.008,272,0.006,377,0.215,392,0.936,393,1.216,398,2.088,410,1.828,422,1.64,423,3.259,424,6.706,425,6.071,426,1.832,427,3.622,428,3.085,429,2.709,430,6.456,431,1.951,432,4.836,433,6.937,434,2.76,435,4.153,436,2.76,437,3.63,438,3.286,439,3.63,440,4.136,441,4.956,442,4.956,443,3.286,444,4.124,445,2.602,446,6.937,447,2.653,448,3.286,449,2.824,450,3.029,451,3.63,452,4.153,453,2.507,454,1.106,455,1.255,456,1.583,457,1.906,458,2.709,459,1.43,460,1.478,461,3.248,462,2.653,463,3.286,464,2.653,465,3.029,466,3.029,467,3.029,468,3.63,469,3.521,470,3.286,471,2.653,472,3.63]],["title/components/CalibrationInfoDetailViewComponent.html",[0,0.006,195,0.632]],["body/components/CalibrationInfoDetailViewComponent.html",[0,0.011,1,0.682,2,0.954,3,0.188,4,0.095,5,0.779,6,0.779,7,0.779,8,0.779,9,0.095,11,0.779,12,1.588,13,1.485,15,1.054,17,1.054,19,0.149,25,0.682,27,0.746,31,1.28,33,0.552,40,4.123,41,0.846,43,0.706,44,0.012,45,0.815,46,0.149,49,0.541,50,1.121,69,0.426,70,0.299,71,1.815,86,0.108,87,0.315,88,0.973,100,3.117,103,1.23,104,2.762,107,0.771,159,1.337,169,1.103,171,1.292,173,1.004,175,1.334,180,0.659,181,1.054,182,1.082,183,0.779,184,0.779,185,0.682,186,0.754,187,0.348,188,0.721,189,1.555,190,0.779,191,0.682,192,1.156,193,1.29,194,1.482,195,1.083,196,1.263,197,0.682,198,0.754,199,0.682,200,0.754,201,0.729,202,0.682,203,0.976,204,0.779,205,0.682,206,0.659,207,0.659,208,1.28,209,0.682,210,0.659,211,0.659,212,0.426,213,0.682,214,0.659,215,0.59,216,0.682,217,0.682,218,0.348,219,0.659,220,0.517,221,0.682,222,0.659,223,0.593,224,0.682,225,1.156,226,0.987,227,0.682,228,0.682,229,0.682,230,0.754,231,0.659,232,0.729,233,0.682,234,0.729,235,0.729,236,0.659,237,0.494,238,0.404,239,0.682,240,0.659,241,0.923,242,0.832,243,0.659,244,0.659,245,1.156,246,0.682,247,0.706,248,0.779,249,0.682,250,0.682,251,0.299,252,0.729,253,0.682,254,0.729,255,0.682,256,0.754,257,0.729,258,0.659,259,0.706,260,0.659,261,0.682,262,0.754,263,0.682,264,0.754,265,0.682,266,0.754,267,0.729,268,0.779,269,0.779,270,0.006,271,0.008,272,0.006,345,5.12,376,1.292,377,0.221,378,1.55,379,1.804,382,1.864,392,0.954,393,1.234,394,2.112,395,1.864,402,2.331,473,6.136,474,1.925,475,3.49,476,5.781,477,6.136,478,5.781,479,1.692,480,7.019,481,3.381,482,3.381,483,3.693,484,2.906,485,5.781,486,5.781,487,2.691,488,7.019,489,5.781,490,3.311,491,5.781,492,5.781,493,3.49,494,5.781,495,5.781,496,5.781,497,5.781,498,3.49,499,3.693,500,5.781,501,5.781,502,5.781,503,5.054,504,5.781,505,5.781,506,5.054,507,5.781,508,5.781,509,5.781,510,5.781,511,5.781,512,5.781,513,5.781,514,2.225]],["title/components/CardElementComponent.html",[0,0.006,197,0.654]],["body/components/CardElementComponent.html",[0,0.011,1,0.606,2,0.88,3,0.118,4,0.084,5,0.692,6,0.692,7,0.692,8,0.692,9,0.084,11,0.692,12,1.579,13,1.474,15,0.971,17,0.971,19,0.133,20,0.59,24,4.518,27,0.688,31,1.217,33,0.795,41,0.987,44,0.012,45,0.663,46,0.245,49,0.355,50,0.85,58,1.569,59,1.257,60,1.34,61,2.017,62,0.769,69,0.28,70,0.265,79,4.029,86,0.135,87,0.28,103,1.077,107,0.543,112,2.203,132,2.545,137,2.119,159,1.538,169,1.589,170,2.291,171,1.147,173,1.936,174,2.649,175,1.184,176,2.636,177,1.972,178,2.733,179,2.031,180,0.585,181,0.971,182,1.236,183,0.692,184,0.692,185,0.606,186,0.67,187,0.309,188,0.704,189,1.538,190,0.692,191,0.606,192,0.67,193,0.909,194,1.45,195,0.585,196,0.585,197,1.065,198,1.416,199,0.606,200,0.67,201,0.648,202,0.606,203,0.917,204,0.692,205,0.606,206,0.585,207,0.585,208,1.217,209,0.606,210,0.585,211,0.585,212,0.393,213,0.606,214,0.585,215,0.543,216,0.606,217,0.606,218,0.309,219,0.585,220,0.477,221,0.606,222,0.585,223,0.527,224,0.606,225,1.086,226,0.909,227,0.606,228,0.606,229,0.606,230,0.67,231,0.585,232,0.648,233,0.606,234,0.648,235,0.648,236,0.585,237,0.455,238,0.372,239,0.606,240,0.585,241,0.85,242,0.767,243,0.585,244,0.585,245,1.086,246,0.606,247,1.016,248,0.692,249,0.606,250,0.606,251,0.276,252,0.648,253,0.606,254,0.648,255,0.606,256,0.67,257,0.648,258,0.585,259,0.627,260,0.585,261,0.606,262,0.67,263,0.606,264,0.67,265,0.606,266,0.67,267,0.648,268,0.692,269,0.692,270,0.005,271,0.008,272,0.005,377,0.197,381,1.306,383,3.215,391,3.215,392,0.88,393,1.159,398,1.962,399,3.715,400,3.526,408,5.082,410,2.349,414,4.687,415,4.448,422,2.431,423,3.299,426,1.675,428,2.941,429,2.545,438,3.003,447,2.424,448,3.003,455,2.017,456,1.447,466,3.886,467,3.886,469,2.07,477,3.317,515,5.327,516,2.181,517,5.327,518,6.543,519,3.622,520,5.327,521,2.581,522,2.424,523,2.581,524,2.431,525,2.424,526,3.003,527,2.291,528,4.657,529,3.317,530,2.424,531,5.381,532,3.795,533,3.795,534,2.774,535,2.424,536,2.581,537,3.886,538,1.976,539,6.674,540,4.657,541,5.327,542,5.327,543,2.879,544,2.424,545,3.795,546,3.317,547,2.424,548,3.317,549,2.545,550,2.424,551,3.795,552,2.263,553,2.07,554,3.795,555,5.834,556,3.795,557,3.795,558,1.813,559,4.538,560,7.288,561,5.327,562,5.327,563,3.003,564,2.581,565,3.795,566,4.657,567,5.327,568,4.657,569,3.795,570,3.795,571,3.795,572,5.327]],["title/interfaces/CheckTokenResponse.html",[573,0.569,574,2.618]],["body/interfaces/CheckTokenResponse.html",[3,0.075,4,0.075,9,0.075,14,1.246,19,0.118,20,0.543,22,3.852,26,2.858,38,2.759,44,0.013,46,0.202,49,0.718,58,1.847,59,0.637,62,0.943,64,2.085,69,0.496,70,0.236,74,1.552,75,3.773,76,1.492,81,2.042,82,2.577,86,0.086,87,0.249,88,0.77,89,1.512,97,2.015,121,3.007,127,0.487,129,1.398,139,1.492,223,0.47,251,0.299,270,0.005,271,0.007,272,0.005,311,1.492,320,2.042,334,1.552,377,0.175,384,2.042,388,1.05,392,0.558,431,2.284,445,1.552,479,2.322,490,3.628,573,0.802,574,3.135,575,1.056,576,2.3,577,1.616,578,1.797,579,3.337,580,3.947,581,4.06,582,4.906,583,5.278,584,2.161,585,1.538,586,1.686,587,1.686,588,3.352,589,1.686,590,1.246,591,1.552,592,1.616,593,1.29,594,2.161,595,2.467,596,3.765,597,2.467,598,2.467,599,2.467,600,2.467,601,2.467,602,2.467,603,2.467,604,2.467,605,2.467,606,1.845,607,1.845,608,2.467,609,2.467,610,2.467,611,2.467,612,2.467,613,2.467,614,1.845,615,2.467,616,4.474,617,4.08,618,2.091,619,3.765,620,2.467,621,4.234,622,3.337,623,4.047,624,4.395,625,3.135,626,3.689,627,2.467,628,1.845,629,4.307,630,2.467,631,1.437,632,2.467,633,2.467,634,2.467,635,3.193,636,4.047,637,4.481,638,3.653,639,4.481,640,3.823,641,3.157,642,4.047,643,4.047,644,3.496,645,4.038,646,2.467,647,5.02,648,5.117,649,5.117,650,5.117,651,4.62,652,2.467,653,2.467,654,2.467,655,2.467,656,2.467,657,4.307,658,2.467,659,2.467,660,2.467,661,4.047,662,2.467,663,2.467,664,3.352,665,2.467,666,3.579,667,3.307,668,3.579,669,3.307,670,3.579,671,2.759,672,3.579,673,2.161,674,2.467,675,4.212,676,2.467,677,2.467,678,3.579,679,3.337,680,2.445,681,2.467,682,2.467,683,5.117,684,2.467,685,3.135,686,3.579,687,3.337,688,2.467,689,2.467,690,2.467,691,2.467,692,2.467,693,2.467,694,2.445,695,2.467,696,2.161,697,2.467,698,2.467,699,2.467,700,2.467,701,2.467,702,2.467,703,2.467,704,1.246,705,2.467,706,1.845,707,2.161,708,2.345,709,1.634,710,2.161,711,1.616,712,1.204,713,2.467,714,3.689,715,2.467,716,2.467,717,1.761,718,2.467,719,2.467,720,2.467,721,2.759,722,2.042,723,1.937,724,1.552,725,2.042,726,1.616,727,2.161]],["title/components/CheckboxSwitcherElementComponent.html",[0,0.006,199,0.654]],["body/components/CheckboxSwitcherElementComponent.html",[0,0.011,1,0.564,2,0.836,3,0.112,4,0.078,5,0.644,6,0.644,7,0.644,8,0.644,9,0.078,11,0.644,12,1.573,13,1.47,15,0.923,17,0.923,19,0.123,25,0.564,26,2.337,27,0.654,31,1.178,33,0.654,36,2.915,39,4.986,41,1.013,43,0.583,44,0.013,45,0.736,46,0.256,49,0.666,50,0.945,58,1.19,60,1.472,62,0.913,64,1.501,69,0.476,70,0.247,73,1.501,82,1.632,83,3.443,84,2.257,86,0.089,87,0.26,89,1.384,91,2.402,97,1.781,103,1.055,107,0.516,110,2.402,112,1.068,114,2.402,115,2.402,124,2.402,126,2.402,127,0.729,131,1.84,137,2.451,138,4.007,159,1.43,169,0.912,171,1.53,173,0.83,174,1.971,175,1.103,177,1.528,179,1.93,180,0.545,181,0.923,182,1.211,183,0.644,184,0.644,185,0.564,186,0.623,187,0.288,188,0.693,189,1.527,190,0.644,191,0.564,192,0.623,193,0.864,194,1.43,195,0.545,196,0.545,197,0.564,198,0.623,199,1.032,200,1.398,201,1.459,202,0.564,203,0.882,204,0.644,205,0.564,206,0.545,207,0.545,208,1.178,209,0.564,210,0.545,211,0.545,212,0.373,213,0.564,214,0.545,215,0.516,216,0.564,217,0.564,218,0.288,219,0.545,220,0.453,221,0.564,222,0.545,223,0.491,224,0.564,225,1.044,226,0.864,227,0.564,228,0.564,229,0.564,230,0.623,231,0.545,232,0.603,233,0.564,234,0.603,235,0.603,236,0.545,237,0.433,238,0.354,239,0.564,240,0.545,241,0.808,242,0.729,243,0.545,244,0.545,245,1.044,246,0.564,247,0.583,248,0.644,249,0.564,250,0.564,251,0.262,252,0.603,253,0.564,254,0.603,255,0.564,256,0.623,257,0.603,258,0.545,259,0.583,260,0.545,261,0.564,262,0.623,263,0.564,264,0.623,265,0.564,266,0.623,267,0.603,268,0.644,269,0.644,270,0.005,271,0.007,272,0.005,377,0.183,392,0.836,393,1.114,398,1.865,410,2.295,422,2,423,3.366,426,1.559,428,2.828,429,2.419,434,2.18,437,3.088,439,3.088,443,2.796,445,1.621,447,2.257,448,2.796,454,0.941,455,1.53,456,1.93,457,1.621,458,2.828,459,1.216,460,1.258,461,4.296,464,2.257,465,2.577,474,1.686,479,1.034,519,2.402,534,2.637,535,2.257,536,2.402,537,2.577,538,1.84,547,2.257,618,1.528,664,1.688,709,1.686,722,3.572,723,2.9,725,3.056,726,1.688,728,6.927,729,6.27,730,5.063,731,5.063,732,5.063,733,5.063,734,5.063,735,1.865,736,5.063,737,3.056,738,4.007,739,5.063,740,6.463,741,6.463,742,6.463,743,5.918,744,5.918,745,5.918,746,4.007,747,5.918,748,2.024,749,2.796,750,2.796,751,4.683,752,3.088,753,2.553,754,5.65,755,5.063,756,3.533,757,5.063,758,3.088,759,4.426,760,4.426,761,2.073,762,3.443,763,1.761,764,1.688,765,3.088,766,3.088,767,3.533,768,2.637,769,1.761,770,3.533,771,3.088,772,3.533,773,2.257,774,3.088,775,3.088,776,4.426,777,5.173,778,4.426,779,5.918,780,3.088,781,5.063,782,5.063,783,5.918,784,2.577,785,5.063,786,1.84,787,2.024,788,2.577,789,2.577,790,3.533,791,3.533,792,4.426,793,5.063,794,1.621,795,2.577,796,3.533,797,3.533,798,2.402,799,3.088,800,2.257,801,3.088]],["title/components/ConfigurationTilePopUpDialogView.html",[0,0.006,202,0.654]],["body/components/ConfigurationTilePopUpDialogView.html",[0,0.011,1,0.587,2,0.86,3,0.146,4,0.082,5,0.67,6,0.67,7,0.67,8,0.67,9,0.082,11,0.67,12,1.577,13,1.472,15,1.103,17,1.103,19,0.128,20,0.577,25,0.587,27,0.673,31,0.67,33,0.673,40,3.3,41,0.932,43,0.607,44,0.013,45,0.983,46,0.211,49,0.487,50,1.184,59,0.692,60,0.738,62,0.758,69,0.512,70,0.257,71,1.562,86,0.132,87,0.384,88,0.838,89,0.715,103,1.091,107,0.531,112,1.111,127,1.038,134,1.354,137,2.266,143,4.724,159,1.266,169,1.345,173,0.864,174,1.225,175,1.148,177,0.949,179,1.986,180,0.567,181,0.95,182,0.999,183,0.67,184,0.67,185,0.587,186,0.649,187,0.3,188,0.77,189,1.533,190,0.67,191,0.587,192,0.649,193,1.033,194,1.441,195,0.567,196,1.015,197,0.587,198,0.649,199,0.587,200,0.649,201,0.628,202,1.051,203,1.243,204,1.382,205,0.832,206,0.567,207,0.567,208,1.2,209,0.587,210,0.567,211,0.567,212,0.384,213,0.587,214,0.567,215,0.531,216,0.587,217,0.587,218,0.3,219,0.567,220,0.589,221,0.587,222,0.567,223,0.511,224,0.587,225,1.067,226,0.889,227,0.587,228,0.587,229,0.587,230,0.649,231,0.567,232,0.628,233,0.587,234,0.628,235,0.628,236,0.567,237,0.517,238,0.364,239,0.587,240,0.567,241,0.832,242,0.75,243,0.567,244,0.567,245,1.067,246,0.587,247,0.607,248,0.67,249,0.587,250,0.587,251,0.27,252,0.628,253,0.587,254,0.628,255,0.587,256,0.649,257,0.628,258,0.567,259,0.607,260,0.567,261,0.587,262,0.649,263,0.587,264,0.649,265,0.587,266,0.649,267,0.628,268,0.67,269,0.67,270,0.01,271,0.007,272,0.005,348,4.739,376,1.111,377,0.19,378,1.534,379,1.148,380,1.687,381,1.266,384,1.185,388,1.114,392,0.607,393,0.981,394,2.121,395,1.95,410,1.95,422,2.058,431,2.242,440,2.682,453,2.22,454,0.979,455,1.575,456,1.402,459,1.266,460,1.855,474,1.735,475,3.145,483,2.349,525,2.349,534,2.713,535,2.349,552,1.562,618,1.345,753,1.452,786,1.915,787,2.106,802,5.411,803,5.753,804,5.753,805,5.289,806,3.543,807,5.289,808,2.058,809,4.475,810,3.8,811,6.073,812,5.753,813,4.475,814,3.677,815,6.073,816,5.21,817,3.677,818,3.677,819,3.677,820,4.554,821,3.677,822,3.677,823,4.114,824,3.214,825,3.77,826,3.145,827,2.349,828,2.682,829,4.554,830,3.214,831,2.91,832,2.106,833,2.91,834,3.543,835,2.796,836,5.753,837,2.5,838,3.214,839,2.91,840,2.682,841,3.214,842,3.214,843,3.8,844,2.682,845,2.91,846,3.214,847,3.214,848,3.214,849,3.214,850,3.214,851,5.289,852,4.554,853,3.214,854,3.214,855,3.543,856,2.349,857,3.214,858,3.214,859,3.214,860,3.214,861,3.214,862,3.214,863,2.91,864,3.214,865,3.214,866,3.214,867,3.214,868,6.581,869,5.21,870,5.21,871,2.133,872,2.133,873,5.21,874,5.21,875,2.682,876,3.214,877,3.677,878,2.91,879,3.677,880,2.5,881,2.91,882,3.677,883,3.677]],["title/components/ConfigurationTileViewComponent.html",[0,0.006,205,0.654]],["body/components/ConfigurationTileViewComponent.html",[0,0.011,1,0.556,2,0.827,3,0.151,4,0.077,5,0.635,6,0.635,7,0.635,8,0.635,9,0.077,11,0.635,12,1.573,13,1.469,15,1.07,17,1.07,19,0.122,20,0.555,25,0.556,27,0.647,31,1.17,33,0.647,40,3.982,41,0.943,43,0.575,44,0.013,45,0.973,46,0.205,49,0.601,50,1.215,62,0.401,69,0.501,70,0.243,71,1.479,86,0.127,87,0.369,88,0.793,89,0.677,103,1.095,107,0.511,112,2.056,127,0.721,134,1.282,137,1.199,143,4.964,159,1.331,169,1.293,170,2.102,173,1.178,180,0.537,181,0.913,182,0.969,183,0.635,184,0.635,185,0.556,186,0.614,187,0.284,188,0.77,189,1.525,190,0.635,191,0.556,192,0.614,193,1.096,194,1.426,195,0.537,196,1.126,197,0.556,198,0.614,199,0.556,200,0.614,201,0.594,202,0.8,203,1.247,204,1.17,205,1.025,206,0.537,207,0.537,208,1.17,209,0.556,210,0.537,211,0.537,212,0.369,213,0.556,214,0.537,215,0.511,216,0.556,217,0.556,218,0.284,219,0.537,220,0.634,221,0.556,222,0.537,223,0.484,224,0.556,225,1.036,226,0.855,227,0.556,228,0.556,229,0.556,230,0.614,231,0.537,232,0.594,233,0.556,234,0.594,235,0.594,236,0.537,237,0.548,238,0.35,239,0.556,240,0.537,241,0.8,242,0.721,243,0.537,244,0.537,245,1.036,246,0.556,247,0.575,248,0.635,249,0.556,250,0.556,251,0.26,252,0.594,253,0.556,254,0.594,255,0.556,256,0.614,257,0.594,258,0.537,259,0.575,260,0.537,261,0.556,262,0.614,263,0.556,264,0.614,265,0.556,266,0.614,267,0.594,268,0.635,269,0.635,270,0.01,271,0.007,272,0.005,348,4.773,371,2.755,376,1.052,377,0.18,378,1.612,379,1.564,380,2.299,381,1.725,384,1.615,388,1.373,392,0.827,393,1.105,394,2.07,395,1.892,398,1.845,402,1.899,410,1.615,431,2.056,440,3.655,454,1.335,455,2.258,456,1.91,459,1.199,460,1.784,474,1.955,475,3.875,483,3.201,525,3.201,543,2.318,618,0.899,753,1.375,786,1.813,787,1.994,794,2.299,802,5.45,803,5.947,804,5.947,805,6.193,806,2.368,807,3.044,808,1.375,809,4.626,810,2.54,811,4.38,812,3.044,813,2.368,815,4.38,820,3.044,823,3.407,824,3.044,825,4.279,826,3.875,827,2.224,828,2.54,829,5.947,830,3.044,831,2.755,832,1.994,833,3.965,834,4.366,835,3.174,836,6.531,837,3.407,838,4.38,839,3.965,840,3.655,841,4.38,842,4.38,843,4.683,844,3.655,845,3.965,846,5.612,847,3.044,848,3.044,849,3.044,850,3.044,851,5.131,852,4.38,853,3.044,854,3.044,855,4.366,856,3.201,857,4.38,858,5.612,859,3.044,860,3.044,861,3.044,862,4.38,863,3.965,864,5.612,865,3.044,866,3.044,867,3.044,884,3.044,885,2.87,886,2.755,887,2.54,888,3.482,889,3.482,890,5.011,891,5.011,892,5.011,893,7.471,894,7.471,895,2.87,896,3.655,897,2.733,898,5.011,899,5.011,900,3.482,901,3.991,902,3.201,903,3.482,904,2.755,905,1.536,906,3.482]],["title/components/ConfigurationViewComponent.html",[0,0.006,206,0.632]],["body/components/ConfigurationViewComponent.html",[0,0.011,1,0.7,2,1.171,3,0.131,4,0.097,5,0.799,6,0.799,7,0.799,8,0.799,9,0.097,11,0.799,12,1.59,13,1.487,15,1.072,17,1.072,19,0.153,20,0.651,25,1.06,27,0.76,31,1.293,33,0.76,41,0.857,43,0.724,44,0.012,45,0.826,46,0.205,49,0.41,50,0.939,69,0.489,70,0.307,86,0.111,87,0.323,89,1.291,102,3.869,103,1.12,107,0.6,127,0.955,159,1.349,169,1.132,171,1.325,173,1.031,175,1.369,180,0.677,181,1.072,182,1.096,183,0.799,184,0.799,185,0.7,186,0.774,187,0.357,188,0.744,189,1.558,190,0.799,191,0.7,192,0.774,193,1.004,194,1.488,195,0.677,196,0.677,197,0.7,198,0.774,199,0.7,200,0.774,201,0.749,202,0.7,203,1.262,204,0.799,205,0.7,206,1.094,207,0.677,208,1.293,209,0.7,210,0.677,211,0.677,212,0.434,213,0.7,214,0.677,215,0.6,216,0.7,217,0.7,218,0.357,219,0.677,220,0.526,221,0.7,222,0.677,223,0.609,224,0.7,225,1.171,226,1.004,227,0.7,228,0.7,229,0.7,230,0.774,231,0.677,232,0.749,233,0.7,234,0.749,235,0.749,236,0.677,237,0.503,238,0.411,239,0.7,240,0.677,241,0.939,242,0.847,243,0.677,244,0.677,245,1.171,246,0.7,247,0.724,248,0.799,249,0.7,250,0.7,251,0.305,252,0.749,253,0.7,254,0.749,255,0.7,256,0.774,257,0.749,258,0.677,259,0.724,260,0.677,261,0.7,262,0.774,263,0.7,264,0.774,265,0.7,266,0.774,267,0.749,268,0.799,269,0.799,270,0.006,271,0.008,272,0.006,314,2.801,315,4.727,348,4.532,376,1.325,377,0.227,378,1.746,379,1.836,388,0.938,392,0.971,393,1.25,394,2.14,395,1.896,475,2.647,514,2.284,641,2.932,657,2.982,802,5.174,806,2.982,825,3.802,826,4.282,827,2.801,828,3.199,834,4,835,3.014,845,4.655,856,2.801,884,3.833,885,2.512,907,5.882,908,5.253,909,5.882,910,5.882,911,5.882,912,5.253,913,6.201,914,3.758,915,4.385,916,3.833,917,2.982,918,3.833,919,4.385,920,3.833,921,4.385,922,4.385,923,3.833,924,5.142,925,5.882,926,5.882,927,5.882,928,5.882]],["title/components/DashboardScreenComponent.html",[0,0.006,207,0.632]],["body/components/DashboardScreenComponent.html",[0,0.011,1,0.725,2,0.994,3,0.134,4,0.101,5,0.828,6,0.828,7,0.828,8,0.828,9,0.101,11,0.828,12,1.593,13,1.49,15,1.097,17,1.097,19,0.159,21,2.364,27,0.777,31,1.311,33,0.872,41,0.777,44,0.012,45,0.749,49,0.425,50,0.961,69,0.335,70,0.317,86,0.115,87,0.335,103,1.129,104,3.676,107,0.852,112,1.372,113,2.74,132,2.169,159,1.47,169,1.744,171,2.041,173,1.759,174,1.512,175,1.879,176,1.793,177,1.857,178,1.859,180,0.7,181,1.097,182,1.115,183,0.828,184,0.828,185,0.725,186,0.801,187,0.37,188,0.729,189,1.563,190,0.828,191,0.725,192,0.801,193,1.028,194,1.497,195,0.7,196,0.7,197,0.725,198,1.269,199,0.725,200,0.801,201,0.775,202,0.725,203,1.007,204,0.828,205,0.725,206,0.7,207,1.11,208,1.311,209,0.725,210,0.7,211,0.7,212,0.444,213,0.725,214,0.7,215,0.614,216,0.725,217,0.725,218,0.37,219,0.7,220,0.539,221,0.725,222,0.7,223,0.631,224,0.725,225,1.192,226,1.028,227,0.725,228,0.725,229,0.725,230,0.801,231,0.7,232,0.775,233,0.725,234,0.775,235,0.775,236,0.7,237,0.577,238,0.472,239,0.725,240,0.7,241,0.961,242,0.866,243,0.7,244,0.7,245,1.192,246,0.725,247,0.75,248,0.828,249,0.725,250,0.725,251,0.312,252,0.775,253,0.725,254,0.775,255,0.725,256,0.801,257,0.775,258,0.7,259,0.75,260,0.7,261,0.725,262,0.801,263,0.725,264,0.801,265,0.725,266,0.801,267,0.775,268,0.828,269,0.828,270,0.006,271,0.009,272,0.006,336,4.927,377,0.235,392,0.994,393,1.272,454,1.799,455,2.041,456,1.731,457,2.083,459,1.563,460,1.616,514,3.517,544,2.9,552,1.929,553,2.476,773,2.9,794,2.763,871,1.859,872,1.859,929,5.905,930,3.087,931,4.094,932,4.927,933,4.391,934,4.54,935,3.969,936,3.312,937,3.593,938,3.969,939,3.593,940,3.969,941,3.087,942,3.969,943,4.391,944,3.969,945,3.312,946,3.312,947,3.087,948,3.087]],["title/components/DashboardViewComponent.html",[0,0.006,209,0.654]],["body/components/DashboardViewComponent.html",[0,0.011,1,0.563,2,1.066,3,0.112,4,0.078,5,0.643,6,0.643,7,0.643,8,0.643,9,0.078,11,0.643,12,1.572,13,1.471,15,0.921,17,0.921,19,0.123,20,0.715,21,3.705,25,1.091,27,0.653,31,1.177,33,0.455,36,2.913,39,4.982,41,0.968,43,0.582,44,0.013,45,0.735,46,0.239,49,0.33,50,0.943,58,1.517,59,1.216,60,1.372,61,2.066,69,0.54,70,0.246,73,1.497,83,3.437,84,2.252,86,0.089,87,0.26,88,0.803,89,1.425,93,2.789,97,0.882,103,1.054,107,0.831,109,2.789,110,2.397,111,2.789,112,1.528,113,3.051,114,2.397,115,2.397,116,4,117,1.756,119,2.252,120,2.712,127,1.054,132,1.684,153,3.051,155,3.567,159,1.391,169,1.526,171,1.786,173,1.607,174,1.174,175,1.578,176,1.392,177,1.764,178,1.443,180,0.544,181,0.921,182,1.129,183,0.643,184,0.643,185,0.563,186,0.622,187,0.287,188,0.725,189,1.527,190,0.643,191,0.563,192,0.622,193,0.863,194,1.429,195,0.544,196,0.544,197,0.563,198,1.139,199,0.563,200,0.622,201,0.602,202,0.563,203,0.881,204,0.643,205,0.563,206,0.544,207,0.544,208,1.177,209,1.031,210,0.544,211,0.544,212,0.373,213,0.563,214,0.544,215,0.516,216,0.563,217,0.563,218,0.287,219,0.544,220,0.452,221,0.563,222,0.544,223,0.489,224,0.563,225,1.043,226,0.863,227,0.563,228,0.563,229,0.563,230,0.622,231,0.544,232,0.602,233,0.563,234,0.602,235,0.602,236,0.544,237,0.608,238,0.512,239,0.563,240,0.544,241,0.807,242,0.727,243,0.544,244,0.544,245,1.043,246,0.563,247,0.582,248,0.643,249,0.563,250,0.563,251,0.262,252,0.602,253,0.563,254,0.602,255,0.563,256,0.622,257,0.602,258,0.544,259,0.582,260,0.544,261,0.563,262,0.622,263,0.563,264,0.622,265,0.563,266,1.206,267,1.009,268,0.643,269,0.643,270,0.005,271,0.009,272,0.005,314,2.252,315,4.367,376,1.065,377,0.183,378,1.655,381,1.74,385,1.032,388,0.754,392,0.835,393,1.113,394,1.905,395,1.629,402,1.922,407,2.397,411,1.676,412,1.497,454,1.72,455,1.786,456,1.344,457,1.617,459,1.213,460,1.255,474,1.684,514,3.078,516,2.42,544,2.252,552,1.497,553,1.922,671,2.824,704,1.298,709,2.44,735,1.862,748,2.019,764,1.684,773,2.252,794,2.319,806,2.397,808,1.392,839,2.789,844,2.571,871,1.443,872,1.443,885,2.019,887,2.571,913,5.644,916,4.419,917,4.019,918,3.081,920,3.081,923,3.081,936,2.571,937,2.789,938,3.081,939,2.789,940,3.081,941,4.648,942,3.081,943,4.311,944,3.081,945,2.571,946,2.571,947,2.397,948,4.019,949,6.672,950,6.039,951,2.23,952,5.055,953,4,954,4.986,955,2.42,956,3.776,957,3.022,958,3.776,959,3.651,960,3.816,961,2.571,962,2.397,963,2.019,964,3.081,965,3.437,966,3.051,967,3.051,968,3.229,969,1.835,970,2.019,971,2.127,972,5.055,973,3.524,974,5.055,975,3.524,976,2.789,977,3.524,978,3.524,979,3.687,980,2.397,981,3.524,982,3.524,983,3.524,984,2.789,985,3.081,986,3.081,987,2.789,988,4.419,989,2.789,990,2.789,991,3.524,992,3.524,993,3.081,994,3.524,995,2.789,996,3.524,997,4.419,998,2.895]],["title/components/DetailScreenComponent.html",[0,0.006,210,0.632]],["body/components/DetailScreenComponent.html",[0,0.011,1,0.756,2,1.022,3,0.137,4,0.105,5,0.863,6,0.863,7,0.863,8,0.863,9,0.105,11,0.863,12,1.596,13,1.493,15,1.128,17,1.128,19,0.165,20,0.685,21,3.591,27,0.799,31,1.333,33,0.89,41,0.89,44,0.012,45,0.77,46,0.165,49,0.443,50,0.988,58,1.455,59,0.892,60,0.951,61,1.871,69,0.349,70,0.331,86,0.12,87,0.349,103,1.225,104,3.494,107,0.631,159,1.383,169,1.223,171,1.431,173,1.113,175,1.478,180,0.731,181,1.128,182,1.139,183,0.863,184,0.863,185,0.756,186,0.836,187,0.386,188,0.734,189,1.568,190,0.863,191,0.756,192,0.836,193,1.057,194,1.507,195,0.731,196,0.731,197,0.756,198,0.836,199,0.756,200,0.836,201,0.808,202,0.756,203,1.028,204,0.863,205,0.756,206,0.731,207,0.731,208,1.333,209,0.756,210,1.128,211,0.731,212,0.456,213,0.756,214,0.731,215,0.631,216,0.756,217,0.756,218,0.386,219,0.731,220,0.554,221,0.756,222,0.731,223,0.658,224,0.756,225,1.217,226,1.057,227,0.756,228,0.756,229,0.756,230,0.836,231,0.731,232,0.808,233,0.756,234,0.808,235,0.808,236,0.731,237,0.529,238,0.433,239,0.756,240,0.731,241,0.988,242,0.891,243,0.731,244,0.731,245,1.217,246,0.756,247,0.782,248,0.863,249,0.756,250,0.756,251,0.321,252,0.808,253,0.756,254,0.808,255,0.756,256,0.836,257,0.808,258,0.731,259,0.782,260,0.731,261,0.756,262,0.836,263,0.756,264,0.836,265,0.756,266,0.836,267,0.808,268,0.863,269,0.863,270,0.007,271,0.009,272,0.007,339,5.334,377,0.245,392,1.022,393,1.299,431,2.084,454,1.649,514,2.466,546,5.411,930,3.221,931,4.209,932,5.03,933,4.515,999,6.393,1000,6.19,1001,4.14]],["title/interfaces/ESPConfiguration.html",[573,0.569,825,2.348]],["body/interfaces/ESPConfiguration.html",[3,0.114,4,0.114,9,0.114,14,1.888,19,0.179,20,0.721,38,3.421,44,0.013,46,0.263,49,0.67,58,1.205,62,0.916,69,0.573,70,0.358,74,2.352,75,3.706,76,2.262,86,0.165,87,0.378,88,1.168,89,1.392,97,1.885,129,1.783,196,1.005,203,0.971,270,0.007,271,0.009,272,0.007,310,3.739,311,2.262,377,0.265,384,1.652,388,1.393,431,2.164,490,2.936,573,0.712,575,1.6,577,2.449,578,1.848,581,3.962,584,3.275,585,1.907,586,2.555,589,2.555,590,1.888,591,2.352,592,2.449,593,1.954,596,3.569,617,3.962,618,1.945,619,3.569,623,3.275,624,2.936,625,3.275,626,3.275,631,2.277,635,2.262,636,3.275,637,3.275,638,2.67,639,3.275,640,3.094,641,2.555,642,3.275,643,3.275,644,2.555,645,3.962,647,4.162,661,3.275,673,3.275,685,3.275,694,2.555,696,3.275,707,3.275,712,1.825,809,4.43,810,3.739,825,4.553,826,3.094,827,3.275,835,2.178,856,3.275,912,4.057,979,3.739,1002,2.873,1003,5.962,1004,5.962,1005,3.739,1006,4.752,1007,3.739,1008,3.094,1009,4.481,1010,4.481,1011,4.481,1012,4.481,1013,4.481,1014,4.481,1015,3.094,1016,4.481,1017,4.481,1018,4.481,1019,4.481,1020,4.481,1021,4.481,1022,3.094,1023,4.481,1024,4.481,1025,4.481,1026,3.739,1027,5.695,1028,4.481,1029,4.481,1030,4.481]],["title/injectables/ESPConfigurationAPIService.html",[585,1.092,826,2.474]],["body/injectables/ESPConfigurationAPIService.html",[3,0.108,4,0.108,9,0.108,14,1.794,19,0.17,25,1.116,27,0.814,33,0.629,38,3.747,41,0.954,43,1.154,44,0.013,45,0.869,46,0.244,49,0.734,58,1.482,62,0.726,69,0.564,70,0.34,74,2.235,75,3.852,76,2.149,86,0.16,87,0.359,88,1.109,89,1.359,97,1.849,129,1.69,196,1.078,203,1.206,270,0.007,271,0.009,272,0.007,310,4.598,311,2.149,377,0.326,384,2.032,388,1.581,431,2.471,490,2.789,573,0.676,577,2.327,578,1.381,581,3.815,584,3.111,585,1.969,586,2.427,589,3.141,590,2.322,591,2.892,592,3.012,593,1.857,596,3.483,617,3.908,618,1.908,619,3.483,623,3.111,624,2.789,625,3.111,626,3.111,631,2.046,635,2.149,636,3.111,637,3.111,638,2.536,639,3.111,640,2.94,641,2.427,642,3.111,643,3.111,644,2.427,645,3.908,647,4.027,661,3.111,673,3.111,685,3.111,694,2.427,696,3.111,707,3.111,712,1.734,809,5.026,810,4.598,825,4.572,826,3.805,827,4.891,835,2.678,856,4.027,912,4.988,979,4.598,1002,1.857,1003,3.854,1004,3.854,1005,3.552,1006,4.598,1007,3.552,1008,2.94,1009,4.257,1010,4.257,1011,4.257,1012,4.257,1013,4.257,1014,6.461,1015,2.94,1016,4.257,1017,4.257,1018,5.51,1019,5.51,1020,4.257,1021,4.257,1022,2.94,1023,4.257,1024,4.257,1025,4.257,1026,4.598,1027,6.11,1028,5.51,1029,4.257,1030,4.257,1031,2.427,1032,6.303,1033,6.303,1034,3.854,1035,4.87,1036,4.257,1037,4.87,1038,4.87]],["title/components/ForecastDetailViewComponent.html",[0,0.006,211,0.632]],["body/components/ForecastDetailViewComponent.html",[0,0.011,1,0.599,2,0.872,3,0.117,4,0.083,5,0.684,6,0.684,7,0.684,8,0.684,9,0.083,11,0.684,12,1.578,13,1.475,15,0.963,17,0.963,19,0.131,20,0.585,25,0.976,27,0.682,31,1.21,33,0.484,41,0.857,43,0.619,44,0.012,45,0.761,46,0.184,49,0.351,50,0.843,59,0.706,60,0.753,69,0.489,70,0.262,86,0.095,87,0.276,88,0.854,89,1.027,96,3.592,102,2.881,103,1.221,105,3.592,107,0.539,120,1.721,127,1.007,148,3.853,159,1.21,180,0.579,181,0.963,182,1.156,183,0.684,184,0.684,185,0.599,186,0.662,187,0.305,188,0.717,189,1.536,190,0.684,191,0.599,192,0.662,193,0.902,194,1.447,195,0.579,196,0.579,197,0.599,198,0.662,199,0.599,200,0.662,201,0.64,202,0.599,203,0.911,204,0.684,205,0.599,206,0.579,207,0.579,208,1.21,209,0.599,210,0.579,211,1.024,212,0.621,213,0.599,214,0.579,215,0.539,216,0.599,217,0.599,218,0.305,219,0.579,220,0.473,221,0.599,222,0.579,223,0.521,224,0.599,225,1.079,226,0.902,227,0.599,228,0.599,229,0.599,230,0.662,231,0.579,232,0.64,233,0.599,234,0.64,235,0.64,236,0.579,237,0.451,238,0.464,239,0.599,240,0.579,241,0.843,242,0.76,243,0.579,244,0.579,245,1.079,246,0.599,247,0.619,248,0.684,249,0.599,250,0.599,251,0.274,252,0.64,253,0.599,254,0.64,255,0.599,256,0.662,257,0.64,258,0.579,259,0.619,260,0.579,261,0.599,262,0.662,263,0.599,264,0.662,265,0.599,266,1.235,267,1.044,268,0.684,269,0.684,270,0.005,271,0.007,272,0.005,350,4.759,376,1.133,377,0.317,378,1.603,379,1.649,382,1.703,388,0.802,392,0.872,393,1.152,394,1.971,395,1.703,405,2.045,412,1.593,474,2.211,479,1.547,487,2.794,493,4.598,638,3.457,640,3.189,641,2.633,709,2.331,735,1.946,737,2.264,768,1.953,885,3.026,917,3.592,953,4.18,958,3.907,959,3.618,960,3.885,965,3.592,966,3.189,967,3.189,968,3.375,969,1.953,970,2.148,971,2.264,1039,5.538,1040,2.735,1041,2.55,1042,1.971,1043,3.75,1044,3.75,1045,2.264,1046,2.148,1047,2.968,1048,3.75,1049,3.75,1050,3.75,1051,5.283,1052,5.283,1053,5.283,1054,5.283,1055,5.283,1056,4.618,1057,5.283,1058,5.283,1059,3.592,1060,5.283,1061,5.283,1062,5.283,1063,5.283,1064,5.283,1065,5.804,1066,5.804,1067,4.618,1068,4.866,1069,5.283,1070,5.283,1071,5.283,1072,5.283,1073,5.283,1074,4.618,1075,5.283,1076,5.254,1077,3.853,1078,5.283,1079,5.283,1080,5.283,1081,4.618,1082,5.283,1083,5.283,1084,4.618,1085,5.283,1086,4.18,1087,4.618,1088,4.618,1089,5.283,1090,5.283,1091,2.424,1092,5.283,1093,5.283,1094,5.283,1095,5.283,1096,5.283,1097,5.283,1098,5.283,1099,5.283,1100,5.283,1101,7.261,1102,3.853,1103,6.639,1104,5.283,1105,5.283,1106,5.283,1107,5.283,1108,5.283,1109,3.592,1110,4.618,1111,5.283,1112,3.592,1113,5.283,1114,5.283,1115,5.283,1116,5.283,1117,4.18,1118,5.283,1119,5.283,1120,5.283]],["title/interfaces/ForecastResponse.html",[573,0.569,1121,2.474]],["body/interfaces/ForecastResponse.html",[3,0.08,4,0.08,9,0.08,14,1.328,19,0.126,20,0.569,38,2.859,44,0.013,46,0.25,49,0.728,62,0.969,69,0.528,70,0.252,74,1.654,75,3.613,76,1.591,86,0.091,87,0.266,88,0.821,89,1.513,94,2.303,95,2.303,97,2.046,120,1.654,127,1.031,129,1.822,134,2.64,187,0.531,212,0.441,218,0.531,220,0.322,237,0.308,238,0.536,251,0.371,270,0.005,271,0.007,272,0.005,311,1.591,334,1.654,377,0.187,384,2.43,388,1.099,411,2.033,431,2.084,436,2.204,543,2.029,549,1.722,573,0.906,575,1.125,577,1.722,578,1.956,581,4.027,585,1.594,586,1.796,589,3.878,590,1.328,591,1.654,592,1.722,593,1.374,596,3.436,606,1.966,607,1.966,617,3.878,618,1.904,619,3.436,628,3.909,631,2.207,635,3.042,644,3.436,645,3.924,680,1.796,694,1.796,704,1.328,706,1.966,708,3.294,709,2.296,711,3.294,712,2.454,717,3.59,753,1.424,897,1.966,956,2.303,998,2.942,1002,1.958,1008,2.176,1015,4.162,1042,2.222,1046,2.942,1121,3.612,1122,2.303,1123,4.435,1124,4.435,1125,2.629,1126,2.823,1127,2.823,1128,2.176,1129,1.796,1130,2.176,1131,2.451,1132,2.302,1133,2.296,1134,1.711,1135,1.796,1136,2.451,1137,2.065,1138,2.451,1139,2.451,1140,2.451,1141,2.451,1142,2.451,1143,2.451,1144,2.451,1145,2.451,1146,4.688,1147,4.405,1148,2.303,1149,2.451,1150,2.451,1151,2.451,1152,2.451,1153,2.451,1154,2.451,1155,2.451,1156,2.451,1157,3.612,1158,2.451,1159,2.451,1160,2.451,1161,2.451,1162,2.451,1163,2.451,1164,2.303,1165,4.069,1166,2.451,1167,2.303,1168,2.451,1169,2.451,1170,2.451,1171,2.451,1172,2.451,1173,2.451,1174,2.451,1175,2.451,1176,2.451,1177,2.451,1178,2.451,1179,2.716,1180,2.451,1181,2.451,1182,2.451,1183,2.451,1184,2.451,1185,1.966,1186,2.451,1187,1.958,1188,2.451,1189,2.451,1190,2.451,1191,2.451,1192,2.451,1193,3.493,1194,2.451,1195,3.493,1196,2.451,1197,2.303,1198,2.451,1199,3.1,1200,2.451,1201,3.281,1202,2.451,1203,1.966,1204,2.451,1205,2.56,1206,2.451,1207,2.451,1208,3.493,1209,2.451,1210,3.493,1211,1.424,1212,2.801,1213,1.424,1214,3.493,1215,2.671,1216,2.451,1217,1.892,1218,2.451,1219,2.451,1220,1.476,1221,2.451,1222,2.451,1223,3.1,1224,1.476,1225,2.451,1226,2.451,1227,1.424,1228,2.451,1229,2.451,1230,1.424,1231,2.451,1232,2.451,1233,3.1,1234,2.451,1235,2.451,1236,2.451,1237,1.892,1238,2.451,1239,1.476,1240,2.451,1241,1.476,1242,2.451,1243,2.451,1244,2.451,1245,2.451,1246,2.451,1247,3.493,1248,2.451,1249,1.283,1250,2.451,1251,2.451]],["title/components/ForecastTileViewComponent.html",[0,0.006,213,0.654]],["body/components/ForecastTileViewComponent.html",[0,0.011,1,0.614,2,0.888,3,0.119,4,0.138,5,0.701,6,0.701,7,0.701,8,0.701,9,0.085,11,0.701,12,1.58,13,1.477,15,0.98,17,0.98,19,0.134,20,0.595,25,1.072,27,0.694,31,1.224,33,0.497,41,1.019,43,0.888,44,0.012,45,0.835,46,0.256,49,0.717,50,0.99,58,1.578,59,1.012,60,1.08,61,2.029,62,0.927,69,0.495,70,0.269,86,0.097,87,0.283,88,0.876,89,0.748,97,1.551,103,1.081,107,0.548,112,1.162,127,1.103,159,1.288,169,0.993,171,1.162,173,1.578,175,1.2,176,1.519,178,1.575,180,0.593,181,0.98,182,1.166,183,0.701,184,0.701,185,0.614,186,0.679,187,0.313,188,0.775,189,1.54,190,0.701,191,0.614,192,0.679,193,0.918,194,1.454,195,0.593,196,0.593,197,0.614,198,1.094,199,0.614,200,0.679,201,0.656,202,0.614,203,0.924,204,0.701,205,0.614,206,0.593,207,0.593,208,1.224,209,0.614,210,0.593,211,0.593,212,0.619,213,1.072,214,0.593,215,0.548,216,0.614,217,0.614,218,0.313,219,0.593,220,0.481,221,0.614,222,0.593,223,0.534,224,0.614,225,1.094,226,0.918,227,0.614,228,0.614,229,0.614,230,0.679,231,0.593,232,0.656,233,0.614,234,0.656,235,0.656,236,0.593,237,0.459,238,0.376,239,0.614,240,0.593,241,0.858,242,0.774,243,0.593,244,0.593,245,1.094,246,0.614,247,0.635,248,0.701,249,0.614,250,0.614,251,0.278,252,0.656,253,0.614,254,0.656,255,0.614,256,0.679,257,0.656,258,0.593,259,0.635,260,0.593,261,0.614,262,0.679,263,0.614,264,0.679,265,0.614,266,0.679,267,0.656,268,0.701,269,0.701,270,0.005,271,0.008,272,0.005,350,5.422,376,1.162,377,0.321,378,1.616,379,1.678,380,2.467,381,1.851,382,2.164,383,3.246,384,1.733,385,1.965,386,3.656,387,3.08,388,1.15,389,2.373,390,3.246,391,3.246,392,0.888,393,1.167,394,1.998,395,1.733,398,1.98,399,3.742,400,3.551,401,2.68,404,2.203,407,3.656,409,2.321,410,2.164,412,1.634,417,1.24,418,2.321,432,4.418,450,2.805,454,1.024,455,1.625,459,1.324,460,1.369,461,3.08,484,2.615,552,1.634,753,2.891,754,4.7,800,3.435,871,1.575,872,1.575,878,3.043,886,3.043,887,2.805,960,3.913,961,2.805,963,3.08,971,2.321,1039,6.31,1042,2.164,1252,6.199,1253,7.319,1254,6.713,1255,6.713,1256,3.846,1257,3.362,1258,3.846,1259,3.846,1260,3.846,1261,3.846,1262,3.846,1263,3.846,1264,3.846,1265,4.7,1266,1.519,1267,3.043]],["title/interfaces/GraphDataSet.html",[573,0.569,1268,1.678]],["body/interfaces/GraphDataSet.html",[3,0.103,4,0.103,9,0.103,19,0.162,20,0.677,44,0.013,46,0.283,62,0.979,86,0.211,107,0.623,127,1.186,129,1.899,187,0.643,188,0.725,212,0.503,215,0.474,218,0.652,220,0.649,237,0.522,238,0.541,251,0.354,270,0.007,271,0.009,272,0.007,368,2.219,377,0.241,378,1.025,381,1.599,382,2.544,385,2.372,411,1.734,417,1.497,434,2.673,436,1.711,487,1.654,516,2.797,524,2.978,558,2.219,573,1.145,575,1.45,578,2.272,631,1.789,735,1.711,761,1.902,769,2.315,808,3.058,835,1.973,951,2.05,955,1.902,957,2.597,1002,2.875,1042,1.497,1091,2.131,1125,2.33,1126,1.902,1127,1.902,1132,1.45,1133,1.547,1134,1.547,1179,2.251,1187,1.771,1211,1.835,1213,1.835,1215,2.502,1217,2.251,1220,1.902,1224,1.902,1227,2.978,1230,1.835,1237,1.711,1239,1.902,1241,1.902,1249,2.851,1266,1.835,1268,2.502,1269,2.219,1270,3.483,1271,4.171,1272,3.617,1273,3.617,1274,3.617,1275,3.617,1276,3.617,1277,2.315,1278,2.131,1279,2.131,1280,2.05,1281,2.419,1282,2.131,1283,2.219,1284,2.131,1285,3.134,1286,2.92,1287,2.419,1288,2.219,1289,2.315,1290,2.419,1291,2.419,1292,2.419,1293,1.973,1294,3.046,1295,3.468,1296,2.419,1297,2.131,1298,2.315,1299,2.131,1300,2.419,1301,2.419,1302,2.419,1303,2.419,1304,2.315,1305,2.104,1306,2.502,1307,2.131,1308,2.219,1309,2.219,1310,2.05,1311,1.973,1312,1.973,1313,2.05]],["title/components/HistoryDetailViewComponent.html",[0,0.006,214,0.632]],["body/components/HistoryDetailViewComponent.html",[0,0.01,1,0.453,2,0.711,3,0.096,4,0.063,5,0.517,6,0.517,7,0.517,8,0.517,9,0.063,11,0.517,12,1.551,13,1.449,15,0.785,17,0.785,19,0.27,20,0.477,25,0.927,27,0.556,31,1.059,33,0.366,41,1.017,43,0.711,44,0.013,45,0.723,46,0.203,49,0.717,50,1.151,58,1.366,59,1.094,60,1.448,61,1.301,62,0.811,69,0.46,70,0.198,86,0.072,87,0.209,88,0.646,89,1.13,96,2.927,97,1.895,102,2.348,103,1.233,106,3.763,107,0.439,112,0.857,117,3.277,127,1.141,129,1.283,148,4.238,151,3.14,154,1.928,159,1.283,169,1.5,171,0.857,173,1.468,176,1.12,177,1.861,180,0.437,181,0.785,182,0.859,183,0.517,184,0.517,185,0.453,186,0.5,187,0.509,188,0.699,189,1.489,190,0.517,191,0.453,192,1.102,193,1.066,194,1.362,195,0.437,196,0.437,197,0.453,198,0.5,199,0.453,200,0.5,201,0.484,202,0.453,203,0.776,204,0.517,205,0.453,206,0.437,207,0.437,208,1.059,209,0.453,210,0.437,211,0.437,212,0.317,213,0.453,214,0.896,215,0.844,216,0.453,217,0.453,218,0.509,219,0.437,220,0.385,221,0.453,222,0.437,223,0.394,224,0.453,225,0.918,226,0.735,227,0.453,228,0.453,229,0.453,230,0.5,231,0.437,232,0.484,233,0.453,234,0.484,235,0.484,236,0.437,237,0.368,238,0.46,239,0.453,240,0.437,241,0.687,242,0.619,243,0.437,244,0.437,245,0.918,246,0.453,247,0.468,248,0.517,249,0.453,250,0.453,251,0.223,252,0.484,253,0.453,254,0.888,255,0.453,256,0.5,257,0.888,258,0.437,259,0.468,260,0.437,261,0.453,262,0.5,263,0.453,264,0.5,265,0.453,266,0.5,267,0.484,268,0.517,269,0.517,270,0.004,271,0.006,272,0.004,290,2.75,346,2.244,352,5.098,376,0.857,377,0.147,378,1.452,379,1.813,380,1.975,388,1.407,389,2.296,392,0.711,393,0.98,394,1.677,395,1.388,401,2.145,412,1.205,417,0.914,454,1.547,455,2.29,456,1.081,457,1.301,458,1.355,459,2,460,2.068,469,1.547,472,3.763,474,0.944,487,2.068,493,4.674,498,3.507,524,1.12,525,2.75,550,1.812,553,1.547,568,2.479,680,2.895,704,1.585,721,2.057,768,1.477,786,2.242,787,1.624,794,2.666,837,2.927,840,3.14,863,2.244,871,1.763,872,1.763,885,1.624,886,2.244,901,1.928,902,2.75,917,2.927,941,3.951,953,3.406,955,1.763,959,3.406,961,2.068,969,1.477,970,1.624,985,3.763,1045,1.712,1047,3.406,1059,2.927,1066,3.763,1067,3.763,1068,4.201,1074,3.763,1077,3.14,1125,1.641,1134,1.434,1185,2.838,1203,2.838,1205,2.593,1268,2.13,1293,1.829,1295,1.355,1305,2,1314,5.784,1315,5.079,1316,2.927,1317,5.203,1318,4.118,1319,4.238,1320,4.305,1321,5.203,1322,4.118,1323,4.549,1324,5.203,1325,5.203,1326,5.81,1327,5.81,1328,5.81,1329,5.81,1330,5.81,1331,5.81,1332,2.836,1333,4.472,1334,4.305,1335,2.836,1336,4.305,1337,2.479,1338,4.305,1339,2.836,1340,5.079,1341,2.836,1342,2.836,1343,4.305,1344,2.836,1345,4.597,1346,3.406,1347,2.836,1348,2.479,1349,4.305,1350,4.305,1351,2.836,1352,4.118,1353,2.836,1354,5.203,1355,4.549,1356,2.836,1357,2.479,1358,2.836,1359,3.406,1360,4.305,1361,4.305,1362,4.305,1363,2.068,1364,2.244,1365,2.836,1366,2.836,1367,4.305,1368,5.81,1369,4.305,1370,2.836,1371,5.203,1372,2.836,1373,2.836,1374,2.836,1375,2.836,1376,6.576,1377,2.836,1378,2.836,1379,5.203,1380,5.203,1381,4.305,1382,2.836,1383,2.836,1384,2.836,1385,2.836,1386,2.836,1387,2.836,1388,2.836,1389,2.836,1390,2.244,1391,4.305,1392,4.305,1393,4.305,1394,4.305,1395,2.598,1396,3.763,1397,4.305,1398,4.305,1399,4.305,1400,4.305,1401,6.576,1402,4.305,1403,4.305,1404,4.305,1405,4.305,1406,4.305,1407,3.712,1408,4.305,1409,3.763,1410,4.305,1411,4.305,1412,5.81,1413,4.305,1414,4.305,1415,4.305,1416,4.305,1417,4.305,1418,4.305,1419,4.305,1420,4.305,1421,4.305,1422,4.305,1423,2.927,1424,4.305,1425,4.305,1426,4.305,1427,4.305,1428,4.305,1429,4.305,1430,4.305,1431,4.305,1432,4.305,1433,4.305,1434,4.305,1435,4.305,1436,4.305,1437,4.305,1438,2.068,1439,2.836,1440,2.836,1441,2.836,1442,1.928,1443,2.068]],["title/injectables/HistoryTileService.html",[585,1.092,1333,2.787]],["body/injectables/HistoryTileService.html",[2,1.052,3,0.076,4,0.076,9,0.076,14,1.263,19,0.285,25,0.791,27,0.64,33,0.751,41,0.751,43,0.818,44,0.013,45,0.616,46,0.173,49,0.72,62,0.945,69,0.365,70,0.24,86,0.087,87,0.253,89,1.37,97,2.005,127,1.134,129,1.792,134,3.034,177,2.096,187,0.279,188,0.443,215,0.785,218,0.279,270,0.005,271,0.007,272,0.005,377,0.301,384,2.644,388,1.364,411,0.972,431,2.13,434,2.902,527,3.848,549,1.638,585,1.698,590,1.825,593,1.307,618,1.279,712,2.775,717,3.67,896,2.501,908,5.044,1031,1.709,1134,2.688,1135,1.709,1179,2.871,1187,2.837,1201,3.717,1203,2.703,1205,3.177,1268,3.386,1272,2.469,1273,3.778,1274,1.709,1275,3.37,1276,1.709,1305,1.706,1308,3.046,1309,3.046,1316,4.335,1319,4.65,1322,5.044,1333,3.369,1340,2.997,1346,5.044,1363,4.65,1390,5.577,1444,2.713,1445,4.955,1446,4.955,1447,3.428,1448,4.955,1449,3.428,1450,5.044,1451,6.374,1452,6.374,1453,5.572,1454,5.572,1455,5.044,1456,6.374,1457,5.572,1458,6.374,1459,6.374,1460,5.044,1461,7.44,1462,4.955,1463,3.428,1464,4.955,1465,4.955,1466,4.955,1467,4.955,1468,4.332,1469,4.955,1470,4.955,1471,6.374,1472,4.955,1473,4.955,1474,4.955,1475,4.955,1476,7.697,1477,7.879,1478,7.879,1479,3.369,1480,4.955,1481,5.819,1482,5.819,1483,5.819,1484,6.374,1485,6.374,1486,4.955,1487,4.955,1488,3.428,1489,3.428,1490,6.374,1491,4.955,1492,4.955,1493,4.955,1494,4.955,1495,4.955,1496,3.428,1497,3.428,1498,3.428,1499,4.955,1500,6.374,1501,5.14,1502,3.428,1503,3.428,1504,3.428,1505,3.428,1506,3.428,1507,3.428,1508,4.955,1509,4.955,1510,3.428,1511,3.428,1512,3.428,1513,3.428,1514,3.428,1515,3.428,1516,3.428,1517,3.428,1518,4.955,1519,3.428,1520,3.428,1521,3.428,1522,3.428,1523,3.428,1524,3.428,1525,3.428,1526,3.428,1527,3.428,1528,3.428,1529,4.955,1530,3.428,1531,4.955,1532,3.428,1533,6.374,1534,6.374,1535,4.955,1536,3.428,1537,3.428,1538,3.428,1539,3.428,1540,3.428,1541,3.428,1542,3.428,1543,3.428,1544,3.428,1545,2.713,1546,3.921,1547,2.997,1548,2.997]],["title/components/HistoryTileViewComponent.html",[0,0.006,216,0.654]],["body/components/HistoryTileViewComponent.html",[0,0.01,1,0.552,2,0.823,3,0.111,4,0.13,5,0.63,6,0.63,7,0.63,8,0.63,9,0.077,11,0.63,12,1.571,13,1.468,15,0.909,17,0.909,19,0.121,20,0.708,24,3.528,25,1.021,27,0.644,31,1.166,33,0.755,41,1.055,43,0.823,44,0.013,45,0.796,46,0.28,49,0.547,50,1.021,58,1.171,59,1.43,60,1.525,61,1.934,62,0.574,64,2.483,69,0.472,70,0.242,82,1.114,86,0.126,87,0.255,89,0.672,103,1.048,107,0.508,112,1.044,117,2.484,127,1.136,131,1.8,132,1.651,153,2.086,155,3.008,159,1.359,169,0.892,173,1.504,174,1.66,176,1.365,178,1.415,180,0.533,181,0.909,182,1.12,183,0.63,184,0.63,185,0.552,186,0.61,187,0.406,188,0.778,189,1.523,190,0.63,191,0.552,192,0.61,193,0.851,194,1.423,195,0.533,196,0.533,197,0.552,198,1.031,199,0.552,200,0.61,201,0.59,202,0.552,203,0.871,204,0.63,205,0.552,206,0.533,207,0.533,208,1.166,209,0.552,210,0.533,211,0.533,212,0.367,213,0.552,214,0.533,215,0.812,216,1.021,217,0.552,218,0.406,219,0.533,220,0.446,221,0.552,222,0.533,223,0.48,224,0.552,225,1.031,226,0.851,227,0.552,228,0.552,229,0.552,230,0.61,231,0.533,232,0.59,233,0.552,234,0.59,235,0.59,236,0.533,237,0.426,238,0.348,239,0.552,240,0.533,241,0.796,242,0.717,243,0.533,244,0.533,245,1.031,246,0.552,247,0.571,248,0.63,249,0.552,250,0.552,251,0.258,252,0.59,253,0.552,254,0.59,255,0.552,256,0.61,257,1.158,258,0.533,259,0.571,260,0.533,261,0.552,262,0.61,263,0.552,264,0.61,265,0.552,266,0.61,267,0.59,268,0.63,269,0.63,270,0.005,271,0.007,272,0.005,352,5.245,376,1.044,377,0.179,378,1.56,379,1.555,380,2.287,381,1.716,382,1.607,383,3.008,384,1.884,385,1.459,386,3.389,387,2.855,388,1.066,389,2.199,390,3.008,391,3.008,392,0.823,393,1.101,394,1.884,395,1.607,398,1.836,400,3.348,401,2.484,404,1.98,406,3.635,409,2.086,410,2.187,412,1.468,417,1.607,418,2.086,434,1.836,484,2.35,524,1.365,664,2.793,709,1.151,712,2.278,721,2.381,723,2.855,763,1.722,795,3.635,939,3.944,961,2.521,963,2.855,1041,2.35,1257,3.021,1268,3.053,1295,1.651,1314,5.989,1315,4.357,1316,2.35,1318,2.735,1322,3.944,1323,6.367,1352,5.368,1357,3.021,1450,2.735,1453,3.021,1549,5.845,1550,5.845,1551,6.783,1552,5.845,1553,5.845,1554,5.845,1555,5.845,1556,5.845,1557,4.984,1558,2.735,1559,3.456,1560,5.845,1561,6.783,1562,7.066,1563,4.984,1564,5.845,1565,3.021,1566,3.456,1567,3.021,1568,3.456,1569,2.735,1570,3.456,1571,5.845,1572,4.984,1573,4.984,1574,4.984,1575,5.845,1576,3.456,1577,3.456,1578,3.456,1579,4.984,1580,3.456,1581,4.984,1582,4.984,1583,4.984,1584,2.208,1585,4.984,1586,3.456,1587,3.456,1588,3.456,1589,3.021,1590,3.456,1591,3.456,1592,3.456,1593,3.456,1594,3.021]],["title/components/HumidityTileViewComponent.html",[0,0.006,217,0.654]],["body/components/HumidityTileViewComponent.html",[0,0.011,1,0.672,2,0.945,3,0.127,4,0.144,5,0.768,6,0.768,7,0.768,8,0.768,9,0.093,11,0.768,12,1.587,13,1.484,15,1.043,17,1.043,19,0.147,20,0.634,25,1.038,27,0.739,31,1.272,33,0.84,41,1.012,43,0.695,44,0.012,45,0.809,46,0.255,49,0.536,50,1.038,58,1.64,59,1.224,60,1.305,61,2.109,69,0.479,70,0.294,86,0.107,87,0.31,103,1.108,107,0.584,127,1.083,129,1.263,159,1.272,177,1.087,180,0.65,181,1.043,182,1.205,183,0.768,184,0.768,185,0.672,186,0.743,187,0.343,188,0.777,189,1.553,190,0.768,191,0.672,192,0.743,193,0.977,194,1.478,195,0.65,196,0.65,197,0.672,198,1.147,199,0.672,200,0.743,201,0.719,202,0.672,203,0.969,204,0.768,205,0.672,206,0.65,207,0.65,208,1.272,209,0.672,210,0.65,211,0.65,212,0.422,213,0.672,214,0.65,215,0.584,216,0.672,217,1.114,218,0.665,219,0.65,220,0.512,221,0.672,222,0.65,223,0.585,224,0.672,225,1.147,226,0.977,227,0.672,228,0.672,229,0.672,230,0.743,231,0.65,232,0.719,233,0.672,234,0.719,235,0.719,236,0.65,237,0.489,238,0.4,239,0.672,240,0.65,241,0.914,242,0.824,243,0.65,244,0.65,245,1.147,246,0.672,247,0.695,248,0.768,249,0.672,250,0.672,251,0.296,252,0.719,253,0.672,254,0.719,255,0.672,256,0.743,257,0.719,258,0.65,259,0.695,260,0.65,261,0.672,262,0.743,263,0.672,264,0.743,265,0.672,266,0.743,267,0.719,268,0.768,269,0.768,270,0.006,271,0.008,272,0.006,376,1.273,377,0.218,378,1.661,379,1.786,380,2.626,381,1.97,382,2.249,383,3.455,384,1.845,385,2.043,386,3.892,387,3.278,388,1.224,389,2.526,390,3.455,391,3.455,392,0.945,393,1.224,394,2.096,395,1.845,397,4.743,398,2.108,399,3.925,400,3.724,401,2.852,402,3.122,403,3.455,404,2.412,405,2.296,406,3.071,407,2.863,408,4.154,409,2.542,410,2.249,411,1.844,412,1.789,413,2.69,414,2.542,415,2.412,416,2.863,417,1.357,418,2.542,421,2.863,422,1.663,1132,1.314,1595,6.944,1596,6.286,1597,7.296,1598,4.211,1599,4.211]],["title/interfaces/ImageModel.html",[444,2.618,573,0.569]],["body/interfaces/ImageModel.html",[3,0.143,4,0.143,9,0.143,19,0.225,20,0.83,25,1.196,44,0.012,46,0.276,62,0.987,64,2.741,86,0.163,139,3.596,270,0.009,271,0.011,272,0.009,377,0.334,390,3.895,444,4.787,445,3.74,461,4.292,573,0.896,575,2.014,578,1.83,724,3.74,834,4.388,1600,5.641,1601,6.453]],["title/injectables/ImageService.html",[432,2.474,585,1.092]],["body/injectables/ImageService.html",[3,0.088,4,0.088,9,0.088,14,1.452,19,0.138,25,1.083,26,2.481,27,0.706,33,0.509,36,3.02,39,5.144,41,0.876,43,1.12,44,0.013,45,0.844,46,0.249,49,0.708,59,1.183,62,0.944,64,1.674,69,0.544,70,0.276,73,1.674,81,2.379,82,1.27,83,3.719,84,2.518,86,0.1,87,0.29,88,0.898,89,1.471,91,2.68,97,2.095,110,2.68,114,2.68,115,2.68,126,2.68,127,0.567,134,2.499,137,2.539,138,5.837,139,1.739,153,4.095,177,1.953,179,3.023,238,0.56,270,0.006,271,0.008,272,0.006,365,6.103,371,6.103,377,0.283,388,1.451,431,2.367,432,3.301,444,4.833,461,4.78,479,1.154,578,1.551,585,1.807,590,2.84,593,1.503,618,1.017,622,2.68,709,2.457,712,2.236,721,4.014,722,3.791,723,3.598,724,1.808,725,3.301,726,1.883,737,2.379,748,2.257,753,3.132,765,3.445,766,3.445,774,3.445,775,3.445,776,4.781,777,3.445,778,3.445,780,3.445,800,3.494,808,3.093,905,3.338,1031,1.964,1135,1.964,1179,2.014,1205,2.726,1310,3.145,1311,1.674,1312,1.674,1313,1.739,1455,4.328,1602,3.119,1603,7.712,1604,5.469,1605,5.469,1606,5.469,1607,3.941,1608,5.469,1609,3.941,1610,3.989,1611,5.469,1612,5.469,1613,3.445,1614,5.469,1615,3.941,1616,7.929,1617,5.931,1618,5.469,1619,3.941,1620,3.941,1621,3.941,1622,3.941,1623,3.941,1624,3.941,1625,3.941,1626,7.376,1627,6.281,1628,5.469,1629,5.469,1630,4.417,1631,3.941,1632,3.941,1633,4.328,1634,4.781,1635,3.119,1636,3.445,1637,3.445,1638,3.445,1639,5.469,1640,4.781,1641,3.941,1642,5.469,1643,3.941,1644,5.469,1645,3.941,1646,3.941,1647,3.941,1648,3.941,1649,3.941,1650,3.941,1651,3.941,1652,3.445,1653,3.119,1654,7.127,1655,3.941,1656,3.119,1657,3.119,1658,4.781,1659,3.941,1660,3.941,1661,3.941,1662,3.941,1663,3.941,1664,3.119,1665,4.333,1666,4.582,1667,2.875,1668,2.875,1669,3.989,1670,3.119,1671,3.119,1672,4.328,1673,3.119,1674,3.119,1675,4.97,1676,3.445,1677,5.931,1678,3.445,1679,3.445,1680,3.445,1681,3.445,1682,3.445,1683,3.445,1684,3.445,1685,3.445,1686,4.781]],["title/components/IndoorDetailViewComponent.html",[0,0.006,219,0.632]],["body/components/IndoorDetailViewComponent.html",[0,0.011,1,0.623,2,0.897,3,0.121,4,0.087,5,0.711,6,0.711,7,0.711,8,0.711,9,0.087,11,0.711,12,1.581,13,1.478,15,0.99,17,0.99,19,0.136,20,0.601,25,0.997,27,0.701,31,1.232,33,0.504,41,0.872,43,0.644,44,0.012,45,0.777,46,0.19,49,0.365,50,0.867,59,0.735,60,0.784,69,0.498,70,0.273,86,0.099,87,0.288,88,0.889,89,1.056,103,1.225,105,3.694,107,0.554,120,1.791,127,0.899,151,3.963,159,1.232,169,1.007,180,0.602,181,0.99,182,1.173,183,0.711,184,0.711,185,0.623,186,0.689,187,0.318,188,0.732,189,1.542,190,0.711,191,0.623,192,0.689,193,0.927,194,1.458,195,0.602,196,0.602,197,0.623,198,0.689,199,0.623,200,0.689,201,0.666,202,0.623,203,0.931,204,0.711,205,0.623,206,0.602,207,0.602,208,1.232,209,0.623,210,0.602,211,0.602,212,0.4,213,0.623,214,0.602,215,0.554,216,0.623,217,0.623,218,0.318,219,1.042,220,0.732,221,0.997,222,0.602,223,0.542,224,0.623,225,1.102,226,0.927,227,0.623,228,0.623,229,0.623,230,0.689,231,0.602,232,0.666,233,0.623,234,0.666,235,0.666,236,0.602,237,0.464,238,0.38,239,0.623,240,0.602,241,0.867,242,0.782,243,0.602,244,0.602,245,1.102,246,0.623,247,0.644,248,0.711,249,0.623,250,0.623,251,0.281,252,0.666,253,0.623,254,0.666,255,0.623,256,0.689,257,0.666,258,0.602,259,0.644,260,0.602,261,0.623,262,0.689,263,0.623,264,0.689,265,0.623,266,1.253,267,1.067,268,0.711,269,0.711,270,0.006,271,0.008,272,0.006,354,4.83,376,1.18,377,0.202,378,1.491,379,2.109,382,1.751,385,1.143,392,0.897,393,1.177,394,2.014,395,1.751,412,1.658,454,1.04,455,1.642,459,1.344,460,1.389,474,1.809,487,2.405,493,4.439,499,3.471,527,3.279,638,3.518,641,2.707,709,2.25,735,2.001,768,2.032,794,2.493,871,1.598,872,1.598,914,2.493,958,3.992,959,3.665,960,3.929,963,3.112,965,3.694,966,3.279,967,3.279,968,3.471,969,2.032,970,2.236,971,2.356,1040,2.847,1045,2.356,1068,4.316,1076,5.346,1077,3.963,1081,4.749,1102,3.963,1109,3.694,1112,3.694,1164,2.493,1167,3.471,1249,1.934,1395,3.279,1396,4.749,1407,3.471,1423,3.694,1687,5.62,1688,5.462,1689,2.847,1690,3.903,1691,3.903,1692,3.903,1693,3.412,1694,5.432,1695,5.432,1696,4.749,1697,5.432,1698,4.928,1699,4.749,1700,5.432,1701,6.756,1702,6.756,1703,5.432,1704,4.915,1705,5.432,1706,6.428,1707,5.432,1708,5.432,1709,5.432,1710,5.432,1711,5.432,1712,5.432,1713,5.432,1714,5.432,1715,5.432,1716,5.432,1717,5.432,1718,5.432,1719,5.432,1720,5.432,1721,5.432,1722,4.749,1723,5.432,1724,5.432,1725,5.432,1726,5.432,1727,5.432,1728,5.432,1729,4.749,1730,5.432,1731,5.432,1732,4.749,1733,5.432,1734,5.432,1735,5.432]],["title/interfaces/IndoorRoomData.html",[573,0.569,1133,1.365]],["body/interfaces/IndoorRoomData.html",[3,0.103,4,0.103,9,0.103,19,0.161,20,0.674,44,0.013,46,0.285,62,0.978,86,0.211,107,0.621,127,1.185,129,1.898,187,0.666,188,0.724,212,0.502,215,0.471,218,0.671,220,0.648,237,0.52,238,0.54,251,0.353,270,0.007,271,0.009,272,0.007,368,2.208,377,0.239,378,1.02,381,1.59,382,2.541,385,2.369,411,1.727,417,1.489,434,1.702,436,1.702,487,1.645,516,2.79,524,2.973,558,2.208,573,1.144,575,1.442,578,2.269,631,1.783,735,1.702,761,1.892,769,2.302,808,3.053,835,1.963,951,2.039,955,1.892,957,2.587,1002,3.05,1042,1.489,1091,2.12,1125,2.322,1126,1.892,1127,1.892,1132,1.442,1133,2.028,1134,1.539,1179,2.668,1187,1.761,1211,1.825,1213,1.825,1215,3.082,1217,2.243,1220,1.892,1224,2.965,1227,3.159,1230,2.861,1237,1.702,1239,1.892,1241,1.892,1249,2.848,1266,1.825,1268,1.892,1269,2.208,1270,3.478,1271,4.166,1272,2.302,1273,2.302,1274,2.302,1275,2.302,1276,2.302,1277,2.302,1278,2.12,1279,2.12,1280,2.039,1281,2.406,1282,2.12,1283,2.208,1284,2.12,1285,3.126,1286,2.91,1287,2.406,1288,2.208,1289,2.302,1290,2.406,1291,2.406,1292,2.406,1293,1.963,1294,3.035,1295,3.461,1296,2.406,1297,2.12,1298,2.302,1299,2.12,1300,2.406,1301,2.406,1302,2.406,1303,2.406,1304,2.302,1305,2.097,1306,2.494,1307,2.12,1308,2.208,1309,2.208,1310,2.039,1311,1.963,1312,1.963,1313,2.039]],["title/interfaces/IndoorRoomResponse.html",[573,0.569,1223,2.474]],["body/interfaces/IndoorRoomResponse.html",[3,0.079,4,0.079,9,0.079,14,1.31,19,0.124,20,0.563,38,2.839,44,0.013,46,0.267,49,0.726,62,0.963,69,0.526,70,0.249,74,1.633,75,3.604,76,1.57,86,0.09,87,0.262,88,0.81,89,1.509,94,2.273,95,2.273,97,2.042,120,1.633,127,1.027,129,1.864,134,2.628,187,0.598,212,0.375,218,0.598,220,0.455,237,0.304,238,0.535,251,0.37,270,0.005,271,0.007,272,0.005,311,1.57,334,1.633,377,0.184,384,2.422,388,1.089,411,2.024,431,2.073,436,2.628,543,2.01,549,1.7,573,0.901,575,1.11,577,1.7,578,1.946,581,4.018,585,1.582,586,1.773,589,3.868,590,1.31,591,1.633,592,1.7,593,1.356,596,3.419,606,1.94,607,1.94,617,3.868,618,1.897,619,3.419,628,3.892,631,2.2,635,3.027,644,3.419,645,3.914,680,1.773,694,1.773,704,1.31,706,1.94,708,3.278,709,2.285,711,3.278,712,2.442,717,3.572,753,1.405,897,1.94,956,2.273,998,2.915,1002,2.616,1008,2.148,1015,4.141,1042,2.211,1046,2.915,1121,3.072,1122,2.273,1123,2.419,1124,2.419,1125,1.94,1126,2.084,1127,2.084,1128,2.148,1129,1.773,1130,2.148,1131,2.419,1132,2.293,1133,2.285,1134,1.695,1135,1.773,1136,2.419,1137,2.038,1138,2.419,1139,2.419,1140,2.419,1141,2.419,1142,2.419,1143,2.419,1144,2.419,1145,2.419,1146,4.665,1147,4.383,1148,2.273,1149,2.419,1150,2.419,1151,2.419,1152,2.419,1153,2.419,1154,2.419,1155,2.419,1156,2.419,1157,3.586,1158,2.419,1159,2.419,1160,2.419,1161,2.419,1162,2.419,1163,2.419,1164,2.273,1165,4.04,1166,2.419,1167,2.273,1168,2.419,1169,2.419,1170,2.419,1171,2.419,1172,2.419,1173,2.419,1174,2.419,1175,2.419,1176,2.419,1177,2.419,1178,2.419,1179,2.706,1180,2.419,1181,2.419,1182,2.419,1183,2.419,1184,2.419,1185,1.94,1186,2.419,1187,1.94,1188,2.419,1189,2.419,1190,2.419,1191,2.419,1192,2.419,1193,3.46,1194,2.419,1195,3.46,1196,2.419,1197,2.273,1198,2.419,1199,3.072,1200,2.419,1201,3.251,1202,2.419,1203,1.94,1204,2.419,1205,2.536,1206,2.419,1207,2.419,1208,3.46,1209,2.419,1210,3.46,1211,1.405,1212,2.775,1213,1.405,1214,3.46,1215,3.008,1216,2.419,1217,1.874,1218,2.419,1219,2.419,1220,1.457,1221,2.419,1222,2.419,1223,3.586,1224,1.457,1225,2.419,1226,2.419,1227,1.405,1228,2.419,1229,2.419,1230,1.405,1231,2.419,1232,2.419,1233,3.072,1234,2.419,1235,2.419,1236,2.419,1237,1.874,1238,2.419,1239,1.457,1240,2.419,1241,1.457,1242,2.419,1243,2.419,1244,2.419,1245,2.419,1246,2.419,1247,4.665,1248,2.419,1249,1.812,1250,4.409,1251,4.409]],["title/components/IndoorTileViewComponent.html",[0,0.006,221,0.654]],["body/components/IndoorTileViewComponent.html",[0,0.01,1,0.574,2,0.847,3,0.114,4,0.133,5,0.656,6,0.656,7,0.656,8,0.656,9,0.08,11,0.656,12,1.574,13,1.472,15,0.935,17,0.935,19,0.126,20,0.568,25,0.954,27,0.662,31,1.188,33,0.772,41,1.016,43,0.594,44,0.012,45,0.743,46,0.241,49,0.728,50,0.954,58,1.531,59,0.966,60,1.622,61,1.969,62,0.75,69,0.378,70,0.251,86,0.091,87,0.265,97,1.946,103,1.061,107,0.523,127,1.084,129,1.581,131,3.112,132,2.45,134,2.638,159,1.188,169,1.324,173,0.845,177,1.682,178,1.472,180,0.555,181,0.935,182,1.137,183,0.656,184,0.656,185,0.574,186,0.634,187,0.293,188,0.774,189,1.53,190,0.656,191,0.574,192,0.634,193,0.875,194,1.435,195,0.555,196,1.063,197,0.574,198,1.054,199,0.574,200,0.634,201,0.614,202,0.574,203,0.891,204,0.656,205,0.574,206,0.555,207,0.555,208,1.188,209,0.574,210,0.555,211,0.555,212,0.378,213,0.574,214,0.555,215,0.523,216,0.574,217,0.574,218,0.418,219,0.555,220,0.717,221,1.04,222,0.555,223,0.499,224,0.574,225,1.054,226,0.875,227,0.574,228,0.574,229,0.574,230,0.634,231,0.555,232,0.614,233,0.574,234,0.614,235,0.614,236,0.555,237,0.438,238,0.358,239,0.574,240,0.555,241,0.819,242,0.738,243,0.555,244,0.555,245,1.054,246,0.574,247,0.594,248,0.656,249,0.574,250,0.574,251,0.266,252,0.614,253,0.574,254,0.614,255,0.574,256,0.634,257,0.614,258,0.555,259,0.594,260,0.555,261,0.574,262,0.634,263,0.574,264,0.634,265,0.574,266,0.634,267,0.614,268,0.656,269,0.656,270,0.005,271,0.007,272,0.005,354,5.406,376,1.087,377,0.186,378,1.581,379,1.6,380,2.353,381,1.765,382,2.1,383,3.095,384,1.653,385,1.501,386,3.487,387,2.937,388,1.097,389,2.263,390,3.095,391,3.095,392,0.847,393,1.125,394,1.926,395,1.653,398,1.889,399,3.607,400,3.423,401,2.555,403,2.171,405,2.797,409,2.171,410,2.1,412,1.528,417,1.159,418,2.171,421,2.445,422,1.42,454,1.592,455,2.082,456,1.371,457,1.65,459,1.765,460,1.825,461,2.06,462,2.297,464,2.297,490,2.937,809,3.487,871,1.472,872,1.472,880,2.445,885,2.937,895,2.937,905,2.637,963,2.06,1022,3.095,1091,2.353,1133,2.385,1185,1.961,1227,1.42,1230,2.828,1249,1.825,1305,2.057,1348,3.143,1395,3.095,1558,2.846,1687,6.291,1689,2.623,1736,5.976,1737,6.515,1738,6.515,1739,7.161,1740,6.515,1741,3.487,1742,5.128,1743,6.26,1744,5.696,1745,4.483,1746,3.596,1747,3.143,1748,5.128,1749,5.128,1750,5.128,1751,3.596,1752,6.515,1753,6.515,1754,6.515,1755,5.128,1756,5.976,1757,2.623,1758,3.596,1759,3.143,1760,3.596,1761,5.128,1762,5.128,1763,4.058,1764,5.128,1765,5.128,1766,5.128,1767,3.143,1768,3.596,1769,3.596,1770,3.596,1771,3.596,1772,3.596]],["title/injectables/LocalStorageService.html",[585,1.092,1773,3.243]],["body/injectables/LocalStorageService.html",[3,0.1,4,0.1,9,0.1,14,1.66,19,0.157,25,1.074,26,3.28,27,0.774,33,0.869,41,1.027,43,1.111,44,0.013,45,0.837,46,0.157,49,0.733,50,1.225,58,1.804,60,1.668,61,1.362,62,0.884,66,5.325,69,0.441,70,0.315,81,2.72,82,2.474,86,0.114,87,0.332,89,1.309,97,1.96,134,2.996,223,0.626,234,1.31,270,0.006,271,0.009,272,0.006,291,3.267,298,4.074,377,0.371,384,2.312,388,1.534,401,2.985,417,2.312,431,2.034,479,2.247,580,3.267,585,1.91,588,3.825,590,2.827,591,2.749,593,1.718,614,2.458,629,5.477,679,5.615,708,3.215,709,2.487,712,2.396,1031,2.246,1293,3.261,1297,2.749,1479,4.576,1545,3.566,1653,6.074,1773,4.74,1774,6.373,1775,3.566,1776,8.534,1777,8.534,1778,6.729,1779,4.506,1780,4.506,1781,5.237,1782,4.506,1783,4.506,1784,4.506,1785,4.506,1786,4.506,1787,4.506,1788,4.506,1789,4.506,1790,4.506,1791,4.506,1792,6.199,1793,6.074,1794,4.506,1795,4.506,1796,3.827,1797,3.827,1798,4.506,1799,7.956,1800,4.506,1801,4.506,1802,4.506,1803,5.99,1804,4.506,1805,4.506,1806,4.506,1807,4.506,1808,4.506,1809,4.506,1810,4.506,1811,4.506,1812,4.506,1813,4.506,1814,4.506,1815,4.506,1816,4.506,1817,4.506,1818,4.506,1819,4.506,1820,4.506,1821,4.506,1822,4.506,1823,3.566,1824,3.939,1825,3.566,1826,3.566,1827,3.566]],["title/interfaces/LoginResponse.html",[573,0.569,727,2.618]],["body/interfaces/LoginResponse.html",[3,0.075,4,0.075,9,0.075,14,1.237,19,0.117,20,0.54,22,3.841,26,3.026,38,2.748,44,0.013,46,0.234,49,0.717,58,1.844,59,0.632,62,0.95,64,2.074,69,0.494,70,0.235,74,1.541,75,3.77,76,1.482,81,2.027,82,2.574,86,0.085,87,0.247,88,0.765,89,1.509,97,2.012,121,2.995,127,0.483,129,1.394,139,1.482,223,0.678,251,0.298,270,0.005,271,0.007,272,0.005,311,1.482,320,2.027,334,1.541,377,0.174,384,2.035,388,1.044,392,0.554,431,2.279,445,1.541,479,2.319,490,3.616,573,0.799,574,2.145,575,1.048,576,2.283,577,1.604,578,1.791,579,2.283,580,4.113,581,4.056,582,4.892,583,5.267,584,2.145,585,1.532,586,1.673,587,1.673,588,3.342,589,1.673,590,1.237,591,1.541,592,1.604,593,1.28,594,2.145,595,2.449,596,3.758,597,2.449,598,2.449,599,2.449,600,2.449,601,2.449,602,2.449,603,2.449,604,2.449,605,2.449,606,1.831,607,1.831,608,2.449,609,2.449,610,2.449,611,2.449,612,2.449,613,2.449,614,1.831,615,2.449,616,4.465,617,4.076,618,2.089,619,3.758,620,2.449,621,4.223,622,3.319,623,4.033,624,4.388,625,3.118,626,3.674,627,2.449,628,1.831,629,4.293,630,2.449,631,1.429,632,2.449,633,2.449,634,2.449,635,3.186,636,4.033,637,4.47,638,3.644,639,4.47,640,3.81,641,3.146,642,4.033,643,4.033,644,3.487,645,4.033,646,2.449,647,5.013,648,5.104,649,5.104,650,5.104,651,4.605,652,2.449,653,2.449,654,2.449,655,2.449,656,2.449,657,4.293,658,2.449,659,2.449,660,2.449,661,4.033,662,2.449,663,2.449,664,3.343,665,2.449,666,3.56,667,3.294,668,3.56,669,3.294,670,3.56,671,2.748,672,3.56,673,2.145,674,2.449,675,4.195,676,2.449,677,2.449,678,3.56,679,3.319,680,2.432,681,2.449,682,2.449,683,5.104,684,2.449,685,3.118,686,3.56,687,3.319,688,2.449,689,2.449,690,2.449,691,2.449,692,2.449,693,2.449,694,2.432,695,2.449,696,2.145,697,2.449,698,2.449,699,2.449,700,2.449,701,2.449,702,2.449,703,2.449,704,1.237,705,2.449,706,1.831,707,2.145,708,2.332,709,1.626,710,2.145,711,1.604,712,1.195,713,2.449,714,4.284,715,2.449,716,2.449,717,1.749,718,2.449,719,2.449,720,2.449,721,2.748,722,2.027,723,1.923,724,1.541,725,2.027,726,1.604,727,3.118]],["title/components/LoginViewComponent.html",[0,0.006,222,0.632]],["body/components/LoginViewComponent.html",[0,0.01,1,0.566,2,0.838,3,0.113,4,0.079,5,0.646,6,0.646,7,0.646,8,0.646,9,0.079,11,0.646,12,1.573,13,1.47,15,0.925,17,0.925,19,0.124,20,0.562,22,3.707,25,0.946,27,0.655,31,1.18,33,0.458,36,3.005,40,4.002,41,0.948,43,0.585,44,0.013,45,0.737,46,0.177,49,0.606,50,1.138,59,0.667,60,0.711,62,0.584,69,0.477,70,0.248,71,1.505,73,1.505,82,2.086,86,0.09,87,0.261,88,0.807,89,0.987,100,2.584,101,3.701,103,1.056,104,3.092,107,0.517,112,1.791,113,2.139,117,1.766,134,1.869,137,1.747,159,1.413,169,1.768,170,2.139,171,1.071,173,1.863,174,1.974,175,1.106,176,1.399,177,2.026,178,2.804,179,2.611,180,0.547,181,0.925,182,0.979,183,0.646,184,0.646,185,0.566,186,0.625,187,0.289,188,0.694,189,1.527,190,0.646,191,0.566,192,0.625,193,1.105,194,1.431,195,0.547,196,0.547,197,0.566,198,0.625,199,0.566,200,0.625,201,0.605,202,0.566,203,0.883,204,0.646,205,0.566,206,0.547,207,0.547,208,1.18,209,0.566,210,0.547,211,0.547,212,0.374,213,0.566,214,0.547,215,0.517,216,0.566,217,0.566,218,0.289,219,0.547,220,0.454,221,0.566,222,0.998,223,1.119,224,0.566,225,1.046,226,0.866,227,0.566,228,0.566,229,0.566,230,0.625,231,0.547,232,0.605,233,0.566,234,0.605,235,0.605,236,0.547,237,0.433,238,0.355,239,0.566,240,0.547,241,1.033,242,0.73,243,0.547,244,0.547,245,1.046,246,0.566,247,0.585,248,0.646,249,0.566,250,0.566,251,0.263,252,0.605,253,0.566,254,0.605,255,0.566,256,0.625,257,0.605,258,0.547,259,0.979,260,0.547,261,0.566,262,0.625,263,0.566,264,0.625,265,0.566,266,0.625,267,0.605,268,0.646,269,0.646,270,0.005,271,0.007,272,0.005,356,5.475,376,1.071,377,0.184,378,1.429,379,1.583,380,2.72,388,1.384,389,2.239,392,0.838,393,1.116,394,1.911,395,1.636,403,3.063,421,2.409,422,2.556,454,1.824,455,2.218,456,2.717,457,2.72,458,3.092,459,1.747,460,1.806,462,2.264,474,2.373,475,3.063,479,2.197,483,4.135,538,1.845,543,1.399,547,2.264,549,1.693,552,2.749,553,1.932,559,2.409,616,4.134,618,1.671,621,4.134,635,3.463,753,1.399,764,1.693,786,3.087,787,2.029,813,4.401,823,4.658,832,2.029,837,3.45,855,3.45,871,2.077,872,2.077,905,3.022,914,2.264,936,2.584,1022,2.139,1109,3.45,1306,1.451,1311,1.505,1442,3.45,1584,2.264,1610,2.584,1630,2.029,1665,3.395,1666,4.324,1667,4.324,1668,4.324,1669,2.584,1689,2.584,1704,3.241,1828,6.561,1829,3.701,1830,3.701,1831,5.658,1832,5.182,1833,6.472,1834,6.472,1835,2.804,1836,5.639,1837,3.543,1838,3.543,1839,3.097,1840,4.015,1841,4.435,1842,4.015,1843,5.121,1844,4.69,1845,4.435,1846,3.097,1847,3.097,1848,4.69,1849,3.543,1850,3.097,1851,3.097,1852,3.097,1853,3.097,1854,3.543,1855,3.097,1856,3.097,1857,5.074,1858,5.074,1859,4.435,1860,4.435,1861,4.015,1862,4.015,1863,5.074,1864,4.435,1865,5.074,1866,3.097,1867,2.584,1868,5.074,1869,5.074,1870,3.543,1871,3.543,1872,3.543,1873,3.543,1874,3.543]],["title/components/MenuBarElementComponent.html",[0,0.006,224,0.654]],["body/components/MenuBarElementComponent.html",[0,0.01,1,0.59,2,0.864,3,0.116,4,0.082,5,0.674,6,0.674,7,0.674,8,0.674,9,0.082,11,0.674,12,1.577,13,1.474,15,0.953,17,0.953,19,0.212,20,0.579,21,1.925,25,0.969,27,0.675,31,1.203,33,0.477,36,3.042,41,0.959,43,0.61,44,0.012,45,0.821,46,0.212,49,0.617,50,1.154,58,1.229,59,0.696,60,1.325,61,1.581,62,0.602,69,0.486,70,0.258,73,1.571,80,2.724,86,0.094,87,0.272,88,0.842,89,0.719,103,1.069,104,2.499,107,0.673,112,1.581,113,2.232,119,2.362,120,2.4,127,0.753,131,1.925,137,2.397,154,3.556,159,1.496,169,1.567,171,2.184,173,1.878,174,2.571,175,2.173,176,2.854,177,2.02,178,2.85,180,0.57,181,0.953,182,1.227,183,0.674,184,0.674,185,0.59,186,0.652,187,0.301,188,0.7,189,1.534,190,0.674,191,0.59,192,0.652,193,1.126,194,1.443,195,0.57,196,0.57,197,0.59,198,0.652,199,0.59,200,0.652,201,0.631,202,0.59,203,0.904,204,0.674,205,0.59,206,0.57,207,0.57,208,1.203,209,0.59,210,0.57,211,0.57,212,0.385,213,0.59,214,0.57,215,0.533,216,0.59,217,0.59,218,0.301,219,0.57,220,0.468,221,0.59,222,0.57,223,0.513,224,1.053,225,1.44,226,1.456,227,0.59,228,0.59,229,0.59,230,0.652,231,0.57,232,0.631,233,0.59,234,0.631,235,0.631,236,0.57,237,0.564,238,0.505,239,0.59,240,0.57,241,0.835,242,0.753,243,0.57,244,0.57,245,1.071,246,0.59,247,0.61,248,0.674,249,0.59,250,0.59,251,0.271,252,0.631,253,0.59,254,0.631,255,0.59,256,0.652,257,0.631,258,0.57,259,0.61,260,0.57,261,0.59,262,0.652,263,0.59,264,0.652,265,0.59,266,0.652,267,0.631,268,0.674,269,0.674,270,0.005,271,0.007,272,0.005,377,0.191,388,1.119,392,0.864,393,1.143,410,1.192,422,1.46,423,3.224,426,1.631,427,3.341,428,2.9,429,2.499,436,1.926,438,4.139,454,0.985,455,1.581,459,1.273,460,1.316,463,2.926,469,2.852,471,3.877,474,1.231,514,2.724,521,2.514,530,3.341,544,3.341,547,2.362,552,2.222,671,2.9,709,1.742,737,2.232,750,2.926,758,3.232,764,1.767,768,3.436,773,2.362,794,1.697,855,3.556,871,1.514,872,1.514,875,3.815,895,2.118,902,2.362,905,1.631,943,3.815,946,2.697,947,2.514,948,4.127,959,3.602,969,1.925,970,2.118,976,2.926,980,2.514,984,2.926,987,5.221,989,2.926,990,2.926,995,2.926,1040,2.697,1045,3.157,1266,2.066,1293,2.222,1630,2.996,1665,2.118,1741,2.514,1875,5.536,1876,5.161,1877,4.572,1878,6.961,1879,6.597,1880,5.767,1881,5.23,1882,3.232,1883,3.697,1884,3.697,1885,3.232,1886,3.697,1887,3.232,1888,3.697,1889,3.697,1890,2.697,1891,3.697,1892,3.232,1893,3.556,1894,3.232,1895,4.139,1896,4.139,1897,2.926,1898,2.926,1899,2.697,1900,3.697,1901,4.139,1902,3.697,1903,2.362,1904,3.697]],["title/components/MenuButtonElementComponent.html",[0,0.006,227,0.654]],["body/components/MenuButtonElementComponent.html",[0,0.011,1,0.619,2,0.893,3,0.12,4,0.086,5,0.706,6,0.706,7,0.706,8,0.706,9,0.086,11,0.706,12,1.581,13,1.478,15,0.985,17,0.985,19,0.135,20,0.598,25,0.619,27,0.698,31,1.228,33,0.5,36,3.004,41,0.972,43,0.64,44,0.012,45,0.838,46,0.217,49,0.63,50,1.202,58,1.583,59,1.018,60,1.422,61,1.881,69,0.459,70,0.271,73,1.646,80,2.815,86,0.098,87,0.286,88,0.883,103,1.084,104,2.583,107,0.687,112,1.634,113,2.339,117,3.102,119,2.476,120,1.778,131,3.242,132,1.852,137,2.439,159,1.4,171,1.171,173,1.271,174,1.291,175,1.687,176,1.531,177,1.395,178,2.549,179,2.568,180,0.598,181,0.985,182,1.288,183,0.706,184,0.706,185,0.619,186,0.684,187,0.316,188,0.707,189,1.541,190,0.706,191,0.619,192,0.684,193,1.463,194,1.456,195,0.598,196,0.598,197,0.619,198,0.684,199,0.619,200,0.684,201,0.662,202,0.619,203,0.928,204,0.706,205,0.619,206,0.598,207,0.598,208,1.228,209,0.619,210,0.598,211,0.598,212,0.398,213,0.619,214,0.598,215,0.551,216,0.619,217,0.619,218,0.316,219,0.598,220,0.484,221,0.619,222,0.598,223,0.538,224,0.619,225,1.498,226,1.063,227,1.075,228,0.619,229,0.619,230,0.684,231,0.598,232,0.662,233,0.619,234,0.662,235,0.662,236,0.598,237,0.462,238,0.378,239,0.619,240,0.598,241,0.863,242,0.778,243,0.598,244,0.598,245,1.098,246,0.619,247,0.64,248,0.706,249,0.619,250,0.619,251,0.28,252,0.662,253,0.619,254,0.662,255,0.619,256,0.684,257,0.662,258,0.598,259,0.64,260,0.598,261,0.619,262,0.684,263,0.619,264,0.684,265,0.619,266,0.684,267,0.662,268,0.706,269,0.706,270,0.006,271,0.008,272,0.006,377,0.201,392,0.893,393,1.172,422,1.531,423,3.263,426,1.71,428,2.974,429,2.583,434,1.427,440,3.943,453,2.339,454,1.032,455,1.171,456,1.478,457,1.778,458,1.852,461,3.096,462,2.476,464,2.476,465,2.827,466,2.827,467,2.827,468,3.388,469,3.674,470,3.067,471,4.303,521,3.676,522,2.476,544,2.476,547,2.476,671,2.974,737,2.339,748,2.22,749,3.067,764,1.852,768,2.815,773,2.476,801,3.388,875,4.913,943,3.943,947,2.635,948,4.233,976,3.067,980,2.635,984,3.067,987,5.33,988,4.725,989,3.067,990,3.067,1665,2.22,1741,2.635,1875,5.602,1876,5.223,1890,2.827,1894,5.888,1897,3.067,1898,3.067,1899,2.827,1901,5.33,1903,2.476,1905,4.725,1906,6.225,1907,5.888,1908,6.735,1909,3.388,1910,6.735,1911,3.875,1912,3.875,1913,5.406,1914,5.406,1915,3.875,1916,4.725,1917,5.406,1918,5.406]],["title/components/MenuElementComponent.html",[0,0.006,228,0.654]],["body/components/MenuElementComponent.html",[0,0.01,1,0.534,2,0.804,3,0.108,4,0.074,5,0.61,6,0.61,7,0.61,8,0.61,9,0.074,11,0.61,12,1.568,13,1.465,15,0.888,17,0.888,19,0.2,20,0.539,25,0.534,27,0.629,31,1.149,33,0.432,36,2.953,40,3.812,41,1.013,43,0.553,44,0.013,45,0.714,46,0.244,49,0.627,50,1.18,58,0.787,59,1.081,60,1.152,69,0.515,70,0.234,71,1.422,73,1.422,79,3.464,82,1.57,85,2.441,86,0.085,87,0.247,88,0.762,89,0.651,97,0.837,103,1.038,104,3.012,107,0.497,112,1.472,131,3.282,132,2.327,137,1.152,139,3.084,159,1.374,169,1.257,171,1.472,172,2.926,173,1.823,174,1.622,175,1.52,177,1.976,178,1.994,179,1.276,180,0.516,181,0.888,182,1.191,183,0.61,184,0.61,185,0.534,186,0.59,187,0.273,188,0.685,189,1.518,190,0.61,191,0.534,192,0.59,193,1.422,194,1.414,195,0.516,196,0.516,197,0.534,198,0.59,199,0.534,200,0.59,201,0.571,202,0.534,203,0.998,204,0.61,205,0.534,206,0.516,207,0.516,208,1.149,209,0.534,210,0.516,211,0.516,212,0.359,213,0.534,214,0.516,215,0.497,216,0.534,217,0.534,218,0.273,219,0.516,220,0.436,221,0.534,222,0.516,223,0.465,224,0.534,225,1.455,226,0.831,227,0.534,228,1.006,229,0.534,230,0.59,231,0.516,232,0.571,233,0.534,234,0.571,235,0.571,236,0.516,237,0.416,238,0.34,239,0.534,240,0.516,241,1.006,242,0.701,243,0.516,244,0.516,245,1.013,246,0.534,247,0.553,248,0.61,249,0.534,250,0.534,251,0.252,252,0.98,253,0.534,254,0.571,255,0.534,256,0.59,257,0.571,258,0.516,259,0.553,260,0.516,261,0.534,262,0.59,263,0.534,264,0.59,265,0.534,266,0.59,267,0.571,268,0.61,269,0.61,270,0.005,271,0.007,272,0.005,291,3.13,377,0.173,379,1.52,388,1.042,389,2.149,392,0.804,393,1.081,401,2.427,423,3.363,426,1.477,427,3.111,428,2.742,429,2.327,431,2.37,432,4.621,444,4.608,445,3.207,450,2.441,451,2.926,453,3.464,454,1.297,455,2.112,456,1.856,457,2.234,458,1.599,459,1.676,460,1.733,464,3.111,465,3.552,469,1.825,470,3.853,479,1.845,481,2.648,483,4.027,530,3.111,534,2.536,535,2.138,536,2.276,538,1.743,543,2.267,550,2.138,552,2.438,553,1.825,618,0.864,724,3.207,746,3.853,751,4.542,752,2.926,762,3.311,764,1.599,786,2.536,787,1.917,788,3.552,789,3.552,792,2.926,800,2.138,833,3.853,871,1.37,872,1.37,905,1.477,1185,2.656,1266,1.923,1282,2.234,1305,1.676,1359,5.53,1442,2.276,1443,2.441,1630,1.917,1781,4.257,1830,2.441,1853,2.926,1875,5.775,1876,5.383,1893,3.311,1895,2.648,1896,2.648,1905,4.257,1907,5.51,1909,2.926,1919,4.869,1920,3.552,1921,4.257,1922,5.739,1923,5.739,1924,5.739,1925,7.655,1926,6.303,1927,6.303,1928,5.739,1929,5.739,1930,3.347,1931,3.347,1932,3.347,1933,3.347,1934,3.347,1935,3.347,1936,6.989,1937,6.989,1938,6.989,1939,3.347,1940,3.347,1941,6.989,1942,2.926,1943,3.347,1944,3.347,1945,4.257,1946,5.855,1947,3.853,1948,2.926,1949,4.988,1950,4.257,1951,4.257,1952,2.926,1953,3.347,1954,3.347,1955,3.347,1956,3.347,1957,5.017,1958,4.869,1959,4.869,1960,4.869,1961,4.869,1962,3.347,1963,3.347,1964,3.347,1965,2.648,1966,3.347,1967,5.739,1968,3.347]],["title/components/NavBarElementComponent.html",[0,0.006,229,0.654]],["body/components/NavBarElementComponent.html",[0,0.011,1,0.715,2,0.985,3,0.132,4,0.099,5,0.816,6,0.816,7,0.816,8,0.816,9,0.099,11,0.816,12,1.592,13,1.489,15,1.087,17,1.087,19,0.208,27,0.77,31,1.304,33,0.866,41,0.924,44,0.012,45,0.742,46,0.208,49,0.419,50,0.952,62,0.824,69,0.33,70,0.313,86,0.113,87,0.33,103,1.125,107,0.608,137,1.541,159,1.466,169,1.155,171,1.802,173,1.751,174,2.382,175,1.861,176,2.649,177,1.846,178,2.442,179,2.274,180,0.691,181,1.087,182,1.328,183,0.816,184,0.816,185,0.715,186,0.79,187,0.365,188,0.727,189,1.561,190,0.816,191,0.715,192,1.314,193,1.221,194,1.493,195,0.691,196,0.691,197,0.715,198,0.79,199,0.715,200,0.79,201,0.764,202,0.715,203,1,204,0.816,205,0.715,206,0.691,207,0.691,208,1.304,209,0.715,210,0.691,211,0.691,212,0.44,213,0.715,214,0.691,215,0.608,216,0.715,217,0.715,218,0.365,219,0.691,220,0.534,221,0.715,222,0.691,223,0.622,224,0.715,225,1.183,226,1.456,227,0.715,228,0.715,229,1.142,230,1.433,231,0.691,232,0.764,233,0.715,234,0.764,235,0.764,236,0.691,237,0.509,238,0.417,239,0.715,240,0.691,241,0.952,242,0.858,243,0.691,244,0.691,245,1.183,246,0.715,247,0.739,248,0.816,249,0.715,250,0.715,251,0.309,252,0.764,253,0.715,254,0.764,255,0.715,256,0.79,257,0.764,258,0.691,259,0.739,260,0.691,261,0.715,262,0.79,263,0.715,264,0.79,265,0.715,266,0.79,267,0.764,268,0.816,269,0.816,270,0.006,271,0.008,272,0.006,377,0.232,389,2.632,392,0.985,393,1.263,398,2.197,410,2.162,423,3.165,426,1.975,428,3.205,429,2.85,434,2.197,514,2.331,519,3.044,522,3.81,523,3.044,530,2.86,552,1.902,905,1.975,1266,1.768,1630,2.564,1893,3.044,1895,3.542,1896,3.542,1969,6.512,1970,5.895,1971,5.964,1972,5.964,1973,6.707,1974,7.449]],["title/components/OnboardingScreenComponent.html",[0,0.006,231,0.632]],["body/components/OnboardingScreenComponent.html",[0,0.011,1,0.732,2,1.193,3,0.135,4,0.102,5,0.836,6,0.836,7,0.836,8,0.836,9,0.102,11,0.836,12,1.593,13,1.491,15,1.105,17,1.105,19,0.16,20,0.671,21,3.536,25,0.732,27,0.783,31,1.317,32,4.798,33,0.877,41,0.933,43,0.758,44,0.012,45,0.845,46,0.212,49,0.567,50,0.968,54,4.798,55,5.716,57,4.798,58,1.425,59,0.864,60,0.921,61,1.832,69,0.5,70,0.321,71,1.949,77,4.123,78,3.631,79,2.77,80,2.389,85,3.347,86,0.116,87,0.338,97,1.148,98,3.631,99,3.631,103,1.132,104,3.451,107,0.618,159,1.317,180,0.708,181,1.105,182,1.121,183,0.836,184,0.836,185,0.732,186,0.81,187,0.374,188,0.73,189,1.564,190,0.836,191,0.732,192,0.81,193,1.035,194,1.499,195,0.708,196,0.708,197,0.732,198,0.81,199,0.732,200,0.81,201,0.783,202,0.732,203,1.012,204,0.836,205,0.732,206,0.708,207,0.708,208,1.317,209,0.732,210,0.708,211,0.708,212,0.447,213,0.732,214,0.708,215,0.618,216,0.732,217,0.732,218,0.374,219,0.708,220,0.542,221,0.732,222,0.708,223,0.943,224,0.732,225,1.198,226,1.035,227,0.732,228,0.732,229,0.732,230,0.81,231,1.114,232,1.393,233,0.732,234,0.783,235,0.783,236,0.708,237,0.518,238,0.424,239,0.732,240,0.708,241,1.153,242,0.872,243,0.708,244,0.708,245,1.198,246,0.732,247,0.758,248,0.836,249,0.732,250,0.732,251,0.314,252,0.783,253,0.732,254,0.783,255,0.732,256,0.81,257,0.783,258,0.708,259,0.758,260,0.708,261,0.732,262,0.81,263,0.732,264,0.81,265,0.732,266,0.81,267,0.783,268,0.836,269,0.836,270,0.007,271,0.009,272,0.007,320,3.66,341,5.479,377,0.238,378,1.595,392,1.001,393,1.279,431,2.052,454,1.615,930,3.12,931,4.123,932,4.953,933,4.422,1001,5.3,1975,6.566,1976,4.588,1977,4.588]],["title/components/OpenAPELoginTileViewComponent.html",[0,0.006,233,0.654]],["body/components/OpenAPELoginTileViewComponent.html",[0,0.01,1,0.624,2,0.898,3,0.121,4,0.087,5,0.713,6,0.713,7,0.713,8,0.713,9,0.087,11,0.713,12,1.581,13,1.479,15,0.992,17,0.992,19,0.137,20,0.602,22,2.24,25,1.079,27,0.702,31,1.233,33,0.702,36,3.091,41,0.95,43,0.898,44,0.012,45,0.841,46,0.218,49,0.585,50,1.135,59,0.736,60,0.785,62,0.887,69,0.461,70,0.273,73,1.661,82,2.18,86,0.099,87,0.288,89,1.058,101,3.968,103,1.086,107,0.555,134,2.003,137,2.153,159,1.403,173,1.279,174,1.302,175,1.22,179,2.074,180,0.603,181,0.992,182,1.033,183,0.713,184,0.713,185,0.624,186,0.69,187,0.319,188,0.767,189,1.542,190,0.713,191,0.624,192,0.69,193,0.929,194,1.458,195,0.603,196,0.603,197,0.624,198,0.69,199,0.624,200,0.69,201,0.668,202,0.624,203,0.932,204,0.713,205,0.624,206,0.603,207,0.603,208,1.233,209,0.624,210,0.603,211,0.603,212,0.401,213,0.624,214,0.603,215,0.555,216,0.624,217,0.624,218,0.319,219,0.603,220,0.487,221,0.624,222,0.603,223,0.987,224,0.624,225,1.104,226,0.929,227,0.624,228,0.624,229,0.624,230,0.69,231,0.603,232,0.668,233,1.079,234,1.412,235,1.441,236,0.603,237,0.465,238,0.38,239,0.624,240,0.603,241,0.868,242,0.783,243,0.603,244,0.603,245,1.104,246,0.624,247,0.646,248,0.713,249,0.624,250,0.624,251,0.282,252,0.668,253,0.624,254,0.668,255,0.624,256,0.69,257,0.668,258,0.603,259,0.646,260,0.603,261,0.624,262,0.69,263,0.624,264,0.69,265,0.624,266,0.69,267,0.668,268,0.713,269,0.713,270,0.006,271,0.008,272,0.006,376,1.182,377,0.203,378,1.493,380,2.496,388,1.164,389,2.4,392,0.898,393,1.178,394,2.016,395,1.754,402,2.133,410,1.261,454,1.449,456,1.491,458,1.869,474,1.302,475,3.284,479,2.154,482,3.094,484,3.699,538,2.036,543,1.544,552,1.661,616,4.556,618,1.746,621,4.778,635,3.247,712,1.936,753,2.148,764,1.869,798,3.699,813,4.598,823,4.833,832,2.24,837,3.699,1022,2.36,1109,3.699,1293,2.311,1567,3.418,1584,2.498,1747,3.418,1793,6.091,1829,3.968,1830,3.968,1831,4.755,1832,5.468,1835,3.094,1836,5.823,1840,4.305,1842,4.305,1843,5.351,1844,4.95,1845,4.755,1846,3.418,1847,3.418,1848,4.95,1861,4.305,1862,4.305,1978,6.598,1979,5.973,1980,5.44,1981,5.44,1982,3.91,1983,3.91,1984,3.91,1985,3.91,1986,3.91,1987,3.91,1988,3.91]],["title/interfaces/OutdoorWeatherData.html",[411,1.163,573,0.569]],["body/interfaces/OutdoorWeatherData.html",[3,0.101,4,0.101,9,0.101,19,0.159,20,0.669,44,0.013,46,0.291,62,0.982,86,0.211,107,0.616,127,1.183,129,1.902,187,0.664,188,0.722,212,0.499,215,0.465,218,0.669,220,0.606,237,0.616,238,0.578,251,0.351,270,0.006,271,0.009,272,0.006,368,2.181,377,0.236,378,1.008,381,1.571,382,2.533,385,2.364,411,1.921,417,1.471,434,1.681,436,2.655,487,1.625,516,2.773,524,2.961,558,2.181,573,1.141,575,1.424,578,2.263,631,1.769,735,1.681,761,1.869,769,2.275,808,3.043,835,1.939,951,2.014,955,1.869,957,2.567,1002,2.748,1042,1.471,1091,2.094,1125,2.303,1126,1.869,1127,1.869,1132,1.424,1133,1.52,1134,1.52,1179,2.655,1187,1.74,1211,2.847,1213,2.847,1215,3.07,1217,2.761,1220,2.951,1224,1.869,1227,2.847,1230,1.803,1237,1.681,1239,1.869,1241,1.869,1249,2.743,1266,1.803,1268,1.869,1269,2.181,1270,3.468,1271,4.155,1272,2.275,1273,2.275,1274,2.275,1275,2.275,1276,2.275,1277,2.275,1278,2.094,1279,2.094,1280,2.014,1281,2.377,1282,2.094,1283,2.181,1284,2.094,1285,3.108,1286,2.887,1287,2.377,1288,2.181,1289,2.275,1290,2.377,1291,2.377,1292,2.377,1293,1.939,1294,3.375,1295,3.444,1296,2.377,1297,2.094,1298,2.275,1299,2.094,1300,2.377,1301,2.377,1302,2.377,1303,2.377,1304,2.275,1305,2.08,1306,2.474,1307,2.094,1308,2.181,1309,2.181,1310,2.014,1311,1.939,1312,1.939,1313,2.014]],["title/components/OutdoorWeatherDetailViewComponent.html",[0,0.006,236,0.632]],["body/components/OutdoorWeatherDetailViewComponent.html",[0,0.011,1,0.556,2,0.828,3,0.111,4,0.077,5,0.635,6,0.635,7,0.635,8,0.635,9,0.077,11,0.635,12,1.571,13,1.47,15,0.914,17,0.914,19,0.122,20,0.555,21,3.058,25,0.937,27,0.647,31,1.171,33,0.45,39,4.818,41,0.879,43,0.575,44,0.012,45,0.73,46,0.205,49,0.326,50,0.8,58,1.178,59,0.944,60,1.006,61,1.775,69,0.501,70,0.244,83,3.409,84,2.226,86,0.088,87,0.257,88,0.794,89,1.249,93,2.757,96,3.409,102,2.734,103,1.218,105,3.409,107,0.511,109,2.757,110,2.369,111,2.757,112,1.775,113,2.103,114,2.369,115,2.369,116,3.967,117,1.736,127,0.924,151,3.656,159,1.24,169,1.516,170,2.103,173,1.178,176,1.376,180,0.537,181,0.914,182,1.123,183,0.635,184,0.635,185,0.556,186,0.615,187,0.284,188,0.691,189,1.525,190,0.635,191,0.556,192,0.615,193,0.856,194,1.426,195,0.537,196,0.537,197,0.556,198,0.615,199,0.556,200,0.615,201,0.595,202,0.556,203,0.875,204,0.635,205,0.556,206,0.537,207,0.537,208,1.171,209,0.556,210,0.537,211,0.537,212,0.369,213,0.556,214,0.537,215,0.511,216,0.556,217,0.556,218,0.284,219,0.537,220,0.448,221,0.556,222,0.537,223,0.484,224,0.556,225,1.036,226,0.856,227,0.556,228,0.556,229,0.556,230,0.615,231,0.537,232,0.595,233,0.556,234,0.595,235,0.595,236,0.991,237,0.686,238,0.589,239,0.8,240,0.537,241,0.8,242,0.721,243,0.537,244,0.537,245,1.036,246,0.556,247,0.575,248,0.635,249,0.556,250,0.556,251,0.26,252,0.595,253,0.556,254,0.595,255,0.556,256,0.615,257,0.595,258,0.537,259,0.575,260,0.537,261,0.556,262,0.615,263,0.556,264,0.615,265,0.556,266,1.201,267,1.002,268,0.635,269,0.635,270,0.005,271,0.007,272,0.005,358,4.818,376,1.053,377,0.18,378,1.564,379,1.564,382,1.616,392,0.828,393,1.106,394,1.893,395,1.616,404,1.996,405,1.9,406,2.541,411,1.665,412,1.48,427,2.226,454,1.812,455,2.142,459,1.726,460,1.784,474,2.139,487,2.949,493,4.912,498,3.876,547,2.226,548,3.045,709,2.139,735,1.846,768,1.814,794,2.3,871,1.426,872,1.426,901,2.369,958,3.751,959,3.2,960,3.802,962,3.409,965,3.409,966,3.026,967,3.026,968,3.202,969,1.814,970,1.996,971,2.103,979,2.541,980,2.369,1059,3.409,1065,5.614,1068,4.774,1084,5.614,1088,4.382,1091,3.545,1110,4.382,1112,4.367,1117,3.967,1129,2.926,1409,4.382,1423,3.409,1635,3.967,1698,4.684,1704,3.202,1732,4.382,1763,5.082,1989,5.607,1990,3.484,1991,5.872,1992,3.484,1993,3.484,1994,3.484,1995,3.484,1996,3.484,1997,3.484,1998,3.045,1999,5.013,2000,4.382,2001,5.013,2002,5.013,2003,5.013,2004,5.013,2005,5.013,2006,5.013,2007,5.013,2008,6.422,2009,5.013,2010,5.013,2011,6.422,2012,6.532,2013,5.013,2014,5.013,2015,5.013,2016,5.614,2017,5.013,2018,5.013,2019,5.614,2020,5.013,2021,5.013,2022,5.013,2023,5.013,2024,5.614,2025,5.013,2026,5.013,2027,5.013,2028,5.013,2029,5.013,2030,6.422,2031,4.382,2032,5.013,2033,5.013,2034,4.382,2035,5.013,2036,5.013,2037,4.382,2038,5.013,2039,5.013,2040,5.013,2041,5.013,2042,5.013,2043,5.013,2044,4.382,2045,5.013,2046,5.013,2047,5.013]],["title/interfaces/OutdoorWeatherResponse.html",[573,0.569,1199,2.474]],["body/interfaces/OutdoorWeatherResponse.html",[3,0.079,4,0.079,9,0.079,14,1.31,19,0.124,20,0.563,38,2.839,44,0.013,46,0.267,49,0.726,62,0.968,69,0.526,70,0.249,74,1.633,75,3.604,76,1.57,86,0.09,87,0.262,88,0.81,89,1.509,94,2.273,95,2.273,97,2.042,120,1.633,127,1.027,129,1.855,134,2.628,187,0.598,212,0.375,218,0.598,220,0.318,237,0.435,238,0.559,251,0.37,270,0.005,271,0.007,272,0.005,311,1.57,334,1.633,377,0.184,384,2.422,388,1.089,411,2.024,431,2.073,436,2.628,543,2.01,549,1.7,573,0.901,575,1.11,577,1.7,578,1.946,581,4.018,585,1.582,586,1.773,589,3.868,590,1.31,591,1.633,592,1.7,593,1.356,596,3.419,606,1.94,607,1.94,617,3.868,618,1.897,619,3.419,628,3.892,631,2.2,635,3.027,644,3.419,645,3.914,680,1.773,694,1.773,704,1.31,706,1.94,708,3.278,709,2.285,711,3.278,712,2.442,717,3.572,753,1.405,897,1.94,956,2.273,998,2.915,1002,1.94,1008,2.148,1015,4.141,1042,2.211,1046,2.915,1121,3.072,1122,2.273,1123,2.419,1124,2.419,1125,1.94,1126,2.084,1127,2.084,1128,2.148,1129,1.773,1130,2.148,1131,2.419,1132,2.293,1133,2.285,1134,1.695,1135,1.773,1136,2.419,1137,2.038,1138,2.419,1139,2.419,1140,2.419,1141,2.419,1142,2.419,1143,2.419,1144,2.419,1145,2.419,1146,4.665,1147,4.383,1148,2.273,1149,2.419,1150,2.419,1151,2.419,1152,2.419,1153,2.419,1154,2.419,1155,2.419,1156,2.419,1157,3.586,1158,2.419,1159,2.419,1160,2.419,1161,2.419,1162,2.419,1163,2.419,1164,2.273,1165,4.04,1166,2.419,1167,2.273,1168,2.419,1169,2.419,1170,2.419,1171,2.419,1172,2.419,1173,2.419,1174,2.419,1175,2.419,1176,2.419,1177,2.419,1178,2.419,1179,2.706,1180,2.419,1181,2.419,1182,2.419,1183,2.419,1184,2.419,1185,1.94,1186,2.419,1187,1.94,1188,2.419,1189,2.419,1190,2.419,1191,2.419,1192,2.419,1193,3.46,1194,2.419,1195,3.46,1196,2.419,1197,2.273,1198,2.419,1199,3.586,1200,2.419,1201,3.251,1202,2.419,1203,1.94,1204,2.419,1205,2.536,1206,2.419,1207,2.419,1208,3.46,1209,2.419,1210,3.46,1211,1.405,1212,2.775,1213,1.405,1214,3.46,1215,3.008,1216,2.419,1217,2.527,1218,2.419,1219,2.419,1220,1.457,1221,2.419,1222,2.419,1223,3.072,1224,1.457,1225,2.419,1226,2.419,1227,1.405,1228,2.419,1229,2.419,1230,1.405,1231,2.419,1232,2.419,1233,3.072,1234,2.419,1235,2.419,1236,2.419,1237,1.874,1238,2.419,1239,1.457,1240,2.419,1241,1.457,1242,2.419,1243,2.419,1244,2.419,1245,2.419,1246,2.419,1247,4.665,1248,4.409,1249,1.267,1250,2.419,1251,2.419]],["title/components/OutdoorWeatherViewComponent.html",[0,0.006,239,0.654]],["body/components/OutdoorWeatherViewComponent.html",[0,0.009,1,0.433,2,0.687,3,0.092,4,0.06,5,0.495,6,0.759,7,0.495,8,0.495,9,0.06,11,0.495,12,1.546,13,1.444,15,0.759,17,0.759,19,0.177,20,0.461,21,2.168,23,4.427,25,0.978,26,2.553,27,0.537,31,1.035,33,0.35,36,2.646,41,0.981,43,0.448,44,0.013,45,0.762,46,0.242,49,0.63,50,0.808,58,1.335,59,1.267,60,1.351,61,1.716,62,0.864,64,2.602,69,0.512,70,0.19,73,1.153,80,3.19,82,1.342,86,0.069,87,0.2,88,0.618,89,1.257,91,1.845,97,1.421,103,0.968,107,0.625,112,1.53,117,2.523,119,1.733,120,1.245,124,1.845,126,1.845,127,0.599,131,2.957,132,3.088,137,1.955,159,1.542,169,1.838,170,2.512,171,2.099,173,1.955,174,2.462,175,2.167,176,2.419,177,2.126,178,2.755,179,2.954,180,0.419,181,0.759,182,0.836,183,0.495,184,0.495,185,0.433,186,0.479,187,0.548,188,0.65,189,1.481,190,0.495,191,0.433,192,0.479,193,0.711,194,1.348,195,0.419,196,0.419,197,0.433,198,0.479,199,0.433,200,0.479,201,0.463,202,0.433,203,0.755,204,0.495,205,0.433,206,0.419,207,0.419,208,1.035,209,0.433,210,0.419,211,0.419,212,0.307,213,0.433,214,0.419,215,0.424,216,0.433,217,0.433,218,0.221,219,0.419,220,0.372,221,0.433,222,0.419,223,0.377,224,0.433,225,0.893,226,0.711,227,0.433,228,0.433,229,0.433,230,0.479,231,0.419,232,0.463,233,0.433,234,0.463,235,0.463,236,0.419,237,0.672,238,0.6,239,0.906,240,0.419,241,0.664,242,0.599,243,0.419,244,0.419,245,0.893,246,0.433,247,0.448,248,0.495,249,0.433,250,0.433,251,0.216,252,0.463,253,0.433,254,0.463,255,0.433,256,0.479,257,0.463,258,0.419,259,0.448,260,0.419,261,0.433,262,0.479,263,0.433,264,0.479,265,0.433,266,0.479,267,0.463,268,0.495,269,0.495,270,0.004,271,0.006,272,0.004,327,3.639,358,5.22,376,0.82,377,0.335,378,1.254,379,1.299,382,1.831,388,0.89,392,0.687,393,0.954,394,1.632,395,1.342,398,1.533,402,1.48,403,1.638,407,1.845,410,1.342,411,1.436,412,1.153,417,0.875,422,2.243,432,4.062,450,1.979,453,1.638,454,1.109,455,1.954,456,2.335,457,1.91,458,2.713,459,1.743,460,2.022,461,4.078,464,2.659,466,1.979,467,1.979,474,1.687,479,1.219,514,1.413,527,1.638,530,3.235,534,3.784,535,4.129,537,1.979,538,1.413,543,1.072,544,3.913,550,1.733,552,2.151,553,1.48,555,4.964,559,3.443,564,2.83,664,2.42,671,2.42,726,1.989,737,1.638,738,2.147,748,1.554,753,1.644,763,1.352,764,1.296,768,2.168,784,1.979,786,1.413,787,1.554,794,2.324,798,1.845,799,2.372,800,2.659,808,2.87,871,2.073,872,1.704,885,1.554,887,1.979,897,1.48,902,1.733,904,3.294,905,3.142,937,3.294,945,1.979,946,1.979,947,2.83,948,2.83,959,3.354,960,3.504,962,1.845,963,1.554,969,1.413,970,1.554,971,1.638,980,3.443,995,2.147,1041,2.83,1045,2.512,1046,2.384,1129,2.83,1148,1.733,1185,1.48,1265,2.372,1266,2,1288,1.989,1305,1.433,1306,1.111,1310,3.064,1311,1.153,1312,1.153,1313,1.197,1455,2.147,1479,1.845,1610,4.468,1613,2.372,1617,2.372,1630,3.508,1640,3.639,1665,4.234,1666,5.193,1667,3.694,1668,3.694,1669,1.979,1670,4.007,1671,4.007,1672,2.147,1673,4.007,1674,4.007,1675,2.147,1689,1.979,1741,2.83,1767,2.372,1866,2.372,1867,3.694,1890,1.979,1893,2.83,1897,2.147,1898,2.147,1899,3.036,1901,4.007,1903,3.235,1916,2.372,1989,6.074,1998,2.372,2048,4.162,2049,4.162,2050,4.162,2051,5.064,2052,5.064,2053,5.679,2054,6.463,2055,5.679,2056,2.713,2057,2.372,2058,2.713,2059,2.713,2060,2.713,2061,2.713,2062,2.713,2063,2.713,2064,2.713,2065,2.713,2066,2.713,2067,2.713,2068,2.713,2069,2.372,2070,5.679,2071,2.713,2072,2.713,2073,2.713,2074,1.979,2075,2.372,2076,2.713,2077,2.713,2078,2.713,2079,5.679,2080,2.713,2081,2.713,2082,2.713,2083,2.372,2084,4.162,2085,4.162,2086,4.162,2087,4.162,2088,4.162,2089,2.713,2090,2.713,2091,2.713,2092,2.713,2093,2.372,2094,2.372,2095,4.162,2096,2.372,2097,2.713,2098,4.427,2099,2.713,2100,2.713,2101,2.713,2102,4.162]],["title/components/PersonalizationSettingsViewComponent.html",[0,0.006,240,0.632]],["body/components/PersonalizationSettingsViewComponent.html",[0,0.01,1,0.511,2,0.778,3,0.105,4,0.071,5,0.583,6,0.583,7,0.583,8,0.583,9,0.071,11,0.583,12,1.563,13,1.464,15,0.859,17,0.859,19,0.285,20,0.522,21,2.912,25,1.189,26,2.209,27,0.608,31,1.125,33,0.608,35,5.393,36,3.05,40,3.879,41,1.03,43,1.174,44,0.013,45,0.927,46,0.265,47,4.889,49,0.756,50,0.985,58,1.617,59,1.053,60,1.542,61,1.865,62,0.841,64,3.022,69,0.455,70,0.224,71,1.359,73,1.359,82,1.519,86,0.081,87,0.236,89,1.2,91,2.176,97,1.922,103,1.024,107,0.481,112,1.69,119,2.044,120,1.468,121,2.453,124,2.176,127,0.46,128,2.797,129,1.829,130,2.797,131,3.425,132,3.142,139,1.412,153,2.844,159,1.33,169,1.444,173,1.45,174,2.055,176,1.861,178,1.929,180,0.494,181,0.859,182,0.923,183,0.583,184,0.583,185,0.511,186,0.564,187,0.261,188,0.678,189,1.511,190,0.583,191,0.511,192,0.564,193,0.804,194,1.4,195,0.494,196,0.494,197,0.511,198,0.564,199,0.511,200,0.564,201,0.546,202,0.511,203,0.833,204,0.583,205,0.511,206,0.494,207,0.494,208,1.125,209,0.511,210,0.494,211,0.494,212,0.347,213,0.511,214,0.494,215,0.481,216,0.511,217,0.511,218,0.261,219,0.494,220,0.421,221,0.511,222,0.494,223,0.777,224,0.511,225,0.987,226,0.804,227,0.511,228,0.511,229,0.511,230,0.564,231,0.494,232,0.546,233,0.511,234,0.955,235,0.546,236,0.494,237,0.402,238,0.329,239,0.511,240,0.952,241,1.253,242,1.234,243,0.494,244,0.494,245,0.987,246,0.511,247,0.528,248,0.583,249,0.511,250,0.511,251,0.398,252,0.546,253,0.511,254,0.546,255,0.511,256,0.564,257,0.546,258,0.494,259,0.528,260,0.494,261,0.511,262,0.564,263,0.511,264,0.831,265,0.511,266,0.564,267,0.546,268,0.583,269,0.583,270,0.005,271,0.007,272,0.005,360,5.463,376,0.967,377,0.368,378,1.362,379,1.47,392,0.778,393,1.053,394,1.803,395,1.519,402,1.745,404,2.699,405,1.745,422,1.861,431,1.69,434,1.178,445,1.468,454,1.49,455,2.206,459,1.622,460,1.677,479,0.937,529,2.797,540,4.119,543,1.264,587,1.594,618,1.593,664,3.56,687,4.677,712,2.532,721,2.948,722,1.931,723,1.833,724,1.468,725,1.931,726,2.251,748,1.833,759,4.119,763,1.594,764,1.529,768,1.666,786,1.666,794,3.156,840,3.437,871,1.929,872,1.929,914,2.044,963,1.833,1026,5.017,1045,1.931,1304,2.348,1337,2.797,1359,3.728,1442,2.176,1443,3.437,1479,3.204,1558,2.532,1565,2.797,1594,2.797,1793,3.728,1855,2.797,2057,2.797,2103,6.357,2104,4.711,2105,4.711,2106,4.119,2107,5.592,2108,5.592,2109,4.711,2110,4.711,2111,4.711,2112,4.711,2113,6.169,2114,6.169,2115,6.169,2116,4.711,2117,4.711,2118,6.169,2119,3.199,2120,4.711,2121,6.169,2122,4.711,2123,3.199,2124,4.711,2125,3.199,2126,3.199,2127,4.711,2128,4.711,2129,3.199,2130,3.199,2131,3.199,2132,3.199,2133,3.199,2134,3.199,2135,3.199,2136,3.199,2137,3.199,2138,4.711,2139,4.711,2140,3.199,2141,2.176,2142,3.199,2143,3.199,2144,3.199,2145,3.199,2146,3.199,2147,3.199,2148,3.199,2149,3.199]],["title/components/PersonalizationViewComponent.html",[0,0.006,243,0.632]],["body/components/PersonalizationViewComponent.html",[0,0.011,1,0.738,2,1.006,3,0.135,4,0.103,5,0.842,6,0.842,7,0.842,8,0.842,9,0.103,11,0.842,12,1.594,13,1.491,15,1.11,17,1.11,19,0.161,24,3.676,25,0.738,27,0.786,31,1.32,33,0.597,40,4.216,41,0.88,43,0.763,44,0.012,45,0.847,46,0.161,49,0.57,50,1.088,69,0.449,70,0.323,71,1.963,86,0.117,87,0.34,88,1.052,100,3.37,103,1.134,104,2.91,107,0.739,159,1.372,169,1.193,171,1.396,173,1.086,175,1.442,180,0.713,181,1.11,182,1.125,183,0.842,184,0.842,185,0.738,186,0.815,187,0.376,188,0.731,189,1.565,190,0.842,191,0.738,192,1.202,193,1.236,194,1.501,195,0.713,196,0.713,197,0.738,198,0.815,199,0.738,200,0.815,201,0.789,202,0.738,203,1.015,204,0.842,205,0.738,206,0.713,207,0.713,208,1.32,209,0.738,210,0.713,211,0.713,212,0.449,213,0.738,214,0.713,215,0.621,216,0.738,217,0.738,218,0.376,219,0.713,220,0.545,221,0.738,222,0.713,223,0.642,224,0.738,225,1.202,226,1.236,227,0.738,228,0.738,229,0.738,230,0.815,231,0.713,232,0.789,233,0.738,234,0.789,235,0.789,236,0.713,237,0.52,238,0.426,239,0.738,240,0.713,241,1.33,242,1.042,243,1.117,244,0.713,245,1.202,246,0.738,247,0.763,248,0.842,249,0.738,250,0.738,251,0.315,252,0.789,253,0.738,254,0.789,255,0.738,256,0.815,257,0.789,258,0.713,259,0.763,260,0.713,261,0.738,262,0.815,263,0.738,264,0.815,265,0.738,266,0.815,267,0.789,268,0.842,269,0.842,270,0.007,271,0.009,272,0.007,360,4.925,376,1.396,377,0.239,378,1.707,379,1.901,392,1.006,393,1.283,394,2.196,395,1.963,405,2.52,481,3.656,483,3.891,514,2.406,931,4.141,962,3.142,1877,5.324,1957,5.324,2103,5.731,2150,6.09,2151,7.243,2152,4.62]],["title/interfaces/PollenData.html",[573,0.569,1132,1.279]],["body/interfaces/PollenData.html",[3,0.105,4,0.105,9,0.105,19,0.164,20,0.683,44,0.013,46,0.276,62,0.985,86,0.212,107,0.629,127,1.189,129,1.878,187,0.633,188,0.727,212,0.507,215,0.48,218,0.645,220,0.615,237,0.527,238,0.543,251,0.392,270,0.007,271,0.009,272,0.007,368,2.251,377,0.244,378,1.04,381,1.622,382,2.553,385,2.378,411,1.75,417,1.518,434,1.735,436,1.735,487,1.677,516,2.816,524,2.992,558,2.251,573,1.147,575,1.47,578,2.278,631,2.218,735,1.735,761,1.929,769,2.347,808,3.069,835,2.001,951,2.078,955,1.929,957,2.62,1002,2.782,1042,1.518,1091,2.161,1125,2.352,1126,1.929,1127,1.929,1132,1.925,1133,1.569,1134,1.569,1179,2.272,1187,1.796,1211,1.86,1213,1.86,1215,2.525,1217,2.272,1220,1.929,1224,1.929,1227,2.882,1230,1.86,1237,2.688,1239,2.988,1241,2.988,1249,2.767,1266,1.86,1268,1.929,1269,2.251,1270,3.494,1271,4.183,1272,2.347,1273,2.347,1274,2.347,1275,2.347,1276,2.347,1277,2.347,1278,2.161,1279,2.161,1280,2.078,1281,2.453,1282,2.161,1283,2.251,1284,2.161,1285,3.156,1286,2.947,1287,2.453,1288,2.251,1289,2.347,1290,2.453,1291,2.453,1292,2.453,1293,2.001,1294,3.074,1295,3.487,1296,2.453,1297,2.161,1298,2.347,1299,2.161,1300,2.453,1301,2.453,1302,2.453,1303,2.453,1304,3.074,1305,2.123,1306,2.525,1307,2.161,1308,2.251,1309,2.251,1310,2.078,1311,2.001,1312,2.001,1313,2.078]],["title/components/PollenListElementComponent.html",[0,0.006,250,0.654]],["body/components/PollenListElementComponent.html",[0,0.011,1,0.713,2,0.984,3,0.132,4,0.099,5,0.815,6,0.815,7,0.815,8,0.815,9,0.099,11,0.815,12,1.592,13,1.489,15,1.086,17,1.086,19,0.156,24,4.623,27,0.769,31,1.303,33,0.865,41,0.923,44,0.012,45,0.889,46,0.208,49,0.418,50,0.951,60,1.346,62,0.823,69,0.329,70,0.312,86,0.113,87,0.329,103,1.125,107,0.608,112,1.351,159,1.357,169,1.154,173,1.05,174,1.489,177,1.538,180,0.69,181,1.086,182,1.352,183,0.815,184,0.815,185,0.713,186,0.789,187,0.364,188,0.727,189,1.561,190,0.815,191,0.713,192,0.789,193,1.017,194,1.493,195,0.69,196,0.69,197,0.713,198,0.789,199,0.713,200,0.789,201,0.763,202,0.713,203,0.999,204,0.815,205,0.713,206,0.69,207,0.69,208,1.303,209,0.713,210,0.69,211,0.69,212,0.439,213,0.713,214,0.69,215,0.608,216,0.713,217,0.713,218,0.364,219,0.69,220,0.533,221,0.713,222,0.69,223,0.621,224,0.713,225,1.182,226,1.017,227,0.713,228,0.713,229,0.713,230,0.789,231,0.69,232,0.763,233,0.713,234,0.763,235,0.763,236,0.69,237,0.509,238,0.417,239,0.713,240,0.69,241,0.951,242,0.857,243,0.69,244,0.69,245,1.182,246,0.713,247,0.738,248,0.815,249,0.713,250,1.141,251,0.434,252,1.459,253,0.713,254,1.271,255,0.713,256,0.789,257,0.763,258,0.69,259,0.738,260,0.69,261,0.713,262,0.789,263,0.713,264,0.789,265,0.713,266,0.789,267,0.763,268,0.815,269,0.815,270,0.006,271,0.008,272,0.006,377,0.231,379,1.859,389,2.629,392,0.984,393,1.262,398,2.194,410,2.16,423,3.163,426,1.972,428,3.202,429,2.847,434,2.194,454,1.19,455,1.351,456,2.272,457,2.051,458,2.847,459,1.539,460,2.121,469,2.438,519,3.039,522,3.806,523,3.039,538,2.328,552,2.531,553,2.438,871,1.83,872,1.83,876,5.208,2153,5.892,2154,5.431,2155,5.958,2156,5.958,2157,4.469,2158,4.469]],["title/interfaces/PollenResponse.html",[573,0.569,1233,2.474]],["body/interfaces/PollenResponse.html",[3,0.081,4,0.081,9,0.081,14,1.344,19,0.127,20,0.574,38,2.879,44,0.013,46,0.21,49,0.73,62,0.96,69,0.53,70,0.255,74,1.675,75,3.622,76,1.611,86,0.092,87,0.269,88,0.832,89,1.518,94,2.332,95,2.332,97,2.05,120,1.675,127,1.036,129,1.808,134,2.651,187,0.534,212,0.382,218,0.534,220,0.327,237,0.312,238,0.538,251,0.383,270,0.005,271,0.007,272,0.005,311,1.611,334,1.675,377,0.189,384,2.438,388,1.109,411,2.041,431,2.094,436,2.219,543,2.047,549,1.744,573,0.911,575,1.139,577,1.744,578,1.965,581,4.035,585,1.605,586,1.819,589,3.889,590,1.344,591,1.675,592,1.744,593,1.392,596,3.453,606,1.991,607,1.991,617,3.889,618,1.911,619,3.453,628,3.925,631,2.215,635,3.057,644,3.453,645,3.934,680,1.819,694,1.819,704,1.344,706,1.991,708,3.31,709,2.307,711,3.31,712,2.466,717,3.608,753,1.442,897,1.991,956,2.332,998,2.969,1002,1.976,1008,2.203,1015,4.182,1042,2.233,1046,2.969,1121,3.128,1122,2.332,1123,2.482,1124,2.482,1125,1.976,1126,2.122,1127,2.122,1128,2.203,1129,1.819,1130,2.203,1131,2.482,1132,2.31,1133,2.307,1134,1.726,1135,1.819,1136,2.482,1137,2.091,1138,2.482,1139,2.482,1140,2.482,1141,2.482,1142,2.482,1143,2.482,1144,2.482,1145,2.482,1146,4.711,1147,4.426,1148,2.332,1149,2.482,1150,2.482,1151,2.482,1152,2.482,1153,2.482,1154,2.482,1155,2.482,1156,2.482,1157,3.637,1158,2.482,1159,2.482,1160,2.482,1161,2.482,1162,2.482,1163,2.482,1164,2.332,1165,4.098,1166,2.482,1167,2.332,1168,2.482,1169,2.482,1170,2.482,1171,2.482,1172,2.482,1173,2.482,1174,2.482,1175,2.482,1176,2.482,1177,2.482,1178,2.482,1179,2.726,1180,2.482,1181,2.482,1182,2.482,1183,2.482,1184,2.482,1185,1.991,1186,2.482,1187,1.976,1188,2.482,1189,2.482,1190,2.482,1191,2.482,1192,2.482,1193,3.524,1194,2.482,1195,3.524,1196,2.482,1197,2.332,1198,2.482,1199,3.128,1200,2.482,1201,3.311,1202,2.482,1203,1.991,1204,2.482,1205,2.583,1206,2.482,1207,2.482,1208,3.524,1209,2.482,1210,3.524,1211,1.442,1212,2.827,1213,1.442,1214,3.524,1215,2.686,1216,2.482,1217,1.909,1218,2.482,1219,2.482,1220,1.495,1221,2.482,1222,2.482,1223,3.128,1224,1.495,1225,2.482,1226,2.482,1227,1.442,1228,2.482,1229,2.482,1230,1.442,1231,2.482,1232,2.482,1233,3.637,1234,2.482,1235,2.482,1236,2.482,1237,2.552,1238,2.482,1239,1.495,1240,2.482,1241,1.495,1242,2.482,1243,2.482,1244,2.482,1245,2.482,1246,4.461,1247,3.524,1248,2.482,1249,1.299,1250,2.482,1251,2.482]],["title/components/PollenTagElementComponent.html",[0,0.006,253,0.654]],["body/components/PollenTagElementComponent.html",[0,0.01,1,0.617,2,0.891,3,0.12,4,0.086,5,0.704,6,0.704,7,0.704,8,0.704,9,0.086,11,0.704,12,1.58,13,1.478,15,0.983,17,0.983,19,0.135,20,0.597,25,1.201,27,0.696,31,1.226,33,0.802,41,0.971,43,0.638,44,0.012,45,0.773,46,0.247,49,0.505,50,0.992,59,0.727,60,1.602,62,0.928,69,0.285,70,0.27,86,0.098,87,0.285,89,0.751,97,0.966,103,1.083,107,0.55,112,1.168,137,2.684,159,1.421,169,1.392,171,1.63,173,1.581,174,1.796,177,1.604,179,2.698,180,0.596,181,0.983,182,1.242,183,0.704,184,0.704,185,0.617,186,0.682,187,0.315,188,0.706,189,1.541,190,0.704,191,0.617,192,0.682,193,0.921,194,1.455,195,0.596,196,0.596,197,0.617,198,0.682,199,0.617,200,0.682,201,0.659,202,0.617,203,0.926,204,0.704,205,0.617,206,0.596,207,0.596,208,1.226,209,0.617,210,0.596,211,0.596,212,0.397,213,0.617,214,0.596,215,0.55,216,0.617,217,0.617,218,0.315,219,0.596,220,0.483,221,0.617,222,0.596,223,0.536,224,0.617,225,1.096,226,0.921,227,0.617,228,0.617,229,0.617,230,0.682,231,0.596,232,0.659,233,0.617,234,0.659,235,0.659,236,0.596,237,0.461,238,0.377,239,0.617,240,0.596,241,0.861,242,0.776,243,0.596,244,0.596,245,1.096,246,0.617,247,0.638,248,0.704,249,0.617,250,0.617,251,0.42,252,0.659,253,1.074,254,1.454,255,0.617,256,0.682,257,0.659,258,0.596,259,0.638,260,0.596,261,0.617,262,0.682,263,0.617,264,0.682,265,0.617,266,0.682,267,0.659,268,0.704,269,0.704,270,0.005,271,0.008,272,0.005,377,0.2,382,1.739,383,3.256,392,0.891,393,1.17,398,1.986,401,2.688,410,1.739,417,1.245,422,1.526,423,3.26,426,1.705,428,2.969,429,2.577,431,2.356,447,2.468,454,1.437,455,1.878,456,2.369,457,2.475,458,3.214,459,1.33,460,1.375,463,3.057,474,1.287,522,2.468,534,2.809,536,2.627,543,2.454,549,3.214,550,4.297,552,2.291,721,3.667,784,3.934,794,1.773,795,4.533,875,3.934,895,2.213,902,2.468,1022,4.06,1305,1.857,1306,2.544,1443,2.818,1450,4.268,1501,3.934,1584,3.97,1942,4.715,1965,3.057,2153,6.073,2154,5.598,2159,6.214,2160,6.214,2161,6.407,2162,3.863,2163,3.863,2164,3.863,2165,3.863,2166,5.393,2167,3.863,2168,3.863,2169,6.726,2170,3.863,2171,6.726,2172,3.863,2173,6.726,2174,6.214,2175,3.863,2176,3.863,2177,5.432,2178,3.863,2179,3.863,2180,3.863,2181,3.863,2182,5.432,2183,3.863,2184,4.715,2185,5.393,2186,3.863,2187,3.377]],["title/interfaces/PollenType.html",[573,0.569,587,2.043]],["body/interfaces/PollenType.html",[3,0.127,4,0.127,9,0.127,19,0.2,20,0.774,26,2.761,44,0.012,46,0.244,58,1.771,61,2.278,62,0.926,64,2.969,80,2.99,82,1.851,86,0.21,102,3.131,121,3.64,129,1.775,134,2.574,139,2.533,155,3.465,182,0.948,242,0.826,251,0.362,270,0.008,271,0.01,272,0.008,445,2.634,479,2.354,487,2.044,498,3.465,499,3.668,524,2.761,573,1.047,575,1.792,578,1.628,580,4.11,587,3.483,588,3.483,614,3.812,618,1.482,631,2.423,664,3.34,667,4.004,669,4.004,671,3.34,704,2.114,724,2.634,726,2.743,763,2.861,1212,3.131,1237,2.889,1270,2.533,1299,2.634,1395,3.465,1407,3.668,1796,3.668,1797,3.668,1920,4.187,2074,4.187,2141,3.904,2188,3.668,2189,4.543,2190,4.543,2191,4.543,2192,4.543,2193,4.543,2194,4.543,2195,4.543,2196,4.543,2197,4.543,2198,4.543,2199,4.187,2200,4.543,2201,4.543,2202,4.543,2203,4.543,2204,4.543,2205,4.187,2206,4.187,2207,4.753,2208,5.098,2209,5.098,2210,4.187]],["title/components/PollenflugDetailViewComponent.html",[0,0.006,244,0.632]],["body/components/PollenflugDetailViewComponent.html",[0,0.01,1,0.573,2,0.846,3,0.114,4,0.08,5,0.655,6,0.655,7,0.655,8,0.655,9,0.08,11,0.655,12,1.574,13,1.472,15,0.934,17,0.934,19,0.125,20,0.567,25,0.953,27,0.662,31,1.187,33,0.464,41,0.889,43,0.593,44,0.012,45,0.743,46,0.179,49,0.336,50,0.953,59,0.965,60,1.029,69,0.507,70,0.251,86,0.091,87,0.265,88,0.818,89,0.996,102,3.552,103,1.221,105,3.484,107,0.523,127,0.859,148,3.737,159,1.187,169,0.927,173,0.844,177,0.927,180,0.554,181,0.934,182,1.137,183,0.655,184,0.655,185,0.573,186,0.634,187,0.293,188,0.741,189,1.53,190,0.655,191,0.573,192,0.634,193,0.875,194,1.435,195,0.554,196,0.554,197,0.573,198,0.634,199,0.573,200,0.634,201,0.613,202,0.573,203,0.89,204,0.655,205,0.573,206,0.554,207,0.554,208,1.187,209,0.573,210,0.554,211,0.554,212,0.378,213,0.573,214,0.554,215,0.523,216,0.573,217,0.573,218,0.293,219,0.554,220,0.458,221,0.573,222,0.554,223,0.499,224,0.573,225,1.054,226,0.875,227,0.573,228,0.573,229,0.573,230,0.634,231,0.554,232,0.613,233,0.573,234,0.613,235,0.613,236,0.554,237,0.438,238,0.358,239,0.573,240,0.554,241,0.818,242,0.737,243,0.554,244,1.005,245,1.456,246,0.573,247,1.137,248,0.655,249,0.573,250,0.573,251,0.415,252,0.613,253,0.573,254,0.613,255,0.573,256,0.634,257,0.613,258,0.554,259,0.593,260,0.554,261,0.573,262,0.634,263,0.573,264,0.634,265,0.573,266,1.215,267,1.02,268,0.655,269,0.655,270,0.005,271,0.007,272,0.005,362,4.868,376,1.086,377,0.186,378,1.717,379,1.599,382,1.652,385,1.051,392,0.846,393,1.125,394,1.925,395,1.652,402,2.794,403,2.168,412,1.526,454,0.957,455,1.805,459,1.236,460,1.279,474,1.706,479,1.5,484,2.442,487,2.682,493,4.874,499,3.273,516,1.471,527,3.093,638,3.923,641,3.245,704,1.323,709,2.169,735,1.887,768,1.87,794,2.351,806,3.484,871,1.471,872,1.471,957,3.041,958,3.816,959,3.568,960,3.837,964,3.14,965,3.484,966,3.093,967,3.093,968,3.273,969,1.87,970,2.057,971,2.168,997,4.479,998,2.935,1040,2.62,1059,3.484,1068,4.812,1076,5.153,1077,3.737,1086,4.054,1087,4.479,1102,3.737,1112,3.484,1135,1.79,1407,3.273,1423,3.484,1696,4.479,1698,4.75,1704,3.273,1706,4.479,1722,4.479,1729,4.479,1759,4.479,1864,4.479,2000,4.479,2024,4.479,2031,4.479,2034,4.479,2037,4.479,2044,4.479,2211,5.222,2212,5.123,2213,5.123,2214,5.123,2215,4.479,2216,5.221,2217,3.592,2218,3.592,2219,3.592,2220,3.592,2221,3.14,2222,5.123,2223,4.479,2224,5.123,2225,5.123,2226,5.123,2227,4.479,2228,5.123,2229,5.123,2230,5.123,2231,5.123,2232,5.123,2233,5.123,2234,5.123,2235,6.512,2236,5.123,2237,5.123,2238,5.123,2239,5.123,2240,5.123,2241,5.123,2242,5.123,2243,5.123,2244,5.123,2245,5.123,2246,5.123,2247,5.123,2248,5.123,2249,5.123,2250,5.123,2251,5.123,2252,5.123,2253,5.123,2254,5.123,2255,5.123,2256,4.479,2257,5.123,2258,5.123,2259,5.123,2260,6.512,2261,5.123,2262,5.123,2263,5.123,2264,5.123,2265,5.123,2266,5.123,2267,5.123,2268,5.123,2269,5.123,2270,5.123,2271,5.123,2272,5.123,2273,5.123,2274,5.123,2275,5.123,2276,5.123,2277,5.123,2278,5.123]],["title/components/PollenflugSmallTileComponent.html",[0,0.006,246,0.654]],["body/components/PollenflugSmallTileComponent.html",[0,0.011,1,0.657,2,0.93,3,0.125,4,0.091,5,0.75,6,0.75,7,0.75,8,0.75,9,0.091,11,0.75,12,1.585,13,1.483,15,1.027,17,1.027,19,0.144,20,0.624,25,1.025,27,0.727,31,1.259,33,0.829,41,1.006,43,0.679,44,0.012,45,0.799,46,0.224,49,0.527,50,1.025,58,1.624,59,1.21,60,1.29,61,2.088,69,0.473,70,0.288,86,0.104,87,0.303,103,1.101,107,0.574,112,1.243,127,1.151,137,2.491,159,1.319,169,1.062,171,1.243,173,0.967,174,1.37,177,1.454,179,2.634,180,0.635,181,1.027,182,1.061,183,0.75,184,0.75,185,0.657,186,0.726,187,0.335,188,0.737,189,1.55,190,0.75,191,0.657,192,0.726,193,0.962,194,1.472,195,0.635,196,0.635,197,0.657,198,0.726,199,0.657,200,0.726,201,0.702,202,0.657,203,0.957,204,0.75,205,0.657,206,0.635,207,0.635,208,1.259,209,0.657,210,0.635,211,0.635,212,0.415,213,0.657,214,0.635,215,0.574,216,0.657,217,0.657,218,0.335,219,0.635,220,0.504,221,0.657,222,0.635,223,0.571,224,0.657,225,1.133,226,0.962,227,0.657,228,0.657,229,0.657,230,0.726,231,0.635,232,0.702,233,0.657,234,0.702,235,0.702,236,0.635,237,0.481,238,0.394,239,0.657,240,0.635,241,0.899,242,0.811,243,0.635,244,0.635,245,1.436,246,1.103,247,1.416,248,0.75,249,0.657,250,0.657,251,0.358,252,0.702,253,0.657,254,0.702,255,0.657,256,0.726,257,0.702,258,0.635,259,0.679,260,0.635,261,0.657,262,0.726,263,0.657,264,0.726,265,0.657,266,0.726,267,0.702,268,0.75,269,0.75,270,0.006,271,0.008,272,0.006,377,0.213,379,1.758,385,1.649,387,3.226,392,0.93,393,1.21,397,4.686,398,2.075,399,3.878,400,3.68,401,2.807,408,4.104,409,2.483,410,2.227,412,1.747,413,2.628,414,2.483,415,2.356,416,2.797,417,1.326,418,2.483,454,1.096,455,1.702,456,1.568,458,1.965,474,1.37,479,1.649,534,2.142,587,2.807,735,2.075,761,2.306,784,3,798,2.797,941,3.83,955,2.306,1132,2.156,1584,3.599,1589,3.596,1965,3.255,2161,3.596,2177,4.924,2182,4.924,2184,3.596,2187,4.924,2211,5.765,2215,4.924,2279,6.255,2280,3.596,2281,5.633,2282,5.633,2283,4.924,2284,6.424,2285,5.633,2286,5.616,2287,5.633,2288,5.633,2289,4.113,2290,4.113,2291,4.113,2292,4.113,2293,3.596,2294,4.113,2295,3.596]],["title/components/PollenflugTileViewComponent.html",[0,0.006,249,0.654]],["body/components/PollenflugTileViewComponent.html",[0,0.012,1,0.692,2,0.964,3,0.13,4,0.096,5,0.79,6,0.79,7,0.79,8,0.79,9,0.096,11,0.79,12,1.589,13,1.486,15,1.064,17,1.064,19,0.151,20,0.646,25,1.053,27,0.754,31,1.287,33,0.852,41,1.002,43,0.716,44,0.012,45,0.821,46,0.23,49,0.546,50,1.053,58,1.659,59,1.099,60,1.418,61,2.134,69,0.43,70,0.303,86,0.11,87,0.319,103,1.116,107,0.595,127,1.162,159,1.287,180,0.669,181,1.064,182,1.09,183,0.79,184,0.79,185,0.692,186,0.765,187,0.353,188,0.776,189,1.557,190,0.79,191,0.692,192,0.765,193,0.996,194,1.485,195,0.669,196,0.669,197,0.692,198,0.765,199,0.692,200,0.765,201,0.74,202,0.692,203,0.984,204,0.79,205,0.692,206,0.669,207,0.669,208,1.287,209,0.692,210,0.669,211,0.669,212,0.43,213,0.692,214,0.669,215,0.595,216,0.692,217,0.692,218,0.353,219,0.669,220,0.522,221,0.692,222,0.669,223,0.602,224,0.692,225,1.164,226,0.996,227,0.692,228,0.692,229,0.692,230,0.765,231,0.669,232,0.74,233,0.692,234,0.74,235,0.74,236,0.669,237,0.499,238,0.408,239,0.692,240,0.669,241,0.932,242,0.84,243,0.669,244,0.669,245,1.448,246,0.692,247,0.716,248,0.79,249,1.127,250,0.692,251,0.393,252,1.127,253,0.692,254,0.74,255,0.692,256,0.765,257,0.74,258,0.669,259,0.716,260,0.669,261,0.692,262,0.765,263,0.692,264,0.765,265,0.692,266,0.765,267,0.74,268,0.79,269,0.79,270,0.006,271,0.008,272,0.006,362,5.363,376,1.31,377,0.224,378,1.559,379,1.822,385,1.709,387,3.343,392,0.964,393,1.243,394,2.127,395,1.882,398,2.15,399,3.984,400,3.78,401,2.909,403,3.523,404,2.483,405,2.364,409,2.616,410,2.276,412,1.842,417,1.397,418,2.616,427,3.729,479,1.709,735,2.15,761,2.39,955,2.39,962,3.969,1026,4.258,1041,2.948,1132,2.204,2211,5.753,2283,5.103,2286,5.769,2293,3.789]],["title/components/ProgressChartElementComponent.html",[0,0.006,255,0.654]],["body/components/ProgressChartElementComponent.html",[0,0.01,1,0.569,2,0.841,3,0.113,4,0.079,5,0.649,6,0.649,7,0.649,8,0.649,9,0.079,11,0.649,12,1.573,13,1.471,15,0.928,17,0.928,19,0.124,27,0.658,31,1.183,33,0.768,41,0.886,44,0.012,45,0.634,46,0.208,49,0.333,50,0.813,59,1.119,60,1.593,69,0.263,70,0.249,86,0.09,87,0.263,103,1.058,107,0.519,112,2.272,129,1.576,137,2.233,159,1.301,171,2.272,173,1.197,174,2.643,175,1.112,177,1.897,179,2.802,180,0.786,181,0.928,182,1.214,183,0.649,184,0.649,185,0.569,186,0.628,187,0.29,188,0.694,189,1.528,190,0.649,191,0.569,192,0.628,193,0.869,194,1.432,195,0.55,196,0.55,197,0.569,198,0.628,199,0.569,200,0.628,201,0.608,202,0.569,203,0.886,204,0.649,205,0.569,206,0.55,207,0.55,208,1.183,209,0.569,210,0.55,211,0.55,212,0.375,213,0.569,214,0.55,215,0.519,216,0.569,217,0.569,218,0.29,219,0.55,220,0.456,221,0.569,222,0.55,223,0.495,224,0.569,225,1.049,226,0.869,227,0.569,228,0.569,229,0.569,230,0.628,231,0.55,232,0.608,233,0.569,234,0.608,235,0.608,236,0.55,237,0.435,238,0.356,239,0.569,240,0.55,241,0.813,242,0.733,243,0.55,244,0.55,245,1.049,246,0.569,247,0.588,248,0.649,249,0.569,250,0.569,251,0.264,252,0.608,253,0.569,254,0.608,255,1.036,256,1.37,257,1.427,258,0.55,259,0.588,260,0.55,261,0.569,262,0.628,263,0.569,264,1.145,265,0.569,266,0.628,267,0.608,268,0.649,269,0.649,270,0.005,271,0.007,272,0.005,377,0.184,379,1.589,392,0.841,393,1.119,398,1.876,410,2.212,422,2.012,423,3.033,426,1.572,428,2.841,429,2.434,453,3.916,454,0.949,455,1.077,459,1.226,460,1.268,462,2.276,469,1.943,471,4.145,474,1.186,479,1.043,521,3.463,522,2.276,523,2.422,534,3.574,538,3.574,550,2.276,559,4.855,563,5.816,564,4.998,624,2.04,749,2.819,788,5.207,789,5.361,808,2.012,871,1.458,872,1.458,880,3.463,881,2.819,904,4.03,905,3.376,1267,4.03,1395,3.074,1438,3.715,1610,5.483,1630,2.04,1665,3.405,1744,4.452,1745,4.452,1757,3.715,1792,2.819,1867,4.336,1903,5.114,1947,4.03,2296,6.241,2297,5.649,2298,5.093,2299,6.863,2300,5.945,2301,4.452,2302,3.562,2303,3.562,2304,5.197,2305,3.562,2306,5.945,2307,5.945,2308,5.945,2309,5.945,2310,5.945,2311,3.562,2312,6.425,2313,4.03,2314,4.452,2315,6.241,2316,6,2317,6.689,2318,4.452,2319,5.671,2320,4.452,2321,5.671,2322,7.561,2323,6.425,2324,6.425,2325,4.452,2326,5.671,2327,4.452,2328,4.452,2329,6.241,2330,3.114,2331,4.03,2332,4.452,2333,2.819]],["title/components/RegistrationViewComponent.html",[0,0.006,258,0.632]],["body/components/RegistrationViewComponent.html",[0,0.01,1,0.649,2,0.923,3,0.124,4,0.09,5,0.741,6,0.741,7,0.741,8,0.741,9,0.09,11,0.741,12,1.584,13,1.482,15,1.019,17,1.019,19,0.142,20,0.619,22,3.657,25,1.019,27,0.722,31,1.253,33,0.525,36,3.123,40,4.161,41,0.931,43,0.671,44,0.012,45,0.794,46,0.195,49,0.523,50,1.019,59,0.766,60,0.816,62,0.644,69,0.507,70,0.284,71,1.727,73,1.727,82,1.801,86,0.103,87,0.3,88,0.926,89,1.087,96,2.765,97,1.017,103,1.098,107,0.57,112,1.229,134,2.352,137,1.4,159,1.358,169,1.05,171,1.229,173,1.501,175,1.744,180,0.627,181,1.019,182,1.054,183,0.741,184,0.741,185,0.649,186,0.717,187,0.331,188,0.714,189,1.548,190,0.741,191,0.649,192,0.717,193,0.954,194,1.469,195,0.627,196,0.627,197,0.649,198,0.717,199,0.649,200,0.717,201,0.694,202,0.649,203,0.952,204,0.741,205,0.649,206,0.627,207,0.627,208,1.253,209,0.649,210,0.627,211,0.627,212,0.412,213,0.649,214,0.627,215,0.57,216,0.649,217,0.649,218,0.331,219,0.627,220,0.5,221,0.649,222,0.627,223,0.565,224,0.649,225,1.127,226,0.954,227,0.649,228,0.649,229,0.649,230,0.717,231,0.627,232,0.694,233,0.649,234,0.694,235,0.694,236,0.627,237,0.477,238,0.391,239,0.649,240,0.627,241,0.892,242,0.804,243,0.627,244,0.627,245,1.127,246,0.649,247,0.671,248,0.741,249,0.649,250,0.649,251,0.289,252,0.694,253,0.649,254,0.694,255,0.649,256,0.717,257,0.694,258,1.061,259,1.341,260,0.627,261,0.649,262,0.717,263,0.649,264,0.717,265,0.649,266,0.717,267,0.694,268,0.741,269,0.741,270,0.006,271,0.008,272,0.006,320,3.373,364,5.432,376,1.229,377,0.211,378,1.518,380,2.93,388,1.195,389,2.466,392,0.923,393,1.202,394,2.058,395,1.801,427,3.57,454,1.701,455,1.689,456,2.131,457,2.564,458,2.67,459,1.4,474,1.354,475,4.15,479,2.013,514,2.117,543,1.606,552,1.727,616,4.351,618,1.922,621,4.351,635,3.429,753,1.606,764,1.943,786,2.117,787,2.329,813,4.675,823,5.187,832,2.329,905,1.794,914,2.598,936,2.966,963,3.201,1022,2.454,1041,2.765,1109,2.765,1282,2.564,1584,2.598,1829,4.076,1830,4.076,1835,3.217,1836,5.893,1839,3.554,1840,4.422,1841,4.885,1842,4.422,1843,5.893,1844,3.217,1848,5.053,1850,3.554,1851,3.554,1852,3.554,1856,3.554,1861,4.422,1862,5.703,2334,6.51,2335,6.385,2336,6.875,2337,4.066,2338,4.066,2339,4.066,2340,4.066,2341,4.066,2342,4.066,2343,4.066,2344,5.588]],["title/modules/ScreensModule.html",[273,2.134,286,2.787]],["body/modules/ScreensModule.html",[3,0.126,4,0.126,9,0.126,44,0.013,69,0.631,70,0.398,71,2.418,84,3.636,86,0.144,87,0.419,103,0.819,107,0.581,180,0.878,207,1.259,210,1.259,231,1.259,232,0.972,242,0.819,260,1.259,270,0.008,271,0.01,272,0.008,273,2.964,275,3.26,276,3.436,277,5.106,278,3.871,279,3.871,280,3.636,285,5.212,286,5.888,287,4.925,288,5.212,289,4.728,290,3.636,291,3.104,293,4.728,295,4.728,297,4.504,300,4.152,301,4.504,304,4.976,306,6.079,307,4.976,313,5.502,314,3.636,315,3.636,331,4.976,333,5.502,336,4.152,337,6.836,339,4.152,341,4.152,343,4.152,413,3.636,449,3.871,2345,4.976,2346,4.976,2347,5.692,2348,5.692,2349,5.502,2350,5.692,2351,6.953]],["title/components/SettingsScreenComponent.html",[0,0.006,260,0.632]],["body/components/SettingsScreenComponent.html",[0,0.011,1,0.73,2,1.191,3,0.134,4,0.102,5,0.834,6,0.834,7,0.834,8,0.834,9,0.102,11,0.834,12,1.593,13,1.49,15,1.103,17,1.103,19,0.16,20,0.67,21,3.531,25,0.73,27,0.781,31,1.315,32,4.788,33,0.875,41,0.932,43,0.755,44,0.012,45,0.843,46,0.211,49,0.566,50,0.966,54,4.788,55,5.709,57,4.788,58,1.422,59,0.861,60,0.918,61,1.829,69,0.5,70,0.32,71,1.943,77,4.114,78,3.62,79,2.761,80,2.382,85,3.337,86,0.116,87,0.337,97,1.145,98,3.62,99,3.62,103,1.132,104,3.447,107,0.617,137,1.575,159,1.368,170,2.761,171,1.383,179,2.585,180,0.706,181,1.103,182,1.119,183,0.834,184,0.834,185,0.73,186,0.807,187,0.373,188,0.73,189,1.564,190,0.834,191,0.73,192,0.807,193,1.033,194,1.499,195,0.706,196,0.706,197,0.73,198,0.807,199,0.73,200,0.807,201,0.781,202,0.73,203,1.01,204,0.834,205,0.73,206,0.706,207,0.706,208,1.315,209,0.73,210,0.706,211,0.706,212,0.446,213,0.73,214,0.706,215,0.617,216,0.73,217,0.73,218,0.373,219,0.706,220,0.541,221,0.73,222,0.706,223,0.635,224,0.73,225,1.196,226,1.033,227,0.73,228,0.73,229,0.73,230,0.807,231,0.706,232,0.781,233,0.73,234,0.781,235,0.781,236,0.706,237,0.517,238,0.423,239,0.73,240,0.706,241,0.966,242,1.198,243,0.706,244,0.706,245,1.196,246,0.73,247,0.755,248,0.834,249,0.73,250,0.73,251,0.313,252,0.781,253,0.73,254,0.781,255,0.73,256,0.807,257,0.781,258,0.706,259,0.755,260,1.113,261,0.73,262,0.807,263,0.73,264,0.807,265,0.73,266,0.807,267,0.781,268,0.834,269,0.834,270,0.006,271,0.009,272,0.006,343,5.473,377,0.237,378,1.336,391,2.761,392,0.999,393,1.277,454,1.612,930,3.111,931,4.114,932,4.945,933,4.413,935,5.289,2096,3.999,2352,6.559,2353,4.574,2354,4.574]],["title/components/SimpleTileViewComponent.html",[0,0.006,261,0.654]],["body/components/SimpleTileViewComponent.html",[0,0.011,1,0.705,2,0.976,3,0.131,4,0.098,5,0.805,6,0.805,7,0.805,8,0.805,9,0.098,11,0.805,12,1.591,13,1.488,15,1.078,17,1.078,19,0.154,20,0.654,24,4.022,27,0.763,31,1.297,33,0.86,41,0.986,44,0.012,45,0.735,46,0.233,49,0.413,50,0.944,59,1.34,60,1.641,62,0.879,69,0.491,70,0.309,86,0.112,87,0.326,103,1.122,107,0.603,159,1.297,177,1.14,180,0.681,181,1.078,182,1.1,183,0.805,184,0.805,185,0.705,186,0.779,187,0.36,188,0.777,189,1.559,190,0.805,191,0.705,192,0.779,193,1.009,194,1.49,195,0.681,196,0.681,197,0.705,198,0.779,199,0.705,200,0.779,201,0.754,202,0.705,203,0.993,204,0.805,205,0.705,206,0.681,207,0.681,208,1.297,209,0.705,210,0.681,211,0.681,212,0.436,213,0.705,214,0.681,215,0.603,216,0.705,217,0.705,218,0.36,219,0.681,220,0.529,221,0.705,222,0.681,223,0.613,224,0.705,225,1.175,226,1.009,227,0.705,228,0.705,229,0.705,230,0.779,231,0.681,232,0.754,233,0.705,234,0.754,235,0.754,236,0.681,237,0.505,238,0.413,239,0.705,240,0.681,241,0.944,242,0.851,243,0.681,244,0.681,245,1.175,246,0.705,247,0.729,248,0.805,249,0.705,250,0.705,251,0.306,252,0.754,253,0.705,254,0.754,255,0.705,256,0.779,257,0.754,258,0.681,259,0.729,260,0.681,261,1.136,262,1.469,263,0.705,264,0.779,265,0.705,266,0.779,267,0.754,268,0.805,269,0.805,270,0.006,271,0.008,272,0.006,376,1.335,377,0.229,378,1.571,380,2.712,381,2.035,385,1.293,392,0.976,393,1.255,394,2.148,395,1.906,397,4.86,398,2.177,404,3.386,405,2.409,408,4.256,410,2.293,412,1.877,413,2.822,414,2.666,415,2.53,416,3.004,421,3.004,422,1.745,454,1.574,482,3.495,518,5.824,885,2.53,914,2.822,955,2.42,2355,6.814,2356,6.168]],["title/components/SliderElementComponent.html",[0,0.006,263,0.654]],["body/components/SliderElementComponent.html",[0,0.011,1,0.581,2,0.854,3,0.115,4,0.081,5,0.664,6,0.664,7,0.664,8,0.664,9,0.081,11,0.664,12,1.575,13,1.473,15,0.943,17,0.943,19,0.127,20,0.573,25,0.581,27,0.668,31,1.195,33,0.777,41,0.955,43,0.601,44,0.012,45,0.749,46,0.242,49,0.484,50,0.961,59,0.686,60,1.444,62,0.596,69,0.268,70,0.255,86,0.092,87,0.268,103,1.065,107,0.528,112,2.285,129,1.447,137,2.072,159,1.349,169,0.94,171,2.285,173,1.216,174,2.654,175,1.136,177,1.787,179,3.038,180,0.562,181,0.943,182,1.27,183,0.664,184,0.664,185,0.581,186,0.642,187,0.297,188,0.698,189,1.532,190,0.664,191,0.581,192,0.642,193,0.883,194,1.438,195,0.562,196,0.562,197,0.581,198,0.642,199,0.581,200,0.642,201,0.622,202,0.581,203,0.897,204,0.664,205,0.581,206,0.562,207,0.562,208,1.195,209,0.581,210,0.562,211,0.562,212,0.381,213,0.581,214,0.562,215,0.528,216,0.581,217,0.581,218,0.297,219,0.562,220,0.463,221,0.581,222,0.562,223,0.506,224,0.581,225,1.062,226,0.883,227,0.581,228,0.581,229,0.581,230,0.642,231,0.562,232,0.622,233,0.581,234,0.622,235,0.622,236,0.562,237,0.442,238,0.362,239,0.581,240,0.562,241,0.826,242,0.745,243,0.562,244,0.562,245,1.062,246,0.581,247,0.601,248,0.664,249,0.581,250,0.581,251,0.268,252,0.622,253,0.581,254,0.622,255,0.581,256,0.642,257,0.622,258,0.562,259,0.601,260,0.562,261,0.581,262,0.642,263,1.046,264,1.437,265,0.581,266,0.642,267,0.622,268,0.664,269,0.664,270,0.005,271,0.007,272,0.005,377,0.189,380,2.374,392,0.854,393,1.133,398,1.906,410,1.94,422,2.377,423,3.212,426,1.607,428,2.876,429,2.472,434,2.549,447,3.305,453,3.633,462,2.326,471,4.186,474,1.213,521,2.476,523,2.476,525,3.305,534,3.604,538,3.604,559,4.707,563,5.854,564,5.03,578,1.707,618,0.94,624,2.086,738,4.762,746,4.094,750,2.882,751,4.762,760,4.523,761,2.118,762,4.456,788,5.246,789,5.246,798,2.476,881,2.882,905,2.891,1056,4.523,1438,3.774,1867,3.774,1903,5.133,1947,4.094,2304,5.261,2312,6.467,2313,4.094,2314,4.523,2315,6.287,2316,6.051,2317,6.724,2318,4.523,2319,5.728,2320,4.523,2321,5.728,2322,7.57,2323,6.467,2324,6.467,2325,4.523,2326,5.728,2327,4.523,2328,4.523,2329,6.287,2330,3.183,2331,4.094,2332,4.523,2333,2.882,2357,6.609,2358,5.982,2359,5.174,2360,5.174,2361,6.018,2362,3.641,2363,5.174,2364,3.641,2365,5.174,2366,3.641]],["title/injectables/SpeechService.html",[585,1.092,2367,2.99]],["body/injectables/SpeechService.html",[3,0.126,4,0.126,9,0.126,14,2.092,19,0.198,25,0.907,27,0.897,33,0.969,41,1.009,43,0.938,44,0.012,45,0.707,46,0.198,49,0.731,50,1.248,58,1.632,62,0.864,69,0.419,70,0.397,86,0.144,87,0.419,89,1.105,97,1.421,117,3.461,270,0.008,271,0.01,272,0.008,298,4.723,377,0.36,388,1.672,431,2.538,474,2.716,585,2.081,590,2.558,593,2.166,618,1.467,712,2.022,762,5.546,901,4.723,966,4.717,967,4.717,1031,2.831,1305,2.391,2207,4.723,2367,5.066,2368,4.966,2369,6.686,2370,6.945,2371,7.815,2372,6.945,2373,7.815,2374,5.681,2375,5.681,2376,6.945,2377,6.945,2378,6.945,2379,5.681,2380,5.681,2381,6.072,2382,5.681,2383,5.681,2384,5.681,2385,5.681,2386,5.681,2387,5.681,2388,5.681,2389,5.681,2390,6.945,2391,5.681,2392,5.681,2393,5.681]],["title/injectables/TextService.html",[585,1.092,960,2.134]],["body/injectables/TextService.html",[3,0.067,4,0.067,9,0.067,14,1.106,19,0.105,24,4.572,25,1.112,27,0.581,33,0.696,41,0.925,43,1.15,44,0.013,45,0.942,46,0.243,49,0.733,59,0.566,60,0.903,62,0.937,69,0.397,70,0.21,86,0.076,87,0.221,97,1.743,127,1.198,129,0.663,153,3.61,187,0.487,188,0.573,212,0.441,218,0.366,238,0.418,251,0.279,270,0.004,271,0.006,272,0.004,377,0.233,384,2.473,385,1.875,388,1.438,410,2.524,411,1.976,431,2.468,436,1.656,474,2.792,487,2.129,493,1.813,498,2.714,503,2.626,506,5.229,516,1.841,543,2.128,549,2.148,585,1.593,590,1.656,593,1.145,638,3.335,641,4.012,680,2.24,704,2.639,710,5.143,712,2.48,721,4.052,753,3.288,795,6.137,895,1.72,908,3.557,924,3.93,957,1.276,960,2.341,966,2.714,967,2.714,998,1.72,1031,1.497,1042,2.524,1059,2.042,1068,3.442,1086,2.377,1102,2.191,1112,2.042,1117,5.068,1125,1.714,1132,2.328,1133,2.386,1135,2.24,1157,1.813,1205,2.24,1211,1.776,1213,1.776,1217,1.656,1249,1.6,1297,2.063,1305,1.548,1306,2.206,1312,1.91,1423,3.057,1501,6.087,1633,5.514,1634,2.626,1635,2.377,1636,2.626,1637,2.626,1638,2.626,1652,3.93,1653,4.733,1656,3.557,1657,3.557,1658,3.93,1698,4.672,1699,5.599,1704,4.092,1743,3.93,1763,2.377,1885,5.876,1887,2.626,2012,3.93,2016,6.091,2019,2.626,2227,4.71,2256,4.71,2369,3.557,2394,2.626,2395,4.495,2396,4.495,2397,4.495,2398,4.495,2399,4.495,2400,4.495,2401,4.495,2402,3.003,2403,4.495,2404,3.003,2405,6.844,2406,4.495,2407,3.003,2408,4.495,2409,3.003,2410,4.495,2411,3.003,2412,4.495,2413,3.003,2414,4.495,2415,3.003,2416,4.495,2417,3.003,2418,8.58,2419,3.003,2420,3.003,2421,3.003,2422,2.377,2423,3.003,2424,5.981,2425,3.003,2426,3.003,2427,2.377,2428,3.003,2429,3.003,2430,2.377,2431,3.003,2432,2.377,2433,3.003,2434,3.003,2435,4.495,2436,6.404,2437,4.495,2438,4.495,2439,5.388,2440,3.003,2441,3.003,2442,4.495,2443,3.003,2444,3.003,2445,3.003,2446,3.003,2447,3.003,2448,3.003,2449,3.003,2450,2.626,2451,3.003,2452,3.003,2453,3.003,2454,5.388,2455,5.981,2456,3.003,2457,3.003,2458,3.003,2459,3.003,2460,4.495,2461,5.388,2462,5.388,2463,3.003,2464,3.003,2465,3.003,2466,5.388,2467,5.388,2468,3.003,2469,3.003,2470,3.003,2471,3.003,2472,3.003,2473,3.003,2474,3.003,2475,3.003,2476,3.003,2477,3.003,2478,5.981,2479,3.003,2480,3.003,2481,3.003,2482,3.003,2483,3.003,2484,3.003,2485,3.003,2486,3.003,2487,3.003,2488,3.003,2489,3.003,2490,3.003,2491,4.495,2492,5.388,2493,3.003,2494,4.495,2495,4.495,2496,3.003,2497,3.003,2498,3.003,2499,3.003,2500,3.003,2501,3.003,2502,3.003,2503,3.003]],["title/interfaces/Tile.html",[188,0.367,573,0.569]],["body/interfaces/Tile.html",[3,0.104,4,0.104,9,0.104,19,0.163,20,0.679,44,0.013,46,0.286,62,0.974,86,0.211,107,0.699,127,1.216,129,1.866,187,0.632,188,0.743,212,0.505,215,0.477,218,0.644,220,0.613,237,0.524,238,0.542,251,0.355,270,0.007,271,0.009,272,0.007,368,2.233,377,0.242,378,1.355,381,2.113,382,2.5,385,2.348,411,1.741,417,1.507,434,1.721,436,1.721,487,1.664,516,3.175,524,2.984,558,2.233,573,1.146,575,1.459,578,2.275,631,2.212,735,2.26,761,2.513,769,3.058,808,2.984,835,1.986,951,2.062,955,2.513,957,3.091,1002,2.774,1042,1.507,1091,2.145,1125,2.34,1126,1.914,1127,1.914,1132,1.459,1133,1.557,1134,1.557,1179,2.26,1187,1.782,1211,1.846,1213,1.846,1215,2.513,1217,2.26,1220,1.914,1224,1.914,1227,2.873,1230,1.846,1237,1.721,1239,1.914,1241,1.914,1249,2.761,1266,2.424,1268,1.914,1269,2.233,1270,3.422,1271,4.116,1272,2.329,1273,2.329,1274,2.329,1275,2.329,1276,2.329,1277,2.329,1278,2.145,1279,2.145,1280,2.062,1281,2.434,1282,2.145,1283,2.233,1284,2.145,1285,3.627,1286,3.476,1287,2.434,1288,2.233,1289,2.329,1290,3.196,1291,3.196,1292,3.196,1293,2.607,1294,3.058,1295,3.476,1296,2.434,1297,2.145,1298,2.329,1299,2.145,1300,2.434,1301,2.434,1302,2.434,1303,2.434,1304,2.329,1305,2.113,1306,2.513,1307,2.145,1308,2.233,1309,2.233,1310,2.062,1311,1.986,1312,1.986,1313,2.062]],["title/interfaces/TileArrays.html",[573,0.569,1284,1.881]],["body/interfaces/TileArrays.html",[3,0.106,4,0.106,9,0.106,19,0.166,20,0.687,44,0.013,46,0.272,62,0.968,86,0.212,107,0.775,127,1.182,129,1.869,187,0.635,188,0.758,212,0.509,215,0.485,218,0.646,220,0.618,237,0.53,238,0.545,251,0.404,270,0.007,271,0.009,272,0.007,368,3.5,377,0.246,378,1.05,381,1.637,382,2.512,385,2.356,411,1.76,417,1.533,434,1.751,436,1.751,487,1.693,516,2.829,524,3.001,558,2.272,573,1.156,575,1.484,578,2.251,631,1.817,735,1.751,761,1.947,769,2.37,808,3.001,835,2.02,951,2.098,955,1.947,957,2.637,1002,2.792,1042,1.533,1091,2.182,1125,2.366,1126,1.947,1127,1.947,1132,1.484,1133,1.584,1134,1.584,1179,2.286,1187,1.813,1211,1.878,1213,1.878,1215,2.541,1217,2.286,1220,1.947,1224,1.947,1227,2.893,1230,1.878,1237,1.751,1239,1.947,1241,1.947,1249,2.774,1266,1.878,1268,1.947,1269,2.272,1270,3.438,1271,4.133,1272,2.37,1273,2.37,1274,2.37,1275,2.37,1276,2.37,1277,2.37,1278,2.182,1279,2.182,1280,2.098,1281,3.232,1282,2.848,1283,2.965,1284,2.848,1285,3.17,1286,2.965,1287,2.476,1288,2.272,1289,2.37,1290,2.476,1291,2.476,1292,2.476,1293,2.02,1294,3.093,1295,3.5,1296,2.476,1297,2.182,1298,2.37,1299,2.182,1300,2.476,1301,2.476,1302,2.476,1303,2.476,1304,2.37,1305,2.137,1306,2.541,1307,2.182,1308,2.272,1309,2.272,1310,2.098,1311,2.02,1312,2.02,1313,2.098]],["title/injectables/TileService.html",[585,1.092,2504,2.99]],["body/injectables/TileService.html",[0,0.01,2,0.817,3,0.076,4,0.076,9,0.076,14,1.261,19,0.173,25,0.79,27,0.639,33,0.442,36,2.884,41,0.639,43,0.817,44,0.013,45,0.616,46,0.275,49,0.463,50,1.125,62,0.57,69,0.47,70,0.239,73,1.455,82,2.054,86,0.087,87,0.252,88,0.78,89,1.532,97,1.989,101,2.498,103,1.07,104,3.044,107,0.854,127,1.198,129,0.756,153,2.067,177,1.501,188,0.774,212,0.519,215,0.741,218,0.279,220,0.65,237,0.293,238,0.445,251,0.418,270,0.005,271,0.007,272,0.005,368,1.636,377,0.177,384,1.596,385,1.702,388,1.363,411,2.06,479,1.979,516,3.444,543,1.353,549,1.636,573,0.688,575,1.545,585,1.697,590,2.346,593,1.306,631,2.219,704,3.02,708,3.044,709,2.419,710,4.641,712,2.932,721,3.229,748,1.962,753,2.993,761,2.027,808,2.297,834,3.367,895,2.836,954,5.298,955,2.381,957,2.47,1031,1.707,1042,2.342,1129,2.467,1132,2.458,1133,2.419,1134,2.419,1135,1.707,1217,1.261,1249,2.648,1268,1.402,1270,2.185,1278,3.232,1280,1.511,1282,2.272,1283,2.366,1284,2.668,1285,3.413,1286,2.366,1305,1.704,1306,2.381,1319,4.647,1333,4.939,1346,5.042,1364,2.71,1454,4.328,1468,2.994,1479,4.332,1688,5.083,1741,4.332,2199,2.498,2216,5.083,2331,2.71,2422,4.602,2427,4.602,2430,4.602,2432,4.602,2504,3.611,2505,2.994,2506,5.083,2507,4.328,2508,3.424,2509,4.951,2510,3.424,2511,4.951,2512,4.951,2513,4.951,2514,4.951,2515,3.424,2516,3.424,2517,3.424,2518,3.424,2519,3.424,2520,3.424,2521,3.424,2522,3.424,2523,6.759,2524,3.424,2525,4.951,2526,4.951,2527,6.371,2528,4.951,2529,4.951,2530,7.264,2531,3.424,2532,3.424,2533,3.424,2534,4.951,2535,3.424,2536,6.371,2537,3.424,2538,3.424,2539,5.815,2540,3.424,2541,3.424,2542,4.951,2543,3.424,2544,5.815,2545,3.424,2546,3.424,2547,3.424,2548,3.424,2549,3.424,2550,5.815,2551,3.424,2552,3.424,2553,3.424,2554,3.424,2555,3.424,2556,3.424,2557,3.424,2558,4.951,2559,3.424,2560,3.424,2561,3.424,2562,4.951,2563,4.951,2564,4.951,2565,5.815,2566,5.908,2567,6.759,2568,3.424,2569,4.951,2570,4.951,2571,3.424,2572,3.424,2573,3.424,2574,3.424,2575,3.424,2576,3.424,2577,3.424,2578,3.424,2579,3.424,2580,3.424,2581,3.424,2582,3.424,2583,3.424]],["title/components/TtsPlayerElementComponent.html",[0,0.006,265,0.654]],["body/components/TtsPlayerElementComponent.html",[0,0.011,1,0.512,2,1.02,3,0.105,4,0.071,5,0.584,6,0.584,7,0.584,8,0.584,9,0.071,11,0.584,12,1.564,13,1.464,15,0.86,17,0.86,19,0.112,20,0.522,25,0.986,26,2.719,27,0.609,31,1.126,33,0.414,36,2.819,41,0.943,43,0.779,44,0.013,45,0.768,46,0.23,49,0.578,50,1.051,58,1.109,59,0.889,60,0.947,61,1.866,62,0.369,69,0.485,70,0.224,73,1.362,80,4.287,82,1.034,86,0.081,87,0.236,88,0.73,89,0.623,103,1.024,107,0.481,112,1.692,117,1.598,126,2.18,127,0.461,137,1.104,159,1.432,169,0.828,171,2.081,173,1.618,174,2.37,175,1.001,176,2.211,177,1.777,178,3.394,179,1.799,180,0.495,181,0.86,182,1.175,183,0.584,184,0.584,185,0.512,186,0.566,187,0.261,188,0.678,189,1.511,190,0.584,191,0.512,192,0.566,193,1.124,194,1.401,195,0.495,196,0.495,197,0.512,198,0.566,199,0.512,200,0.566,201,0.547,202,0.512,203,0.835,204,0.584,205,0.512,206,0.495,207,0.495,208,1.126,209,0.512,210,0.495,211,0.495,212,0.348,213,0.512,214,0.495,215,0.481,216,0.512,217,0.512,218,0.261,219,0.495,220,0.422,221,0.512,222,0.495,223,0.445,224,0.512,225,0.988,226,1.054,227,0.512,228,0.512,229,0.512,230,0.566,231,0.495,232,0.547,233,0.512,234,0.547,235,0.547,236,0.495,237,0.403,238,0.33,239,0.512,240,0.495,241,0.753,242,0.679,243,0.495,244,0.495,245,0.988,246,0.512,247,0.529,248,0.584,249,0.512,250,0.512,251,0.244,252,0.547,253,0.512,254,0.547,255,0.512,256,0.566,257,0.547,258,0.495,259,0.529,260,0.495,261,0.512,262,0.566,263,0.512,264,0.566,265,0.986,266,1.434,267,1.433,268,0.584,269,0.584,270,0.005,271,0.007,272,0.005,365,3.734,377,0.166,379,1.473,388,1.198,389,2.082,390,2.848,392,0.779,393,1.054,398,1.738,410,1.521,422,1.864,423,3.167,426,1.415,428,2.675,429,2.255,443,3.734,447,2.048,454,0.854,455,1.692,469,1.749,471,2.048,474,2.057,479,1.808,519,2.18,530,2.048,534,2.457,535,2.048,536,2.18,537,4.084,538,1.67,552,1.362,553,2.574,564,2.18,566,7.169,709,2.37,735,1.738,748,1.836,761,2.528,762,3.209,763,1.598,764,1.532,771,2.803,773,3.015,786,1.67,794,1.471,800,3.015,856,3.015,878,2.537,901,3.209,902,2.048,905,2.082,951,2.082,958,3.577,968,4.842,1266,2.211,1305,1.104,1438,2.339,1442,2.18,1665,1.836,1829,3.442,1882,2.803,1890,2.339,1899,2.339,1903,2.048,1921,4.125,1949,3.734,2069,4.125,2093,2.803,2094,2.803,2098,2.803,2106,4.125,2295,4.125,2301,2.803,2313,2.537,2333,2.537,2367,5.672,2369,4.887,2381,4.125,2584,6.516,2585,5.898,2586,4.719,2587,4.719,2588,4.719,2589,6.884,2590,4.719,2591,6.175,2592,6.175,2593,4.719,2594,4.125,2595,4.719,2596,3.206,2597,3.206,2598,4.719,2599,3.206,2600,3.206,2601,5.599,2602,3.206,2603,3.206,2604,3.206,2605,3.206,2606,3.206,2607,3.206,2608,3.206,2609,4.125,2610,5.599,2611,3.206,2612,3.206,2613,4.719,2614,3.206,2615,4.125,2616,3.206,2617,4.719,2618,4.719,2619,3.206,2620,3.206,2621,8.201,2622,3.206,2623,4.719,2624,3.206,2625,4.719,2626,3.206,2627,3.206,2628,4.719,2629,3.206,2630,3.206,2631,4.719,2632,3.206,2633,3.206,2634,4.719,2635,3.206,2636,3.206,2637,4.719,2638,3.206,2639,3.206,2640,4.719,2641,3.206,2642,4.719,2643,3.206,2644,3.206,2645,4.719,2646,3.206,2647,3.206,2648,4.719,2649,3.206,2650,3.206,2651,3.206,2652,3.206,2653,3.206,2654,3.206,2655,3.206,2656,3.206,2657,3.206,2658,3.206,2659,3.206,2660,3.206,2661,3.206,2662,3.206,2663,3.206,2664,3.206,2665,3.206,2666,3.206,2667,3.206,2668,3.206,2669,3.206,2670,3.206,2671,3.206]],["title/modules/UiElementsModule.html",[273,2.134,287,2.474]],["body/modules/UiElementsModule.html",[3,0.108,4,0.108,9,0.108,44,0.013,69,0.624,70,0.341,86,0.123,87,0.359,180,0.753,191,1.334,192,0.861,193,1.263,197,1.334,198,0.861,199,1.334,200,0.861,201,1.077,224,1.334,225,1.234,226,1.263,227,1.334,228,1.334,229,1.334,230,0.861,250,1.334,251,0.327,252,1.077,253,1.334,254,1.077,255,1.334,256,0.861,257,1.077,263,1.334,264,0.861,265,1.334,266,0.861,267,1.077,270,0.007,271,0.009,272,0.007,273,2.54,275,2.794,276,2.944,277,4.756,278,3.317,279,3.317,280,4.469,287,5.282,289,4.291,290,3.116,291,2.66,293,3.317,295,4.291,300,3.558,415,2.794,416,5.681,423,2.072,425,3.86,449,3.317,729,3.86,832,2.794,1876,4.756,1970,3.86,2154,4.603,2297,3.86,2349,4.993,2358,3.86,2585,3.86,2672,4.264,2673,4.264,2674,4.264,2675,4.878,2676,5.516]],["title/interfaces/UserContext.html",[26,1.619,573,0.569]],["body/interfaces/UserContext.html",[3,0.123,4,0.123,9,0.123,19,0.194,20,0.758,26,2.932,44,0.012,46,0.283,58,1.966,61,2.244,62,0.917,64,3.293,80,2.891,82,2.207,86,0.208,102,3.027,121,4.147,129,1.758,134,2.522,139,2.449,155,4.133,182,0.916,241,0.886,242,0.799,251,0.412,270,0.008,271,0.01,272,0.008,377,0.287,382,1.789,445,2.547,479,2.374,487,1.976,498,3.35,499,3.546,524,2.704,573,1.031,575,1.732,578,1.942,580,4.05,587,2.766,588,3.412,614,3.734,618,1.433,631,2.27,664,3.805,667,4.561,669,4.561,671,3.805,704,2.044,724,2.547,726,2.652,763,2.766,1212,3.027,1237,2.044,1270,2.449,1299,2.547,1395,3.35,1407,3.546,1796,3.546,1797,3.546,1920,4.049,2074,4.049,2141,3.774,2188,3.546,2189,4.392,2190,4.392,2191,4.392,2192,4.392,2193,4.392,2194,4.392,2195,4.392,2196,4.392,2197,4.392,2198,4.392,2199,4.049,2200,4.392,2201,4.392,2202,4.392,2203,4.392,2204,4.392,2205,4.049,2206,4.049,2207,4.656,2208,4.994,2209,4.994,2210,4.049,2677,5.551]],["title/injectables/UserContextAPIService.html",[585,1.092,594,2.618]],["body/injectables/UserContextAPIService.html",[3,0.066,4,0.066,9,0.066,14,1.092,19,0.104,22,2.55,25,1.165,26,2.982,27,0.575,33,0.383,38,3.196,41,0.96,43,1.205,44,0.013,45,0.908,46,0.26,49,0.756,58,1.851,59,0.558,62,0.968,64,1.892,69,0.469,70,0.207,74,1.361,75,3.888,76,1.308,81,1.79,82,2.704,86,0.075,87,0.219,88,0.675,89,1.468,97,1.971,121,2.784,124,3.028,127,0.641,129,1.576,139,1.308,223,0.412,251,0.308,270,0.004,271,0.006,272,0.004,311,1.308,320,2.688,334,2.043,377,0.154,384,2.156,388,1.271,392,0.735,431,2.513,445,1.361,479,2.387,490,3.404,573,0.743,574,1.894,576,5.135,577,1.417,578,1.516,579,2.016,580,3.982,581,3.954,582,3.248,583,5.061,584,1.894,585,1.583,586,1.478,587,1.478,588,3.855,589,2.219,590,1.64,591,2.043,592,2.127,593,1.131,594,2.844,595,2.163,596,3.638,597,2.163,598,2.163,599,2.163,600,2.163,601,2.163,602,2.163,603,2.163,604,2.163,605,2.163,606,1.617,607,1.617,608,2.163,609,2.163,610,2.163,611,2.163,612,2.163,613,2.163,614,2.428,615,3.248,616,4.669,617,4.004,618,2.048,619,3.638,620,2.163,621,4.489,622,3.028,623,3.797,624,4.26,625,2.844,626,3.416,627,2.163,628,1.617,629,4.964,630,2.163,631,1.304,632,2.163,633,2.163,634,2.163,635,3.062,636,3.797,637,4.273,638,3.483,639,4.273,640,3.587,641,2.962,642,3.797,643,3.797,644,3.334,645,3.954,646,3.248,647,4.887,648,4.879,649,4.879,650,4.879,651,4.335,652,2.163,653,2.163,654,2.163,655,2.163,656,2.163,657,4.853,658,3.248,659,2.163,660,2.163,661,3.797,662,3.248,663,3.248,664,3.196,665,2.163,666,3.248,667,3.062,668,3.248,669,3.062,670,3.248,671,2.555,672,3.248,673,1.894,674,2.163,675,3.9,676,2.163,677,2.163,678,3.248,679,3.028,680,2.219,681,3.248,682,3.248,683,5.424,684,2.163,685,2.844,686,3.248,687,3.028,688,3.248,689,3.248,690,2.163,691,3.248,692,3.248,693,2.163,694,2.219,695,2.163,696,1.894,697,3.248,698,2.163,699,2.163,700,2.163,701,2.163,702,2.163,703,3.248,704,1.64,705,4.335,706,1.617,707,1.894,708,2.127,709,1.483,710,1.894,711,1.417,712,1.056,713,2.163,714,3.416,715,2.163,716,2.163,717,1.544,718,2.163,719,2.163,720,2.163,721,2.555,722,1.79,723,1.698,724,1.361,725,1.79,726,1.417,727,1.894,1031,1.478,1034,2.346,1036,2.592,2678,4.452,2679,4.452,2680,4.452,2681,4.452,2682,4.452,2683,4.452,2684,4.452,2685,2.965,2686,2.965,2687,2.965,2688,2.965,2689,2.965,2690,2.965,2691,2.965,2692,2.965,2693,2.965]],["title/interfaces/UserContextResponse.html",[573,0.569,714,2.618]],["body/interfaces/UserContextResponse.html",[3,0.073,4,0.073,9,0.073,14,1.217,19,0.115,20,0.534,22,2.763,26,2.838,38,2.723,44,0.013,46,0.262,49,0.714,58,1.898,59,0.622,62,0.955,64,2.05,69,0.491,70,0.231,74,1.516,75,3.762,76,1.458,81,1.995,82,2.586,86,0.084,87,0.244,88,0.753,89,1.504,97,2.007,121,3.623,127,0.476,129,1.626,139,1.458,223,0.459,251,0.36,270,0.005,271,0.007,272,0.005,311,1.458,320,1.995,334,1.516,377,0.171,384,2.02,388,1.032,392,0.546,431,2.27,445,1.516,479,2.332,490,3.589,573,0.791,574,2.111,575,1.031,576,2.247,577,1.579,578,1.777,579,2.247,580,3.795,581,4.046,582,3.519,583,5.241,584,2.111,585,1.518,586,1.647,587,1.647,588,3.321,589,1.647,590,1.217,591,1.516,592,1.579,593,1.26,594,2.111,595,2.41,596,3.743,597,2.41,598,2.41,599,2.41,600,2.41,601,2.41,602,2.41,603,2.41,604,2.41,605,2.41,606,1.802,607,1.802,608,2.41,609,2.41,610,2.41,611,2.41,612,2.41,613,2.41,614,1.802,615,2.41,616,4.669,617,4.067,618,2.084,619,3.743,620,2.41,621,4.2,622,3.281,623,4.003,624,4.372,625,3.082,626,3.64,627,2.41,628,1.802,629,4.26,630,2.41,631,1.951,632,2.41,633,2.41,634,2.41,635,3.17,636,4.003,637,4.445,638,3.623,639,4.445,640,3.782,641,3.122,642,4.003,643,4.003,644,3.467,645,4.024,646,2.41,647,4.998,648,5.075,649,5.075,650,5.075,651,4.57,652,2.41,653,2.41,654,2.41,655,2.41,656,2.41,657,4.26,658,2.41,659,2.41,660,2.41,661,4.003,662,2.41,663,2.41,664,3.589,665,2.41,666,3.519,667,3.985,668,3.519,669,3.985,670,3.519,671,3.325,672,3.519,673,2.111,674,2.41,675,4.156,676,2.41,677,2.41,678,3.519,679,3.281,680,2.404,681,2.41,682,2.41,683,5.075,684,2.41,685,3.082,686,3.519,687,3.281,688,2.41,689,2.41,690,2.41,691,2.41,692,2.41,693,2.41,694,2.404,695,2.41,696,2.111,697,2.41,698,2.41,699,2.41,700,2.41,701,2.41,702,2.41,703,2.41,704,1.217,705,2.41,706,1.802,707,2.111,708,2.305,709,1.607,710,2.111,711,1.579,712,1.176,713,2.41,714,4.003,715,2.41,716,2.41,717,1.721,718,2.41,719,2.41,720,2.41,721,2.723,722,1.995,723,1.893,724,1.516,725,1.995,726,1.579,727,2.111]],["title/interfaces/UserIdentifikation.html",[573,0.569,588,2.043]],["body/interfaces/UserIdentifikation.html",[3,0.126,4,0.126,9,0.126,19,0.198,20,0.768,26,2.742,44,0.012,46,0.242,58,1.762,61,2.266,62,0.923,64,2.949,80,2.956,82,1.83,86,0.209,102,3.096,121,3.615,129,1.769,134,2.557,139,2.505,155,4.19,182,0.937,242,0.817,251,0.359,270,0.008,271,0.01,272,0.008,377,0.294,445,2.604,479,2.44,487,2.021,498,3.426,499,3.626,524,2.742,573,1.041,575,1.771,578,1.969,580,4.503,587,2.829,588,3.737,614,4.09,618,1.465,631,2.44,664,3.317,667,3.976,669,3.976,671,3.317,704,2.09,724,2.604,726,2.712,763,2.829,1212,3.096,1237,2.09,1270,3.063,1299,2.604,1395,3.426,1407,3.626,1796,3.626,1797,3.626,1920,4.14,2074,4.14,2141,3.86,2188,3.626,2189,4.491,2190,4.491,2191,4.491,2192,4.491,2193,4.491,2194,4.491,2195,4.491,2196,4.491,2197,4.491,2198,4.491,2199,4.14,2200,4.491,2201,4.491,2202,4.491,2203,4.491,2204,5.493,2205,5.063,2206,4.14,2207,4.72,2208,5.063,2209,5.063,2210,4.14]],["title/modules/ViewsModule.html",[273,2.134,288,2.618]],["body/modules/ViewsModule.html",[3,0.142,4,0.091,9,0.091,44,0.013,69,0.634,70,0.285,71,1.732,86,0.103,87,0.3,103,1.169,107,0.416,180,0.629,185,1.19,186,0.719,187,0.456,188,0.75,195,1.254,196,0.629,202,1.19,203,0.834,205,1.19,206,1.15,209,1.297,211,1.254,212,0.413,213,1.19,214,1.254,215,0.571,216,1.19,217,1.19,218,0.332,219,1.254,220,0.501,221,1.19,222,1.254,223,0.566,233,1.19,234,0.696,235,0.956,236,1.254,237,0.478,238,0.481,239,1.297,240,1.254,241,0.894,242,0.806,243,1.15,244,1.254,245,1.128,246,1.297,247,0.924,249,1.19,258,1.254,259,0.673,261,1.19,262,0.719,270,0.006,271,0.008,272,0.006,273,2.123,275,2.335,276,2.461,277,4.348,278,2.772,279,2.772,280,4.085,287,4.499,288,5.606,289,3.807,290,2.605,291,2.224,293,3.807,295,3.807,300,2.974,301,3.226,313,4.43,314,2.605,315,2.605,333,4.43,345,2.974,346,6.706,348,3.577,350,3.807,352,3.577,354,3.807,356,2.974,358,3.807,360,3.807,362,3.807,364,2.974,375,3.226,413,2.605,449,2.772,831,3.226,832,2.335,950,3.226,1316,2.772,1569,3.226,1596,3.226,1979,3.226,2279,3.226,2349,4.43,2356,3.226,2676,4.894,2694,3.564,2695,3.564,2696,3.564,2697,4.077,2698,4.077,2699,4.077,2700,5.599,2701,5.599,2702,5.599]],["title/injectables/WeatherAPIService.html",[585,1.092,1137,2.348]],["body/injectables/WeatherAPIService.html",[3,0.077,4,0.077,9,0.077,14,1.271,19,0.12,25,0.795,27,0.643,33,0.445,38,3.375,41,0.912,43,0.822,44,0.013,45,0.619,46,0.174,49,0.756,62,0.936,69,0.52,70,0.241,74,1.583,75,3.811,76,1.522,86,0.087,87,0.254,88,0.786,89,1.499,94,2.204,95,2.204,97,2.033,120,1.583,127,1.135,129,1.771,134,2.601,187,0.521,212,0.367,218,0.521,220,0.309,237,0.295,238,0.546,251,0.366,270,0.005,271,0.007,272,0.005,311,1.522,334,2.284,377,0.179,384,2.402,388,1.368,411,2.065,431,2.441,436,2.151,543,1.966,549,1.648,573,0.888,577,1.648,578,1.813,581,3.967,585,1.703,586,1.719,589,3.998,590,1.833,591,2.284,592,2.378,593,1.315,596,3.378,606,1.882,607,1.882,617,3.841,618,1.879,619,3.378,628,3.852,631,1.984,635,2.991,644,3.378,645,3.89,680,1.719,694,1.719,704,1.271,706,1.882,708,3.239,709,2.258,711,3.239,712,2.413,717,3.53,753,1.363,897,1.882,956,2.204,998,2.851,1002,1.898,1008,2.082,1015,4.092,1031,1.719,1034,2.73,1042,2.277,1046,2.851,1121,3.005,1122,4.651,1123,2.346,1124,2.346,1125,1.898,1126,2.038,1127,2.038,1128,2.082,1129,1.719,1130,2.082,1131,2.346,1132,2.326,1133,2.352,1134,1.945,1135,1.719,1136,3.385,1137,2.851,1138,2.346,1139,2.346,1140,2.346,1141,2.346,1142,2.346,1143,2.346,1144,2.346,1145,2.346,1146,5.242,1147,4.924,1148,4.084,1149,2.346,1150,2.346,1151,2.346,1152,2.346,1153,2.346,1154,4.347,1155,2.346,1156,2.346,1157,3.525,1158,2.346,1159,2.346,1160,4.347,1161,2.346,1162,2.346,1163,2.346,1164,4.084,1165,3.971,1166,2.346,1167,2.204,1168,2.346,1169,2.346,1170,2.346,1171,2.346,1172,2.346,1173,2.346,1174,2.346,1175,2.346,1176,2.346,1177,2.346,1178,3.385,1179,2.875,1180,3.971,1181,2.346,1182,2.346,1183,2.346,1184,2.346,1185,1.882,1186,2.346,1187,1.898,1188,2.346,1189,2.346,1190,2.346,1191,2.346,1192,2.346,1193,3.385,1194,2.346,1195,3.385,1196,2.346,1197,2.204,1198,2.346,1199,3.005,1200,2.346,1201,3.18,1202,2.346,1203,1.882,1204,2.346,1205,2.481,1206,2.346,1207,2.346,1208,3.385,1209,2.346,1210,3.385,1211,1.363,1212,2.715,1213,1.363,1214,3.385,1215,2.618,1216,2.346,1217,1.833,1218,2.346,1219,2.346,1220,1.413,1221,2.346,1222,2.346,1223,3.005,1224,1.413,1225,2.346,1226,2.346,1227,1.363,1228,2.346,1229,2.346,1230,1.363,1231,2.346,1232,2.346,1233,3.005,1234,2.346,1235,2.346,1236,2.346,1237,1.833,1238,2.346,1239,1.413,1240,2.346,1241,1.413,1242,2.346,1243,2.346,1244,2.346,1245,2.346,1246,2.346,1247,3.385,1248,2.346,1249,1.228,1250,2.346,1251,2.346,2703,4.978,2704,3.45,2705,3.45,2706,3.45,2707,3.45,2708,3.45,2709,3.45,2710,3.45]],["title/interfaces/WeatherData.html",[385,1.2,573,0.569]],["body/interfaces/WeatherData.html",[3,0.107,4,0.107,9,0.107,44,0.013,46,0.243,62,0.97,86,0.212,107,0.639,127,1.193,129,1.872,187,0.637,188,0.73,212,0.513,215,0.492,218,0.649,220,0.623,237,0.535,238,0.557,251,0.36,270,0.007,271,0.009,272,0.007,368,2.306,377,0.25,378,1.066,381,1.662,382,2.522,385,2.389,411,1.778,417,1.556,434,1.778,436,1.778,487,1.718,516,3.016,524,3.015,558,2.306,573,1.159,575,1.506,578,2.259,631,1.835,704,1.778,735,1.778,761,1.976,769,2.406,808,3.015,835,2.051,951,2.13,955,1.976,957,2.663,1002,2.809,1042,1.556,1091,2.215,1125,2.39,1126,1.976,1127,1.976,1132,1.506,1133,1.608,1134,1.608,1179,2.308,1187,1.84,1211,1.906,1213,1.906,1215,2.566,1217,2.308,1220,1.976,1224,1.976,1227,2.909,1230,1.906,1237,1.778,1239,1.976,1241,1.976,1249,2.785,1266,1.906,1268,1.976,1269,2.306,1270,3.452,1271,4.148,1272,2.406,1273,2.406,1274,2.406,1275,2.406,1276,2.406,1277,2.406,1278,2.215,1279,2.215,1280,2.13,1281,2.514,1282,2.215,1283,2.306,1284,2.215,1285,3.194,1286,2.995,1287,2.514,1288,2.306,1289,2.406,1290,2.514,1291,2.514,1292,2.514,1293,2.051,1294,3.123,1295,3.52,1296,2.514,1297,2.215,1298,2.406,1299,2.215,1300,2.514,1301,2.514,1302,2.514,1303,2.514,1304,2.406,1305,2.158,1306,2.566,1307,2.215,1308,2.306,1309,2.306,1310,2.13,1311,2.051,1312,2.051,1313,2.13,1319,3.521,2711,4.827,2712,4.827,2713,3.82]],["title/injectables/WeatherDataService.html",[585,1.092,959,2.043]],["body/injectables/WeatherDataService.html",[3,0.075,4,0.168,9,0.075,14,1.245,19,0.118,25,0.54,27,0.633,33,0.437,36,2.962,41,0.991,43,0.558,44,0.013,45,0.42,46,0.118,49,0.753,50,1.12,69,0.517,70,0.236,73,1.436,75,3.218,76,1.492,82,1.09,86,0.086,87,0.249,88,0.77,89,1.638,97,1.966,107,0.686,127,1.209,154,3.335,155,2.961,188,0.627,212,0.496,215,0.77,220,0.567,237,0.493,238,0.49,251,0.375,270,0.007,271,0.007,272,0.005,377,0.175,385,0.99,388,1.722,389,2.164,411,1.907,417,2.389,431,2.56,442,4.288,479,1.69,516,3.182,526,4.568,585,1.687,590,1.806,591,2.251,592,2.344,593,1.289,618,2.006,704,1.806,708,1.615,709,2.713,711,2.344,737,2.04,753,2.77,828,2.466,844,3.578,855,2.299,917,2.299,941,4.572,951,2.547,959,2.444,969,4.048,993,2.955,1031,1.685,1042,1.861,1045,4.743,1046,2.809,1047,5.321,1129,1.685,1132,2.189,1133,2.24,1134,1.923,1135,1.685,1137,4.144,1157,3.484,1179,2.476,1187,1.289,1203,3.667,1249,1.746,1278,1.551,1283,2.344,1293,3.149,1294,3.693,1297,1.551,1310,1.492,1345,5.725,1364,2.675,1693,2.955,1880,5.536,1945,4.288,2205,3.578,2221,2.955,2504,5.116,2506,2.955,2507,4.288,2713,3.881,2714,2.955,2715,6.332,2716,6.332,2717,6.332,2718,6.332,2719,6.332,2720,6.724,2721,6.332,2722,6.724,2723,3.38,2724,3.38,2725,3.38,2726,8.438,2727,7.772,2728,3.38,2729,3.38,2730,4.905,2731,3.38,2732,3.38,2733,4.905,2734,3.38,2735,3.38,2736,5.772,2737,5.772,2738,3.38,2739,3.38,2740,4.905,2741,4.905,2742,4.905,2743,4.905,2744,3.38,2745,3.38,2746,7.411,2747,7.411,2748,5.772,2749,3.38,2750,3.38,2751,3.38,2752,3.38,2753,3.38,2754,3.38,2755,3.38,2756,3.38,2757,3.38,2758,3.38,2759,6.724,2760,3.38,2761,3.38,2762,3.38,2763,3.38,2764,3.38,2765,3.38,2766,3.38,2767,3.38,2768,3.38,2769,3.38,2770,5.772,2771,3.38,2772,3.38,2773,3.38,2774,3.38,2775,6.332,2776,3.38,2777,3.38,2778,3.38,2779,3.38,2780,3.38,2781,3.38,2782,3.38,2783,3.38,2784,3.38,2785,4.905,2786,3.38,2787,4.905,2788,4.905,2789,3.38,2790,3.38,2791,3.38,2792,3.38,2793,3.38,2794,3.38,2795,3.38,2796,3.38,2797,3.38,2798,4.905,2799,4.905,2800,3.38,2801,3.38,2802,3.38,2803,4.905,2804,3.38,2805,4.905,2806,3.38,2807,4.905,2808,3.38,2809,6.332,2810,3.38,2811,4.905,2812,3.38,2813,4.905,2814,3.38,2815,3.38,2816,3.38,2817,3.38,2818,3.38,2819,3.38,2820,3.38,2821,3.38,2822,3.38,2823,3.38,2824,3.38,2825,3.38,2826,3.38,2827,3.38,2828,3.38,2829,3.38,2830,3.38,2831,3.38,2832,3.38,2833,3.38,2834,3.38,2835,3.38,2836,3.38,2837,3.38]],["title/interfaces/WeatherForecastData.html",[573,0.569,1042,1.321]],["body/interfaces/WeatherForecastData.html",[3,0.105,4,0.105,9,0.105,19,0.165,20,0.685,44,0.013,46,0.272,62,0.985,86,0.212,107,0.631,127,1.189,129,1.868,187,0.634,188,0.727,212,0.559,215,0.482,218,0.646,220,0.616,237,0.528,238,0.562,251,0.357,270,0.007,271,0.009,272,0.007,368,2.259,377,0.245,378,1.044,381,1.628,382,2.555,385,2.38,411,1.754,417,1.524,434,1.742,436,1.742,487,1.683,516,2.821,524,2.995,558,2.259,573,1.148,575,1.476,578,2.28,631,1.81,735,1.742,761,1.936,769,2.357,808,2.995,835,2.009,951,2.087,955,1.936,957,2.627,1002,2.786,1042,1.993,1091,2.17,1125,2.966,1126,2.992,1127,2.992,1132,1.476,1133,1.575,1134,1.575,1179,2.278,1187,1.803,1211,1.868,1213,1.868,1215,2.532,1217,2.278,1220,1.936,1224,1.936,1227,2.887,1230,1.868,1237,1.742,1239,1.936,1241,1.936,1249,2.77,1266,1.868,1268,1.936,1269,2.259,1270,3.498,1271,4.187,1272,2.357,1273,2.357,1274,2.357,1275,2.357,1276,2.357,1277,2.357,1278,2.17,1279,2.17,1280,2.087,1281,2.462,1282,2.17,1283,2.259,1284,2.17,1285,3.162,1286,2.955,1287,2.462,1288,2.259,1289,2.357,1290,2.462,1291,2.462,1292,2.462,1293,2.009,1294,3.434,1295,3.492,1296,2.462,1297,2.17,1298,2.357,1299,2.17,1300,2.462,1301,2.462,1302,2.462,1303,2.462,1304,2.357,1305,2.129,1306,2.532,1307,2.17,1308,2.259,1309,2.259,1310,2.087,1311,2.009,1312,2.009,1313,2.087]],["title/interfaces/WeatherHistoryByDayData.html",[573,0.569,1307,1.881]],["body/interfaces/WeatherHistoryByDayData.html",[3,0.106,4,0.106,9,0.106,19,0.167,20,0.691,44,0.013,46,0.266,62,0.969,86,0.212,107,0.637,127,1.183,129,1.89,187,0.636,188,0.729,212,0.511,215,0.489,218,0.648,220,0.621,237,0.533,238,0.546,251,0.359,270,0.007,271,0.009,272,0.007,368,2.292,378,1.059,381,1.651,382,2.518,385,2.387,411,1.77,417,1.546,434,1.766,436,1.766,487,1.707,516,2.841,524,3.009,558,2.292,573,1.15,575,1.497,578,2.256,631,1.827,735,1.766,761,1.964,769,2.39,808,3.009,835,2.038,951,2.116,955,1.964,957,2.652,1002,2.802,1042,1.546,1091,2.201,1125,2.38,1126,1.964,1127,1.964,1132,1.497,1133,1.597,1134,1.597,1179,2.299,1187,1.829,1211,1.894,1213,1.894,1215,2.556,1217,2.299,1220,1.964,1224,1.964,1227,2.902,1230,1.894,1237,1.766,1239,1.964,1241,1.964,1249,2.78,1266,1.894,1268,1.964,1269,2.292,1270,3.446,1271,4.199,1272,2.39,1273,2.39,1274,2.39,1275,2.39,1276,2.39,1277,2.39,1278,2.201,1279,2.201,1280,2.116,1281,2.498,1282,2.201,1283,2.292,1284,2.201,1285,3.184,1286,2.982,1287,2.498,1288,2.292,1289,2.39,1290,2.498,1291,2.498,1292,2.498,1293,2.038,1294,3.11,1295,3.511,1296,2.498,1297,2.201,1298,2.39,1299,2.201,1300,2.498,1301,2.498,1302,2.498,1303,2.498,1304,2.39,1305,2.149,1306,2.556,1307,2.864,1308,3.511,1309,3.511,1310,2.116,1311,2.038,1312,2.038,1313,2.116]],["title/interfaces/WeatherHistoryData.html",[573,0.569,1134,1.365]],["body/interfaces/WeatherHistoryData.html",[3,0.106,4,0.106,9,0.106,19,0.167,20,0.689,44,0.013,46,0.256,62,0.969,86,0.212,107,0.635,127,1.191,129,1.87,187,0.647,188,0.729,212,0.51,215,0.487,218,0.656,220,0.656,237,0.532,238,0.545,251,0.359,270,0.007,271,0.009,272,0.007,368,2.281,377,0.247,378,1.054,381,1.643,382,2.561,385,2.384,411,2.081,417,1.539,434,1.758,436,1.758,487,1.699,516,2.834,524,3.005,558,2.281,573,1.15,575,1.49,578,2.285,631,1.822,735,1.758,761,1.954,769,2.379,808,3.081,835,2.028,951,2.106,955,1.954,957,2.643,1002,2.9,1042,1.539,1091,2.19,1125,2.372,1126,1.954,1127,1.954,1132,1.49,1133,1.59,1134,2.072,1179,2.292,1187,2.797,1211,1.885,1213,1.885,1215,2.548,1217,2.292,1220,1.954,1224,1.954,1227,3.005,1230,1.885,1237,1.758,1239,1.954,1241,1.954,1249,2.868,1266,1.885,1268,1.954,1269,2.281,1270,3.505,1271,4.195,1272,2.379,1273,2.379,1274,2.379,1275,2.379,1276,2.379,1277,2.379,1278,2.19,1279,2.19,1280,2.106,1281,2.486,1282,2.19,1283,2.281,1284,2.19,1285,3.176,1286,2.973,1287,2.486,1288,2.281,1289,2.379,1290,2.486,1291,2.486,1292,2.486,1293,2.028,1294,3.101,1295,3.505,1296,2.486,1297,2.19,1298,2.379,1299,2.19,1300,2.486,1301,2.486,1302,2.486,1303,2.486,1304,2.379,1305,2.142,1306,2.548,1307,2.19,1308,2.281,1309,2.281,1310,2.106,1311,2.028,1312,2.028,1313,2.106]],["title/coverage.html",[2838,4.912]],["body/coverage.html",[0,0.012,1,0.513,3,0.105,9,0.071,10,2.807,26,1.268,36,1.315,44,0.013,46,0.112,77,2.184,79,1.938,82,1.992,103,1.119,177,2.227,185,0.513,187,0.385,188,0.737,191,0.513,193,1.055,195,0.495,197,0.513,199,0.513,201,0.806,202,0.513,203,0.704,205,0.513,206,0.495,207,0.495,209,0.513,210,0.495,211,0.495,212,0.237,213,0.513,214,0.495,216,0.513,217,0.513,219,0.495,221,0.513,222,0.495,224,0.513,226,1.055,227,0.513,228,0.513,229,0.513,231,0.495,233,0.513,235,0.806,236,0.495,238,0.432,239,0.513,240,0.495,242,0.68,243,0.495,244,0.495,246,0.513,247,0.78,249,0.513,250,0.513,251,0.166,252,0.806,253,0.513,254,0.806,255,0.513,257,0.806,258,0.495,260,0.495,261,0.513,263,0.513,265,0.513,267,0.806,270,0.005,271,0.007,272,0.005,311,2.085,336,2.342,339,2.342,341,2.342,343,2.342,345,2.342,348,3.58,350,3.213,352,3.018,354,3.213,356,2.342,358,3.213,360,3.213,362,3.213,364,2.342,374,2.807,375,2.541,376,2.506,385,0.94,411,0.911,414,1.938,415,1.839,423,3.304,424,2.807,425,2.541,426,3.432,432,1.938,444,2.052,473,2.807,573,1.148,574,2.052,576,4.203,577,3.673,585,2.048,587,1.6,588,1.6,594,2.052,618,0.829,714,2.052,727,2.052,728,2.807,729,2.541,763,3.282,764,1.534,802,4.088,825,1.839,826,1.938,827,3.018,880,4.842,896,2.342,897,3.371,905,3.039,929,2.807,930,4.203,949,2.807,950,2.541,954,2.342,959,1.6,960,1.672,969,1.672,999,2.807,1005,2.342,1006,2.342,1007,6.245,1039,3.738,1042,1.035,1121,1.938,1122,4.208,1128,1.938,1129,1.6,1130,1.938,1132,1.002,1133,1.07,1134,1.07,1137,1.839,1199,1.938,1223,1.938,1233,1.938,1268,1.315,1269,3.623,1279,1.474,1280,1.417,1284,1.474,1307,1.474,1314,3.446,1333,2.184,1363,4.088,1444,4.435,1460,2.541,1546,2.541,1595,2.807,1596,2.541,1600,2.807,1602,3.738,1664,2.541,1687,3.738,1757,5.194,1773,2.541,1774,4.89,1775,4.89,1796,2.052,1797,2.052,1823,2.541,1825,2.541,1826,2.541,1827,2.541,1828,2.807,1875,4.088,1876,3.811,1969,2.807,1970,2.541,1975,2.807,1978,2.807,1979,2.541,1989,3.738,2075,7.55,2103,3.738,2153,3.738,2154,3.446,2188,4.208,2211,4.088,2279,2.541,2280,2.807,2296,2.807,2297,2.541,2334,2.807,2352,2.807,2355,2.807,2356,2.541,2357,2.807,2358,2.541,2367,2.342,2368,2.807,2394,2.807,2504,2.342,2505,2.807,2584,2.807,2585,2.541,2714,2.807,2838,2.807,2839,3.211,2840,3.211,2841,3.211,2842,6.888,2843,5.604,2844,6.888,2845,6.387,2846,7.306,2847,3.211,2848,3.211,2849,3.738,2850,4.724,2851,3.738,2852,3.211,2853,6.18,2854,2.807,2855,3.211,2856,6.387,2857,7.306,2858,3.211,2859,3.211,2860,3.211,2861,3.211,2862,6.021,2863,6.18,2864,4.724,2865,2.541,2866,3.211,2867,4.899,2868,5.604,2869,6.18,2870,2.807,2871,3.211,2872,4.724,2873,4.724,2874,4.724,2875,3.211,2876,3.211,2877,5.604,2878,3.211,2879,7.484,2880,2.807,2881,8.607,2882,2.807,2883,2.807,2884,2.807,2885,2.807,2886,2.807,2887,2.807,2888,2.807,2889,2.807,2890,2.807,2891,6.888,2892,2.807,2893,2.807,2894,2.807,2895,2.807,2896,2.807,2897,2.807,2898,2.807,2899,2.807,2900,2.807,2901,2.807,2902,2.807,2903,2.807,2904,2.807,2905,2.807,2906,2.807,2907,2.807,2908,2.807,2909,2.807,2910,2.807,2911,2.807,2912,2.807,2913,4.724,2914,3.211,2915,2.807,2916,2.807,2917,3.211,2918,3.211,2919,4.724,2920,3.211,2921,4.13,2922,4.724,2923,3.211,2924,3.211,2925,3.211,2926,3.211,2927,3.211,2928,3.211,2929,3.211,2930,3.211,2931,2.807,2932,2.807,2933,3.211,2934,3.211]],["title/dependencies.html",[276,2.98,2935,3.41]],["body/dependencies.html",[44,0.012,70,0.449,71,2.73,76,2.835,270,0.009,271,0.011,272,0.009,276,3.878,297,5.915,298,5.083,309,5.617,310,4.687,314,4.105,315,4.105,449,4.369,832,3.68,1316,4.369,1569,5.084,1948,5.617,2936,8.562,2937,6.425,2938,7.474,2939,6.425,2940,6.425,2941,6.425,2942,6.425,2943,6.425,2944,6.425,2945,6.425,2946,6.425,2947,6.425,2948,6.425]],["title/miscellaneous/enumerations.html",[2949,2.488,2950,4.315]],["body/miscellaneous/enumerations.html",[19,0.215,44,0.01,46,0.215,64,3.099,103,1.118,132,2.945,139,2.719,187,0.502,188,0.733,212,0.454,215,0.629,218,0.594,247,1.018,270,0.009,271,0.01,272,0.009,352,4.66,376,2.427,381,2.122,408,4.66,414,3.72,415,3.53,417,1.987,423,2.618,426,3.218,445,2.828,524,3.068,525,3.937,526,4.877,527,3.72,528,5.387,531,5.387,558,2.945,724,2.828,763,3.071,951,2.719,957,3.099,1203,3.361,1205,3.071,1217,2.27,1269,2.945,1277,3.071,1278,2.828,1279,2.828,1280,2.719,1285,2.828,1286,3.485,1288,2.945,1289,3.071,1310,3.218,1311,2.618,1312,2.618,1313,2.719,1314,5.32,1352,5.772,1355,6.376,1390,4.877,2141,4.191,2188,4.963,2206,5.32,2207,4.96,2208,5.32,2949,4.495,2950,5.387,2951,6.163,2952,7.769,2953,6.376,2954,6.376]],["title/index.html",[19,0.119,843,2.488,2955,3.41]],["body/index.html",[0,0.011,4,0.14,13,1.074,44,0.01,45,0.783,143,4.278,154,4.278,238,0.44,270,0.009,271,0.01,272,0.009,291,3.431,441,5.5,579,4.278,590,2.886,618,1.624,711,3.528,945,4.589,1345,4.978,1457,5.5,1704,4.019,1859,5.5,1860,5.5,2405,5.5,2594,5.5,2713,4.978,2956,6.291,2957,7.383,2958,6.85,2959,7.836,2960,6.291,2961,6.291,2962,7.836,2963,7.204,2964,5.5,2965,6.291,2966,6.291,2967,6.291,2968,5.5,2969,6.291,2970,6.291,2971,7.836,2972,6.291,2973,8.241,2974,6.291,2975,6.291,2976,6.291,2977,6.291,2978,6.291,2979,5.5,2980,7.836,2981,6.291,2982,4.978,2983,6.291,2984,6.291]],["title/modules.html",[275,3.219]],["body/modules.html",[44,0.011,270,0.009,271,0.011,272,0.009,274,4.841,275,3.802,285,4.24,286,4.513,287,4.006,288,4.24,298,5.591,1318,5.252,1892,7.188,2985,8.222,2986,8.355,2987,6.637]],["title/overview.html",[2982,4.446]],["body/overview.html",[1,1.247,2,0.735,44,0.013,180,0.686,185,1.068,191,1.247,195,1.205,197,1.247,199,1.247,202,1.068,205,1.068,206,1.032,207,1.032,209,1.247,210,1.032,211,1.205,213,1.068,214,1.205,216,1.068,217,1.068,219,1.205,221,1.068,222,1.205,224,1.247,227,1.247,228,1.247,229,1.247,231,1.032,233,1.068,236,1.205,239,1.247,240,1.205,243,1.032,244,1.205,246,1.247,249,1.068,250,1.247,253,1.247,255,1.247,258,1.205,260,1.032,261,1.068,263,1.247,265,1.247,270,0.006,271,0.008,272,0.006,273,2.317,274,6.047,275,2.549,276,2.686,277,3.026,278,3.026,279,3.026,280,2.843,281,3.89,282,3.89,283,3.89,284,3.89,285,4.559,286,5.735,287,5.263,288,5.621,289,4.039,290,2.843,291,2.427,334,2.042,575,1.389,895,2.549,1031,2.218,2345,3.89,2346,3.89,2672,3.89,2673,3.89,2674,3.89,2694,3.89,2695,3.89,2696,3.89,2849,3.521,2851,3.521,2854,3.89,2865,3.521,2982,3.521]],["title/routes.html",[334,2.578]],["body/routes.html",[44,0.011,270,0.01,271,0.011,272,0.01,334,3.128]],["title/miscellaneous/variables.html",[2949,2.488,2988,4.315]],["body/miscellaneous/variables.html",[19,0.135,26,0.978,44,0.013,46,0.298,59,1.602,60,1.709,61,1.775,62,0.623,66,3.783,77,2.638,79,2.341,82,1.25,103,0.356,107,0.253,112,1.445,117,1.933,121,1.29,127,0.997,143,1.684,175,1.492,176,2.46,177,2.103,178,1.014,179,2.482,187,0.647,188,0.582,196,0.382,203,0.369,212,0.399,218,0.647,220,0.222,223,0.816,237,0.212,238,0.541,241,0.763,251,0.28,259,0.893,270,0.004,271,0.006,272,0.004,291,3.397,311,2.387,384,1.541,387,1.419,411,2.197,436,2.853,479,1.584,527,1.495,543,2.136,549,3.701,580,1.351,588,1.234,614,2.115,618,2.051,631,2.268,664,1.184,667,1.419,669,1.419,671,1.184,711,1.184,721,1.184,724,1.137,726,1.184,763,1.234,825,2.222,843,1.807,880,3.993,895,2.222,896,1.807,897,2.607,905,3.284,954,2.829,986,2.165,1002,2.374,1003,3.069,1004,3.069,1005,2.829,1006,2.829,1007,1.807,1042,0.798,1125,0.944,1126,1.014,1127,1.014,1128,2.341,1129,2.382,1130,2.341,1132,1.944,1133,2.074,1134,0.825,1147,2.478,1179,1.992,1187,0.944,1197,2.478,1205,1.234,1211,3.059,1212,1.351,1213,3.059,1215,3.254,1217,2.853,1220,3.171,1224,2.215,1227,2.136,1230,2.136,1237,2.482,1239,2.759,1241,2.759,1266,2.46,1267,3.783,1279,2.193,1280,2.387,1285,2.858,1298,3.86,1305,2.385,1306,1.957,1307,1.137,1308,1.184,1309,1.184,1311,1.052,1312,1.052,1313,1.093,1363,1.807,1444,3.783,1460,3.783,1501,1.807,1545,3.069,1546,3.783,1547,2.165,1548,2.165,1602,1.96,1630,3.729,1633,6.129,1656,1.96,1657,3.069,1664,3.069,1665,3.729,1666,3.487,1667,1.807,1668,1.807,1669,2.829,1670,1.96,1671,1.96,1672,3.069,1673,1.96,1674,1.96,1675,3.783,1676,2.165,1677,4.728,1678,2.165,1679,2.165,1680,2.165,1681,2.165,1682,2.165,1683,2.165,1684,2.165,1685,2.165,1686,3.391,1757,4.748,1774,1.96,1775,4.28,1792,1.96,1796,2.478,1797,2.478,1823,1.96,1824,2.165,1825,3.069,1826,3.069,1827,3.069,1893,1.684,1946,6.715,1949,5.607,1950,3.391,1951,5.444,1952,4.179,2083,2.165,2188,3.054,2209,2.829,2210,1.807,2223,4.728,2422,1.96,2427,3.069,2430,1.96,2432,3.069,2450,2.165,2566,5.444,2609,4.179,2615,4.179,2845,7.014,2849,1.96,2851,3.069,2856,5.133,2862,6.909,2865,3.783,2867,5.133,2870,2.165,2879,2.165,2880,4.728,2882,5.133,2883,5.133,2884,4.179,2885,4.728,2886,3.391,2887,4.179,2888,4.179,2889,4.179,2890,4.179,2892,4.179,2893,4.179,2894,4.179,2895,4.179,2896,4.179,2897,4.179,2898,4.179,2899,4.179,2900,4.179,2901,4.179,2902,4.179,2903,4.179,2904,4.179,2905,4.179,2906,4.179,2907,4.728,2908,5.133,2909,4.728,2910,3.391,2911,5.444,2912,4.728,2915,2.165,2916,3.391,2921,3.391,2931,2.165,2932,2.165,2949,1.807,2953,3.391,2954,3.391,2958,2.165,2963,2.165,2964,2.165,2968,2.165,2979,4.179,2988,2.165,2989,8.399,2990,4.78,2991,2.477,2992,2.477,2993,2.477,2994,2.477,2995,3.879,2996,6.228,2997,7.746,2998,4.78,2999,7.746,3000,5.872,3001,7.682,3002,2.477,3003,2.477,3004,5.409,3005,4.78,3006,2.477,3007,2.477,3008,3.879,3009,5.409,3010,5.409,3011,5.872,3012,2.477,3013,2.477,3014,2.477,3015,2.477,3016,2.477,3017,2.477,3018,3.879,3019,2.477,3020,3.879,3021,3.879,3022,3.879,3023,2.477,3024,2.477,3025,2.477,3026,2.477,3027,2.477,3028,2.477,3029,2.477,3030,7.339,3031,5.409,3032,6.509,3033,6.228,3034,5.409,3035,2.477,3036,2.477]]],"invertedIndex":[["",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CalibrationInfoDetailViewComponent.html":{},"components/CardElementComponent.html":{},"interfaces/CheckTokenResponse.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DashboardViewComponent.html":{},"components/DetailScreenComponent.html":{},"interfaces/ESPConfiguration.html":{},"injectables/ESPConfigurationAPIService.html":{},"components/ForecastDetailViewComponent.html":{},"interfaces/ForecastResponse.html":{},"components/ForecastTileViewComponent.html":{},"interfaces/GraphDataSet.html":{},"components/HistoryDetailViewComponent.html":{},"injectables/HistoryTileService.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"interfaces/ImageModel.html":{},"injectables/ImageService.html":{},"components/IndoorDetailViewComponent.html":{},"interfaces/IndoorRoomData.html":{},"interfaces/IndoorRoomResponse.html":{},"components/IndoorTileViewComponent.html":{},"injectables/LocalStorageService.html":{},"interfaces/LoginResponse.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"interfaces/OutdoorWeatherData.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"interfaces/OutdoorWeatherResponse.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"interfaces/PollenData.html":{},"components/PollenListElementComponent.html":{},"interfaces/PollenResponse.html":{},"components/PollenTagElementComponent.html":{},"interfaces/PollenType.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"modules/ScreensModule.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"injectables/SpeechService.html":{},"injectables/TextService.html":{},"interfaces/Tile.html":{},"interfaces/TileArrays.html":{},"injectables/TileService.html":{},"components/TtsPlayerElementComponent.html":{},"modules/UiElementsModule.html":{},"interfaces/UserContext.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{},"interfaces/UserIdentifikation.html":{},"modules/ViewsModule.html":{},"injectables/WeatherAPIService.html":{},"interfaces/WeatherData.html":{},"injectables/WeatherDataService.html":{},"interfaces/WeatherForecastData.html":{},"interfaces/WeatherHistoryByDayData.html":{},"interfaces/WeatherHistoryData.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":177,"title":{},"body":{"components/AppComponent.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/DashboardScreenComponent.html":{},"components/DashboardViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"injectables/HistoryTileService.html":{},"components/HumidityTileViewComponent.html":{},"injectables/ImageService.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"injectables/TileService.html":{},"components/TtsPlayerElementComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["0.03em",{"_index":2091,"title":{},"body":{"components/OutdoorWeatherViewComponent.html":{}}}],["0.05em",{"_index":468,"title":{},"body":{"components/BackButtonElementComponent.html":{},"components/MenuButtonElementComponent.html":{}}}],["0.11.3",{"_index":2948,"title":{},"body":{"dependencies.html":{}}}],["0.2",{"_index":2083,"title":{},"body":{"components/OutdoorWeatherViewComponent.html":{},"miscellaneous/variables.html":{}}}],["0.2px",{"_index":1966,"title":{},"body":{"components/MenuElementComponent.html":{}}}],["0.2s",{"_index":2328,"title":{},"body":{"components/ProgressChartElementComponent.html":{},"components/SliderElementComponent.html":{}}}],["0.3s",{"_index":567,"title":{},"body":{"components/CardElementComponent.html":{}}}],["0.5",{"_index":3031,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.5em",{"_index":1443,"title":{},"body":{"components/HistoryDetailViewComponent.html":{},"components/MenuElementComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PollenTagElementComponent.html":{}}}],["0.5pt",{"_index":2157,"title":{},"body":{"components/PollenListElementComponent.html":{}}}],["0.5px",{"_index":1873,"title":{},"body":{"components/LoginViewComponent.html":{}}}],["0.7em",{"_index":796,"title":{},"body":{"components/CheckboxSwitcherElementComponent.html":{}}}],["0/1",{"_index":2881,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":2841,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":2913,"title":{},"body":{"coverage.html":{}}}],["000000",{"_index":2323,"title":{},"body":{"components/ProgressChartElementComponent.html":{},"components/SliderElementComponent.html":{}}}],["000101",{"_index":2326,"title":{},"body":{"components/ProgressChartElementComponent.html":{},"components/SliderElementComponent.html":{}}}],["07:24:00",{"_index":3005,"title":{},"body":{"miscellaneous/variables.html":{}}}],["08:24:00",{"_index":3009,"title":{},"body":{"miscellaneous/variables.html":{}}}],["09:24:00",{"_index":3010,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0d0d0d",{"_index":2324,"title":{},"body":{"components/ProgressChartElementComponent.html":{},"components/SliderElementComponent.html":{}}}],["0ms",{"_index":2668,"title":{},"body":{"components/TtsPlayerElementComponent.html":{}}}],["0px",{"_index":2322,"title":{},"body":{"components/ProgressChartElementComponent.html":{},"components/SliderElementComponent.html":{}}}],["1",{"_index":1305,"title":{},"body":{"interfaces/GraphDataSet.html":{},"components/HistoryDetailViewComponent.html":{},"injectables/HistoryTileService.html":{},"interfaces/IndoorRoomData.html":{},"components/IndoorTileViewComponent.html":{},"components/MenuElementComponent.html":{},"interfaces/OutdoorWeatherData.html":{},"components/OutdoorWeatherViewComponent.html":{},"interfaces/PollenData.html":{},"components/PollenTagElementComponent.html":{},"injectables/SpeechService.html":{},"injectables/TextService.html":{},"interfaces/Tile.html":{},"interfaces/TileArrays.html":{},"injectables/TileService.html":{},"components/TtsPlayerElementComponent.html":{},"interfaces/WeatherData.html":{},"interfaces/WeatherForecastData.html":{},"interfaces/WeatherHistoryByDayData.html":{},"interfaces/WeatherHistoryData.html":{},"miscellaneous/variables.html":{}}}],["1)/7",{"_index":1526,"title":{},"body":{"injectables/HistoryTileService.html":{}}}],["1.0em",{"_index":470,"title":{},"body":{"components/BackButtonElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{}}}],["1.4em",{"_index":2611,"title":{},"body":{"components/TtsPlayerElementComponent.html":{}}}],["1.5em",{"_index":2295,"title":{},"body":{"components/PollenflugSmallTileComponent.html":{},"components/TtsPlayerElementComponent.html":{}}}],["1.6em",{"_index":1594,"title":{},"body":{"components/HistoryTileViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{}}}],["1.7em",{"_index":463,"title":{},"body":{"components/BackButtonElementComponent.html":{},"components/MenuBarElementComponent.html":{},"components/PollenTagElementComponent.html":{}}}],["1/1",{"_index":2891,"title":{},"body":{"coverage.html":{}}}],["1/10",{"_index":2869,"title":{},"body":{"coverage.html":{}}}],["1/11",{"_index":2874,"title":{},"body":{"coverage.html":{}}}],["1/14",{"_index":2878,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":2914,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":2843,"title":{},"body":{"coverage.html":{}}}],["1/4",{"_index":2844,"title":{},"body":{"coverage.html":{}}}],["1/5",{"_index":2846,"title":{},"body":{"coverage.html":{}}}],["1/6",{"_index":2858,"title":{},"body":{"coverage.html":{}}}],["1/7",{"_index":2857,"title":{},"body":{"coverage.html":{}}}],["1/8",{"_index":2863,"title":{},"body":{"coverage.html":{}}}],["1/9",{"_index":2850,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":897,"title":{},"body":{"components/ConfigurationTileViewComponent.html":{},"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"components/OutdoorWeatherViewComponent.html":{},"interfaces/PollenResponse.html":{},"injectables/WeatherAPIService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["10.0em",{"_index":1870,"title":{},"body":{"components/LoginViewComponent.html":{}}}],["10.3em",{"_index":791,"title":{},"body":{"components/CheckboxSwitcherElementComponent.html":{}}}],["100",{"_index":905,"title":{},"body":{"components/ConfigurationTileViewComponent.html":{},"injectables/ImageService.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["1000",{"_index":2093,"title":{},"body":{"components/OutdoorWeatherViewComponent.html":{},"components/TtsPlayerElementComponent.html":{}}}],["1000px",{"_index":548,"title":{},"body":{"components/CardElementComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{}}}],["100vh",{"_index":172,"title":{},"body":{"components/AppComponent.html":{},"components/MenuElementComponent.html":{}}}],["100vw",{"_index":1962,"title":{},"body":{"components/MenuElementComponent.html":{}}}],["102",{"_index":1963,"title":{},"body":{"components/MenuElementComponent.html":{}}}],["103",{"_index":1964,"title":{},"body":{"components/MenuElementComponent.html":{}}}],["106px",{"_index":2660,"title":{},"body":{"components/TtsPlayerElementComponent.html":{}}}],["10:24:00",{"_index":3000,"title":{},"body":{"miscellaneous/variables.html":{}}}],["10:34:00",{"_index":3002,"title":{},"body":{"miscellaneous/variables.html":{}}}],["10px",{"_index":462,"title":{},"body":{"components/BackButtonElementComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/SliderElementComponent.html":{}}}],["11",{"_index":2849,"title":{},"body":{"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["11.0.1",{"_index":2943,"title":{},"body":{"dependencies.html":{}}}],["11.2.10",{"_index":2936,"title":{},"body":{"dependencies.html":{}}}],["11.2.11",{"_index":2938,"title":{},"body":{"dependencies.html":{}}}],["11.2.9",{"_index":2960,"title":{},"body":{"index.html":{}}}],["113px",{"_index":2662,"title":{},"body":{"components/TtsPlayerElementComponent.html":{}}}],["11em",{"_index":2149,"title":{},"body":{"components/PersonalizationSettingsViewComponent.html":{}}}],["12",{"_index":2862,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["120px",{"_index":2098,"title":{},"body":{"components/OutdoorWeatherViewComponent.html":{},"components/TtsPlayerElementComponent.html":{}}}],["127px",{"_index":2665,"title":{},"body":{"components/TtsPlayerElementComponent.html":{}}}],["12em",{"_index":790,"title":{},"body":{"components/CheckboxSwitcherElementComponent.html":{}}}],["13",{"_index":3008,"title":{},"body":{"miscellaneous/variables.html":{}}}],["134px",{"_index":2667,"title":{},"body":{"components/TtsPlayerElementComponent.html":{}}}],["14",{"_index":2856,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["15",{"_index":2223,"title":{},"body":{"components/PollenflugDetailViewComponent.html":{},"miscellaneous/variables.html":{}}}],["15359845524",{"_index":3018,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15px",{"_index":2627,"title":{},"body":{"components/TtsPlayerElementComponent.html":{}}}],["16",{"_index":2851,"title":{},"body":{"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["16px",{"_index":2315,"title":{},"body":{"components/ProgressChartElementComponent.html":{},"components/SliderElementComponent.html":{}}}],["17",{"_index":3004,"title":{},"body":{"miscellaneous/variables.html":{}}}],["17px",{"_index":1915,"title":{},"body":{"components/MenuButtonElementComponent.html":{}}}],["18",{"_index":3011,"title":{},"body":{"miscellaneous/variables.html":{}}}],["19",{"_index":2998,"title":{},"body":{"miscellaneous/variables.html":{}}}],["190px",{"_index":2612,"title":{},"body":{"components/TtsPlayerElementComponent.html":{}}}],["1em",{"_index":2187,"title":{},"body":{"components/PollenTagElementComponent.html":{},"components/PollenflugSmallTileComponent.html":{}}}],["1px",{"_index":537,"title":{},"body":{"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/TtsPlayerElementComponent.html":{}}}],["2",{"_index":543,"title":{},"body":{"components/CardElementComponent.html":{},"components/ConfigurationTileViewComponent.html":{},"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"components/LoginViewComponent.html":{},"components/MenuElementComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"interfaces/OutdoorWeatherResponse.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"interfaces/PollenResponse.html":{},"components/PollenTagElementComponent.html":{},"components/RegistrationViewComponent.html":{},"injectables/TextService.html":{},"injectables/TileService.html":{},"injectables/WeatherAPIService.html":{},"miscellaneous/variables.html":{}}}],["2.0.0",{"_index":2946,"title":{},"body":{"dependencies.html":{}}}],["2.0em",{"_index":1772,"title":{},"body":{"components/IndoorTileViewComponent.html":{}}}],["2.2em",{"_index":1965,"title":{},"body":{"components/MenuElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugSmallTileComponent.html":{}}}],["2.5em",{"_index":801,"title":{},"body":{"components/CheckboxSwitcherElementComponent.html":{},"components/MenuButtonElementComponent.html":{}}}],["2.6em",{"_index":1891,"title":{},"body":{"components/MenuBarElementComponent.html":{}}}],["2/12",{"_index":2852,"title":{},"body":{"coverage.html":{}}}],["2/16",{"_index":2872,"title":{},"body":{"coverage.html":{}}}],["2/3",{"_index":2922,"title":{},"body":{"coverage.html":{}}}],["2/4",{"_index":2864,"title":{},"body":{"coverage.html":{}}}],["2/5",{"_index":2868,"title":{},"body":{"coverage.html":{}}}],["2/6",{"_index":2877,"title":{},"body":{"coverage.html":{}}}],["2/7",{"_index":2848,"title":{},"body":{"coverage.html":{}}}],["2/8",{"_index":2859,"title":{},"body":{"coverage.html":{}}}],["2/9",{"_index":2866,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":2845,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["200",{"_index":2092,"title":{},"body":{"components/OutdoorWeatherViewComponent.html":{}}}],["2021",{"_index":2999,"title":{},"body":{"miscellaneous/variables.html":{}}}],["20px",{"_index":878,"title":{},"body":{"components/ConfigurationTilePopUpDialogView.html":{},"components/ForecastTileViewComponent.html":{},"components/TtsPlayerElementComponent.html":{}}}],["22",{"_index":2865,"title":{},"body":{"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["22px",{"_index":2630,"title":{},"body":{"components/TtsPlayerElementComponent.html":{}}}],["240",{"_index":2081,"title":{},"body":{"components/OutdoorWeatherViewComponent.html":{}}}],["25",{"_index":880,"title":{},"body":{"components/ConfigurationTilePopUpDialogView.html":{},"components/IndoorTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["25px",{"_index":2325,"title":{},"body":{"components/ProgressChartElementComponent.html":{},"components/SliderElementComponent.html":{}}}],["26",{"_index":2870,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["28",{"_index":2847,"title":{},"body":{"coverage.html":{}}}],["28px",{"_index":2620,"title":{},"body":{"components/TtsPlayerElementComponent.html":{}}}],["29px",{"_index":2633,"title":{},"body":{"components/TtsPlayerElementComponent.html":{}}}],["2em",{"_index":2186,"title":{},"body":{"components/PollenTagElementComponent.html":{}}}],["2px",{"_index":1988,"title":{},"body":{"components/OpenAPELoginTileViewComponent.html":{}}}],["3",{"_index":1306,"title":{},"body":{"interfaces/GraphDataSet.html":{},"interfaces/IndoorRoomData.html":{},"components/LoginViewComponent.html":{},"interfaces/OutdoorWeatherData.html":{},"components/OutdoorWeatherViewComponent.html":{},"interfaces/PollenData.html":{},"components/PollenTagElementComponent.html":{},"injectables/TextService.html":{},"interfaces/Tile.html":{},"interfaces/TileArrays.html":{},"injectables/TileService.html":{},"interfaces/WeatherData.html":{},"interfaces/WeatherForecastData.html":{},"interfaces/WeatherHistoryByDayData.html":{},"interfaces/WeatherHistoryData.html":{},"miscellaneous/variables.html":{}}}],["3.2em",{"_index":2185,"title":{},"body":{"components/PollenTagElementComponent.html":{}}}],["3.3.0",{"_index":2942,"title":{},"body":{"dependencies.html":{}}}],["3/4",{"_index":2918,"title":{},"body":{"coverage.html":{}}}],["3/5",{"_index":2924,"title":{},"body":{"coverage.html":{}}}],["3/7",{"_index":2876,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":324,"title":{},"body":{"modules/AppModule.html":{}}}],["300px",{"_index":848,"title":{},"body":{"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{}}}],["30px",{"_index":2333,"title":{},"body":{"components/ProgressChartElementComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{}}}],["328959845524",{"_index":3020,"title":{},"body":{"miscellaneous/variables.html":{}}}],["32px",{"_index":2314,"title":{},"body":{"components/ProgressChartElementComponent.html":{},"components/SliderElementComponent.html":{}}}],["33",{"_index":2842,"title":{},"body":{"coverage.html":{}}}],["35",{"_index":2619,"title":{},"body":{"components/TtsPlayerElementComponent.html":{}}}],["36",{"_index":2929,"title":{},"body":{"coverage.html":{}}}],["36px",{"_index":2636,"title":{},"body":{"components/TtsPlayerElementComponent.html":{}}}],["39px",{"_index":2330,"title":{},"body":{"components/ProgressChartElementComponent.html":{},"components/SliderElementComponent.html":{}}}],["3em",{"_index":2294,"title":{},"body":{"components/PollenflugSmallTileComponent.html":{}}}],["3px",{"_index":2617,"title":{},"body":{"components/TtsPlayerElementComponent.html":{}}}],["4",{"_index":549,"title":{},"body":{"components/CardElementComponent.html":{},"interfaces/ForecastResponse.html":{},"injectables/HistoryTileService.html":{},"interfaces/IndoorRoomResponse.html":{},"components/LoginViewComponent.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"components/PollenTagElementComponent.html":{},"injectables/TextService.html":{},"injectables/TileService.html":{},"injectables/WeatherAPIService.html":{},"miscellaneous/variables.html":{}}}],["4.0em",{"_index":1768,"title":{},"body":{"components/IndoorTileViewComponent.html":{}}}],["4/11",{"_index":2930,"title":{},"body":{"coverage.html":{}}}],["4/15",{"_index":2871,"title":{},"body":{"coverage.html":{}}}],["4/5",{"_index":2920,"title":{},"body":{"coverage.html":{}}}],["4/8",{"_index":2853,"title":{},"body":{"coverage.html":{}}}],["40",{"_index":2867,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["400ms",{"_index":2634,"title":{},"body":{"components/TtsPlayerElementComponent.html":{}}}],["407ms",{"_index":2628,"title":{},"body":{"components/TtsPlayerElementComponent.html":{}}}],["40px",{"_index":2616,"title":{},"body":{"components/TtsPlayerElementComponent.html":{}}}],["41",{"_index":2854,"title":{},"body":{"coverage.html":{},"overview.html":{}}}],["419ms",{"_index":2642,"title":{},"body":{"components/TtsPlayerElementComponent.html":{}}}],["42",{"_index":2875,"title":{},"body":{"coverage.html":{}}}],["427ms",{"_index":2637,"title":{},"body":{"components/TtsPlayerElementComponent.html":{}}}],["433ms",{"_index":2625,"title":{},"body":{"components/TtsPlayerElementComponent.html":{}}}],["43px",{"_index":2639,"title":{},"body":{"components/TtsPlayerElementComponent.html":{}}}],["441ms",{"_index":2640,"title":{},"body":{"components/TtsPlayerElementComponent.html":{}}}],["442ms",{"_index":2648,"title":{},"body":{"components/TtsPlayerElementComponent.html":{}}}],["4480db",{"_index":877,"title":{},"body":{"components/ConfigurationTilePopUpDialogView.html":{}}}],["458ms",{"_index":2631,"title":{},"body":{"components/TtsPlayerElementComponent.html":{}}}],["46",{"_index":3003,"title":{},"body":{"miscellaneous/variables.html":{}}}],["474ms",{"_index":2623,"title":{},"body":{"components/TtsPlayerElementComponent.html":{}}}],["487ms",{"_index":2645,"title":{},"body":{"components/TtsPlayerElementComponent.html":{}}}],["4h",{"_index":510,"title":{},"body":{"components/CalibrationInfoDetailViewComponent.html":{}}}],["5",{"_index":895,"title":{},"body":{"components/ConfigurationTileViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/PollenTagElementComponent.html":{},"injectables/TextService.html":{},"injectables/TileService.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["5.0em",{"_index":2090,"title":{},"body":{"components/OutdoorWeatherViewComponent.html":{}}}],["5/12",{"_index":2855,"title":{},"body":{"coverage.html":{}}}],["5/9",{"_index":2861,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":1757,"title":{},"body":{"components/IndoorTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["50px",{"_index":1438,"title":{},"body":{"components/HistoryDetailViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{}}}],["55",{"_index":2860,"title":{},"body":{"coverage.html":{}}}],["55px",{"_index":2614,"title":{},"body":{"components/TtsPlayerElementComponent.html":{}}}],["57px",{"_index":2644,"title":{},"body":{"components/TtsPlayerElementComponent.html":{}}}],["5em",{"_index":2158,"title":{},"body":{"components/PollenListElementComponent.html":{}}}],["5px",{"_index":2301,"title":{},"body":{"components/ProgressChartElementComponent.html":{},"components/TtsPlayerElementComponent.html":{}}}],["6",{"_index":3013,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6.6.0",{"_index":2944,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":2923,"title":{},"body":{"coverage.html":{}}}],["60px",{"_index":1265,"title":{},"body":{"components/ForecastTileViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{}}}],["62",{"_index":2309,"title":{},"body":{"components/ProgressChartElementComponent.html":{}}}],["62.5",{"_index":2210,"title":{},"body":{"interfaces/PollenType.html":{},"interfaces/UserContext.html":{},"interfaces/UserIdentifikation.html":{},"miscellaneous/variables.html":{}}}],["64px",{"_index":2647,"title":{},"body":{"components/TtsPlayerElementComponent.html":{}}}],["66",{"_index":2921,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["690px",{"_index":1904,"title":{},"body":{"components/MenuBarElementComponent.html":{}}}],["7",{"_index":896,"title":{},"body":{"components/ConfigurationTileViewComponent.html":{},"injectables/HistoryTileService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["70",{"_index":2996,"title":{},"body":{"miscellaneous/variables.html":{}}}],["700",{"_index":465,"title":{},"body":{"components/BackButtonElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{}}}],["70565",{"_index":3006,"title":{},"body":{"miscellaneous/variables.html":{}}}],["70px",{"_index":1439,"title":{},"body":{"components/HistoryDetailViewComponent.html":{}}}],["71549",{"_index":3001,"title":{},"body":{"miscellaneous/variables.html":{}}}],["71px",{"_index":2650,"title":{},"body":{"components/TtsPlayerElementComponent.html":{}}}],["75",{"_index":2917,"title":{},"body":{"coverage.html":{}}}],["769px",{"_index":2095,"title":{},"body":{"components/OutdoorWeatherViewComponent.html":{}}}],["770px",{"_index":113,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DashboardViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{}}}],["78",{"_index":2365,"title":{},"body":{"components/SliderElementComponent.html":{}}}],["78px",{"_index":2652,"title":{},"body":{"components/TtsPlayerElementComponent.html":{}}}],["7em",{"_index":1264,"title":{},"body":{"components/ForecastTileViewComponent.html":{}}}],["8",{"_index":1197,"title":{},"body":{"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/WeatherAPIService.html":{},"miscellaneous/variables.html":{}}}],["8/10",{"_index":2928,"title":{},"body":{"coverage.html":{}}}],["8/9",{"_index":2926,"title":{},"body":{"coverage.html":{}}}],["80",{"_index":2919,"title":{},"body":{"coverage.html":{}}}],["800ms",{"_index":2669,"title":{},"body":{"components/TtsPlayerElementComponent.html":{}}}],["85px",{"_index":2654,"title":{},"body":{"components/TtsPlayerElementComponent.html":{}}}],["86400000",{"_index":1525,"title":{},"body":{"injectables/HistoryTileService.html":{}}}],["88",{"_index":2925,"title":{},"body":{"coverage.html":{}}}],["8px",{"_index":2313,"title":{},"body":{"components/ProgressChartElementComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{}}}],["9",{"_index":2873,"title":{},"body":{"coverage.html":{}}}],["92px",{"_index":2656,"title":{},"body":{"components/TtsPlayerElementComponent.html":{}}}],["99",{"_index":1212,"title":{},"body":{"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"interfaces/PollenType.html":{},"interfaces/UserContext.html":{},"interfaces/UserIdentifikation.html":{},"injectables/WeatherAPIService.html":{},"miscellaneous/variables.html":{}}}],["99px",{"_index":2658,"title":{},"body":{"components/TtsPlayerElementComponent.html":{}}}],["_apparenttemperature",{"_index":396,"title":{},"body":{"components/ApparentTemperatureTileViewComponent.html":{}}}],["_dashboardtiles",{"_index":2749,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["_dataset",{"_index":1549,"title":{},"body":{"components/HistoryTileViewComponent.html":{}}}],["_forecast",{"_index":1252,"title":{},"body":{"components/ForecastTileViewComponent.html":{}}}],["_forecastdata",{"_index":2769,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["_graphtype",{"_index":1550,"title":{},"body":{"components/HistoryTileViewComponent.html":{}}}],["_historydata",{"_index":2774,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["_humidity",{"_index":1597,"title":{},"body":{"components/HumidityTileViewComponent.html":{}}}],["_index",{"_index":1321,"title":{},"body":{"components/HistoryDetailViewComponent.html":{}}}],["_indoorroom",{"_index":1736,"title":{},"body":{"components/IndoorTileViewComponent.html":{}}}],["_indoorroom.airquality",{"_index":1761,"title":{},"body":{"components/IndoorTileViewComponent.html":{}}}],["_indoorroom.humidity",{"_index":1764,"title":{},"body":{"components/IndoorTileViewComponent.html":{}}}],["_indoorroom.temperature}}°c",{"_index":1762,"title":{},"body":{"components/IndoorTileViewComponent.html":{}}}],["_indoorroomsdata",{"_index":2764,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["_indoorroomtiles",{"_index":2756,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["_outdoorweatherdata",{"_index":2779,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["_pollen",{"_index":2286,"title":{},"body":{"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{}}}],["_pollendata",{"_index":2760,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["_pollentiles",{"_index":2752,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["_value",{"_index":2183,"title":{},"body":{"components/PollenTagElementComponent.html":{}}}],["_weatherhistory",{"_index":1365,"title":{},"body":{"components/HistoryDetailViewComponent.html":{}}}],["a.priority",{"_index":2582,"title":{},"body":{"injectables/TileService.html":{}}}],["a.timestamp.gettime",{"_index":1470,"title":{},"body":{"injectables/HistoryTileService.html":{}}}],["ab",{"_index":1436,"title":{},"body":{"components/HistoryDetailViewComponent.html":{}}}],["abbrechen",{"_index":870,"title":{},"body":{"components/ConfigurationTilePopUpDialogView.html":{}}}],["aber",{"_index":2009,"title":{},"body":{"components/OutdoorWeatherDetailViewComponent.html":{}}}],["abhängig",{"_index":1092,"title":{},"body":{"components/ForecastDetailViewComponent.html":{}}}],["ableiten",{"_index":2258,"title":{},"body":{"components/PollenflugDetailViewComponent.html":{}}}],["abschließend",{"_index":1720,"title":{},"body":{"components/IndoorDetailViewComponent.html":{}}}],["abschätzung",{"_index":1061,"title":{},"body":{"components/ForecastDetailViewComponent.html":{}}}],["absolute",{"_index":2615,"title":{},"body":{"components/TtsPlayerElementComponent.html":{},"miscellaneous/variables.html":{}}}],["accent",{"_index":798,"title":{},"body":{"components/CheckboxSwitcherElementComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/SliderElementComponent.html":{}}}],["access",{"_index":591,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/ESPConfiguration.html":{},"injectables/ESPConfigurationAPIService.html":{},"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"injectables/LocalStorageService.html":{},"interfaces/LoginResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{},"injectables/WeatherAPIService.html":{},"injectables/WeatherDataService.html":{}}}],["accessible",{"_index":2748,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["accessors",{"_index":401,"title":{},"body":{"components/ApparentTemperatureTileViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"injectables/LocalStorageService.html":{},"components/MenuElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{}}}],["accumulator",{"_index":1533,"title":{},"body":{"injectables/HistoryTileService.html":{}}}],["achtung",{"_index":2492,"title":{},"body":{"injectables/TextService.html":{}}}],["action",{"_index":2610,"title":{},"body":{"components/TtsPlayerElementComponent.html":{}}}],["activated",{"_index":2586,"title":{},"body":{"components/TtsPlayerElementComponent.html":{}}}],["actual_component",{"_index":269,"title":{},"body":{"components/AppComponent.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CalibrationInfoDetailViewComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DashboardViewComponent.html":{},"components/DetailScreenComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{}}}],["adaptive",{"_index":2814,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["add",{"_index":2523,"title":{},"body":{"injectables/TileService.html":{}}}],["addition",{"_index":2156,"title":{},"body":{"components/PollenListElementComponent.html":{}}}],["addorreplacetileto(tilesarray",{"_index":2571,"title":{},"body":{"injectables/TileService.html":{}}}],["addtileto(tilesarray",{"_index":2568,"title":{},"body":{"injectables/TileService.html":{}}}],["adjust",{"_index":2471,"title":{},"body":{"injectables/TextService.html":{}}}],["afterward",{"_index":2741,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["afterwards",{"_index":2792,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["air",{"_index":1742,"title":{},"body":{"components/IndoorTileViewComponent.html":{}}}],["airquality",{"_index":1227,"title":{},"body":{"interfaces/ForecastResponse.html":{},"interfaces/GraphDataSet.html":{},"interfaces/IndoorRoomData.html":{},"interfaces/IndoorRoomResponse.html":{},"components/IndoorTileViewComponent.html":{},"interfaces/OutdoorWeatherData.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenData.html":{},"interfaces/PollenResponse.html":{},"interfaces/Tile.html":{},"interfaces/TileArrays.html":{},"injectables/WeatherAPIService.html":{},"interfaces/WeatherData.html":{},"interfaces/WeatherForecastData.html":{},"interfaces/WeatherHistoryByDayData.html":{},"interfaces/WeatherHistoryData.html":{},"miscellaneous/variables.html":{}}}],["airqualityvalue",{"_index":1754,"title":{},"body":{"components/IndoorTileViewComponent.html":{}}}],["aktualisierte",{"_index":2272,"title":{},"body":{"components/PollenflugDetailViewComponent.html":{}}}],["aktuell",{"_index":2478,"title":{},"body":{"injectables/TextService.html":{}}}],["algorithm",{"_index":1055,"title":{},"body":{"components/ForecastDetailViewComponent.html":{}}}],["align",{"_index":456,"title":{},"body":{"components/BackButtonElementComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DashboardViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/RegistrationViewComponent.html":{}}}],["allconfigs",{"_index":1009,"title":{},"body":{"interfaces/ESPConfiguration.html":{},"injectables/ESPConfigurationAPIService.html":{}}}],["alle",{"_index":893,"title":{},"body":{"components/ConfigurationTileViewComponent.html":{}}}],["allergic",{"_index":2283,"title":{},"body":{"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{}}}],["allergies/delete",{"_index":609,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/LoginResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{}}}],["allergies/save",{"_index":611,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/LoginResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{}}}],["allergischen",{"_index":2241,"title":{},"body":{"components/PollenflugDetailViewComponent.html":{}}}],["allergologen",{"_index":2245,"title":{},"body":{"components/PollenflugDetailViewComponent.html":{}}}],["allergy",{"_index":2214,"title":{},"body":{"components/PollenflugDetailViewComponent.html":{}}}],["alles",{"_index":1058,"title":{},"body":{"components/ForecastDetailViewComponent.html":{}}}],["allowed",{"_index":1901,"title":{},"body":{"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/OutdoorWeatherViewComponent.html":{}}}],["allpollentypesurl",{"_index":606,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/LoginResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["almostdeath",{"_index":2172,"title":{},"body":{"components/PollenTagElementComponent.html":{}}}],["aloud",{"_index":967,"title":{},"body":{"components/DashboardViewComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"injectables/SpeechService.html":{},"injectables/TextService.html":{}}}],["als",{"_index":2024,"title":{},"body":{"components/OutdoorWeatherDetailViewComponent.html":{},"components/PollenflugDetailViewComponent.html":{}}}],["alternate",{"_index":2671,"title":{},"body":{"components/TtsPlayerElementComponent.html":{}}}],["altertum",{"_index":1078,"title":{},"body":{"components/ForecastDetailViewComponent.html":{}}}],["ambrosia",{"_index":2880,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["angegeben",{"_index":2004,"title":{},"body":{"components/OutdoorWeatherDetailViewComponent.html":{}}}],["angel",{"_index":2181,"title":{},"body":{"components/PollenTagElementComponent.html":{}}}],["angemessener",{"_index":2010,"title":{},"body":{"components/OutdoorWeatherDetailViewComponent.html":{}}}],["angular",{"_index":2958,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["angular/animations",{"_index":1948,"title":{},"body":{"components/MenuElementComponent.html":{},"dependencies.html":{}}}],["angular/cdk",{"_index":2937,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk/layout",{"_index":84,"title":{},"body":{"components/AppComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/DashboardViewComponent.html":{},"injectables/ImageService.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"modules/ScreensModule.html":{}}}],["angular/common",{"_index":449,"title":{},"body":{"components/BackButtonElementComponent.html":{},"modules/ScreensModule.html":{},"modules/UiElementsModule.html":{},"modules/ViewsModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":74,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/CheckTokenResponse.html":{},"interfaces/ESPConfiguration.html":{},"injectables/ESPConfigurationAPIService.html":{},"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/LoginResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["angular/compiler",{"_index":2939,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":70,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CalibrationInfoDetailViewComponent.html":{},"components/CardElementComponent.html":{},"interfaces/CheckTokenResponse.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DashboardViewComponent.html":{},"components/DetailScreenComponent.html":{},"interfaces/ESPConfiguration.html":{},"injectables/ESPConfigurationAPIService.html":{},"components/ForecastDetailViewComponent.html":{},"interfaces/ForecastResponse.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"injectables/HistoryTileService.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"injectables/ImageService.html":{},"components/IndoorDetailViewComponent.html":{},"interfaces/IndoorRoomResponse.html":{},"components/IndoorTileViewComponent.html":{},"injectables/LocalStorageService.html":{},"interfaces/LoginResponse.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"interfaces/OutdoorWeatherResponse.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenListElementComponent.html":{},"interfaces/PollenResponse.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"modules/ScreensModule.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"injectables/SpeechService.html":{},"injectables/TextService.html":{},"injectables/TileService.html":{},"components/TtsPlayerElementComponent.html":{},"modules/UiElementsModule.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{},"modules/ViewsModule.html":{},"injectables/WeatherAPIService.html":{},"injectables/WeatherDataService.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":832,"title":{},"body":{"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/RegistrationViewComponent.html":{},"modules/UiElementsModule.html":{},"modules/ViewsModule.html":{},"dependencies.html":{}}}],["angular/material",{"_index":2940,"title":{},"body":{"dependencies.html":{}}}],["angular/material/dialog",{"_index":831,"title":{},"body":{"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"modules/ViewsModule.html":{}}}],["angular/platform",{"_index":297,"title":{},"body":{"modules/AppModule.html":{},"modules/ScreensModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":71,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/CalibrationInfoDetailViewComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/RegistrationViewComponent.html":{},"modules/ScreensModule.html":{},"components/SettingsScreenComponent.html":{},"modules/ViewsModule.html":{},"dependencies.html":{}}}],["angular/service",{"_index":309,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["animate",{"_index":1947,"title":{},"body":{"components/MenuElementComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/SliderElementComponent.html":{}}}],["animate('0.3s",{"_index":1950,"title":{},"body":{"components/MenuElementComponent.html":{},"miscellaneous/variables.html":{}}}],["animate('0.6s",{"_index":3034,"title":{},"body":{"miscellaneous/variables.html":{}}}],["animatechild",{"_index":3033,"title":{},"body":{"miscellaneous/variables.html":{}}}],["animation",{"_index":80,"title":{},"body":{"components/AppComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"interfaces/PollenType.html":{},"components/SettingsScreenComponent.html":{},"components/TtsPlayerElementComponent.html":{},"interfaces/UserContext.html":{},"interfaces/UserIdentifikation.html":{}}}],["animation.ts",{"_index":2916,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["animations",{"_index":85,"title":{},"body":{"components/AppComponent.html":{},"components/MenuElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/SettingsScreenComponent.html":{}}}],["animationstate",{"_index":366,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["another",{"_index":2817,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["ansicht",{"_index":108,"title":{},"body":{"components/AppComponent.html":{}}}],["ape",{"_index":1793,"title":{},"body":{"injectables/LocalStorageService.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{}}}],["apelogin",{"_index":235,"title":{},"body":{"components/AppComponent.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CalibrationInfoDetailViewComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DashboardViewComponent.html":{},"components/DetailScreenComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{},"modules/ViewsModule.html":{},"coverage.html":{}}}],["api",{"_index":589,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/ESPConfiguration.html":{},"injectables/ESPConfigurationAPIService.html":{},"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/LoginResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["api.service",{"_index":828,"title":{},"body":{"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"injectables/WeatherDataService.html":{}}}],["api.service.ts",{"_index":577,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/ESPConfiguration.html":{},"injectables/ESPConfigurationAPIService.html":{},"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/LoginResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{},"injectables/WeatherAPIService.html":{},"coverage.html":{}}}],["api.service.ts:104",{"_index":2708,"title":{},"body":{"injectables/WeatherAPIService.html":{}}}],["api.service.ts:124",{"_index":2693,"title":{},"body":{"injectables/UserContextAPIService.html":{}}}],["api.service.ts:128",{"_index":2706,"title":{},"body":{"injectables/WeatherAPIService.html":{}}}],["api.service.ts:161",{"_index":2685,"title":{},"body":{"injectables/UserContextAPIService.html":{}}}],["api.service.ts:18",{"_index":1035,"title":{},"body":{"injectables/ESPConfigurationAPIService.html":{}}}],["api.service.ts:190",{"_index":2691,"title":{},"body":{"injectables/UserContextAPIService.html":{}}}],["api.service.ts:217",{"_index":2688,"title":{},"body":{"injectables/UserContextAPIService.html":{}}}],["api.service.ts:22",{"_index":2704,"title":{},"body":{"injectables/WeatherAPIService.html":{}}}],["api.service.ts:238",{"_index":2687,"title":{},"body":{"injectables/UserContextAPIService.html":{}}}],["api.service.ts:25",{"_index":1036,"title":{},"body":{"injectables/ESPConfigurationAPIService.html":{},"injectables/UserContextAPIService.html":{}}}],["api.service.ts:259",{"_index":2686,"title":{},"body":{"injectables/UserContextAPIService.html":{}}}],["api.service.ts:29",{"_index":2709,"title":{},"body":{"injectables/WeatherAPIService.html":{}}}],["api.service.ts:32",{"_index":2689,"title":{},"body":{"injectables/UserContextAPIService.html":{}}}],["api.service.ts:42",{"_index":1037,"title":{},"body":{"injectables/ESPConfigurationAPIService.html":{}}}],["api.service.ts:57",{"_index":2705,"title":{},"body":{"injectables/WeatherAPIService.html":{}}}],["api.service.ts:67",{"_index":2690,"title":{},"body":{"injectables/UserContextAPIService.html":{}}}],["api.service.ts:73",{"_index":1038,"title":{},"body":{"injectables/ESPConfigurationAPIService.html":{}}}],["api.service.ts:80",{"_index":2710,"title":{},"body":{"injectables/WeatherAPIService.html":{}}}],["api.service.ts:94",{"_index":2692,"title":{},"body":{"injectables/UserContextAPIService.html":{}}}],["api/weather",{"_index":2745,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["app",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CalibrationInfoDetailViewComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DashboardViewComponent.html":{},"components/DetailScreenComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{},"index.html":{}}}],["app.component",{"_index":305,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":18,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":16,"title":{},"body":{"components/AppComponent.html":{}}}],["apparent",{"_index":186,"title":{},"body":{"components/AppComponent.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CalibrationInfoDetailViewComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DashboardViewComponent.html":{},"components/DetailScreenComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{},"modules/ViewsModule.html":{}}}],["apparenttemperature",{"_index":1217,"title":{},"body":{"interfaces/ForecastResponse.html":{},"interfaces/GraphDataSet.html":{},"interfaces/IndoorRoomData.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherData.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenData.html":{},"interfaces/PollenResponse.html":{},"injectables/TextService.html":{},"interfaces/Tile.html":{},"interfaces/TileArrays.html":{},"injectables/TileService.html":{},"injectables/WeatherAPIService.html":{},"interfaces/WeatherData.html":{},"interfaces/WeatherForecastData.html":{},"interfaces/WeatherHistoryByDayData.html":{},"interfaces/WeatherHistoryData.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["apparenttemperaturetile",{"_index":2528,"title":{},"body":{"injectables/TileService.html":{}}}],["apparenttemperaturetileviewcomponent",{"_index":185,"title":{"components/ApparentTemperatureTileViewComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CalibrationInfoDetailViewComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DashboardViewComponent.html":{},"components/DetailScreenComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{},"modules/ViewsModule.html":{},"coverage.html":{},"overview.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CalibrationInfoDetailViewComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DashboardViewComponent.html":{},"components/DetailScreenComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appearance",{"_index":2318,"title":{},"body":{"components/ProgressChartElementComponent.html":{},"components/SliderElementComponent.html":{}}}],["applied",{"_index":1617,"title":{},"body":{"injectables/ImageService.html":{},"components/OutdoorWeatherViewComponent.html":{}}}],["appmodule",{"_index":274,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approutingmodule",{"_index":285,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ScreensModule.html":{},"modules.html":{},"overview.html":{}}}],["arbeiten",{"_index":1711,"title":{},"body":{"components/IndoorDetailViewComponent.html":{}}}],["array",{"_index":704,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"components/DashboardViewComponent.html":{},"interfaces/ForecastResponse.html":{},"components/HistoryDetailViewComponent.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/LoginResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"interfaces/PollenType.html":{},"components/PollenflugDetailViewComponent.html":{},"injectables/TextService.html":{},"injectables/TileService.html":{},"interfaces/UserContext.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{},"interfaces/UserIdentifikation.html":{},"injectables/WeatherAPIService.html":{},"interfaces/WeatherData.html":{},"injectables/WeatherDataService.html":{}}}],["array(count",{"_index":2138,"title":{},"body":{"components/PersonalizationSettingsViewComponent.html":{}}}],["array.foreach(element",{"_index":2420,"title":{},"body":{"injectables/TextService.html":{}}}],["arrays",{"_index":1283,"title":{},"body":{"interfaces/GraphDataSet.html":{},"interfaces/IndoorRoomData.html":{},"interfaces/OutdoorWeatherData.html":{},"interfaces/PollenData.html":{},"interfaces/Tile.html":{},"interfaces/TileArrays.html":{},"injectables/TileService.html":{},"interfaces/WeatherData.html":{},"injectables/WeatherDataService.html":{},"interfaces/WeatherForecastData.html":{},"interfaces/WeatherHistoryByDayData.html":{},"interfaces/WeatherHistoryData.html":{}}}],["artifacts",{"_index":2974,"title":{},"body":{"index.html":{}}}],["asked",{"_index":2124,"title":{},"body":{"components/PersonalizationSettingsViewComponent.html":{}}}],["assets",{"_index":1603,"title":{},"body":{"injectables/ImageService.html":{}}}],["assets/icons",{"_index":1622,"title":{},"body":{"injectables/ImageService.html":{}}}],["assets/weather",{"_index":1624,"title":{},"body":{"injectables/ImageService.html":{}}}],["asthma",{"_index":2234,"title":{},"body":{"components/PollenflugDetailViewComponent.html":{}}}],["atemluft",{"_index":2253,"title":{},"body":{"components/PollenflugDetailViewComponent.html":{}}}],["atmosphäre",{"_index":1099,"title":{},"body":{"components/ForecastDetailViewComponent.html":{}}}],["auch",{"_index":1407,"title":{},"body":{"components/HistoryDetailViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"interfaces/PollenType.html":{},"components/PollenflugDetailViewComponent.html":{},"interfaces/UserContext.html":{},"interfaces/UserIdentifikation.html":{}}}],["auf",{"_index":151,"title":{},"body":{"components/AppComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{}}}],["aufbereitete",{"_index":1408,"title":{},"body":{"components/HistoryDetailViewComponent.html":{}}}],["aufenthalt",{"_index":1727,"title":{},"body":{"components/IndoorDetailViewComponent.html":{}}}],["aufgetreten",{"_index":639,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/ESPConfiguration.html":{},"injectables/ESPConfigurationAPIService.html":{},"interfaces/LoginResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{}}}],["aufgrund",{"_index":2260,"title":{},"body":{"components/PollenflugDetailViewComponent.html":{}}}],["aus",{"_index":2254,"title":{},"body":{"components/PollenflugDetailViewComponent.html":{}}}],["ausfällt",{"_index":1428,"title":{},"body":{"components/HistoryDetailViewComponent.html":{}}}],["ausgehend",{"_index":1411,"title":{},"body":{"components/HistoryDetailViewComponent.html":{}}}],["ausloggen",{"_index":1960,"title":{},"body":{"components/MenuElementComponent.html":{}}}],["ausreichende",{"_index":1733,"title":{},"body":{"components/IndoorDetailViewComponent.html":{}}}],["aussage",{"_index":2045,"title":{},"body":{"components/OutdoorWeatherDetailViewComponent.html":{}}}],["aussagen",{"_index":2037,"title":{},"body":{"components/OutdoorWeatherDetailViewComponent.html":{},"components/PollenflugDetailViewComponent.html":{}}}],["auswertung",{"_index":1435,"title":{},"body":{"components/HistoryDetailViewComponent.html":{}}}],["auswirken",{"_index":1114,"title":{},"body":{"components/ForecastDetailViewComponent.html":{}}}],["auth/checktoken",{"_index":601,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/LoginResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{}}}],["auth/login",{"_index":597,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/LoginResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{}}}],["authorization",{"_index":649,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/LoginResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{}}}],["auto",{"_index":531,"title":{},"body":{"components/CardElementComponent.html":{},"miscellaneous/enumerations.html":{}}}],["autoatic",{"_index":152,"title":{},"body":{"components/AppComponent.html":{}}}],["automatic",{"_index":2141,"title":{},"body":{"components/PersonalizationSettingsViewComponent.html":{},"interfaces/PollenType.html":{},"interfaces/UserContext.html":{},"interfaces/UserIdentifikation.html":{},"miscellaneous/enumerations.html":{}}}],["automatically",{"_index":2968,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["available",{"_index":2987,"title":{},"body":{"modules.html":{}}}],["average",{"_index":1340,"title":{},"body":{"components/HistoryDetailViewComponent.html":{},"injectables/HistoryTileService.html":{}}}],["averagehumidity",{"_index":1309,"title":{},"body":{"interfaces/GraphDataSet.html":{},"injectables/HistoryTileService.html":{},"interfaces/IndoorRoomData.html":{},"interfaces/OutdoorWeatherData.html":{},"interfaces/PollenData.html":{},"interfaces/Tile.html":{},"interfaces/TileArrays.html":{},"interfaces/WeatherData.html":{},"interfaces/WeatherForecastData.html":{},"interfaces/WeatherHistoryByDayData.html":{},"interfaces/WeatherHistoryData.html":{},"miscellaneous/variables.html":{}}}],["averagetemperature",{"_index":1308,"title":{},"body":{"interfaces/GraphDataSet.html":{},"injectables/HistoryTileService.html":{},"interfaces/IndoorRoomData.html":{},"interfaces/OutdoorWeatherData.html":{},"interfaces/PollenData.html":{},"interfaces/Tile.html":{},"interfaces/TileArrays.html":{},"interfaces/WeatherData.html":{},"interfaces/WeatherForecastData.html":{},"interfaces/WeatherHistoryByDayData.html":{},"interfaces/WeatherHistoryData.html":{},"miscellaneous/variables.html":{}}}],["b",{"_index":1468,"title":{},"body":{"injectables/HistoryTileService.html":{},"injectables/TileService.html":{}}}],["b.priority",{"_index":2583,"title":{},"body":{"injectables/TileService.html":{}}}],["b.timestamp.gettime",{"_index":1469,"title":{},"body":{"injectables/HistoryTileService.html":{}}}],["b1",{"_index":873,"title":{},"body":{"components/ConfigurationTilePopUpDialogView.html":{}}}],["b2",{"_index":874,"title":{},"body":{"components/ConfigurationTilePopUpDialogView.html":{}}}],["back",{"_index":192,"title":{},"body":{"components/AppComponent.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CalibrationInfoDetailViewComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DashboardViewComponent.html":{},"components/DetailScreenComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{},"modules/UiElementsModule.html":{}}}],["backbuttonelementcomponent",{"_index":191,"title":{"components/BackButtonElementComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CalibrationInfoDetailViewComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DashboardViewComponent.html":{},"components/DetailScreenComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{},"modules/UiElementsModule.html":{},"coverage.html":{},"overview.html":{}}}],["backdrop",{"_index":1895,"title":{},"body":{"components/MenuBarElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{}}}],["backend",{"_index":2205,"title":{},"body":{"interfaces/PollenType.html":{},"interfaces/UserContext.html":{},"interfaces/UserIdentifikation.html":{},"injectables/WeatherDataService.html":{}}}],["background",{"_index":179,"title":{},"body":{"components/AppComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"injectables/ImageService.html":{},"components/LoginViewComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/SettingsScreenComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{},"miscellaneous/variables.html":{}}}],["backgroundcolor",{"_index":1585,"title":{},"body":{"components/HistoryTileViewComponent.html":{}}}],["backiconmodel",{"_index":430,"title":{},"body":{"components/BackButtonElementComponent.html":{}}}],["backlabel",{"_index":1973,"title":{},"body":{"components/NavBarElementComponent.html":{}}}],["bad",{"_index":1744,"title":{},"body":{"components/IndoorTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{}}}],["bar",{"_index":226,"title":{},"body":{"components/AppComponent.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CalibrationInfoDetailViewComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DashboardViewComponent.html":{},"components/DetailScreenComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{},"modules/UiElementsModule.html":{},"coverage.html":{}}}],["bar:nth",{"_index":2621,"title":{},"body":{"components/TtsPlayerElementComponent.html":{}}}],["bars",{"_index":2613,"title":{},"body":{"components/TtsPlayerElementComponent.html":{}}}],["base",{"_index":2147,"title":{},"body":{"components/PersonalizationSettingsViewComponent.html":{}}}],["based",{"_index":1741,"title":{},"body":{"components/IndoorTileViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"injectables/TileService.html":{}}}],["baseline",{"_index":1771,"title":{},"body":{"components/IndoorTileViewComponent.html":{}}}],["baseurl",{"_index":3022,"title":{},"body":{"miscellaneous/variables.html":{}}}],["baseurlicons",{"_index":1621,"title":{},"body":{"injectables/ImageService.html":{}}}],["baseurlweather",{"_index":1623,"title":{},"body":{"injectables/ImageService.html":{}}}],["basic",{"_index":1052,"title":{},"body":{"components/ForecastDetailViewComponent.html":{}}}],["bearer",{"_index":650,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/LoginResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{}}}],["bedeckt",{"_index":2442,"title":{},"body":{"injectables/TextService.html":{}}}],["bedenkt",{"_index":1085,"title":{},"body":{"components/ForecastDetailViewComponent.html":{}}}],["before",{"_index":442,"title":{},"body":{"components/BackButtonElementComponent.html":{},"injectables/WeatherDataService.html":{}}}],["begin",{"_index":1183,"title":{},"body":{"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["begindate",{"_index":1180,"title":{},"body":{"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["behaglichkeit",{"_index":2038,"title":{},"body":{"components/OutdoorWeatherDetailViewComponent.html":{}}}],["behalf",{"_index":533,"title":{},"body":{"components/CardElementComponent.html":{}}}],["behavior",{"_index":2727,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["behaviorsubject",{"_index":2726,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["behaviorsubject(undefined",{"_index":2770,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["behaviour",{"_index":2742,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["bei",{"_index":2012,"title":{},"body":{"components/OutdoorWeatherDetailViewComponent.html":{},"injectables/TextService.html":{}}}],["beifu",{"_index":3012,"title":{},"body":{"miscellaneous/variables.html":{}}}],["belastung",{"_index":2256,"title":{},"body":{"components/PollenflugDetailViewComponent.html":{},"injectables/TextService.html":{}}}],["below",{"_index":158,"title":{},"body":{"components/AppComponent.html":{}}}],["beobachtet.wie",{"_index":1426,"title":{},"body":{"components/HistoryDetailViewComponent.html":{}}}],["beobachtungen",{"_index":1412,"title":{},"body":{"components/HistoryDetailViewComponent.html":{}}}],["beobachtungsdaten",{"_index":1402,"title":{},"body":{"components/HistoryDetailViewComponent.html":{}}}],["ber",{"_index":2274,"title":{},"body":{"components/PollenflugDetailViewComponent.html":{}}}],["berein",{"_index":2342,"title":{},"body":{"components/RegistrationViewComponent.html":{}}}],["berliefert",{"_index":1079,"title":{},"body":{"components/ForecastDetailViewComponent.html":{}}}],["beschreibung",{"_index":2028,"title":{},"body":{"components/OutdoorWeatherDetailViewComponent.html":{}}}],["beschrieben",{"_index":2036,"title":{},"body":{"components/OutdoorWeatherDetailViewComponent.html":{}}}],["besonders",{"_index":1088,"title":{},"body":{"components/ForecastDetailViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{}}}],["bestimmten",{"_index":1101,"title":{},"body":{"components/ForecastDetailViewComponent.html":{}}}],["betrachtet",{"_index":1120,"title":{},"body":{"components/ForecastDetailViewComponent.html":{}}}],["betrachteten",{"_index":1430,"title":{},"body":{"components/HistoryDetailViewComponent.html":{}}}],["beträgt",{"_index":2485,"title":{},"body":{"injectables/TextService.html":{}}}],["between",{"_index":872,"title":{},"body":{"components/ConfigurationTilePopUpDialogView.html":{},"components/DashboardScreenComponent.html":{},"components/DashboardViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuElementComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/ProgressChartElementComponent.html":{}}}],["bevölkerung",{"_index":2224,"title":{},"body":{"components/PollenflugDetailViewComponent.html":{}}}],["bewegt",{"_index":2018,"title":{},"body":{"components/OutdoorWeatherDetailViewComponent.html":{}}}],["bewertung",{"_index":1404,"title":{},"body":{"components/HistoryDetailViewComponent.html":{}}}],["bewölkt",{"_index":2455,"title":{},"body":{"injectables/TextService.html":{}}}],["big",{"_index":545,"title":{},"body":{"components/CardElementComponent.html":{}}}],["bindehautentzündung",{"_index":2231,"title":{},"body":{"components/PollenflugDetailViewComponent.html":{}}}],["birke",{"_index":2882,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["birke.id",{"_index":3017,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bis",{"_index":2232,"title":{},"body":{"components/PollenflugDetailViewComponent.html":{}}}],["bitte",{"_index":490,"title":{},"body":{"components/CalibrationInfoDetailViewComponent.html":{},"interfaces/CheckTokenResponse.html":{},"interfaces/ESPConfiguration.html":{},"injectables/ESPConfigurationAPIService.html":{},"components/IndoorTileViewComponent.html":{},"interfaces/LoginResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{}}}],["black",{"_index":784,"title":{},"body":{"components/CheckboxSwitcherElementComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugSmallTileComponent.html":{}}}],["blicherweise",{"_index":2002,"title":{},"body":{"components/OutdoorWeatherDetailViewComponent.html":{}}}],["blue",{"_index":1589,"title":{},"body":{"components/HistoryTileViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{}}}],["blur",{"_index":1894,"title":{},"body":{"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{}}}],["blur(20px",{"_index":1896,"title":{},"body":{"components/MenuBarElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{}}}],["board",{"_index":1303,"title":{},"body":{"interfaces/GraphDataSet.html":{},"interfaces/IndoorRoomData.html":{},"interfaces/OutdoorWeatherData.html":{},"interfaces/PollenData.html":{},"interfaces/Tile.html":{},"interfaces/TileArrays.html":{},"interfaces/WeatherData.html":{},"interfaces/WeatherForecastData.html":{},"interfaces/WeatherHistoryByDayData.html":{},"interfaces/WeatherHistoryData.html":{}}}],["boden",{"_index":1113,"title":{},"body":{"components/ForecastDetailViewComponent.html":{}}}],["body",{"_index":624,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/ESPConfiguration.html":{},"injectables/ESPConfigurationAPIService.html":{},"interfaces/LoginResponse.html":{},"components/ProgressChartElementComponent.html":{},"components/SliderElementComponent.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{}}}],["body.id",{"_index":677,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/LoginResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{}}}],["body.token",{"_index":630,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/LoginResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{}}}],["body.usercontext.id",{"_index":632,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/LoginResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{}}}],["bold",{"_index":1767,"title":{},"body":{"components/IndoorTileViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{}}}],["boolean",{"_index":58,"title":{},"body":{"components/AppComponent.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/CardElementComponent.html":{},"interfaces/CheckTokenResponse.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/DashboardViewComponent.html":{},"components/DetailScreenComponent.html":{},"interfaces/ESPConfiguration.html":{},"injectables/ESPConfigurationAPIService.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"injectables/LocalStorageService.html":{},"interfaces/LoginResponse.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"interfaces/PollenType.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/SettingsScreenComponent.html":{},"injectables/SpeechService.html":{},"components/TtsPlayerElementComponent.html":{},"interfaces/UserContext.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{},"interfaces/UserIdentifikation.html":{}}}],["bootstrap",{"_index":278,"title":{},"body":{"modules/AppModule.html":{},"modules/ScreensModule.html":{},"modules/UiElementsModule.html":{},"modules/ViewsModule.html":{},"overview.html":{}}}],["border",{"_index":174,"title":{},"body":{"components/AppComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/DashboardScreenComponent.html":{},"components/DashboardViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{}}}],["bordercolor",{"_index":1583,"title":{},"body":{"components/HistoryTileViewComponent.html":{}}}],["both",{"_index":839,"title":{},"body":{"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/DashboardViewComponent.html":{}}}],["bottom",{"_index":553,"title":{},"body":{"components/CardElementComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DashboardViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuElementComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/TtsPlayerElementComponent.html":{}}}],["box",{"_index":563,"title":{},"body":{"components/CardElementComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/SliderElementComponent.html":{}}}],["brauchen",{"_index":94,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["break",{"_index":795,"title":{},"body":{"components/CheckboxSwitcherElementComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/PollenTagElementComponent.html":{},"injectables/TextService.html":{}}}],["breakpoint",{"_index":942,"title":{},"body":{"components/DashboardScreenComponent.html":{},"components/DashboardViewComponent.html":{}}}],["breakpointobserver",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/DashboardViewComponent.html":{},"injectables/ImageService.html":{},"components/OutdoorWeatherDetailViewComponent.html":{}}}],["breakpointstate",{"_index":83,"title":{},"body":{"components/AppComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/DashboardViewComponent.html":{},"injectables/ImageService.html":{},"components/OutdoorWeatherDetailViewComponent.html":{}}}],["browse",{"_index":2986,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":298,"title":{},"body":{"modules/AppModule.html":{},"injectables/LocalStorageService.html":{},"injectables/SpeechService.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":307,"title":{},"body":{"modules/AppModule.html":{},"modules/ScreensModule.html":{}}}],["browseranimationsmodule",{"_index":306,"title":{},"body":{"modules/AppModule.html":{},"modules/ScreensModule.html":{}}}],["browsermodule",{"_index":296,"title":{},"body":{"modules/AppModule.html":{}}}],["btn",{"_index":900,"title":{},"body":{"components/ConfigurationTileViewComponent.html":{}}}],["bug",{"_index":147,"title":{},"body":{"components/AppComponent.html":{}}}],["build",{"_index":2973,"title":{},"body":{"index.html":{}}}],["bundles",{"_index":1281,"title":{},"body":{"interfaces/GraphDataSet.html":{},"interfaces/IndoorRoomData.html":{},"interfaces/OutdoorWeatherData.html":{},"interfaces/PollenData.html":{},"interfaces/Tile.html":{},"interfaces/TileArrays.html":{},"interfaces/WeatherData.html":{},"interfaces/WeatherForecastData.html":{},"interfaces/WeatherHistoryByDayData.html":{},"interfaces/WeatherHistoryData.html":{}}}],["button",{"_index":193,"title":{},"body":{"components/AppComponent.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CalibrationInfoDetailViewComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DashboardViewComponent.html":{},"components/DetailScreenComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{},"modules/UiElementsModule.html":{},"coverage.html":{}}}],["button.disabled",{"_index":1440,"title":{},"body":{"components/HistoryDetailViewComponent.html":{}}}],["button.svg",{"_index":446,"title":{},"body":{"components/BackButtonElementComponent.html":{}}}],["buttoncolor",{"_index":1918,"title":{},"body":{"components/MenuButtonElementComponent.html":{}}}],["c",{"_index":1295,"title":{},"body":{"interfaces/GraphDataSet.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"interfaces/IndoorRoomData.html":{},"interfaces/OutdoorWeatherData.html":{},"interfaces/PollenData.html":{},"interfaces/Tile.html":{},"interfaces/TileArrays.html":{},"interfaces/WeatherData.html":{},"interfaces/WeatherForecastData.html":{},"interfaces/WeatherHistoryByDayData.html":{},"interfaces/WeatherHistoryData.html":{}}}],["ca",{"_index":509,"title":{},"body":{"components/CalibrationInfoDetailViewComponent.html":{}}}],["caculate",{"_index":2559,"title":{},"body":{"injectables/TileService.html":{}}}],["calc(((100vw",{"_index":542,"title":{},"body":{"components/CardElementComponent.html":{}}}],["calc((100vw",{"_index":540,"title":{},"body":{"components/CardElementComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{}}}],["calc(100",{"_index":903,"title":{},"body":{"components/ConfigurationTileViewComponent.html":{}}}],["calc(100vh",{"_index":2096,"title":{},"body":{"components/OutdoorWeatherViewComponent.html":{},"components/SettingsScreenComponent.html":{}}}],["calc(100vw",{"_index":1593,"title":{},"body":{"components/HistoryTileViewComponent.html":{}}}],["calc(var",{"_index":552,"title":{},"body":{"components/CardElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/DashboardScreenComponent.html":{},"components/DashboardViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/TtsPlayerElementComponent.html":{}}}],["calculate",{"_index":2557,"title":{},"body":{"injectables/TileService.html":{}}}],["calculates",{"_index":1527,"title":{},"body":{"injectables/HistoryTileService.html":{}}}],["calibration",{"_index":196,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CalibrationInfoDetailViewComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DashboardViewComponent.html":{},"components/DetailScreenComponent.html":{},"interfaces/ESPConfiguration.html":{},"injectables/ESPConfigurationAPIService.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{},"modules/ViewsModule.html":{},"miscellaneous/variables.html":{}}}],["calibration/insert",{"_index":1013,"title":{},"body":{"interfaces/ESPConfiguration.html":{},"injectables/ESPConfigurationAPIService.html":{}}}],["calibrationinfodetailviewcomponent",{"_index":195,"title":{"components/CalibrationInfoDetailViewComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CalibrationInfoDetailViewComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DashboardViewComponent.html":{},"components/DetailScreenComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{},"modules/ViewsModule.html":{},"coverage.html":{},"overview.html":{}}}],["calibrationvalue",{"_index":1230,"title":{},"body":{"interfaces/ForecastResponse.html":{},"interfaces/GraphDataSet.html":{},"interfaces/IndoorRoomData.html":{},"interfaces/IndoorRoomResponse.html":{},"components/IndoorTileViewComponent.html":{},"interfaces/OutdoorWeatherData.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenData.html":{},"interfaces/PollenResponse.html":{},"interfaces/Tile.html":{},"interfaces/TileArrays.html":{},"injectables/WeatherAPIService.html":{},"interfaces/WeatherData.html":{},"interfaces/WeatherForecastData.html":{},"interfaces/WeatherHistoryByDayData.html":{},"interfaces/WeatherHistoryData.html":{},"miscellaneous/variables.html":{}}}],["called",{"_index":1047,"title":{},"body":{"components/ForecastDetailViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"injectables/WeatherDataService.html":{}}}],["calling",{"_index":3027,"title":{},"body":{"miscellaneous/variables.html":{}}}],["calls",{"_index":855,"title":{},"body":{"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"injectables/WeatherDataService.html":{}}}],["card",{"_index":198,"title":{},"body":{"components/AppComponent.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CalibrationInfoDetailViewComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DashboardViewComponent.html":{},"components/DetailScreenComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{},"modules/UiElementsModule.html":{}}}],["cardelementcomponent",{"_index":197,"title":{"components/CardElementComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CalibrationInfoDetailViewComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DashboardViewComponent.html":{},"components/DetailScreenComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{},"modules/UiElementsModule.html":{},"coverage.html":{},"overview.html":{}}}],["cardsize",{"_index":408,"title":{},"body":{"components/ApparentTemperatureTileViewComponent.html":{},"components/CardElementComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/SimpleTileViewComponent.html":{},"miscellaneous/enumerations.html":{}}}],["cardsize.auto",{"_index":520,"title":{},"body":{"components/CardElementComponent.html":{}}}],["cardsizetype",{"_index":397,"title":{},"body":{"components/ApparentTemperatureTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/SimpleTileViewComponent.html":{}}}],["caret",{"_index":882,"title":{},"body":{"components/ConfigurationTilePopUpDialogView.html":{}}}],["case",{"_index":721,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"injectables/ImageService.html":{},"interfaces/LoginResponse.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PollenTagElementComponent.html":{},"injectables/TextService.html":{},"injectables/TileService.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{},"miscellaneous/variables.html":{}}}],["celsius",{"_index":2462,"title":{},"body":{"injectables/TextService.html":{}}}],["center",{"_index":458,"title":{},"body":{"components/BackButtonElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/RegistrationViewComponent.html":{}}}],["change",{"_index":143,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["changeconfig",{"_index":1011,"title":{},"body":{"interfaces/ESPConfiguration.html":{},"injectables/ESPConfigurationAPIService.html":{}}}],["changed",{"_index":525,"title":{},"body":{"components/CardElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/SliderElementComponent.html":{},"miscellaneous/enumerations.html":{}}}],["changes",{"_index":737,"title":{},"body":{"components/CheckboxSwitcherElementComponent.html":{},"components/ForecastDetailViewComponent.html":{},"injectables/ImageService.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"injectables/WeatherDataService.html":{}}}],["changevalue",{"_index":2360,"title":{},"body":{"components/SliderElementComponent.html":{}}}],["changevalue(event",{"_index":2363,"title":{},"body":{"components/SliderElementComponent.html":{}}}],["chart",{"_index":257,"title":{},"body":{"components/AppComponent.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CalibrationInfoDetailViewComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DashboardViewComponent.html":{},"components/DetailScreenComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{},"modules/UiElementsModule.html":{},"coverage.html":{}}}],["chartcolor",{"_index":1561,"title":{},"body":{"components/HistoryTileViewComponent.html":{}}}],["chartcolors",{"_index":1551,"title":{},"body":{"components/HistoryTileViewComponent.html":{}}}],["chartcolors[0",{"_index":1582,"title":{},"body":{"components/HistoryTileViewComponent.html":{}}}],["chartdata",{"_index":1552,"title":{},"body":{"components/HistoryTileViewComponent.html":{}}}],["chartdataset",{"_index":1562,"title":{},"body":{"components/HistoryTileViewComponent.html":{}}}],["chartdataset[0].data",{"_index":1579,"title":{},"body":{"components/HistoryTileViewComponent.html":{}}}],["chartdataset[0].label",{"_index":1581,"title":{},"body":{"components/HistoryTileViewComponent.html":{}}}],["chartlabel",{"_index":1564,"title":{},"body":{"components/HistoryTileViewComponent.html":{}}}],["chartlabels",{"_index":1553,"title":{},"body":{"components/HistoryTileViewComponent.html":{}}}],["chartlegend",{"_index":1554,"title":{},"body":{"components/HistoryTileViewComponent.html":{}}}],["chartoptions",{"_index":1555,"title":{},"body":{"components/HistoryTileViewComponent.html":{}}}],["chartplugins",{"_index":1556,"title":{},"body":{"components/HistoryTileViewComponent.html":{}}}],["charts",{"_index":1316,"title":{},"body":{"components/HistoryDetailViewComponent.html":{},"injectables/HistoryTileService.html":{},"components/HistoryTileViewComponent.html":{},"modules/ViewsModule.html":{},"dependencies.html":{}}}],["chartsmodule",{"_index":2702,"title":{},"body":{"modules/ViewsModule.html":{}}}],["check",{"_index":579,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/LoginResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{},"index.html":{}}}],["checkbox",{"_index":200,"title":{},"body":{"components/AppComponent.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CalibrationInfoDetailViewComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DashboardViewComponent.html":{},"components/DetailScreenComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{},"modules/UiElementsModule.html":{}}}],["checkboxswitcherelementcomponent",{"_index":199,"title":{"components/CheckboxSwitcherElementComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CalibrationInfoDetailViewComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DashboardViewComponent.html":{},"components/DetailScreenComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{},"modules/UiElementsModule.html":{},"coverage.html":{},"overview.html":{}}}],["checked",{"_index":755,"title":{},"body":{"components/CheckboxSwitcherElementComponent.html":{}}}],["checkedimage",{"_index":743,"title":{},"body":{"components/CheckboxSwitcherElementComponent.html":{}}}],["checks",{"_index":1360,"title":{},"body":{"components/HistoryDetailViewComponent.html":{}}}],["checktokenresponse",{"_index":574,"title":{"interfaces/CheckTokenResponse.html":{}},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/LoginResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{},"coverage.html":{}}}],["checktokenurl",{"_index":600,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/LoginResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{}}}],["child",{"_index":539,"title":{},"body":{"components/CardElementComponent.html":{}}}],["child(1",{"_index":2622,"title":{},"body":{"components/TtsPlayerElementComponent.html":{}}}],["child(10",{"_index":2646,"title":{},"body":{"components/TtsPlayerElementComponent.html":{}}}],["child(11",{"_index":2649,"title":{},"body":{"components/TtsPlayerElementComponent.html":{}}}],["child(12",{"_index":2651,"title":{},"body":{"components/TtsPlayerElementComponent.html":{}}}],["child(13",{"_index":2653,"title":{},"body":{"components/TtsPlayerElementComponent.html":{}}}],["child(14",{"_index":2655,"title":{},"body":{"components/TtsPlayerElementComponent.html":{}}}],["child(15",{"_index":2657,"title":{},"body":{"components/TtsPlayerElementComponent.html":{}}}],["child(16",{"_index":2659,"title":{},"body":{"components/TtsPlayerElementComponent.html":{}}}],["child(17",{"_index":2661,"title":{},"body":{"components/TtsPlayerElementComponent.html":{}}}],["child(18",{"_index":2663,"title":{},"body":{"components/TtsPlayerElementComponent.html":{}}}],["child(19",{"_index":2664,"title":{},"body":{"components/TtsPlayerElementComponent.html":{}}}],["child(2",{"_index":2624,"title":{},"body":{"components/TtsPlayerElementComponent.html":{}}}],["child(20",{"_index":2666,"title":{},"body":{"components/TtsPlayerElementComponent.html":{}}}],["child(3",{"_index":2626,"title":{},"body":{"components/TtsPlayerElementComponent.html":{}}}],["child(4",{"_index":2629,"title":{},"body":{"components/TtsPlayerElementComponent.html":{}}}],["child(5",{"_index":2632,"title":{},"body":{"components/TtsPlayerElementComponent.html":{}}}],["child(6",{"_index":2635,"title":{},"body":{"components/TtsPlayerElementComponent.html":{}}}],["child(7",{"_index":2638,"title":{},"body":{"components/TtsPlayerElementComponent.html":{}}}],["child(8",{"_index":2641,"title":{},"body":{"components/TtsPlayerElementComponent.html":{}}}],["child(9",{"_index":2643,"title":{},"body":{"components/TtsPlayerElementComponent.html":{}}}],["children",{"_index":367,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["choosen",{"_index":2213,"title":{},"body":{"components/PollenflugDetailViewComponent.html":{}}}],["chosen",{"_index":2282,"title":{},"body":{"components/PollenflugSmallTileComponent.html":{}}}],["class",{"_index":87,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CalibrationInfoDetailViewComponent.html":{},"components/CardElementComponent.html":{},"interfaces/CheckTokenResponse.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DashboardViewComponent.html":{},"components/DetailScreenComponent.html":{},"interfaces/ESPConfiguration.html":{},"injectables/ESPConfigurationAPIService.html":{},"components/ForecastDetailViewComponent.html":{},"interfaces/ForecastResponse.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"injectables/HistoryTileService.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"injectables/ImageService.html":{},"components/IndoorDetailViewComponent.html":{},"interfaces/IndoorRoomResponse.html":{},"components/IndoorTileViewComponent.html":{},"injectables/LocalStorageService.html":{},"interfaces/LoginResponse.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"interfaces/OutdoorWeatherResponse.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenListElementComponent.html":{},"interfaces/PollenResponse.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"modules/ScreensModule.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"injectables/SpeechService.html":{},"injectables/TextService.html":{},"injectables/TileService.html":{},"components/TtsPlayerElementComponent.html":{},"modules/UiElementsModule.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{},"modules/ViewsModule.html":{},"injectables/WeatherAPIService.html":{},"injectables/WeatherDataService.html":{}}}],["clear",{"_index":1653,"title":{},"body":{"injectables/ImageService.html":{},"injectables/LocalStorageService.html":{},"injectables/TextService.html":{}}}],["cli",{"_index":2959,"title":{},"body":{"index.html":{}}}],["clickedoutdoorweatherview",{"_index":28,"title":{},"body":{"components/AppComponent.html":{}}}],["clickme",{"_index":29,"title":{},"body":{"components/AppComponent.html":{}}}],["closeevent",{"_index":1928,"title":{},"body":{"components/MenuElementComponent.html":{}}}],["closemenu",{"_index":1907,"title":{},"body":{"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{}}}],["closes",{"_index":1905,"title":{},"body":{"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{}}}],["cloudy",{"_index":1633,"title":{},"body":{"injectables/ImageService.html":{},"injectables/TextService.html":{},"miscellaneous/variables.html":{}}}],["cluster_appmodule",{"_index":281,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":284,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":282,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":283,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_screensmodule",{"_index":2345,"title":{},"body":{"modules/ScreensModule.html":{},"overview.html":{}}}],["cluster_screensmodule_declarations",{"_index":2346,"title":{},"body":{"modules/ScreensModule.html":{},"overview.html":{}}}],["cluster_screensmodule_imports",{"_index":2347,"title":{},"body":{"modules/ScreensModule.html":{}}}],["cluster_uielementsmodule",{"_index":2672,"title":{},"body":{"modules/UiElementsModule.html":{},"overview.html":{}}}],["cluster_uielementsmodule_declarations",{"_index":2673,"title":{},"body":{"modules/UiElementsModule.html":{},"overview.html":{}}}],["cluster_uielementsmodule_exports",{"_index":2674,"title":{},"body":{"modules/UiElementsModule.html":{},"overview.html":{}}}],["cluster_viewsmodule",{"_index":2694,"title":{},"body":{"modules/ViewsModule.html":{},"overview.html":{}}}],["cluster_viewsmodule_declarations",{"_index":2696,"title":{},"body":{"modules/ViewsModule.html":{},"overview.html":{}}}],["cluster_viewsmodule_exports",{"_index":2695,"title":{},"body":{"modules/ViewsModule.html":{},"overview.html":{}}}],["cluster_viewsmodule_imports",{"_index":2697,"title":{},"body":{"modules/ViewsModule.html":{}}}],["code",{"_index":945,"title":{},"body":{"components/DashboardScreenComponent.html":{},"components/DashboardViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"index.html":{}}}],["color",{"_index":137,"title":{},"body":{"components/AppComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"injectables/ImageService.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SettingsScreenComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{}}}],["colorvalue",{"_index":2159,"title":{},"body":{"components/PollenTagElementComponent.html":{}}}],["column",{"_index":787,"title":{},"body":{"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuElementComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/RegistrationViewComponent.html":{}}}],["comes",{"_index":327,"title":{},"body":{"modules/AppModule.html":{},"components/OutdoorWeatherViewComponent.html":{}}}],["command",{"_index":2983,"title":{},"body":{"index.html":{}}}],["commonmodule",{"_index":2349,"title":{},"body":{"modules/ScreensModule.html":{},"modules/UiElementsModule.html":{},"modules/ViewsModule.html":{}}}],["complexity",{"_index":944,"title":{},"body":{"components/DashboardScreenComponent.html":{},"components/DashboardViewComponent.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CalibrationInfoDetailViewComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DashboardViewComponent.html":{},"components/DetailScreenComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CalibrationInfoDetailViewComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DashboardViewComponent.html":{},"components/DetailScreenComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"injectables/TileService.html":{},"components/TtsPlayerElementComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":184,"title":{},"body":{"components/AppComponent.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CalibrationInfoDetailViewComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DashboardViewComponent.html":{},"components/DetailScreenComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CalibrationInfoDetailViewComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DashboardViewComponent.html":{},"components/DetailScreenComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"injectables/HistoryTileService.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"injectables/TileService.html":{},"components/TtsPlayerElementComponent.html":{},"overview.html":{}}}],["components/screens/dashboard",{"_index":335,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["components/screens/detail",{"_index":338,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["components/screens/onboarding",{"_index":340,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["components/screens/screens.module",{"_index":302,"title":{},"body":{"modules/AppModule.html":{}}}],["components/screens/settings",{"_index":342,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["components/ui",{"_index":299,"title":{},"body":{"modules/AppModule.html":{}}}],["components/views/calibration",{"_index":344,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["components/views/configuration",{"_index":347,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["components/views/forecast",{"_index":349,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["components/views/history",{"_index":351,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["components/views/indoor",{"_index":353,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["components/views/login",{"_index":355,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["components/views/outdoor",{"_index":357,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["components/views/personalization",{"_index":359,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["components/views/pollenflug",{"_index":361,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["components/views/registration",{"_index":363,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["components/views/views.module",{"_index":303,"title":{},"body":{"modules/AppModule.html":{}}}],["compute",{"_index":1317,"title":{},"body":{"components/HistoryDetailViewComponent.html":{}}}],["computes",{"_index":965,"title":{},"body":{"components/DashboardViewComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/PollenflugDetailViewComponent.html":{}}}],["concurring",{"_index":2198,"title":{},"body":{"interfaces/PollenType.html":{},"interfaces/UserContext.html":{},"interfaces/UserIdentifikation.html":{}}}],["configurable",{"_index":1301,"title":{},"body":{"interfaces/GraphDataSet.html":{},"interfaces/IndoorRoomData.html":{},"interfaces/OutdoorWeatherData.html":{},"interfaces/PollenData.html":{},"interfaces/Tile.html":{},"interfaces/TileArrays.html":{},"interfaces/WeatherData.html":{},"interfaces/WeatherForecastData.html":{},"interfaces/WeatherHistoryByDayData.html":{},"interfaces/WeatherHistoryData.html":{}}}],["configuration",{"_index":203,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CalibrationInfoDetailViewComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DashboardViewComponent.html":{},"components/DetailScreenComponent.html":{},"interfaces/ESPConfiguration.html":{},"injectables/ESPConfigurationAPIService.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{},"modules/ViewsModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["configuration,{observe",{"_index":1021,"title":{},"body":{"interfaces/ESPConfiguration.html":{},"injectables/ESPConfigurationAPIService.html":{}}}],["configurationicon",{"_index":1922,"title":{},"body":{"components/MenuElementComponent.html":{}}}],["configurationtilepopupdialogview",{"_index":202,"title":{"components/ConfigurationTilePopUpDialogView.html":{}},"body":{"components/AppComponent.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CalibrationInfoDetailViewComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DashboardViewComponent.html":{},"components/DetailScreenComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{},"modules/ViewsModule.html":{},"coverage.html":{},"overview.html":{}}}],["configurationtileviewcomponent",{"_index":205,"title":{"components/ConfigurationTileViewComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CalibrationInfoDetailViewComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DashboardViewComponent.html":{},"components/DetailScreenComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{},"modules/ViewsModule.html":{},"coverage.html":{},"overview.html":{}}}],["configurationviewcomponent",{"_index":206,"title":{"components/ConfigurationViewComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CalibrationInfoDetailViewComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DashboardViewComponent.html":{},"components/DetailScreenComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{},"modules/ViewsModule.html":{},"coverage.html":{},"overview.html":{}}}],["connection",{"_index":387,"title":{},"body":{"components/ApparentTemperatureTileViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"miscellaneous/variables.html":{}}}],["considered",{"_index":1750,"title":{},"body":{"components/IndoorTileViewComponent.html":{}}}],["consists",{"_index":1971,"title":{},"body":{"components/NavBarElementComponent.html":{}}}],["console.log(\"re",{"_index":853,"title":{},"body":{"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{}}}],["console.log(error",{"_index":644,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/ESPConfiguration.html":{},"injectables/ESPConfigurationAPIService.html":{},"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/LoginResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["console.log(readaloud",{"_index":2434,"title":{},"body":{"injectables/TextService.html":{}}}],["console.log(res",{"_index":165,"title":{},"body":{"components/AppComponent.html":{}}}],["console.log(status",{"_index":1024,"title":{},"body":{"interfaces/ESPConfiguration.html":{},"injectables/ESPConfigurationAPIService.html":{}}}],["const",{"_index":134,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"interfaces/ForecastResponse.html":{},"injectables/HistoryTileService.html":{},"injectables/ImageService.html":{},"interfaces/IndoorRoomResponse.html":{},"components/IndoorTileViewComponent.html":{},"injectables/LocalStorageService.html":{},"components/LoginViewComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"interfaces/PollenType.html":{},"components/RegistrationViewComponent.html":{},"interfaces/UserContext.html":{},"interfaces/UserIdentifikation.html":{},"injectables/WeatherAPIService.html":{}}}],["constants",{"_index":1545,"title":{},"body":{"injectables/HistoryTileService.html":{},"injectables/LocalStorageService.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CalibrationInfoDetailViewComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DashboardViewComponent.html":{},"components/DetailScreenComponent.html":{},"injectables/ESPConfigurationAPIService.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"injectables/HistoryTileService.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"injectables/ImageService.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"injectables/LocalStorageService.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"injectables/SpeechService.html":{},"injectables/TextService.html":{},"injectables/TileService.html":{},"components/TtsPlayerElementComponent.html":{},"injectables/UserContextAPIService.html":{},"injectables/WeatherAPIService.html":{},"injectables/WeatherDataService.html":{}}}],["constructor(breakpointobserver",{"_index":1990,"title":{},"body":{"components/OutdoorWeatherDetailViewComponent.html":{}}}],["constructor(dialogref",{"_index":814,"title":{},"body":{"components/ConfigurationTilePopUpDialogView.html":{}}}],["constructor(espconfigurationservice",{"_index":884,"title":{},"body":{"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{}}}],["constructor(formbuilder",{"_index":1835,"title":{},"body":{"components/LoginViewComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/RegistrationViewComponent.html":{}}}],["constructor(historytileservice",{"_index":1332,"title":{},"body":{"components/HistoryDetailViewComponent.html":{}}}],["constructor(httpclient",{"_index":1034,"title":{},"body":{"injectables/ESPConfigurationAPIService.html":{},"injectables/UserContextAPIService.html":{},"injectables/WeatherAPIService.html":{}}}],["constructor(imageservice",{"_index":1256,"title":{},"body":{"components/ForecastTileViewComponent.html":{}}}],["constructor(location",{"_index":435,"title":{},"body":{"components/BackButtonElementComponent.html":{}}}],["constructor(private",{"_index":88,"title":{},"body":{"components/AppComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CalibrationInfoDetailViewComponent.html":{},"interfaces/CheckTokenResponse.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/DashboardViewComponent.html":{},"interfaces/ESPConfiguration.html":{},"injectables/ESPConfigurationAPIService.html":{},"components/ForecastDetailViewComponent.html":{},"interfaces/ForecastResponse.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"injectables/ImageService.html":{},"components/IndoorDetailViewComponent.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/LoginResponse.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"interfaces/OutdoorWeatherResponse.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"interfaces/PollenResponse.html":{},"components/PollenflugDetailViewComponent.html":{},"components/RegistrationViewComponent.html":{},"injectables/TileService.html":{},"components/TtsPlayerElementComponent.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{},"injectables/WeatherAPIService.html":{},"injectables/WeatherDataService.html":{}}}],["constructor(renderer",{"_index":34,"title":{},"body":{"components/AppComponent.html":{}}}],["constructor(router",{"_index":481,"title":{},"body":{"components/CalibrationInfoDetailViewComponent.html":{},"components/MenuElementComponent.html":{},"components/PersonalizationViewComponent.html":{}}}],["constructor(tileservice",{"_index":2723,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["constructor(usercontextservice",{"_index":748,"title":{},"body":{"components/CheckboxSwitcherElementComponent.html":{},"components/DashboardViewComponent.html":{},"injectables/ImageService.html":{},"components/MenuButtonElementComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"injectables/TileService.html":{},"components/TtsPlayerElementComponent.html":{}}}],["constructor(weatherdataservice",{"_index":1040,"title":{},"body":{"components/ForecastDetailViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{}}}],["container",{"_index":169,"title":{},"body":{"components/AppComponent.html":{},"components/CalibrationInfoDetailViewComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DashboardViewComponent.html":{},"components/DetailScreenComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{}}}],["container.checked",{"_index":797,"title":{},"body":{"components/CheckboxSwitcherElementComponent.html":{}}}],["container.motion",{"_index":937,"title":{},"body":{"components/DashboardScreenComponent.html":{},"components/DashboardViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{}}}],["container.small",{"_index":541,"title":{},"body":{"components/CardElementComponent.html":{}}}],["contains",{"_index":1270,"title":{},"body":{"interfaces/GraphDataSet.html":{},"interfaces/IndoorRoomData.html":{},"interfaces/OutdoorWeatherData.html":{},"interfaces/PollenData.html":{},"interfaces/PollenType.html":{},"interfaces/Tile.html":{},"interfaces/TileArrays.html":{},"injectables/TileService.html":{},"interfaces/UserContext.html":{},"interfaces/UserIdentifikation.html":{},"interfaces/WeatherData.html":{},"interfaces/WeatherForecastData.html":{},"interfaces/WeatherHistoryByDayData.html":{},"interfaces/WeatherHistoryData.html":{}}}],["content",{"_index":460,"title":{},"body":{"components/BackButtonElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DashboardViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuElementComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/ProgressChartElementComponent.html":{}}}],["context",{"_index":82,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CheckTokenResponse.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/HistoryTileViewComponent.html":{},"injectables/ImageService.html":{},"injectables/LocalStorageService.html":{},"interfaces/LoginResponse.html":{},"components/LoginViewComponent.html":{},"components/MenuElementComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"interfaces/PollenType.html":{},"components/RegistrationViewComponent.html":{},"injectables/TileService.html":{},"components/TtsPlayerElementComponent.html":{},"interfaces/UserContext.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{},"interfaces/UserIdentifikation.html":{},"injectables/WeatherDataService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["context.service",{"_index":73,"title":{},"body":{"components/AppComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/DashboardViewComponent.html":{},"injectables/ImageService.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/RegistrationViewComponent.html":{},"injectables/TileService.html":{},"components/TtsPlayerElementComponent.html":{},"injectables/WeatherDataService.html":{}}}],["context.service.ts",{"_index":2927,"title":{},"body":{"coverage.html":{}}}],["context.ts",{"_index":2188,"title":{},"body":{"interfaces/PollenType.html":{},"interfaces/UserContext.html":{},"interfaces/UserIdentifikation.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["contrast",{"_index":2102,"title":{},"body":{"components/OutdoorWeatherViewComponent.html":{}}}],["control",{"_index":2359,"title":{},"body":{"components/SliderElementComponent.html":{}}}],["controls",{"_index":1829,"title":{},"body":{"components/LoginViewComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/RegistrationViewComponent.html":{},"components/TtsPlayerElementComponent.html":{}}}],["conversion",{"_index":1458,"title":{},"body":{"injectables/HistoryTileService.html":{}}}],["convert",{"_index":717,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/ForecastResponse.html":{},"injectables/HistoryTileService.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/LoginResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["converted",{"_index":718,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/LoginResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{}}}],["converts",{"_index":1450,"title":{},"body":{"injectables/HistoryTileService.html":{},"components/HistoryTileViewComponent.html":{},"components/PollenTagElementComponent.html":{}}}],["corner",{"_index":535,"title":{},"body":{"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/MenuElementComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/TtsPlayerElementComponent.html":{}}}],["correct",{"_index":2150,"title":{},"body":{"components/PersonalizationViewComponent.html":{}}}],["cotains",{"_index":2677,"title":{},"body":{"interfaces/UserContext.html":{}}}],["count",{"_index":1304,"title":{},"body":{"interfaces/GraphDataSet.html":{},"interfaces/IndoorRoomData.html":{},"interfaces/OutdoorWeatherData.html":{},"components/PersonalizationSettingsViewComponent.html":{},"interfaces/PollenData.html":{},"interfaces/Tile.html":{},"interfaces/TileArrays.html":{},"interfaces/WeatherData.html":{},"interfaces/WeatherForecastData.html":{},"interfaces/WeatherHistoryByDayData.html":{},"interfaces/WeatherHistoryData.html":{}}}],["coverage",{"_index":2838,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":710,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/LoginResponse.html":{},"injectables/TextService.html":{},"injectables/TileService.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{}}}],["createforecasttext",{"_index":2395,"title":{},"body":{"injectables/TextService.html":{}}}],["createforecasttext(data",{"_index":2403,"title":{},"body":{"injectables/TextService.html":{}}}],["createforecasttile(data",{"_index":2546,"title":{},"body":{"injectables/TileService.html":{}}}],["createforecasttitle",{"_index":2396,"title":{},"body":{"injectables/TextService.html":{}}}],["createforecasttitle(data",{"_index":2406,"title":{},"body":{"injectables/TextService.html":{}}}],["createhistorytile(data",{"_index":2547,"title":{},"body":{"injectables/TileService.html":{}}}],["createindoorroomdatafromserverresponse(response",{"_index":1222,"title":{},"body":{"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["createindoorroomtext",{"_index":2397,"title":{},"body":{"injectables/TextService.html":{}}}],["createindoorroomtext(data",{"_index":2408,"title":{},"body":{"injectables/TextService.html":{}}}],["createindoorroomtiles(data",{"_index":2553,"title":{},"body":{"injectables/TileService.html":{}}}],["createoutdoorforecastdatafromserverresponse(response",{"_index":1242,"title":{},"body":{"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["createoutdoortext",{"_index":2398,"title":{},"body":{"injectables/TextService.html":{}}}],["createoutdoortext(data",{"_index":2410,"title":{},"body":{"injectables/TextService.html":{}}}],["createoutdoorweatherdatafromserverresponse(response",{"_index":1198,"title":{},"body":{"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["createoutdoorweathertiles(data",{"_index":2524,"title":{},"body":{"injectables/TileService.html":{}}}],["createpollendatafromserverresponse(response",{"_index":1232,"title":{},"body":{"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["createpollentext",{"_index":2399,"title":{},"body":{"injectables/TextService.html":{}}}],["createpollentext(data",{"_index":2412,"title":{},"body":{"injectables/TextService.html":{}}}],["createpollentiles(data",{"_index":2531,"title":{},"body":{"injectables/TileService.html":{}}}],["creates",{"_index":2740,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["createserverfriendlydate(date",{"_index":1192,"title":{},"body":{"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["createtextfromtilesarray",{"_index":2400,"title":{},"body":{"injectables/TextService.html":{}}}],["createtextfromtilesarray(array",{"_index":2414,"title":{},"body":{"injectables/TextService.html":{}}}],["createtiles",{"_index":2507,"title":{},"body":{"injectables/TileService.html":{},"injectables/WeatherDataService.html":{}}}],["createtiles(outdoorweather",{"_index":2509,"title":{},"body":{"injectables/TileService.html":{}}}],["createusercontextfromserverresponse(usercontext",{"_index":713,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/LoginResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{}}}],["createweathergraphdataset(temperaturedata",{"_index":1530,"title":{},"body":{"injectables/HistoryTileService.html":{}}}],["createweathertext",{"_index":2401,"title":{},"body":{"injectables/TextService.html":{}}}],["createweathertext(data",{"_index":2416,"title":{},"body":{"injectables/TextService.html":{}}}],["css",{"_index":544,"title":{},"body":{"components/CardElementComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DashboardViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/OutdoorWeatherViewComponent.html":{}}}],["current",{"_index":808,"title":{},"body":{"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/DashboardViewComponent.html":{},"interfaces/GraphDataSet.html":{},"injectables/ImageService.html":{},"interfaces/IndoorRoomData.html":{},"interfaces/OutdoorWeatherData.html":{},"components/OutdoorWeatherViewComponent.html":{},"interfaces/PollenData.html":{},"components/ProgressChartElementComponent.html":{},"interfaces/Tile.html":{},"interfaces/TileArrays.html":{},"injectables/TileService.html":{},"interfaces/WeatherData.html":{},"interfaces/WeatherForecastData.html":{},"interfaces/WeatherHistoryByDayData.html":{},"interfaces/WeatherHistoryData.html":{}}}],["currentusercontexturl",{"_index":602,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/LoginResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{}}}],["currentvalue",{"_index":1534,"title":{},"body":{"injectables/HistoryTileService.html":{}}}],["cursor",{"_index":788,"title":{},"body":{"components/CheckboxSwitcherElementComponent.html":{},"components/MenuElementComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/SliderElementComponent.html":{}}}],["da",{"_index":2259,"title":{},"body":{"components/PollenflugDetailViewComponent.html":{}}}],["dabei",{"_index":1107,"title":{},"body":{"components/ForecastDetailViewComponent.html":{}}}],["dadurch",{"_index":2043,"title":{},"body":{"components/OutdoorWeatherDetailViewComponent.html":{}}}],["daher",{"_index":1703,"title":{},"body":{"components/IndoorDetailViewComponent.html":{}}}],["damit",{"_index":2235,"title":{},"body":{"components/PollenflugDetailViewComponent.html":{}}}],["dann",{"_index":2041,"title":{},"body":{"components/OutdoorWeatherDetailViewComponent.html":{}}}],["dark",{"_index":139,"title":{},"body":{"components/AppComponent.html":{},"components/BackButtonElementComponent.html":{},"interfaces/CheckTokenResponse.html":{},"interfaces/ImageModel.html":{},"injectables/ImageService.html":{},"interfaces/LoginResponse.html":{},"components/MenuElementComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"interfaces/PollenType.html":{},"interfaces/UserContext.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{},"interfaces/UserIdentifikation.html":{},"miscellaneous/enumerations.html":{}}}],["dark.png",{"_index":1937,"title":{},"body":{"components/MenuElementComponent.html":{}}}],["das",{"_index":96,"title":{},"body":{"components/AppComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/RegistrationViewComponent.html":{}}}],["dashboard",{"_index":107,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CalibrationInfoDetailViewComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DashboardViewComponent.html":{},"components/DetailScreenComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"interfaces/GraphDataSet.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"interfaces/IndoorRoomData.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"interfaces/OutdoorWeatherData.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"interfaces/PollenData.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"modules/ScreensModule.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"interfaces/Tile.html":{},"interfaces/TileArrays.html":{},"injectables/TileService.html":{},"components/TtsPlayerElementComponent.html":{},"modules/ViewsModule.html":{},"interfaces/WeatherData.html":{},"injectables/WeatherDataService.html":{},"interfaces/WeatherForecastData.html":{},"interfaces/WeatherHistoryByDayData.html":{},"interfaces/WeatherHistoryData.html":{},"miscellaneous/variables.html":{}}}],["dashboardscreencomponent",{"_index":207,"title":{"components/DashboardScreenComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CalibrationInfoDetailViewComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DashboardViewComponent.html":{},"components/DetailScreenComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"modules/ScreensModule.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{},"coverage.html":{},"overview.html":{}}}],["dashboardtiles",{"_index":954,"title":{},"body":{"components/DashboardViewComponent.html":{},"injectables/TileService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["dashboardtiles(tiles",{"_index":2750,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["dashboardviewcomponent",{"_index":209,"title":{"components/DashboardViewComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CalibrationInfoDetailViewComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DashboardViewComponent.html":{},"components/DetailScreenComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{},"modules/ViewsModule.html":{},"coverage.html":{},"overview.html":{}}}],["data",{"_index":127,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"interfaces/CheckTokenResponse.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardViewComponent.html":{},"components/ForecastDetailViewComponent.html":{},"interfaces/ForecastResponse.html":{},"components/ForecastTileViewComponent.html":{},"interfaces/GraphDataSet.html":{},"components/HistoryDetailViewComponent.html":{},"injectables/HistoryTileService.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"injectables/ImageService.html":{},"components/IndoorDetailViewComponent.html":{},"interfaces/IndoorRoomData.html":{},"interfaces/IndoorRoomResponse.html":{},"components/IndoorTileViewComponent.html":{},"interfaces/LoginResponse.html":{},"components/MenuBarElementComponent.html":{},"interfaces/OutdoorWeatherData.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"interfaces/OutdoorWeatherResponse.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"interfaces/PollenData.html":{},"interfaces/PollenResponse.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"injectables/TextService.html":{},"interfaces/Tile.html":{},"interfaces/TileArrays.html":{},"injectables/TileService.html":{},"components/TtsPlayerElementComponent.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{},"injectables/WeatherAPIService.html":{},"interfaces/WeatherData.html":{},"injectables/WeatherDataService.html":{},"interfaces/WeatherForecastData.html":{},"interfaces/WeatherHistoryByDayData.html":{},"interfaces/WeatherHistoryData.html":{},"miscellaneous/variables.html":{}}}],["data(data",{"_index":418,"title":{},"body":{"components/ApparentTemperatureTileViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{}}}],["data.airquality",{"_index":2459,"title":{},"body":{"injectables/TextService.html":{}}}],["data.apparenttemperature",{"_index":2473,"title":{},"body":{"injectables/TextService.html":{}}}],["data.error",{"_index":1852,"title":{},"body":{"components/LoginViewComponent.html":{},"components/RegistrationViewComponent.html":{}}}],["data.fontsize",{"_index":122,"title":{},"body":{"components/AppComponent.html":{}}}],["data.humidity",{"_index":2476,"title":{},"body":{"injectables/TextService.html":{}}}],["data.length",{"_index":994,"title":{},"body":{"components/DashboardViewComponent.html":{}}}],["data.location",{"_index":1887,"title":{},"body":{"components/MenuBarElementComponent.html":{},"injectables/TextService.html":{}}}],["data.map((element",{"_index":1188,"title":{},"body":{"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["data.maxtemperature",{"_index":2474,"title":{},"body":{"injectables/TextService.html":{}}}],["data.mintemperature",{"_index":2475,"title":{},"body":{"injectables/TextService.html":{}}}],["data.pollenname",{"_index":2464,"title":{},"body":{"injectables/TextService.html":{}}}],["data.postcode",{"_index":1888,"title":{},"body":{"components/MenuBarElementComponent.html":{}}}],["data.reducemotion",{"_index":989,"title":{},"body":{"components/DashboardViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{}}}],["data.roomname",{"_index":2458,"title":{},"body":{"injectables/TextService.html":{}}}],["data.service",{"_index":970,"title":{},"body":{"components/DashboardViewComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PollenflugDetailViewComponent.html":{}}}],["data.service.ts",{"_index":2714,"title":{},"body":{"injectables/WeatherDataService.html":{},"coverage.html":{}}}],["data.service.ts:106",{"_index":2724,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["data.service.ts:155",{"_index":2739,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["data.service.ts:175",{"_index":2738,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["data.service.ts:183",{"_index":2735,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["data.service.ts:217",{"_index":2725,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["data.service.ts:224",{"_index":2732,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["data.service.ts:231",{"_index":2729,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["data.service.ts:238",{"_index":2728,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["data.service.ts:245",{"_index":2731,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["data.service.ts:252",{"_index":2734,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["data.temperature",{"_index":2460,"title":{},"body":{"injectables/TextService.html":{}}}],["data.theme",{"_index":2062,"title":{},"body":{"components/OutdoorWeatherViewComponent.html":{}}}],["data.today",{"_index":2465,"title":{},"body":{"injectables/TextService.html":{}}}],["data.trend",{"_index":2447,"title":{},"body":{"injectables/TextService.html":{}}}],["data.weather",{"_index":2477,"title":{},"body":{"injectables/TextService.html":{}}}],["data.weatherdescription",{"_index":2435,"title":{},"body":{"injectables/TextService.html":{}}}],["data/forecast/latest",{"_index":1145,"title":{},"body":{"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["data/indoor/latest",{"_index":1141,"title":{},"body":{"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["data/outdoor/history",{"_index":1143,"title":{},"body":{"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["data/outdoor/latest",{"_index":1139,"title":{},"body":{"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["data/weather.mock",{"_index":1008,"title":{},"body":{"interfaces/ESPConfiguration.html":{},"injectables/ESPConfigurationAPIService.html":{},"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["data/weather.mock.ts",{"_index":2879,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["datahoursperday",{"_index":2548,"title":{},"body":{"injectables/TileService.html":{}}}],["datahoursperday[0",{"_index":2551,"title":{},"body":{"injectables/TileService.html":{}}}],["dataitem.pollenname",{"_index":2538,"title":{},"body":{"injectables/TileService.html":{}}}],["datapoints",{"_index":1187,"title":{},"body":{"interfaces/ForecastResponse.html":{},"interfaces/GraphDataSet.html":{},"injectables/HistoryTileService.html":{},"interfaces/IndoorRoomData.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherData.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenData.html":{},"interfaces/PollenResponse.html":{},"interfaces/Tile.html":{},"interfaces/TileArrays.html":{},"injectables/WeatherAPIService.html":{},"interfaces/WeatherData.html":{},"injectables/WeatherDataService.html":{},"interfaces/WeatherForecastData.html":{},"interfaces/WeatherHistoryByDayData.html":{},"interfaces/WeatherHistoryData.html":{},"miscellaneous/variables.html":{}}}],["datapoints.sort((a",{"_index":1467,"title":{},"body":{"injectables/HistoryTileService.html":{}}}],["datapoints[0].timestamp",{"_index":1472,"title":{},"body":{"injectables/HistoryTileService.html":{}}}],["dataset",{"_index":1322,"title":{},"body":{"components/HistoryDetailViewComponent.html":{},"injectables/HistoryTileService.html":{},"components/HistoryTileViewComponent.html":{}}}],["dataset.humiditydatapoints",{"_index":1588,"title":{},"body":{"components/HistoryTileViewComponent.html":{}}}],["dataset.push(this.createweathergraphdataset(temperaturedatapoints",{"_index":1490,"title":{},"body":{"injectables/HistoryTileService.html":{}}}],["dataset.temperaturedatapoints",{"_index":1580,"title":{},"body":{"components/HistoryTileViewComponent.html":{}}}],["dataset.xaxislabel",{"_index":1592,"title":{},"body":{"components/HistoryTileViewComponent.html":{}}}],["dataset[index].label",{"_index":1394,"title":{},"body":{"components/HistoryDetailViewComponent.html":{}}}],["date",{"_index":1179,"title":{},"body":{"interfaces/ForecastResponse.html":{},"interfaces/GraphDataSet.html":{},"injectables/HistoryTileService.html":{},"injectables/ImageService.html":{},"interfaces/IndoorRoomData.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherData.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenData.html":{},"interfaces/PollenResponse.html":{},"interfaces/Tile.html":{},"interfaces/TileArrays.html":{},"injectables/WeatherAPIService.html":{},"interfaces/WeatherData.html":{},"injectables/WeatherDataService.html":{},"interfaces/WeatherForecastData.html":{},"interfaces/WeatherHistoryByDayData.html":{},"interfaces/WeatherHistoryData.html":{},"miscellaneous/variables.html":{}}}],["date('may",{"_index":2997,"title":{},"body":{"miscellaneous/variables.html":{}}}],["date(date.utc(date.getutcfullyear(),0,1",{"_index":1522,"title":{},"body":{"injectables/HistoryTileService.html":{}}}],["date(date.utc(inputdate.getfullyear",{"_index":1515,"title":{},"body":{"injectables/HistoryTileService.html":{}}}],["date(month",{"_index":1209,"title":{},"body":{"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["date(oldesthistorydate",{"_index":2829,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["date(response.timestamp",{"_index":1229,"title":{},"body":{"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["date(this.oldesthistorydate",{"_index":2799,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["date.getdate",{"_index":1509,"title":{},"body":{"injectables/HistoryTileService.html":{}}}],["date.getfullyear",{"_index":1513,"title":{},"body":{"injectables/HistoryTileService.html":{}}}],["date.gethours",{"_index":1662,"title":{},"body":{"injectables/ImageService.html":{}}}],["date.getmonth",{"_index":1510,"title":{},"body":{"injectables/HistoryTileService.html":{}}}],["date.getutcday",{"_index":1519,"title":{},"body":{"injectables/HistoryTileService.html":{}}}],["date.now",{"_index":2787,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["date.setutcdate(date.getutcdate",{"_index":1520,"title":{},"body":{"injectables/HistoryTileService.html":{}}}],["date.substr(0",{"_index":1202,"title":{},"body":{"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["date.substr(11",{"_index":1207,"title":{},"body":{"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["date.substr(5",{"_index":1204,"title":{},"body":{"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["date.substr(8",{"_index":1206,"title":{},"body":{"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["date.toisostring().slice(0",{"_index":1194,"title":{},"body":{"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["date.totimestring().slice(0",{"_index":1196,"title":{},"body":{"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["daten",{"_index":1409,"title":{},"body":{"components/HistoryDetailViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{}}}],["datestring",{"_index":1193,"title":{},"body":{"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["dauert",{"_index":508,"title":{},"body":{"components/CalibrationInfoDetailViewComponent.html":{}}}],["dawn",{"_index":1313,"title":{},"body":{"interfaces/GraphDataSet.html":{},"injectables/ImageService.html":{},"interfaces/IndoorRoomData.html":{},"interfaces/OutdoorWeatherData.html":{},"components/OutdoorWeatherViewComponent.html":{},"interfaces/PollenData.html":{},"interfaces/Tile.html":{},"interfaces/TileArrays.html":{},"interfaces/WeatherData.html":{},"interfaces/WeatherForecastData.html":{},"interfaces/WeatherHistoryByDayData.html":{},"interfaces/WeatherHistoryData.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["dawndark",{"_index":1680,"title":{},"body":{"injectables/ImageService.html":{},"miscellaneous/variables.html":{}}}],["day",{"_index":1205,"title":{},"body":{"interfaces/ForecastResponse.html":{},"components/HistoryDetailViewComponent.html":{},"injectables/HistoryTileService.html":{},"injectables/ImageService.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/TextService.html":{},"injectables/WeatherAPIService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["dayhour",{"_index":1661,"title":{},"body":{"injectables/ImageService.html":{}}}],["daynum",{"_index":1518,"title":{},"body":{"injectables/HistoryTileService.html":{}}}],["days",{"_index":1460,"title":{},"body":{"injectables/HistoryTileService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["days[date.getday",{"_index":1508,"title":{},"body":{"injectables/HistoryTileService.html":{}}}],["daytime",{"_index":1310,"title":{},"body":{"interfaces/GraphDataSet.html":{},"injectables/ImageService.html":{},"interfaces/IndoorRoomData.html":{},"interfaces/OutdoorWeatherData.html":{},"components/OutdoorWeatherViewComponent.html":{},"interfaces/PollenData.html":{},"interfaces/Tile.html":{},"interfaces/TileArrays.html":{},"interfaces/WeatherData.html":{},"injectables/WeatherDataService.html":{},"interfaces/WeatherForecastData.html":{},"interfaces/WeatherHistoryByDayData.html":{},"interfaces/WeatherHistoryData.html":{},"miscellaneous/enumerations.html":{}}}],["daytime.dawn",{"_index":1642,"title":{},"body":{"injectables/ImageService.html":{}}}],["daytime.night",{"_index":1644,"title":{},"body":{"injectables/ImageService.html":{}}}],["daytime.noon",{"_index":1640,"title":{},"body":{"injectables/ImageService.html":{},"components/OutdoorWeatherViewComponent.html":{}}}],["daytimetype",{"_index":2051,"title":{},"body":{"components/OutdoorWeatherViewComponent.html":{}}}],["de",{"_index":2207,"title":{},"body":{"interfaces/PollenType.html":{},"injectables/SpeechService.html":{},"interfaces/UserContext.html":{},"interfaces/UserIdentifikation.html":{},"miscellaneous/enumerations.html":{}}}],["death",{"_index":2179,"title":{},"body":{"components/PollenTagElementComponent.html":{}}}],["declarations",{"_index":277,"title":{},"body":{"modules/AppModule.html":{},"modules/ScreensModule.html":{},"modules/UiElementsModule.html":{},"modules/ViewsModule.html":{},"overview.html":{}}}],["decoration",{"_index":1871,"title":{},"body":{"components/LoginViewComponent.html":{}}}],["decorators",{"_index":819,"title":{},"body":{"components/ConfigurationTilePopUpDialogView.html":{}}}],["default",{"_index":59,"title":{},"body":{"components/AppComponent.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CardElementComponent.html":{},"interfaces/CheckTokenResponse.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/DashboardViewComponent.html":{},"components/DetailScreenComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"injectables/ImageService.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"interfaces/LoginResponse.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"injectables/TextService.html":{},"components/TtsPlayerElementComponent.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{},"miscellaneous/variables.html":{}}}],["define",{"_index":390,"title":{},"body":{"components/ApparentTemperatureTileViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"interfaces/ImageModel.html":{},"components/IndoorTileViewComponent.html":{},"components/TtsPlayerElementComponent.html":{}}}],["defined",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CalibrationInfoDetailViewComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DashboardViewComponent.html":{},"components/DetailScreenComponent.html":{},"injectables/ESPConfigurationAPIService.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"injectables/HistoryTileService.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"injectables/ImageService.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"injectables/LocalStorageService.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"injectables/SpeechService.html":{},"injectables/TextService.html":{},"injectables/TileService.html":{},"components/TtsPlayerElementComponent.html":{},"injectables/UserContextAPIService.html":{},"injectables/WeatherAPIService.html":{},"injectables/WeatherDataService.html":{}}}],["defines",{"_index":515,"title":{},"body":{"components/CardElementComponent.html":{}}}],["dein",{"_index":494,"title":{},"body":{"components/CalibrationInfoDetailViewComponent.html":{}}}],["deinem",{"_index":504,"title":{},"body":{"components/CalibrationInfoDetailViewComponent.html":{}}}],["deinen",{"_index":1766,"title":{},"body":{"components/IndoorTileViewComponent.html":{}}}],["delete",{"_index":157,"title":{},"body":{"components/AppComponent.html":{}}}],["deletepollefromusercontext",{"_index":2678,"title":{},"body":{"injectables/UserContextAPIService.html":{}}}],["deletepollefromusercontext(userid",{"_index":682,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/LoginResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{}}}],["deletepollenurl",{"_index":608,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/LoginResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{}}}],["deletion",{"_index":681,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/LoginResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{}}}],["dem",{"_index":1077,"title":{},"body":{"components/ForecastDetailViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/PollenflugDetailViewComponent.html":{}}}],["den",{"_index":1401,"title":{},"body":{"components/HistoryDetailViewComponent.html":{}}}],["dennoch",{"_index":2246,"title":{},"body":{"components/PollenflugDetailViewComponent.html":{}}}],["dependencies",{"_index":276,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/ScreensModule.html":{},"modules/UiElementsModule.html":{},"modules/ViewsModule.html":{},"dependencies.html":{},"overview.html":{}}}],["der",{"_index":493,"title":{},"body":{"components/CalibrationInfoDetailViewComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"injectables/TextService.html":{}}}],["des",{"_index":1698,"title":{},"body":{"components/IndoorDetailViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"injectables/TextService.html":{}}}],["description",{"_index":377,"title":{},"body":{"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CalibrationInfoDetailViewComponent.html":{},"components/CardElementComponent.html":{},"interfaces/CheckTokenResponse.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DashboardViewComponent.html":{},"components/DetailScreenComponent.html":{},"interfaces/ESPConfiguration.html":{},"injectables/ESPConfigurationAPIService.html":{},"components/ForecastDetailViewComponent.html":{},"interfaces/ForecastResponse.html":{},"components/ForecastTileViewComponent.html":{},"interfaces/GraphDataSet.html":{},"components/HistoryDetailViewComponent.html":{},"injectables/HistoryTileService.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"interfaces/ImageModel.html":{},"injectables/ImageService.html":{},"components/IndoorDetailViewComponent.html":{},"interfaces/IndoorRoomData.html":{},"interfaces/IndoorRoomResponse.html":{},"components/IndoorTileViewComponent.html":{},"injectables/LocalStorageService.html":{},"interfaces/LoginResponse.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"interfaces/OutdoorWeatherData.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"interfaces/OutdoorWeatherResponse.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"interfaces/PollenData.html":{},"components/PollenListElementComponent.html":{},"interfaces/PollenResponse.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"injectables/SpeechService.html":{},"injectables/TextService.html":{},"interfaces/Tile.html":{},"interfaces/TileArrays.html":{},"injectables/TileService.html":{},"components/TtsPlayerElementComponent.html":{},"interfaces/UserContext.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{},"interfaces/UserIdentifikation.html":{},"injectables/WeatherAPIService.html":{},"interfaces/WeatherData.html":{},"injectables/WeatherDataService.html":{},"interfaces/WeatherForecastData.html":{},"interfaces/WeatherHistoryData.html":{}}}],["deshalb",{"_index":1732,"title":{},"body":{"components/IndoorDetailViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{}}}],["design",{"_index":940,"title":{},"body":{"components/DashboardScreenComponent.html":{},"components/DashboardViewComponent.html":{}}}],["desktop",{"_index":21,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DashboardViewComponent.html":{},"components/DetailScreenComponent.html":{},"components/MenuBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/SettingsScreenComponent.html":{}}}],["desktopbreakpointobserver",{"_index":109,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{}}}],["detail",{"_index":103,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CalibrationInfoDetailViewComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DashboardViewComponent.html":{},"components/DetailScreenComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"modules/ScreensModule.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"injectables/TileService.html":{},"components/TtsPlayerElementComponent.html":{},"modules/ViewsModule.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["detailscreencomponent",{"_index":210,"title":{"components/DetailScreenComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CalibrationInfoDetailViewComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DashboardViewComponent.html":{},"components/DetailScreenComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"modules/ScreensModule.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{},"coverage.html":{},"overview.html":{}}}],["detect",{"_index":978,"title":{},"body":{"components/DashboardViewComponent.html":{}}}],["detects",{"_index":1994,"title":{},"body":{"components/OutdoorWeatherDetailViewComponent.html":{}}}],["determine",{"_index":769,"title":{},"body":{"components/CheckboxSwitcherElementComponent.html":{},"interfaces/GraphDataSet.html":{},"interfaces/IndoorRoomData.html":{},"interfaces/OutdoorWeatherData.html":{},"interfaces/PollenData.html":{},"interfaces/Tile.html":{},"interfaces/TileArrays.html":{},"interfaces/WeatherData.html":{},"interfaces/WeatherForecastData.html":{},"interfaces/WeatherHistoryByDayData.html":{},"interfaces/WeatherHistoryData.html":{}}}],["deutschland",{"_index":2225,"title":{},"body":{"components/PollenflugDetailViewComponent.html":{}}}],["dev",{"_index":2965,"title":{},"body":{"index.html":{}}}],["development",{"_index":2961,"title":{},"body":{"index.html":{}}}],["device",{"_index":979,"title":{},"body":{"components/DashboardViewComponent.html":{},"interfaces/ESPConfiguration.html":{},"injectables/ESPConfigurationAPIService.html":{},"components/OutdoorWeatherDetailViewComponent.html":{}}}],["device1",{"_index":3019,"title":{},"body":{"miscellaneous/variables.html":{}}}],["devices",{"_index":981,"title":{},"body":{"components/DashboardViewComponent.html":{}}}],["dialog",{"_index":805,"title":{},"body":{"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{}}}],["dialogref",{"_index":811,"title":{},"body":{"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{}}}],["dialogref.afterclosed().subscribe(result",{"_index":850,"title":{},"body":{"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{}}}],["die",{"_index":487,"title":{},"body":{"components/CalibrationInfoDetailViewComponent.html":{},"components/ForecastDetailViewComponent.html":{},"interfaces/GraphDataSet.html":{},"components/HistoryDetailViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"interfaces/IndoorRoomData.html":{},"interfaces/OutdoorWeatherData.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"interfaces/PollenData.html":{},"interfaces/PollenType.html":{},"components/PollenflugDetailViewComponent.html":{},"injectables/TextService.html":{},"interfaces/Tile.html":{},"interfaces/TileArrays.html":{},"interfaces/UserContext.html":{},"interfaces/UserIdentifikation.html":{},"interfaces/WeatherData.html":{},"interfaces/WeatherForecastData.html":{},"interfaces/WeatherHistoryByDayData.html":{},"interfaces/WeatherHistoryData.html":{}}}],["diese",{"_index":2479,"title":{},"body":{"injectables/TextService.html":{}}}],["dieser",{"_index":2029,"title":{},"body":{"components/OutdoorWeatherDetailViewComponent.html":{}}}],["different",{"_index":834,"title":{},"body":{"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"interfaces/ImageModel.html":{},"injectables/TileService.html":{}}}],["direction",{"_index":786,"title":{},"body":{"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuElementComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/RegistrationViewComponent.html":{},"components/TtsPlayerElementComponent.html":{}}}],["directive",{"_index":183,"title":{},"body":{"components/AppComponent.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CalibrationInfoDetailViewComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DashboardViewComponent.html":{},"components/DetailScreenComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{}}}],["directives",{"_index":268,"title":{},"body":{"components/AppComponent.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CalibrationInfoDetailViewComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DashboardViewComponent.html":{},"components/DetailScreenComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":2972,"title":{},"body":{"index.html":{}}}],["directory",{"_index":2976,"title":{},"body":{"index.html":{}}}],["direkt",{"_index":2255,"title":{},"body":{"components/PollenflugDetailViewComponent.html":{}}}],["disable",{"_index":1792,"title":{},"body":{"injectables/LocalStorageService.html":{},"components/ProgressChartElementComponent.html":{},"miscellaneous/variables.html":{}}}],["disable_login_identifier",{"_index":1827,"title":{},"body":{"injectables/LocalStorageService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["disabled",{"_index":938,"title":{},"body":{"components/DashboardScreenComponent.html":{},"components/DashboardViewComponent.html":{}}}],["disablelogin",{"_index":1778,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["disablelogin(value",{"_index":1812,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["disableopenapevalue",{"_index":1808,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["disorders",{"_index":2202,"title":{},"body":{"interfaces/PollenType.html":{},"interfaces/UserContext.html":{},"interfaces/UserIdentifikation.html":{}}}],["display",{"_index":454,"title":{},"body":{"components/BackButtonElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DashboardViewComponent.html":{},"components/DetailScreenComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/TtsPlayerElementComponent.html":{}}}],["displayed",{"_index":427,"title":{},"body":{"components/BackButtonElementComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuElementComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/RegistrationViewComponent.html":{}}}],["displays",{"_index":379,"title":{},"body":{"components/ApparentTemperatureTileViewComponent.html":{},"components/CalibrationInfoDetailViewComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuElementComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/TtsPlayerElementComponent.html":{}}}],["dist",{"_index":2975,"title":{},"body":{"index.html":{}}}],["document",{"_index":2148,"title":{},"body":{"components/PersonalizationSettingsViewComponent.html":{}}}],["document.body.style.setproperty",{"_index":2085,"title":{},"body":{"components/OutdoorWeatherViewComponent.html":{}}}],["documentation",{"_index":2839,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CalibrationInfoDetailViewComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DashboardViewComponent.html":{},"components/DetailScreenComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{}}}],["done",{"_index":1968,"title":{},"body":{"components/MenuElementComponent.html":{}}}],["doventilationreminder",{"_index":669,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/LoginResponse.html":{},"interfaces/PollenType.html":{},"interfaces/UserContext.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{},"interfaces/UserIdentifikation.html":{},"miscellaneous/variables.html":{}}}],["downloaded",{"_index":2786,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["drop",{"_index":2094,"title":{},"body":{"components/OutdoorWeatherViewComponent.html":{},"components/TtsPlayerElementComponent.html":{}}}],["du",{"_index":485,"title":{},"body":{"components/CalibrationInfoDetailViewComponent.html":{}}}],["dummy",{"_index":156,"title":{},"body":{"components/AppComponent.html":{}}}],["duration",{"_index":566,"title":{},"body":{"components/CardElementComponent.html":{},"components/TtsPlayerElementComponent.html":{}}}],["during",{"_index":2073,"title":{},"body":{"components/OutdoorWeatherViewComponent.html":{}}}],["dynamic",{"_index":2941,"title":{},"body":{"dependencies.html":{}}}],["dynamically",{"_index":2212,"title":{},"body":{"components/PollenflugDetailViewComponent.html":{}}}],["dürften",{"_index":1080,"title":{},"body":{"components/ForecastDetailViewComponent.html":{}}}],["e",{"_index":144,"title":{},"body":{"components/AppComponent.html":{}}}],["e.g",{"_index":1297,"title":{},"body":{"interfaces/GraphDataSet.html":{},"interfaces/IndoorRoomData.html":{},"injectables/LocalStorageService.html":{},"interfaces/OutdoorWeatherData.html":{},"interfaces/PollenData.html":{},"injectables/TextService.html":{},"interfaces/Tile.html":{},"interfaces/TileArrays.html":{},"interfaces/WeatherData.html":{},"injectables/WeatherDataService.html":{},"interfaces/WeatherForecastData.html":{},"interfaces/WeatherHistoryByDayData.html":{},"interfaces/WeatherHistoryData.html":{}}}],["each",{"_index":910,"title":{},"body":{"components/ConfigurationViewComponent.html":{}}}],["ease",{"_index":1951,"title":{},"body":{"components/MenuElementComponent.html":{},"miscellaneous/variables.html":{}}}],["easily",{"_index":1454,"title":{},"body":{"injectables/HistoryTileService.html":{},"injectables/TileService.html":{}}}],["ein",{"_index":680,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/ForecastResponse.html":{},"components/HistoryDetailViewComponent.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/LoginResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/TextService.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["eine",{"_index":1704,"title":{},"body":{"components/IndoorDetailViewComponent.html":{},"components/LoginViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"injectables/TextService.html":{},"index.html":{}}}],["einem",{"_index":1103,"title":{},"body":{"components/ForecastDetailViewComponent.html":{}}}],["einen",{"_index":1696,"title":{},"body":{"components/IndoorDetailViewComponent.html":{},"components/PollenflugDetailViewComponent.html":{}}}],["einer",{"_index":1100,"title":{},"body":{"components/ForecastDetailViewComponent.html":{}}}],["eines",{"_index":1097,"title":{},"body":{"components/ForecastDetailViewComponent.html":{}}}],["einfacher",{"_index":2191,"title":{},"body":{"interfaces/PollenType.html":{},"interfaces/UserContext.html":{},"interfaces/UserIdentifikation.html":{}}}],["eingesetzt",{"_index":1410,"title":{},"body":{"components/HistoryDetailViewComponent.html":{}}}],["einloggen",{"_index":1961,"title":{},"body":{"components/MenuElementComponent.html":{}}}],["element",{"_index":182,"title":{},"body":{"components/AppComponent.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CalibrationInfoDetailViewComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DashboardViewComponent.html":{},"components/DetailScreenComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"interfaces/PollenType.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{},"interfaces/UserContext.html":{},"interfaces/UserIdentifikation.html":{}}}],["element'},{'name",{"_index":194,"title":{},"body":{"components/AppComponent.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CalibrationInfoDetailViewComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DashboardViewComponent.html":{},"components/DetailScreenComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{}}}],["element.component",{"_index":416,"title":{},"body":{"components/ApparentTemperatureTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/SimpleTileViewComponent.html":{},"modules/UiElementsModule.html":{}}}],["element.component.html",{"_index":429,"title":{},"body":{"components/BackButtonElementComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{}}}],["element.component.scss",{"_index":428,"title":{},"body":{"components/BackButtonElementComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{}}}],["element.component.ts",{"_index":426,"title":{},"body":{"components/BackButtonElementComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["element.component.ts:14",{"_index":2362,"title":{},"body":{"components/SliderElementComponent.html":{}}}],["element.component.ts:15",{"_index":523,"title":{},"body":{"components/CardElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/PollenListElementComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/SliderElementComponent.html":{}}}],["element.component.ts:16",{"_index":522,"title":{},"body":{"components/CardElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/ProgressChartElementComponent.html":{}}}],["element.component.ts:17",{"_index":521,"title":{},"body":{"components/CardElementComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/SliderElementComponent.html":{}}}],["element.component.ts:18",{"_index":438,"title":{},"body":{"components/BackButtonElementComponent.html":{},"components/CardElementComponent.html":{},"components/MenuBarElementComponent.html":{}}}],["element.component.ts:19",{"_index":447,"title":{},"body":{"components/BackButtonElementComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{}}}],["element.component.ts:20",{"_index":519,"title":{},"body":{"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/PollenListElementComponent.html":{},"components/TtsPlayerElementComponent.html":{}}}],["element.component.ts:21",{"_index":749,"title":{},"body":{"components/CheckboxSwitcherElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/ProgressChartElementComponent.html":{}}}],["element.component.ts:22",{"_index":437,"title":{},"body":{"components/BackButtonElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{}}}],["element.component.ts:23",{"_index":750,"title":{},"body":{"components/CheckboxSwitcherElementComponent.html":{},"components/MenuBarElementComponent.html":{},"components/SliderElementComponent.html":{}}}],["element.component.ts:24",{"_index":448,"title":{},"body":{"components/BackButtonElementComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{}}}],["element.component.ts:26",{"_index":443,"title":{},"body":{"components/BackButtonElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/TtsPlayerElementComponent.html":{}}}],["element.component.ts:28",{"_index":1911,"title":{},"body":{"components/MenuButtonElementComponent.html":{}}}],["element.component.ts:30",{"_index":2364,"title":{},"body":{"components/SliderElementComponent.html":{}}}],["element.component.ts:31",{"_index":1882,"title":{},"body":{"components/MenuBarElementComponent.html":{},"components/TtsPlayerElementComponent.html":{}}}],["element.component.ts:32",{"_index":439,"title":{},"body":{"components/BackButtonElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{}}}],["element.component.ts:39",{"_index":1912,"title":{},"body":{"components/MenuButtonElementComponent.html":{}}}],["element.component.ts:40",{"_index":2597,"title":{},"body":{"components/TtsPlayerElementComponent.html":{}}}],["element.component.ts:41",{"_index":758,"title":{},"body":{"components/CheckboxSwitcherElementComponent.html":{},"components/MenuBarElementComponent.html":{}}}],["element.component.ts:45",{"_index":1931,"title":{},"body":{"components/MenuElementComponent.html":{}}}],["element.component.ts:46",{"_index":1909,"title":{},"body":{"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{}}}],["element.component.ts:48",{"_index":2599,"title":{},"body":{"components/TtsPlayerElementComponent.html":{}}}],["element.component.ts:49",{"_index":2163,"title":{},"body":{"components/PollenTagElementComponent.html":{}}}],["element.component.ts:50",{"_index":2164,"title":{},"body":{"components/PollenTagElementComponent.html":{}}}],["element.component.ts:51",{"_index":1942,"title":{},"body":{"components/MenuElementComponent.html":{},"components/PollenTagElementComponent.html":{}}}],["element.component.ts:52",{"_index":1883,"title":{},"body":{"components/MenuBarElementComponent.html":{}}}],["element.component.ts:55",{"_index":2162,"title":{},"body":{"components/PollenTagElementComponent.html":{}}}],["element.component.ts:56",{"_index":1940,"title":{},"body":{"components/MenuElementComponent.html":{}}}],["element.component.ts:58",{"_index":2596,"title":{},"body":{"components/TtsPlayerElementComponent.html":{}}}],["element.component.ts:62",{"_index":1944,"title":{},"body":{"components/MenuElementComponent.html":{}}}],["element.component.ts:64",{"_index":1930,"title":{},"body":{"components/MenuElementComponent.html":{}}}],["element.component.ts:68",{"_index":1939,"title":{},"body":{"components/MenuElementComponent.html":{}}}],["element.component.ts:70",{"_index":1934,"title":{},"body":{"components/MenuElementComponent.html":{}}}],["element.component.ts:71",{"_index":756,"title":{},"body":{"components/CheckboxSwitcherElementComponent.html":{}}}],["element.component.ts:75",{"_index":1932,"title":{},"body":{"components/MenuElementComponent.html":{}}}],["element.component.ts:82",{"_index":1935,"title":{},"body":{"components/MenuElementComponent.html":{}}}],["element.component.ts:89",{"_index":752,"title":{},"body":{"components/CheckboxSwitcherElementComponent.html":{},"components/MenuElementComponent.html":{}}}],["element.component.ts:96",{"_index":1933,"title":{},"body":{"components/MenuElementComponent.html":{}}}],["element.data",{"_index":2424,"title":{},"body":{"injectables/TextService.html":{}}}],["element.id",{"_index":2579,"title":{},"body":{"injectables/TileService.html":{}}}],["element/back",{"_index":425,"title":{},"body":{"components/BackButtonElementComponent.html":{},"modules/UiElementsModule.html":{},"coverage.html":{}}}],["element/card",{"_index":415,"title":{},"body":{"components/ApparentTemperatureTileViewComponent.html":{},"components/CardElementComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/SimpleTileViewComponent.html":{},"modules/UiElementsModule.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["element/checkbox",{"_index":729,"title":{},"body":{"components/CheckboxSwitcherElementComponent.html":{},"modules/UiElementsModule.html":{},"coverage.html":{}}}],["element/menu",{"_index":1876,"title":{},"body":{"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"modules/UiElementsModule.html":{},"coverage.html":{}}}],["element/nav",{"_index":1970,"title":{},"body":{"components/NavBarElementComponent.html":{},"modules/UiElementsModule.html":{},"coverage.html":{}}}],["element/pollen",{"_index":2154,"title":{},"body":{"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"modules/UiElementsModule.html":{},"coverage.html":{}}}],["element/progress",{"_index":2297,"title":{},"body":{"components/ProgressChartElementComponent.html":{},"modules/UiElementsModule.html":{},"coverage.html":{}}}],["element/slider",{"_index":2358,"title":{},"body":{"components/SliderElementComponent.html":{},"modules/UiElementsModule.html":{},"coverage.html":{}}}],["element/tts",{"_index":2585,"title":{},"body":{"components/TtsPlayerElementComponent.html":{},"modules/UiElementsModule.html":{},"coverage.html":{}}}],["elements.module",{"_index":301,"title":{},"body":{"modules/AppModule.html":{},"modules/ScreensModule.html":{},"modules/ViewsModule.html":{}}}],["elements.module.ts",{"_index":2675,"title":{},"body":{"modules/UiElementsModule.html":{}}}],["elements/back",{"_index":424,"title":{},"body":{"components/BackButtonElementComponent.html":{},"coverage.html":{}}}],["elements/card",{"_index":414,"title":{},"body":{"components/ApparentTemperatureTileViewComponent.html":{},"components/CardElementComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/SimpleTileViewComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["elements/checkbox",{"_index":728,"title":{},"body":{"components/CheckboxSwitcherElementComponent.html":{},"coverage.html":{}}}],["elements/menu",{"_index":1875,"title":{},"body":{"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"coverage.html":{}}}],["elements/nav",{"_index":1969,"title":{},"body":{"components/NavBarElementComponent.html":{},"coverage.html":{}}}],["elements/pollen",{"_index":2153,"title":{},"body":{"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"coverage.html":{}}}],["elements/progress",{"_index":2296,"title":{},"body":{"components/ProgressChartElementComponent.html":{},"coverage.html":{}}}],["elements/slider",{"_index":2357,"title":{},"body":{"components/SliderElementComponent.html":{},"coverage.html":{}}}],["elements/tts",{"_index":2584,"title":{},"body":{"components/TtsPlayerElementComponent.html":{},"coverage.html":{}}}],["elements/ui",{"_index":300,"title":{},"body":{"modules/AppModule.html":{},"modules/ScreensModule.html":{},"modules/UiElementsModule.html":{},"modules/ViewsModule.html":{}}}],["emits",{"_index":760,"title":{},"body":{"components/CheckboxSwitcherElementComponent.html":{},"components/SliderElementComponent.html":{}}}],["emitted",{"_index":739,"title":{},"body":{"components/CheckboxSwitcherElementComponent.html":{}}}],["emoji",{"_index":2184,"title":{},"body":{"components/PollenTagElementComponent.html":{},"components/PollenflugSmallTileComponent.html":{}}}],["emojiname",{"_index":2160,"title":{},"body":{"components/PollenTagElementComponent.html":{}}}],["empfindet",{"_index":2023,"title":{},"body":{"components/OutdoorWeatherDetailViewComponent.html":{}}}],["empty",{"_index":2209,"title":{},"body":{"interfaces/PollenType.html":{},"interfaces/UserContext.html":{},"interfaces/UserIdentifikation.html":{},"miscellaneous/variables.html":{}}}],["en",{"_index":2208,"title":{},"body":{"interfaces/PollenType.html":{},"interfaces/UserContext.html":{},"interfaces/UserIdentifikation.html":{},"miscellaneous/enumerations.html":{}}}],["enable",{"_index":2783,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["enabled",{"_index":318,"title":{},"body":{"modules/AppModule.html":{}}}],["end",{"_index":1185,"title":{},"body":{"interfaces/ForecastResponse.html":{},"components/HistoryDetailViewComponent.html":{},"interfaces/IndoorRoomResponse.html":{},"components/IndoorTileViewComponent.html":{},"components/MenuElementComponent.html":{},"interfaces/OutdoorWeatherResponse.html":{},"components/OutdoorWeatherViewComponent.html":{},"interfaces/PollenResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["enddate",{"_index":2707,"title":{},"body":{"injectables/WeatherAPIService.html":{}}}],["engen",{"_index":2247,"title":{},"body":{"components/PollenflugDetailViewComponent.html":{}}}],["enter",{"_index":1830,"title":{},"body":{"components/LoginViewComponent.html":{},"components/MenuElementComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/RegistrationViewComponent.html":{}}}],["entries",{"_index":1919,"title":{},"body":{"components/MenuElementComponent.html":{}}}],["entry",{"_index":2155,"title":{},"body":{"components/PollenListElementComponent.html":{}}}],["entspricht",{"_index":2006,"title":{},"body":{"components/OutdoorWeatherDetailViewComponent.html":{}}}],["enum",{"_index":524,"title":{},"body":{"components/CardElementComponent.html":{},"interfaces/GraphDataSet.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"interfaces/IndoorRoomData.html":{},"interfaces/OutdoorWeatherData.html":{},"interfaces/PollenData.html":{},"interfaces/PollenType.html":{},"interfaces/Tile.html":{},"interfaces/TileArrays.html":{},"interfaces/UserContext.html":{},"interfaces/UserIdentifikation.html":{},"interfaces/WeatherData.html":{},"interfaces/WeatherForecastData.html":{},"interfaces/WeatherHistoryByDayData.html":{},"interfaces/WeatherHistoryData.html":{},"miscellaneous/enumerations.html":{}}}],["enumerations",{"_index":2950,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environment",{"_index":311,"title":{},"body":{"modules/AppModule.html":{},"interfaces/CheckTokenResponse.html":{},"interfaces/ESPConfiguration.html":{},"injectables/ESPConfigurationAPIService.html":{},"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/LoginResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{},"injectables/WeatherAPIService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.baseurl",{"_index":596,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/ESPConfiguration.html":{},"injectables/ESPConfigurationAPIService.html":{},"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/LoginResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["environment.production",{"_index":319,"title":{},"body":{"modules/AppModule.html":{}}}],["environment.testdata",{"_index":1015,"title":{},"body":{"interfaces/ESPConfiguration.html":{},"injectables/ESPConfigurationAPIService.html":{},"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["environments/environment",{"_index":312,"title":{},"body":{"modules/AppModule.html":{}}}],["erdatmosphäre",{"_index":1119,"title":{},"body":{"components/ForecastDetailViewComponent.html":{}}}],["erfahrung",{"_index":1071,"title":{},"body":{"components/ForecastDetailViewComponent.html":{}}}],["erle",{"_index":3015,"title":{},"body":{"miscellaneous/variables.html":{}}}],["erneut",{"_index":643,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/ESPConfiguration.html":{},"injectables/ESPConfigurationAPIService.html":{},"interfaces/LoginResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{}}}],["error",{"_index":635,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/ESPConfiguration.html":{},"injectables/ESPConfigurationAPIService.html":{},"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/LoginResponse.html":{},"components/LoginViewComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"components/RegistrationViewComponent.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["erstellen",{"_index":2192,"title":{},"body":{"interfaces/PollenType.html":{},"interfaces/UserContext.html":{},"interfaces/UserIdentifikation.html":{}}}],["erwartete",{"_index":2275,"title":{},"body":{"components/PollenflugDetailViewComponent.html":{}}}],["es",{"_index":641,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"components/ConfigurationViewComponent.html":{},"interfaces/ESPConfiguration.html":{},"injectables/ESPConfigurationAPIService.html":{},"components/ForecastDetailViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"interfaces/LoginResponse.html":{},"components/PollenflugDetailViewComponent.html":{},"injectables/TextService.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{}}}],["esche",{"_index":2883,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["esche.id",{"_index":3016,"title":{},"body":{"miscellaneous/variables.html":{}}}],["esp",{"_index":835,"title":{},"body":{"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"interfaces/ESPConfiguration.html":{},"injectables/ESPConfigurationAPIService.html":{},"interfaces/GraphDataSet.html":{},"interfaces/IndoorRoomData.html":{},"interfaces/OutdoorWeatherData.html":{},"interfaces/PollenData.html":{},"interfaces/Tile.html":{},"interfaces/TileArrays.html":{},"interfaces/WeatherData.html":{},"interfaces/WeatherForecastData.html":{},"interfaces/WeatherHistoryByDayData.html":{},"interfaces/WeatherHistoryData.html":{}}}],["espconfig/all",{"_index":1010,"title":{},"body":{"interfaces/ESPConfiguration.html":{},"injectables/ESPConfigurationAPIService.html":{}}}],["espconfig/change",{"_index":1012,"title":{},"body":{"interfaces/ESPConfiguration.html":{},"injectables/ESPConfigurationAPIService.html":{}}}],["espconfiguration",{"_index":825,"title":{"interfaces/ESPConfiguration.html":{}},"body":{"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"interfaces/ESPConfiguration.html":{},"injectables/ESPConfigurationAPIService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["espconfigurationapiservice",{"_index":826,"title":{"injectables/ESPConfigurationAPIService.html":{}},"body":{"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"interfaces/ESPConfiguration.html":{},"injectables/ESPConfigurationAPIService.html":{},"coverage.html":{}}}],["espconfigurations",{"_index":912,"title":{},"body":{"components/ConfigurationViewComponent.html":{},"interfaces/ESPConfiguration.html":{},"injectables/ESPConfigurationAPIService.html":{}}}],["espconfigurationservice",{"_index":845,"title":{},"body":{"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{}}}],["established",{"_index":3025,"title":{},"body":{"miscellaneous/variables.html":{}}}],["evenly",{"_index":2089,"title":{},"body":{"components/OutdoorWeatherViewComponent.html":{}}}],["event",{"_index":738,"title":{},"body":{"components/CheckboxSwitcherElementComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/SliderElementComponent.html":{}}}],["eventemitter",{"_index":751,"title":{},"body":{"components/CheckboxSwitcherElementComponent.html":{},"components/MenuElementComponent.html":{},"components/SliderElementComponent.html":{}}}],["eventlistener",{"_index":2072,"title":{},"body":{"components/OutdoorWeatherViewComponent.html":{}}}],["events",{"_index":2303,"title":{},"body":{"components/ProgressChartElementComponent.html":{}}}],["existiert",{"_index":1399,"title":{},"body":{"components/HistoryDetailViewComponent.html":{}}}],["explizit",{"_index":149,"title":{},"body":{"components/AppComponent.html":{}}}],["export",{"_index":86,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CalibrationInfoDetailViewComponent.html":{},"components/CardElementComponent.html":{},"interfaces/CheckTokenResponse.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DashboardViewComponent.html":{},"components/DetailScreenComponent.html":{},"interfaces/ESPConfiguration.html":{},"injectables/ESPConfigurationAPIService.html":{},"components/ForecastDetailViewComponent.html":{},"interfaces/ForecastResponse.html":{},"components/ForecastTileViewComponent.html":{},"interfaces/GraphDataSet.html":{},"components/HistoryDetailViewComponent.html":{},"injectables/HistoryTileService.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"interfaces/ImageModel.html":{},"injectables/ImageService.html":{},"components/IndoorDetailViewComponent.html":{},"interfaces/IndoorRoomData.html":{},"interfaces/IndoorRoomResponse.html":{},"components/IndoorTileViewComponent.html":{},"injectables/LocalStorageService.html":{},"interfaces/LoginResponse.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"interfaces/OutdoorWeatherData.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"interfaces/OutdoorWeatherResponse.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"interfaces/PollenData.html":{},"components/PollenListElementComponent.html":{},"interfaces/PollenResponse.html":{},"components/PollenTagElementComponent.html":{},"interfaces/PollenType.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"modules/ScreensModule.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"injectables/SpeechService.html":{},"injectables/TextService.html":{},"interfaces/Tile.html":{},"interfaces/TileArrays.html":{},"injectables/TileService.html":{},"components/TtsPlayerElementComponent.html":{},"modules/UiElementsModule.html":{},"interfaces/UserContext.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{},"interfaces/UserIdentifikation.html":{},"modules/ViewsModule.html":{},"injectables/WeatherAPIService.html":{},"interfaces/WeatherData.html":{},"injectables/WeatherDataService.html":{},"interfaces/WeatherForecastData.html":{},"interfaces/WeatherHistoryByDayData.html":{},"interfaces/WeatherHistoryData.html":{}}}],["exports",{"_index":280,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ScreensModule.html":{},"modules/UiElementsModule.html":{},"modules/ViewsModule.html":{},"overview.html":{}}}],["extends",{"_index":1271,"title":{},"body":{"interfaces/GraphDataSet.html":{},"interfaces/IndoorRoomData.html":{},"interfaces/OutdoorWeatherData.html":{},"interfaces/PollenData.html":{},"interfaces/Tile.html":{},"interfaces/TileArrays.html":{},"interfaces/WeatherData.html":{},"interfaces/WeatherForecastData.html":{},"interfaces/WeatherHistoryByDayData.html":{},"interfaces/WeatherHistoryData.html":{}}}],["external",{"_index":1452,"title":{},"body":{"injectables/HistoryTileService.html":{}}}],["extremwerte",{"_index":2482,"title":{},"body":{"injectables/TextService.html":{}}}],["fails",{"_index":1841,"title":{},"body":{"components/LoginViewComponent.html":{},"components/RegistrationViewComponent.html":{}}}],["fallend",{"_index":2451,"title":{},"body":{"injectables/TextService.html":{}}}],["falling",{"_index":2450,"title":{},"body":{"injectables/TextService.html":{},"miscellaneous/variables.html":{}}}],["false",{"_index":61,"title":{},"body":{"components/AppComponent.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/CardElementComponent.html":{},"components/DashboardViewComponent.html":{},"components/DetailScreenComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"injectables/LocalStorageService.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"interfaces/PollenType.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/SettingsScreenComponent.html":{},"components/TtsPlayerElementComponent.html":{},"interfaces/UserContext.html":{},"interfaces/UserIdentifikation.html":{},"miscellaneous/variables.html":{}}}],["feature",{"_index":968,"title":{},"body":{"components/DashboardViewComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/TtsPlayerElementComponent.html":{}}}],["features",{"_index":2105,"title":{},"body":{"components/PersonalizationSettingsViewComponent.html":{}}}],["fehler",{"_index":637,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/ESPConfiguration.html":{},"injectables/ESPConfigurationAPIService.html":{},"interfaces/LoginResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{}}}],["fenster",{"_index":495,"title":{},"body":{"components/CalibrationInfoDetailViewComponent.html":{}}}],["fertig",{"_index":1957,"title":{},"body":{"components/MenuElementComponent.html":{},"components/PersonalizationViewComponent.html":{}}}],["ffne",{"_index":491,"title":{},"body":{"components/CalibrationInfoDetailViewComponent.html":{}}}],["field",{"_index":807,"title":{},"body":{"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CalibrationInfoDetailViewComponent.html":{},"components/CardElementComponent.html":{},"interfaces/CheckTokenResponse.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DashboardViewComponent.html":{},"components/DetailScreenComponent.html":{},"interfaces/ESPConfiguration.html":{},"injectables/ESPConfigurationAPIService.html":{},"components/ForecastDetailViewComponent.html":{},"interfaces/ForecastResponse.html":{},"components/ForecastTileViewComponent.html":{},"interfaces/GraphDataSet.html":{},"components/HistoryDetailViewComponent.html":{},"injectables/HistoryTileService.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"interfaces/ImageModel.html":{},"injectables/ImageService.html":{},"components/IndoorDetailViewComponent.html":{},"interfaces/IndoorRoomData.html":{},"interfaces/IndoorRoomResponse.html":{},"components/IndoorTileViewComponent.html":{},"injectables/LocalStorageService.html":{},"interfaces/LoginResponse.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"interfaces/OutdoorWeatherData.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"interfaces/OutdoorWeatherResponse.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"interfaces/PollenData.html":{},"components/PollenListElementComponent.html":{},"interfaces/PollenResponse.html":{},"components/PollenTagElementComponent.html":{},"interfaces/PollenType.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"modules/ScreensModule.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"injectables/SpeechService.html":{},"injectables/TextService.html":{},"interfaces/Tile.html":{},"interfaces/TileArrays.html":{},"injectables/TileService.html":{},"components/TtsPlayerElementComponent.html":{},"modules/UiElementsModule.html":{},"interfaces/UserContext.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{},"interfaces/UserIdentifikation.html":{},"modules/ViewsModule.html":{},"injectables/WeatherAPIService.html":{},"interfaces/WeatherData.html":{},"injectables/WeatherDataService.html":{},"interfaces/WeatherForecastData.html":{},"interfaces/WeatherHistoryByDayData.html":{},"interfaces/WeatherHistoryData.html":{},"coverage.html":{}}}],["files",{"_index":2969,"title":{},"body":{"index.html":{}}}],["fill",{"_index":471,"title":{},"body":{"components/BackButtonElementComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{}}}],["filter",{"_index":1630,"title":{},"body":{"injectables/ImageService.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"miscellaneous/variables.html":{}}}],["filterd",{"_index":1320,"title":{},"body":{"components/HistoryDetailViewComponent.html":{}}}],["first",{"_index":328,"title":{},"body":{"modules/AppModule.html":{}}}],["fixed",{"_index":530,"title":{},"body":{"components/CardElementComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/TtsPlayerElementComponent.html":{}}}],["fixme",{"_index":101,"title":{},"body":{"components/AppComponent.html":{},"components/LoginViewComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"injectables/TileService.html":{}}}],["flag",{"_index":2978,"title":{},"body":{"index.html":{}}}],["flex",{"_index":455,"title":{},"body":{"components/BackButtonElementComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DashboardViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/TtsPlayerElementComponent.html":{}}}],["fließschnupfen",{"_index":2230,"title":{},"body":{"components/PollenflugDetailViewComponent.html":{}}}],["fog",{"_index":1637,"title":{},"body":{"injectables/ImageService.html":{},"injectables/TextService.html":{}}}],["following",{"_index":1563,"title":{},"body":{"components/HistoryTileViewComponent.html":{}}}],["font",{"_index":131,"title":{},"body":{"components/AppComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{}}}],["fontsize",{"_index":121,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CheckTokenResponse.html":{},"interfaces/LoginResponse.html":{},"components/PersonalizationSettingsViewComponent.html":{},"interfaces/PollenType.html":{},"interfaces/UserContext.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{},"interfaces/UserIdentifikation.html":{},"miscellaneous/variables.html":{}}}],["forecast",{"_index":212,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CalibrationInfoDetailViewComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DashboardViewComponent.html":{},"components/DetailScreenComponent.html":{},"components/ForecastDetailViewComponent.html":{},"interfaces/ForecastResponse.html":{},"components/ForecastTileViewComponent.html":{},"interfaces/GraphDataSet.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"interfaces/IndoorRoomData.html":{},"interfaces/IndoorRoomResponse.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"interfaces/OutdoorWeatherData.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"interfaces/OutdoorWeatherResponse.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"interfaces/PollenData.html":{},"components/PollenListElementComponent.html":{},"interfaces/PollenResponse.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"injectables/TextService.html":{},"interfaces/Tile.html":{},"interfaces/TileArrays.html":{},"injectables/TileService.html":{},"components/TtsPlayerElementComponent.html":{},"modules/ViewsModule.html":{},"injectables/WeatherAPIService.html":{},"interfaces/WeatherData.html":{},"injectables/WeatherDataService.html":{},"interfaces/WeatherForecastData.html":{},"interfaces/WeatherHistoryByDayData.html":{},"interfaces/WeatherHistoryData.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["forecastdata",{"_index":1157,"title":{},"body":{"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/TextService.html":{},"injectables/WeatherAPIService.html":{},"injectables/WeatherDataService.html":{}}}],["forecastdata(value",{"_index":2772,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["forecastdetailviewcomponent",{"_index":211,"title":{"components/ForecastDetailViewComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CalibrationInfoDetailViewComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DashboardViewComponent.html":{},"components/DetailScreenComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{},"modules/ViewsModule.html":{},"coverage.html":{},"overview.html":{}}}],["forecastresponse",{"_index":1121,"title":{"interfaces/ForecastResponse.html":{}},"body":{"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/WeatherAPIService.html":{},"coverage.html":{}}}],["forecasttile",{"_index":2884,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["forecasttileviewcomponent",{"_index":213,"title":{"components/ForecastTileViewComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CalibrationInfoDetailViewComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DashboardViewComponent.html":{},"components/DetailScreenComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{},"modules/ViewsModule.html":{},"coverage.html":{},"overview.html":{}}}],["forecasturl",{"_index":1144,"title":{},"body":{"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["forkjoin",{"_index":2744,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["forkjoin([outdoorweather",{"_index":2801,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["form",{"_index":380,"title":{},"body":{"components/ApparentTemperatureTileViewComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{}}}],["formbuilder",{"_index":1836,"title":{},"body":{"components/LoginViewComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/RegistrationViewComponent.html":{}}}],["formcontrol",{"_index":823,"title":{},"body":{"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/RegistrationViewComponent.html":{}}}],["formsmodule",{"_index":2676,"title":{},"body":{"modules/UiElementsModule.html":{},"modules/ViewsModule.html":{}}}],["forschung",{"_index":1073,"title":{},"body":{"components/ForecastDetailViewComponent.html":{}}}],["forward",{"_index":1326,"title":{},"body":{"components/HistoryDetailViewComponent.html":{}}}],["frequency",{"_index":842,"title":{},"body":{"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{}}}],["fromdate",{"_index":2828,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["full",{"_index":371,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/ConfigurationTileViewComponent.html":{},"injectables/ImageService.html":{}}}],["funcionality",{"_index":1053,"title":{},"body":{"components/ForecastDetailViewComponent.html":{}}}],["functio",{"_index":1377,"title":{},"body":{"components/HistoryDetailViewComponent.html":{}}}],["function",{"_index":709,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/DashboardViewComponent.html":{},"components/ForecastDetailViewComponent.html":{},"interfaces/ForecastResponse.html":{},"components/HistoryTileViewComponent.html":{},"injectables/ImageService.html":{},"components/IndoorDetailViewComponent.html":{},"interfaces/IndoorRoomResponse.html":{},"injectables/LocalStorageService.html":{},"interfaces/LoginResponse.html":{},"components/MenuBarElementComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"components/PollenflugDetailViewComponent.html":{},"injectables/TileService.html":{},"components/TtsPlayerElementComponent.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{},"injectables/WeatherAPIService.html":{},"injectables/WeatherDataService.html":{}}}],["funktionieren",{"_index":1845,"title":{},"body":{"components/LoginViewComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{}}}],["further",{"_index":1457,"title":{},"body":{"injectables/HistoryTileService.html":{},"index.html":{}}}],["fühlen",{"_index":2480,"title":{},"body":{"injectables/TextService.html":{}}}],["für",{"_index":1706,"title":{},"body":{"components/IndoorDetailViewComponent.html":{},"components/PollenflugDetailViewComponent.html":{}}}],["gasval",{"_index":1250,"title":{},"body":{"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["gasvalcalibrationvalue",{"_index":1251,"title":{},"body":{"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["geben",{"_index":928,"title":{},"body":{"components/ConfigurationViewComponent.html":{}}}],["gebiet",{"_index":1106,"title":{},"body":{"components/ForecastDetailViewComponent.html":{}}}],["gefühlte",{"_index":1296,"title":{},"body":{"interfaces/GraphDataSet.html":{},"interfaces/IndoorRoomData.html":{},"interfaces/OutdoorWeatherData.html":{},"interfaces/PollenData.html":{},"interfaces/Tile.html":{},"interfaces/TileArrays.html":{},"interfaces/WeatherData.html":{},"interfaces/WeatherForecastData.html":{},"interfaces/WeatherHistoryByDayData.html":{},"interfaces/WeatherHistoryData.html":{}}}],["gefühlten",{"_index":2030,"title":{},"body":{"components/OutdoorWeatherDetailViewComponent.html":{}}}],["gegenstand",{"_index":1069,"title":{},"body":{"components/ForecastDetailViewComponent.html":{}}}],["geklärt",{"_index":1721,"title":{},"body":{"components/IndoorDetailViewComponent.html":{}}}],["gemeint",{"_index":1115,"title":{},"body":{"components/ForecastDetailViewComponent.html":{}}}],["gemessen",{"_index":497,"title":{},"body":{"components/CalibrationInfoDetailViewComponent.html":{}}}],["generate",{"_index":2971,"title":{},"body":{"index.html":{}}}],["generated",{"_index":2594,"title":{},"body":{"components/TtsPlayerElementComponent.html":{},"index.html":{}}}],["gerade",{"_index":2491,"title":{},"body":{"injectables/TextService.html":{}}}],["gering",{"_index":2170,"title":{},"body":{"components/PollenTagElementComponent.html":{}}}],["geringer",{"_index":2027,"title":{},"body":{"components/OutdoorWeatherDetailViewComponent.html":{}}}],["gesamte",{"_index":1118,"title":{},"body":{"components/ForecastDetailViewComponent.html":{}}}],["gestartet",{"_index":489,"title":{},"body":{"components/CalibrationInfoDetailViewComponent.html":{}}}],["gesundheit",{"_index":1707,"title":{},"body":{"components/IndoorDetailViewComponent.html":{}}}],["getaveragehumiditystring",{"_index":1327,"title":{},"body":{"components/HistoryDetailViewComponent.html":{}}}],["getaveragetempstring",{"_index":1328,"title":{},"body":{"components/HistoryDetailViewComponent.html":{}}}],["getcheckedimagesrc",{"_index":740,"title":{},"body":{"components/CheckboxSwitcherElementComponent.html":{}}}],["getdashboardtilessubject",{"_index":2715,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["getdatestringfromdate(date",{"_index":1511,"title":{},"body":{"injectables/HistoryTileService.html":{}}}],["getdaytime",{"_index":1660,"title":{},"body":{"injectables/ImageService.html":{}}}],["getdisablelogin",{"_index":1790,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["getforecastdatasubject",{"_index":2716,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["getforecastdescription",{"_index":1253,"title":{},"body":{"components/ForecastTileViewComponent.html":{}}}],["getforecasticon",{"_index":1254,"title":{},"body":{"components/ForecastTileViewComponent.html":{}}}],["getforecasttitle",{"_index":1255,"title":{},"body":{"components/ForecastTileViewComponent.html":{}}}],["getgradient",{"_index":2053,"title":{},"body":{"components/OutdoorWeatherViewComponent.html":{}}}],["getgradientstylefor",{"_index":1604,"title":{},"body":{"injectables/ImageService.html":{}}}],["getgradientstylefor(weather",{"_index":1608,"title":{},"body":{"injectables/ImageService.html":{}}}],["gethistorydatasetdaysperweekfrom",{"_index":1445,"title":{},"body":{"injectables/HistoryTileService.html":{}}}],["gethistorydatasetdaysperweekfrom(weatherhistorydata",{"_index":1448,"title":{},"body":{"injectables/HistoryTileService.html":{}}}],["gethistorydatasethoursperdayfrom",{"_index":1446,"title":{},"body":{"injectables/HistoryTileService.html":{}}}],["gethistorydatasethoursperdayfrom(weatherhistorydata",{"_index":1462,"title":{},"body":{"injectables/HistoryTileService.html":{}}}],["gethistorydatasubject",{"_index":2717,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["gethourstring(hour",{"_index":1502,"title":{},"body":{"injectables/HistoryTileService.html":{}}}],["getimagesrcfrom",{"_index":1605,"title":{},"body":{"injectables/ImageService.html":{}}}],["getimagesrcfrom(imagemodel",{"_index":1614,"title":{},"body":{"injectables/ImageService.html":{}}}],["getindex",{"_index":1356,"title":{},"body":{"components/HistoryDetailViewComponent.html":{}}}],["getindexoftilein(tilesarray",{"_index":2577,"title":{},"body":{"injectables/TileService.html":{}}}],["getindoorroomtilessubject",{"_index":2755,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["getindoortilessubject",{"_index":2718,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["getitem(key",{"_index":1817,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["getlocation",{"_index":1879,"title":{},"body":{"components/MenuBarElementComponent.html":{}}}],["getmaxvalue",{"_index":1737,"title":{},"body":{"components/IndoorTileViewComponent.html":{}}}],["getoptimalvalue",{"_index":1738,"title":{},"body":{"components/IndoorTileViewComponent.html":{}}}],["getoutdoorweatherdatasubject",{"_index":2719,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["getpollenstringat",{"_index":2109,"title":{},"body":{"components/PersonalizationSettingsViewComponent.html":{}}}],["getpollenstringat(index",{"_index":2118,"title":{},"body":{"components/PersonalizationSettingsViewComponent.html":{}}}],["getpollentilessubject",{"_index":2720,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["getpollenvalueat",{"_index":2110,"title":{},"body":{"components/PersonalizationSettingsViewComponent.html":{}}}],["getpollenvalueat(index",{"_index":2120,"title":{},"body":{"components/PersonalizationSettingsViewComponent.html":{}}}],["getprioritiyof(data",{"_index":2561,"title":{},"body":{"injectables/TileService.html":{}}}],["getqualitystring",{"_index":1739,"title":{},"body":{"components/IndoorTileViewComponent.html":{}}}],["getqualityvalue",{"_index":1740,"title":{},"body":{"components/IndoorTileViewComponent.html":{}}}],["getter",{"_index":2759,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["getthemestringat",{"_index":2111,"title":{},"body":{"components/PersonalizationSettingsViewComponent.html":{}}}],["getthemestringat(index",{"_index":2121,"title":{},"body":{"components/PersonalizationSettingsViewComponent.html":{}}}],["getthemetypeat",{"_index":2112,"title":{},"body":{"components/PersonalizationSettingsViewComponent.html":{}}}],["getthemetypeat(index",{"_index":2122,"title":{},"body":{"components/PersonalizationSettingsViewComponent.html":{}}}],["getthemetypefromserverresponse(theme",{"_index":719,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/LoginResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{}}}],["getting",{"_index":2955,"title":{"index.html":{}},"body":{}}],["getuncheckedimagesrc",{"_index":741,"title":{},"body":{"components/CheckboxSwitcherElementComponent.html":{}}}],["getusercontext",{"_index":1782,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["getuserid",{"_index":1786,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["getuserloggedin",{"_index":1943,"title":{},"body":{"components/MenuElementComponent.html":{}}}],["getweatherdescription",{"_index":2054,"title":{},"body":{"components/OutdoorWeatherViewComponent.html":{}}}],["getweathericonstring",{"_index":1606,"title":{},"body":{"injectables/ImageService.html":{}}}],["getweathericonstring(weather",{"_index":1618,"title":{},"body":{"injectables/ImageService.html":{}}}],["getweatherimage",{"_index":2055,"title":{},"body":{"components/OutdoorWeatherViewComponent.html":{}}}],["getweekdaystringfromdate(date",{"_index":1507,"title":{},"body":{"injectables/HistoryTileService.html":{}}}],["getweeknumber(inputdate",{"_index":1514,"title":{},"body":{"injectables/HistoryTileService.html":{}}}],["getweekstringfromweeknumber(week",{"_index":1504,"title":{},"body":{"injectables/HistoryTileService.html":{}}}],["gewandelt",{"_index":2196,"title":{},"body":{"interfaces/PollenType.html":{},"interfaces/UserContext.html":{},"interfaces/UserIdentifikation.html":{}}}],["gewitter",{"_index":2502,"title":{},"body":{"injectables/TextService.html":{}}}],["gezielte",{"_index":2267,"title":{},"body":{"components/PollenflugDetailViewComponent.html":{}}}],["gibt",{"_index":1722,"title":{},"body":{"components/IndoorDetailViewComponent.html":{},"components/PollenflugDetailViewComponent.html":{}}}],["given",{"_index":1026,"title":{},"body":{"interfaces/ESPConfiguration.html":{},"injectables/ESPConfigurationAPIService.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PollenflugTileViewComponent.html":{}}}],["globally",{"_index":982,"title":{},"body":{"components/DashboardViewComponent.html":{}}}],["go",{"_index":2981,"title":{},"body":{"index.html":{}}}],["goback",{"_index":433,"title":{},"body":{"components/BackButtonElementComponent.html":{}}}],["good",{"_index":1395,"title":{},"body":{"components/HistoryDetailViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"interfaces/PollenType.html":{},"components/ProgressChartElementComponent.html":{},"interfaces/UserContext.html":{},"interfaces/UserIdentifikation.html":{}}}],["gotit",{"_index":480,"title":{},"body":{"components/CalibrationInfoDetailViewComponent.html":{}}}],["grad",{"_index":2461,"title":{},"body":{"injectables/TextService.html":{}}}],["gradient",{"_index":1610,"title":{},"body":{"injectables/ImageService.html":{},"components/LoginViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/ProgressChartElementComponent.html":{}}}],["gradient(0deg",{"_index":1666,"title":{},"body":{"injectables/ImageService.html":{},"components/LoginViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"miscellaneous/variables.html":{}}}],["gradient(170deg",{"_index":1677,"title":{},"body":{"injectables/ImageService.html":{},"miscellaneous/variables.html":{}}}],["gradient(90deg",{"_index":2306,"title":{},"body":{"components/ProgressChartElementComponent.html":{}}}],["gradients",{"_index":1664,"title":{},"body":{"injectables/ImageService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["gradients.dawn",{"_index":1647,"title":{},"body":{"injectables/ImageService.html":{}}}],["gradients.dawndark",{"_index":1643,"title":{},"body":{"injectables/ImageService.html":{}}}],["gradients.highcontrast",{"_index":1632,"title":{},"body":{"injectables/ImageService.html":{}}}],["gradients.night",{"_index":1648,"title":{},"body":{"injectables/ImageService.html":{}}}],["gradients.nightdark",{"_index":1645,"title":{},"body":{"injectables/ImageService.html":{}}}],["gradients.noon",{"_index":1646,"title":{},"body":{"injectables/ImageService.html":{}}}],["gradients.noondark",{"_index":1641,"title":{},"body":{"injectables/ImageService.html":{}}}],["graph",{"_index":1318,"title":{},"body":{"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"modules.html":{}}}],["graphdataset",{"_index":1268,"title":{"interfaces/GraphDataSet.html":{}},"body":{"interfaces/GraphDataSet.html":{},"components/HistoryDetailViewComponent.html":{},"injectables/HistoryTileService.html":{},"components/HistoryTileViewComponent.html":{},"interfaces/IndoorRoomData.html":{},"interfaces/OutdoorWeatherData.html":{},"interfaces/PollenData.html":{},"interfaces/Tile.html":{},"interfaces/TileArrays.html":{},"injectables/TileService.html":{},"interfaces/WeatherData.html":{},"interfaces/WeatherForecastData.html":{},"interfaces/WeatherHistoryByDayData.html":{},"interfaces/WeatherHistoryData.html":{},"coverage.html":{}}}],["graphtype",{"_index":1323,"title":{},"body":{"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{}}}],["graphtype(type",{"_index":1570,"title":{},"body":{"components/HistoryTileViewComponent.html":{}}}],["graupelt",{"_index":2490,"title":{},"body":{"injectables/TextService.html":{}}}],["green",{"_index":2182,"title":{},"body":{"components/PollenTagElementComponent.html":{},"components/PollenflugSmallTileComponent.html":{}}}],["group",{"_index":2609,"title":{},"body":{"components/TtsPlayerElementComponent.html":{},"miscellaneous/variables.html":{}}}],["grows",{"_index":532,"title":{},"body":{"components/CardElementComponent.html":{}}}],["großteil",{"_index":1697,"title":{},"body":{"components/IndoorDetailViewComponent.html":{}}}],["grundlagen",{"_index":1705,"title":{},"body":{"components/IndoorDetailViewComponent.html":{}}}],["gräser",{"_index":3014,"title":{},"body":{"miscellaneous/variables.html":{}}}],["gut",{"_index":1760,"title":{},"body":{"components/IndoorTileViewComponent.html":{}}}],["gute",{"_index":1701,"title":{},"body":{"components/IndoorDetailViewComponent.html":{}}}],["gutes",{"_index":1710,"title":{},"body":{"components/IndoorDetailViewComponent.html":{}}}],["h1",{"_index":421,"title":{},"body":{"components/ApparentTemperatureTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/SimpleTileViewComponent.html":{}}}],["h1.motion",{"_index":1900,"title":{},"body":{"components/MenuBarElementComponent.html":{}}}],["h3",{"_index":551,"title":{},"body":{"components/CardElementComponent.html":{}}}],["h5",{"_index":1868,"title":{},"body":{"components/LoginViewComponent.html":{}}}],["habe",{"_index":511,"title":{},"body":{"components/CalibrationInfoDetailViewComponent.html":{}}}],["haben",{"_index":2466,"title":{},"body":{"injectables/TextService.html":{}}}],["hagelt",{"_index":2501,"title":{},"body":{"injectables/TextService.html":{}}}],["hail",{"_index":2500,"title":{},"body":{"injectables/TextService.html":{}}}],["hasel",{"_index":2885,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["hast",{"_index":486,"title":{},"body":{"components/CalibrationInfoDetailViewComponent.html":{}}}],["hat",{"_index":506,"title":{},"body":{"components/CalibrationInfoDetailViewComponent.html":{},"injectables/TextService.html":{}}}],["hängt",{"_index":1429,"title":{},"body":{"components/HistoryDetailViewComponent.html":{}}}],["häufig",{"_index":1406,"title":{},"body":{"components/HistoryDetailViewComponent.html":{}}}],["hdm",{"_index":1858,"title":{},"body":{"components/LoginViewComponent.html":{}}}],["headers",{"_index":648,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/LoginResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{}}}],["heading",{"_index":1972,"title":{},"body":{"components/NavBarElementComponent.html":{}}}],["height",{"_index":171,"title":{},"body":{"components/AppComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CalibrationInfoDetailViewComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DashboardViewComponent.html":{},"components/DetailScreenComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SettingsScreenComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{}}}],["help",{"_index":2980,"title":{},"body":{"index.html":{}}}],["helper",{"_index":708,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"injectables/LocalStorageService.html":{},"interfaces/LoginResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/TileService.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{},"injectables/WeatherAPIService.html":{},"injectables/WeatherDataService.html":{}}}],["here",{"_index":2199,"title":{},"body":{"interfaces/PollenType.html":{},"injectables/TileService.html":{},"interfaces/UserContext.html":{},"interfaces/UserIdentifikation.html":{}}}],["herrschenden",{"_index":2007,"title":{},"body":{"components/OutdoorWeatherDetailViewComponent.html":{}}}],["heute",{"_index":2467,"title":{},"body":{"injectables/TextService.html":{}}}],["heutigen",{"_index":2481,"title":{},"body":{"injectables/TextService.html":{}}}],["hides",{"_index":918,"title":{},"body":{"components/ConfigurationViewComponent.html":{},"components/DashboardViewComponent.html":{}}}],["hidesubtitle",{"_index":399,"title":{},"body":{"components/ApparentTemperatureTileViewComponent.html":{},"components/CardElementComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{}}}],["hier",{"_index":1167,"title":{},"body":{"interfaces/ForecastResponse.html":{},"components/IndoorDetailViewComponent.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["high",{"_index":1288,"title":{},"body":{"interfaces/GraphDataSet.html":{},"interfaces/IndoorRoomData.html":{},"interfaces/OutdoorWeatherData.html":{},"components/OutdoorWeatherViewComponent.html":{},"interfaces/PollenData.html":{},"interfaces/Tile.html":{},"interfaces/TileArrays.html":{},"interfaces/WeatherData.html":{},"interfaces/WeatherForecastData.html":{},"interfaces/WeatherHistoryByDayData.html":{},"interfaces/WeatherHistoryData.html":{},"miscellaneous/enumerations.html":{}}}],["high.png",{"_index":1938,"title":{},"body":{"components/MenuElementComponent.html":{}}}],["highcontrast",{"_index":724,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/ImageModel.html":{},"injectables/ImageService.html":{},"interfaces/LoginResponse.html":{},"components/MenuElementComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"interfaces/PollenType.html":{},"interfaces/UserContext.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{},"interfaces/UserIdentifikation.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["higher",{"_index":2560,"title":{},"body":{"injectables/TileService.html":{}}}],["highest",{"_index":1287,"title":{},"body":{"interfaces/GraphDataSet.html":{},"interfaces/IndoorRoomData.html":{},"interfaces/OutdoorWeatherData.html":{},"interfaces/PollenData.html":{},"interfaces/Tile.html":{},"interfaces/TileArrays.html":{},"interfaces/WeatherData.html":{},"interfaces/WeatherForecastData.html":{},"interfaces/WeatherHistoryByDayData.html":{},"interfaces/WeatherHistoryData.html":{}}}],["highlight",{"_index":2281,"title":{},"body":{"components/PollenflugSmallTileComponent.html":{}}}],["hin",{"_index":2233,"title":{},"body":{"components/PollenflugDetailViewComponent.html":{}}}],["hinzu",{"_index":2236,"title":{},"body":{"components/PollenflugDetailViewComponent.html":{}}}],["history",{"_index":215,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CalibrationInfoDetailViewComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DashboardViewComponent.html":{},"components/DetailScreenComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"interfaces/GraphDataSet.html":{},"components/HistoryDetailViewComponent.html":{},"injectables/HistoryTileService.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"interfaces/IndoorRoomData.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"interfaces/OutdoorWeatherData.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"interfaces/PollenData.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"interfaces/Tile.html":{},"interfaces/TileArrays.html":{},"injectables/TileService.html":{},"components/TtsPlayerElementComponent.html":{},"modules/ViewsModule.html":{},"interfaces/WeatherData.html":{},"injectables/WeatherDataService.html":{},"interfaces/WeatherForecastData.html":{},"interfaces/WeatherHistoryByDayData.html":{},"interfaces/WeatherHistoryData.html":{},"miscellaneous/enumerations.html":{}}}],["historydata",{"_index":2775,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["historydata(value",{"_index":2777,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["historydata.datapoints.concat(data.datapoints",{"_index":2826,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["historydetailviewcomponent",{"_index":214,"title":{"components/HistoryDetailViewComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CalibrationInfoDetailViewComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DashboardViewComponent.html":{},"components/DetailScreenComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{},"modules/ViewsModule.html":{},"coverage.html":{},"overview.html":{}}}],["historygraphtype",{"_index":1352,"title":{},"body":{"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"miscellaneous/enumerations.html":{}}}],["historygraphtype.humidity",{"_index":1587,"title":{},"body":{"components/HistoryTileViewComponent.html":{}}}],["historygraphtype.temperature",{"_index":1560,"title":{},"body":{"components/HistoryTileViewComponent.html":{}}}],["historytileservice",{"_index":1333,"title":{"injectables/HistoryTileService.html":{}},"body":{"components/HistoryDetailViewComponent.html":{},"injectables/HistoryTileService.html":{},"injectables/TileService.html":{},"coverage.html":{}}}],["historytileviewcomponent",{"_index":216,"title":{"components/HistoryTileViewComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CalibrationInfoDetailViewComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DashboardViewComponent.html":{},"components/DetailScreenComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{},"modules/ViewsModule.html":{},"coverage.html":{},"overview.html":{}}}],["historyurl",{"_index":1142,"title":{},"body":{"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["hoch",{"_index":2178,"title":{},"body":{"components/PollenTagElementComponent.html":{}}}],["hohe",{"_index":2470,"title":{},"body":{"injectables/TextService.html":{}}}],["hohem",{"_index":2020,"title":{},"body":{"components/OutdoorWeatherDetailViewComponent.html":{}}}],["hour",{"_index":1500,"title":{},"body":{"injectables/HistoryTileService.html":{}}}],["hours",{"_index":1464,"title":{},"body":{"injectables/HistoryTileService.html":{}}}],["hover",{"_index":556,"title":{},"body":{"components/CardElementComponent.html":{}}}],["hover:active",{"_index":571,"title":{},"body":{"components/CardElementComponent.html":{}}}],["hover:focus",{"_index":570,"title":{},"body":{"components/CardElementComponent.html":{}}}],["hover:hover",{"_index":569,"title":{},"body":{"components/CardElementComponent.html":{}}}],["hsitory",{"_index":2730,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["html",{"_index":181,"title":{},"body":{"components/AppComponent.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CalibrationInfoDetailViewComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DashboardViewComponent.html":{},"components/DetailScreenComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{}}}],["http",{"_index":37,"title":{},"body":{"components/AppComponent.html":{}}}],["http://192.168.178.47:4201/v1",{"_index":3023,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://localhost:4200",{"_index":2967,"title":{},"body":{"index.html":{}}}],["httpclient",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CheckTokenResponse.html":{},"interfaces/ESPConfiguration.html":{},"injectables/ESPConfigurationAPIService.html":{},"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/LoginResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["httpclientmodule",{"_index":294,"title":{},"body":{"modules/AppModule.html":{}}}],["httpheaders",{"_index":583,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/LoginResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{}}}],["httpoptions",{"_index":647,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/ESPConfiguration.html":{},"injectables/ESPConfigurationAPIService.html":{},"interfaces/LoginResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{}}}],["httpparams",{"_index":584,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/ESPConfiguration.html":{},"injectables/ESPConfigurationAPIService.html":{},"interfaces/LoginResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{}}}],["httpparams().set('deviceid",{"_index":1029,"title":{},"body":{"interfaces/ESPConfiguration.html":{},"injectables/ESPConfigurationAPIService.html":{}}}],["httpparams().set('id",{"_index":674,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/LoginResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{}}}],["humidity",{"_index":218,"title":{},"body":{"components/AppComponent.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CalibrationInfoDetailViewComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DashboardViewComponent.html":{},"components/DetailScreenComponent.html":{},"components/ForecastDetailViewComponent.html":{},"interfaces/ForecastResponse.html":{},"components/ForecastTileViewComponent.html":{},"interfaces/GraphDataSet.html":{},"components/HistoryDetailViewComponent.html":{},"injectables/HistoryTileService.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"interfaces/IndoorRoomData.html":{},"interfaces/IndoorRoomResponse.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"interfaces/OutdoorWeatherData.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"interfaces/OutdoorWeatherResponse.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"interfaces/PollenData.html":{},"components/PollenListElementComponent.html":{},"interfaces/PollenResponse.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"injectables/TextService.html":{},"interfaces/Tile.html":{},"interfaces/TileArrays.html":{},"injectables/TileService.html":{},"components/TtsPlayerElementComponent.html":{},"modules/ViewsModule.html":{},"injectables/WeatherAPIService.html":{},"interfaces/WeatherData.html":{},"interfaces/WeatherForecastData.html":{},"interfaces/WeatherHistoryByDayData.html":{},"interfaces/WeatherHistoryData.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["humidityaverage",{"_index":1272,"title":{},"body":{"interfaces/GraphDataSet.html":{},"injectables/HistoryTileService.html":{},"interfaces/IndoorRoomData.html":{},"interfaces/OutdoorWeatherData.html":{},"interfaces/PollenData.html":{},"interfaces/Tile.html":{},"interfaces/TileArrays.html":{},"interfaces/WeatherData.html":{},"interfaces/WeatherForecastData.html":{},"interfaces/WeatherHistoryByDayData.html":{},"interfaces/WeatherHistoryData.html":{}}}],["humiditydata",{"_index":1529,"title":{},"body":{"injectables/HistoryTileService.html":{}}}],["humiditydata.length",{"_index":1539,"title":{},"body":{"injectables/HistoryTileService.html":{}}}],["humiditydata.reduce(function",{"_index":1536,"title":{},"body":{"injectables/HistoryTileService.html":{}}}],["humiditydata.reverse",{"_index":1541,"title":{},"body":{"injectables/HistoryTileService.html":{}}}],["humiditydatapoints",{"_index":1273,"title":{},"body":{"interfaces/GraphDataSet.html":{},"injectables/HistoryTileService.html":{},"interfaces/IndoorRoomData.html":{},"interfaces/OutdoorWeatherData.html":{},"interfaces/PollenData.html":{},"interfaces/Tile.html":{},"interfaces/TileArrays.html":{},"interfaces/WeatherData.html":{},"interfaces/WeatherForecastData.html":{},"interfaces/WeatherHistoryByDayData.html":{},"interfaces/WeatherHistoryData.html":{}}}],["humiditydatapoints.push(math.round(averagehumidity",{"_index":1485,"title":{},"body":{"injectables/HistoryTileService.html":{}}}],["humiditysum",{"_index":1535,"title":{},"body":{"injectables/HistoryTileService.html":{}}}],["humiditysumofweek",{"_index":1478,"title":{},"body":{"injectables/HistoryTileService.html":{}}}],["humiditytile",{"_index":2525,"title":{},"body":{"injectables/TileService.html":{}}}],["humiditytileviewcomponent",{"_index":217,"title":{"components/HumidityTileViewComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CalibrationInfoDetailViewComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DashboardViewComponent.html":{},"components/DetailScreenComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{},"modules/ViewsModule.html":{},"coverage.html":{},"overview.html":{}}}],["hyphens",{"_index":1967,"title":{},"body":{"components/MenuElementComponent.html":{}}}],["hält",{"_index":1695,"title":{},"body":{"components/IndoorDetailViewComponent.html":{}}}],["höher",{"_index":2025,"title":{},"body":{"components/OutdoorWeatherDetailViewComponent.html":{}}}],["ich",{"_index":512,"title":{},"body":{"components/CalibrationInfoDetailViewComponent.html":{}}}],["icon",{"_index":800,"title":{},"body":{"components/CheckboxSwitcherElementComponent.html":{},"components/ForecastTileViewComponent.html":{},"injectables/ImageService.html":{},"components/MenuElementComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/TtsPlayerElementComponent.html":{}}}],["iconstring",{"_index":1259,"title":{},"body":{"components/ForecastTileViewComponent.html":{}}}],["id",{"_index":631,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/ESPConfiguration.html":{},"injectables/ESPConfigurationAPIService.html":{},"interfaces/ForecastResponse.html":{},"interfaces/GraphDataSet.html":{},"interfaces/IndoorRoomData.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/LoginResponse.html":{},"interfaces/OutdoorWeatherData.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenData.html":{},"interfaces/PollenResponse.html":{},"interfaces/PollenType.html":{},"interfaces/Tile.html":{},"interfaces/TileArrays.html":{},"injectables/TileService.html":{},"interfaces/UserContext.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{},"interfaces/UserIdentifikation.html":{},"injectables/WeatherAPIService.html":{},"interfaces/WeatherData.html":{},"interfaces/WeatherForecastData.html":{},"interfaces/WeatherHistoryByDayData.html":{},"interfaces/WeatherHistoryData.html":{},"miscellaneous/variables.html":{}}}],["identification",{"_index":2204,"title":{},"body":{"interfaces/PollenType.html":{},"interfaces/UserContext.html":{},"interfaces/UserIdentifikation.html":{}}}],["identifier",{"_index":1823,"title":{},"body":{"injectables/LocalStorageService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["identifikation",{"_index":614,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"injectables/LocalStorageService.html":{},"interfaces/LoginResponse.html":{},"interfaces/PollenType.html":{},"interfaces/UserContext.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{},"interfaces/UserIdentifikation.html":{},"miscellaneous/variables.html":{}}}],["identify",{"_index":1277,"title":{},"body":{"interfaces/GraphDataSet.html":{},"interfaces/IndoorRoomData.html":{},"interfaces/OutdoorWeatherData.html":{},"interfaces/PollenData.html":{},"interfaces/Tile.html":{},"interfaces/TileArrays.html":{},"interfaces/WeatherData.html":{},"interfaces/WeatherForecastData.html":{},"interfaces/WeatherHistoryByDayData.html":{},"interfaces/WeatherHistoryData.html":{},"miscellaneous/enumerations.html":{}}}],["if(!data",{"_index":2131,"title":{},"body":{"components/PersonalizationSettingsViewComponent.html":{}}}],["if(!result.success",{"_index":1985,"title":{},"body":{"components/OpenAPELoginTileViewComponent.html":{}}}],["if(!this.reducemotion",{"_index":2078,"title":{},"body":{"components/OutdoorWeatherViewComponent.html":{}}}],["if(array",{"_index":2419,"title":{},"body":{"injectables/TextService.html":{}}}],["if(body",{"_index":626,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/ESPConfiguration.html":{},"injectables/ESPConfigurationAPIService.html":{},"interfaces/LoginResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{}}}],["if(body.id",{"_index":660,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/LoginResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{}}}],["if(body.success",{"_index":627,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/LoginResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{}}}],["if(calibrationvalue",{"_index":1756,"title":{},"body":{"components/IndoorTileViewComponent.html":{}}}],["if(data",{"_index":1885,"title":{},"body":{"components/MenuBarElementComponent.html":{},"injectables/TextService.html":{}}}],["if(data.id",{"_index":1151,"title":{},"body":{"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["if(data.success",{"_index":1851,"title":{},"body":{"components/LoginViewComponent.html":{},"components/RegistrationViewComponent.html":{}}}],["if(dayhour",{"_index":1663,"title":{},"body":{"injectables/ImageService.html":{}}}],["if(disableopenapevalue",{"_index":1810,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["if(forecast",{"_index":2517,"title":{},"body":{"injectables/TileService.html":{}}}],["if(history",{"_index":2519,"title":{},"body":{"injectables/TileService.html":{}}}],["if(historydata",{"_index":2825,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["if(indexintilesarray",{"_index":2575,"title":{},"body":{"injectables/TileService.html":{}}}],["if(lastdate.getdate",{"_index":1480,"title":{},"body":{"injectables/HistoryTileService.html":{}}}],["if(lastdate.gethours",{"_index":1496,"title":{},"body":{"injectables/HistoryTileService.html":{}}}],["if(lastweek",{"_index":1488,"title":{},"body":{"injectables/HistoryTileService.html":{}}}],["if(oldesthistorydate.getmonth",{"_index":2831,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["if(outdoorweather",{"_index":2515,"title":{},"body":{"injectables/TileService.html":{}}}],["if(password",{"_index":2340,"title":{},"body":{"components/RegistrationViewComponent.html":{}}}],["if(preferredpollen.length",{"_index":2534,"title":{},"body":{"injectables/TileService.html":{}}}],["if(response",{"_index":655,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/LoginResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{}}}],["if(scrollvalue",{"_index":2082,"title":{},"body":{"components/OutdoorWeatherViewComponent.html":{}}}],["if(service.isoutputrunning",{"_index":2606,"title":{},"body":{"components/TtsPlayerElementComponent.html":{}}}],["if(success",{"_index":860,"title":{},"body":{"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{}}}],["if(this._dataset",{"_index":1572,"title":{},"body":{"components/HistoryTileViewComponent.html":{}}}],["if(this._indoorroom",{"_index":1752,"title":{},"body":{"components/IndoorTileViewComponent.html":{}}}],["if(this._weatherhistory",{"_index":1378,"title":{},"body":{"components/HistoryDetailViewComponent.html":{}}}],["if(this.dataset",{"_index":1368,"title":{},"body":{"components/HistoryDetailViewComponent.html":{}}}],["if(this.espconfiguration",{"_index":851,"title":{},"body":{"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{}}}],["if(this.getmaxvalue",{"_index":1758,"title":{},"body":{"components/IndoorTileViewComponent.html":{}}}],["if(this.index",{"_index":1387,"title":{},"body":{"components/HistoryDetailViewComponent.html":{}}}],["if(this.isbackpossible",{"_index":1386,"title":{},"body":{"components/HistoryDetailViewComponent.html":{}}}],["if(this.isforwardpossible",{"_index":1385,"title":{},"body":{"components/HistoryDetailViewComponent.html":{}}}],["if(this.outdoorweather",{"_index":2067,"title":{},"body":{"components/OutdoorWeatherViewComponent.html":{}}}],["if(this.selectedtimeinterval",{"_index":1379,"title":{},"body":{"components/HistoryDetailViewComponent.html":{}}}],["if(this.systemtheme",{"_index":780,"title":{},"body":{"components/CheckboxSwitcherElementComponent.html":{},"injectables/ImageService.html":{}}}],["if(this.usercontext?.theme",{"_index":1631,"title":{},"body":{"injectables/ImageService.html":{}}}],["if(this.usercontextdata",{"_index":2135,"title":{},"body":{"components/PersonalizationSettingsViewComponent.html":{}}}],["if(usercontexttheme",{"_index":779,"title":{},"body":{"components/CheckboxSwitcherElementComponent.html":{}}}],["if(weather",{"_index":1651,"title":{},"body":{"injectables/ImageService.html":{}}}],["im",{"_index":2016,"title":{},"body":{"components/OutdoorWeatherDetailViewComponent.html":{},"injectables/TextService.html":{}}}],["image",{"_index":461,"title":{},"body":{"components/BackButtonElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ForecastTileViewComponent.html":{},"interfaces/ImageModel.html":{},"injectables/ImageService.html":{},"components/IndoorTileViewComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/OutdoorWeatherViewComponent.html":{}}}],["image.motion",{"_index":1916,"title":{},"body":{"components/MenuButtonElementComponent.html":{},"components/OutdoorWeatherViewComponent.html":{}}}],["imagemodel",{"_index":444,"title":{"interfaces/ImageModel.html":{}},"body":{"components/BackButtonElementComponent.html":{},"interfaces/ImageModel.html":{},"injectables/ImageService.html":{},"components/MenuElementComponent.html":{},"coverage.html":{}}}],["imagemodel.dark",{"_index":1627,"title":{},"body":{"injectables/ImageService.html":{}}}],["imagemodel.highcontrast",{"_index":1629,"title":{},"body":{"injectables/ImageService.html":{}}}],["imagemodel.light",{"_index":1628,"title":{},"body":{"injectables/ImageService.html":{}}}],["images",{"_index":734,"title":{},"body":{"components/CheckboxSwitcherElementComponent.html":{}}}],["imageservice",{"_index":432,"title":{"injectables/ImageService.html":{}},"body":{"components/BackButtonElementComponent.html":{},"components/ForecastTileViewComponent.html":{},"injectables/ImageService.html":{},"components/MenuElementComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"coverage.html":{}}}],["implemented",{"_index":998,"title":{},"body":{"components/DashboardViewComponent.html":{},"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"components/PollenflugDetailViewComponent.html":{},"injectables/TextService.html":{},"injectables/WeatherAPIService.html":{}}}],["implementes",{"_index":1136,"title":{},"body":{"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["implements",{"_index":392,"title":{},"body":{"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CalibrationInfoDetailViewComponent.html":{},"components/CardElementComponent.html":{},"interfaces/CheckTokenResponse.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DashboardViewComponent.html":{},"components/DetailScreenComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"interfaces/LoginResponse.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{}}}],["import",{"_index":69,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CalibrationInfoDetailViewComponent.html":{},"components/CardElementComponent.html":{},"interfaces/CheckTokenResponse.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DashboardViewComponent.html":{},"components/DetailScreenComponent.html":{},"interfaces/ESPConfiguration.html":{},"injectables/ESPConfigurationAPIService.html":{},"components/ForecastDetailViewComponent.html":{},"interfaces/ForecastResponse.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"injectables/HistoryTileService.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"injectables/ImageService.html":{},"components/IndoorDetailViewComponent.html":{},"interfaces/IndoorRoomResponse.html":{},"components/IndoorTileViewComponent.html":{},"injectables/LocalStorageService.html":{},"interfaces/LoginResponse.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"interfaces/OutdoorWeatherResponse.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenListElementComponent.html":{},"interfaces/PollenResponse.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"modules/ScreensModule.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"injectables/SpeechService.html":{},"injectables/TextService.html":{},"injectables/TileService.html":{},"components/TtsPlayerElementComponent.html":{},"modules/UiElementsModule.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{},"modules/ViewsModule.html":{},"injectables/WeatherAPIService.html":{},"injectables/WeatherDataService.html":{}}}],["important",{"_index":951,"title":{},"body":{"components/DashboardViewComponent.html":{},"interfaces/GraphDataSet.html":{},"interfaces/IndoorRoomData.html":{},"interfaces/OutdoorWeatherData.html":{},"interfaces/PollenData.html":{},"interfaces/Tile.html":{},"interfaces/TileArrays.html":{},"components/TtsPlayerElementComponent.html":{},"interfaces/WeatherData.html":{},"injectables/WeatherDataService.html":{},"interfaces/WeatherForecastData.html":{},"interfaces/WeatherHistoryByDayData.html":{},"interfaces/WeatherHistoryData.html":{},"miscellaneous/enumerations.html":{}}}],["importatn",{"_index":2048,"title":{},"body":{"components/OutdoorWeatherViewComponent.html":{}}}],["imports",{"_index":293,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ScreensModule.html":{},"modules/UiElementsModule.html":{},"modules/ViewsModule.html":{}}}],["imprecise",{"_index":1051,"title":{},"body":{"components/ForecastDetailViewComponent.html":{}}}],["include",{"_index":1903,"title":{},"body":{"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{}}}],["including",{"_index":1294,"title":{},"body":{"interfaces/GraphDataSet.html":{},"interfaces/IndoorRoomData.html":{},"interfaces/OutdoorWeatherData.html":{},"interfaces/PollenData.html":{},"interfaces/Tile.html":{},"interfaces/TileArrays.html":{},"interfaces/WeatherData.html":{},"injectables/WeatherDataService.html":{},"interfaces/WeatherForecastData.html":{},"interfaces/WeatherHistoryByDayData.html":{},"interfaces/WeatherHistoryData.html":{}}}],["increases",{"_index":1338,"title":{},"body":{"components/HistoryDetailViewComponent.html":{}}}],["index",{"_index":19,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CalibrationInfoDetailViewComponent.html":{},"components/CardElementComponent.html":{},"interfaces/CheckTokenResponse.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DashboardViewComponent.html":{},"components/DetailScreenComponent.html":{},"interfaces/ESPConfiguration.html":{},"injectables/ESPConfigurationAPIService.html":{},"components/ForecastDetailViewComponent.html":{},"interfaces/ForecastResponse.html":{},"components/ForecastTileViewComponent.html":{},"interfaces/GraphDataSet.html":{},"components/HistoryDetailViewComponent.html":{},"injectables/HistoryTileService.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"interfaces/ImageModel.html":{},"injectables/ImageService.html":{},"components/IndoorDetailViewComponent.html":{},"interfaces/IndoorRoomData.html":{},"interfaces/IndoorRoomResponse.html":{},"components/IndoorTileViewComponent.html":{},"injectables/LocalStorageService.html":{},"interfaces/LoginResponse.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"interfaces/OutdoorWeatherData.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"interfaces/OutdoorWeatherResponse.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"interfaces/PollenData.html":{},"components/PollenListElementComponent.html":{},"interfaces/PollenResponse.html":{},"components/PollenTagElementComponent.html":{},"interfaces/PollenType.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"injectables/SpeechService.html":{},"injectables/TextService.html":{},"interfaces/Tile.html":{},"interfaces/TileArrays.html":{},"injectables/TileService.html":{},"components/TtsPlayerElementComponent.html":{},"interfaces/UserContext.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{},"interfaces/UserIdentifikation.html":{},"injectables/WeatherAPIService.html":{},"injectables/WeatherDataService.html":{},"interfaces/WeatherForecastData.html":{},"interfaces/WeatherHistoryByDayData.html":{},"interfaces/WeatherHistoryData.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["index(value",{"_index":1366,"title":{},"body":{"components/HistoryDetailViewComponent.html":{}}}],["indexintilesarray",{"_index":2572,"title":{},"body":{"injectables/TileService.html":{}}}],["indicates",{"_index":2298,"title":{},"body":{"components/ProgressChartElementComponent.html":{}}}],["individual",{"_index":911,"title":{},"body":{"components/ConfigurationViewComponent.html":{}}}],["individuell",{"_index":2242,"title":{},"body":{"components/PollenflugDetailViewComponent.html":{}}}],["indoor",{"_index":220,"title":{},"body":{"components/AppComponent.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CalibrationInfoDetailViewComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DashboardViewComponent.html":{},"components/DetailScreenComponent.html":{},"components/ForecastDetailViewComponent.html":{},"interfaces/ForecastResponse.html":{},"components/ForecastTileViewComponent.html":{},"interfaces/GraphDataSet.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"interfaces/IndoorRoomData.html":{},"interfaces/IndoorRoomResponse.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"interfaces/OutdoorWeatherData.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"interfaces/OutdoorWeatherResponse.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"interfaces/PollenData.html":{},"components/PollenListElementComponent.html":{},"interfaces/PollenResponse.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"interfaces/Tile.html":{},"interfaces/TileArrays.html":{},"injectables/TileService.html":{},"components/TtsPlayerElementComponent.html":{},"modules/ViewsModule.html":{},"injectables/WeatherAPIService.html":{},"interfaces/WeatherData.html":{},"injectables/WeatherDataService.html":{},"interfaces/WeatherForecastData.html":{},"interfaces/WeatherHistoryByDayData.html":{},"interfaces/WeatherHistoryData.html":{},"miscellaneous/variables.html":{}}}],["indoorairquality",{"_index":1128,"title":{},"body":{"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/WeatherAPIService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["indoorairquality2",{"_index":2886,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["indoorarray",{"_index":2428,"title":{},"body":{"injectables/TextService.html":{}}}],["indoordata",{"_index":1165,"title":{},"body":{"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["indoordetailviewcomponent",{"_index":219,"title":{"components/IndoorDetailViewComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CalibrationInfoDetailViewComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DashboardViewComponent.html":{},"components/DetailScreenComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{},"modules/ViewsModule.html":{},"coverage.html":{},"overview.html":{}}}],["indoorroom",{"_index":1278,"title":{},"body":{"interfaces/GraphDataSet.html":{},"interfaces/IndoorRoomData.html":{},"interfaces/OutdoorWeatherData.html":{},"interfaces/PollenData.html":{},"interfaces/Tile.html":{},"interfaces/TileArrays.html":{},"injectables/TileService.html":{},"interfaces/WeatherData.html":{},"injectables/WeatherDataService.html":{},"interfaces/WeatherForecastData.html":{},"interfaces/WeatherHistoryByDayData.html":{},"interfaces/WeatherHistoryData.html":{},"miscellaneous/enumerations.html":{}}}],["indoorroom1",{"_index":2887,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["indoorroom2",{"_index":2888,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["indoorroom]).subscribe(results",{"_index":2802,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["indoorroomdata",{"_index":1133,"title":{"interfaces/IndoorRoomData.html":{}},"body":{"interfaces/ForecastResponse.html":{},"interfaces/GraphDataSet.html":{},"interfaces/IndoorRoomData.html":{},"interfaces/IndoorRoomResponse.html":{},"components/IndoorTileViewComponent.html":{},"interfaces/OutdoorWeatherData.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenData.html":{},"interfaces/PollenResponse.html":{},"injectables/TextService.html":{},"interfaces/Tile.html":{},"interfaces/TileArrays.html":{},"injectables/TileService.html":{},"injectables/WeatherAPIService.html":{},"interfaces/WeatherData.html":{},"injectables/WeatherDataService.html":{},"interfaces/WeatherForecastData.html":{},"interfaces/WeatherHistoryByDayData.html":{},"interfaces/WeatherHistoryData.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["indoorroomresponse",{"_index":1223,"title":{"interfaces/IndoorRoomResponse.html":{}},"body":{"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/WeatherAPIService.html":{},"coverage.html":{}}}],["indoorrooms",{"_index":368,"title":{},"body":{"modules/AppRoutingModule.html":{},"interfaces/GraphDataSet.html":{},"interfaces/IndoorRoomData.html":{},"interfaces/OutdoorWeatherData.html":{},"interfaces/PollenData.html":{},"interfaces/Tile.html":{},"interfaces/TileArrays.html":{},"injectables/TileService.html":{},"interfaces/WeatherData.html":{},"interfaces/WeatherForecastData.html":{},"interfaces/WeatherHistoryByDayData.html":{},"interfaces/WeatherHistoryData.html":{}}}],["indoorroomsdata",{"_index":2765,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["indoorroomsdata(value",{"_index":2767,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["indoorroomtiles",{"_index":1688,"title":{},"body":{"components/IndoorDetailViewComponent.html":{},"injectables/TileService.html":{}}}],["indoorroomtiles(tiles",{"_index":2757,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["indoortileviewcomponent",{"_index":221,"title":{"components/IndoorTileViewComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CalibrationInfoDetailViewComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DashboardViewComponent.html":{},"components/DetailScreenComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{},"modules/ViewsModule.html":{},"coverage.html":{},"overview.html":{}}}],["indoorurl",{"_index":1140,"title":{},"body":{"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["infinite",{"_index":2670,"title":{},"body":{"components/TtsPlayerElementComponent.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CalibrationInfoDetailViewComponent.html":{},"components/CardElementComponent.html":{},"interfaces/CheckTokenResponse.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DashboardViewComponent.html":{},"components/DetailScreenComponent.html":{},"interfaces/ESPConfiguration.html":{},"injectables/ESPConfigurationAPIService.html":{},"components/ForecastDetailViewComponent.html":{},"interfaces/ForecastResponse.html":{},"components/ForecastTileViewComponent.html":{},"interfaces/GraphDataSet.html":{},"components/HistoryDetailViewComponent.html":{},"injectables/HistoryTileService.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"interfaces/ImageModel.html":{},"injectables/ImageService.html":{},"components/IndoorDetailViewComponent.html":{},"interfaces/IndoorRoomData.html":{},"interfaces/IndoorRoomResponse.html":{},"components/IndoorTileViewComponent.html":{},"injectables/LocalStorageService.html":{},"interfaces/LoginResponse.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"interfaces/OutdoorWeatherData.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"interfaces/OutdoorWeatherResponse.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"interfaces/PollenData.html":{},"components/PollenListElementComponent.html":{},"interfaces/PollenResponse.html":{},"components/PollenTagElementComponent.html":{},"interfaces/PollenType.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"modules/ScreensModule.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"injectables/SpeechService.html":{},"injectables/TextService.html":{},"interfaces/Tile.html":{},"interfaces/TileArrays.html":{},"injectables/TileService.html":{},"components/TtsPlayerElementComponent.html":{},"modules/UiElementsModule.html":{},"interfaces/UserContext.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{},"interfaces/UserIdentifikation.html":{},"modules/ViewsModule.html":{},"injectables/WeatherAPIService.html":{},"interfaces/WeatherData.html":{},"injectables/WeatherDataService.html":{},"interfaces/WeatherForecastData.html":{},"interfaces/WeatherHistoryByDayData.html":{},"interfaces/WeatherHistoryData.html":{},"coverage.html":{}}}],["inform",{"_index":1056,"title":{},"body":{"components/ForecastDetailViewComponent.html":{},"components/SliderElementComponent.html":{}}}],["information",{"_index":382,"title":{},"body":{"components/ApparentTemperatureTileViewComponent.html":{},"components/CalibrationInfoDetailViewComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"interfaces/GraphDataSet.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"interfaces/IndoorRoomData.html":{},"components/IndoorTileViewComponent.html":{},"interfaces/OutdoorWeatherData.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"interfaces/PollenData.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"interfaces/Tile.html":{},"interfaces/TileArrays.html":{},"interfaces/UserContext.html":{},"interfaces/WeatherData.html":{},"interfaces/WeatherForecastData.html":{},"interfaces/WeatherHistoryByDayData.html":{},"interfaces/WeatherHistoryData.html":{}}}],["informationen",{"_index":2273,"title":{},"body":{"components/PollenflugDetailViewComponent.html":{}}}],["inital",{"_index":1350,"title":{},"body":{"components/HistoryDetailViewComponent.html":{}}}],["initial_user_context",{"_index":1796,"title":{},"body":{"injectables/LocalStorageService.html":{},"interfaces/PollenType.html":{},"interfaces/UserContext.html":{},"interfaces/UserIdentifikation.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["initial_user_identifikation",{"_index":1797,"title":{},"body":{"injectables/LocalStorageService.html":{},"interfaces/PollenType.html":{},"interfaces/UserContext.html":{},"interfaces/UserIdentifikation.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["initially",{"_index":2784,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["inject",{"_index":824,"title":{},"body":{"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{}}}],["inject(mat_dialog_data",{"_index":820,"title":{},"body":{"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{}}}],["injectable",{"_index":585,"title":{"injectables/ESPConfigurationAPIService.html":{},"injectables/HistoryTileService.html":{},"injectables/ImageService.html":{},"injectables/LocalStorageService.html":{},"injectables/SpeechService.html":{},"injectables/TextService.html":{},"injectables/TileService.html":{},"injectables/UserContextAPIService.html":{},"injectables/WeatherAPIService.html":{},"injectables/WeatherDataService.html":{}},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/ESPConfiguration.html":{},"injectables/ESPConfigurationAPIService.html":{},"interfaces/ForecastResponse.html":{},"injectables/HistoryTileService.html":{},"injectables/ImageService.html":{},"interfaces/IndoorRoomResponse.html":{},"injectables/LocalStorageService.html":{},"interfaces/LoginResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/SpeechService.html":{},"injectables/TextService.html":{},"injectables/TileService.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{},"injectables/WeatherAPIService.html":{},"injectables/WeatherDataService.html":{},"coverage.html":{}}}],["injectables",{"_index":1031,"title":{},"body":{"injectables/ESPConfigurationAPIService.html":{},"injectables/HistoryTileService.html":{},"injectables/ImageService.html":{},"injectables/LocalStorageService.html":{},"injectables/SpeechService.html":{},"injectables/TextService.html":{},"injectables/TileService.html":{},"injectables/UserContextAPIService.html":{},"injectables/WeatherAPIService.html":{},"injectables/WeatherDataService.html":{},"overview.html":{}}}],["innenräumen",{"_index":1700,"title":{},"body":{"components/IndoorDetailViewComponent.html":{}}}],["innovation",{"_index":1860,"title":{},"body":{"components/LoginViewComponent.html":{},"index.html":{}}}],["input",{"_index":410,"title":{},"body":{"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"injectables/TextService.html":{},"components/TtsPlayerElementComponent.html":{}}}],["input[type=range",{"_index":2317,"title":{},"body":{"components/ProgressChartElementComponent.html":{},"components/SliderElementComponent.html":{}}}],["input[type=range]:focus",{"_index":2319,"title":{},"body":{"components/ProgressChartElementComponent.html":{},"components/SliderElementComponent.html":{}}}],["inputdate.getdate",{"_index":1517,"title":{},"body":{"injectables/HistoryTileService.html":{}}}],["inputdate.getmonth",{"_index":1516,"title":{},"body":{"injectables/HistoryTileService.html":{}}}],["inputs",{"_index":398,"title":{},"body":{"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/NavBarElementComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{}}}],["insertion",{"_index":688,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/LoginResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{}}}],["intensität",{"_index":2240,"title":{},"body":{"components/PollenflugDetailViewComponent.html":{}}}],["intensiver",{"_index":1070,"title":{},"body":{"components/ForecastDetailViewComponent.html":{}}}],["interaction",{"_index":2302,"title":{},"body":{"components/ProgressChartElementComponent.html":{}}}],["interessiert",{"_index":1064,"title":{},"body":{"components/ForecastDetailViewComponent.html":{}}}],["interface",{"_index":573,"title":{"interfaces/CheckTokenResponse.html":{},"interfaces/ESPConfiguration.html":{},"interfaces/ForecastResponse.html":{},"interfaces/GraphDataSet.html":{},"interfaces/ImageModel.html":{},"interfaces/IndoorRoomData.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/LoginResponse.html":{},"interfaces/OutdoorWeatherData.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenData.html":{},"interfaces/PollenResponse.html":{},"interfaces/PollenType.html":{},"interfaces/Tile.html":{},"interfaces/TileArrays.html":{},"interfaces/UserContext.html":{},"interfaces/UserContextResponse.html":{},"interfaces/UserIdentifikation.html":{},"interfaces/WeatherData.html":{},"interfaces/WeatherForecastData.html":{},"interfaces/WeatherHistoryByDayData.html":{},"interfaces/WeatherHistoryData.html":{}},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/ESPConfiguration.html":{},"injectables/ESPConfigurationAPIService.html":{},"interfaces/ForecastResponse.html":{},"interfaces/GraphDataSet.html":{},"interfaces/ImageModel.html":{},"interfaces/IndoorRoomData.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/LoginResponse.html":{},"interfaces/OutdoorWeatherData.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenData.html":{},"interfaces/PollenResponse.html":{},"interfaces/PollenType.html":{},"interfaces/Tile.html":{},"interfaces/TileArrays.html":{},"injectables/TileService.html":{},"interfaces/UserContext.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{},"interfaces/UserIdentifikation.html":{},"injectables/WeatherAPIService.html":{},"interfaces/WeatherData.html":{},"interfaces/WeatherForecastData.html":{},"interfaces/WeatherHistoryByDayData.html":{},"interfaces/WeatherHistoryData.html":{},"coverage.html":{}}}],["interfaces",{"_index":575,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/ESPConfiguration.html":{},"interfaces/ForecastResponse.html":{},"interfaces/GraphDataSet.html":{},"interfaces/ImageModel.html":{},"interfaces/IndoorRoomData.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/LoginResponse.html":{},"interfaces/OutdoorWeatherData.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenData.html":{},"interfaces/PollenResponse.html":{},"interfaces/PollenType.html":{},"interfaces/Tile.html":{},"interfaces/TileArrays.html":{},"injectables/TileService.html":{},"interfaces/UserContext.html":{},"interfaces/UserContextResponse.html":{},"interfaces/UserIdentifikation.html":{},"interfaces/WeatherData.html":{},"interfaces/WeatherForecastData.html":{},"interfaces/WeatherHistoryByDayData.html":{},"interfaces/WeatherHistoryData.html":{},"overview.html":{}}}],["interval",{"_index":1349,"title":{},"body":{"components/HistoryDetailViewComponent.html":{}}}],["inverted",{"_index":799,"title":{},"body":{"components/CheckboxSwitcherElementComponent.html":{},"components/OutdoorWeatherViewComponent.html":{}}}],["io",{"_index":2956,"title":{},"body":{"index.html":{}}}],["isbackpossible",{"_index":1329,"title":{},"body":{"components/HistoryDetailViewComponent.html":{}}}],["isforwardpossible",{"_index":1330,"title":{},"body":{"components/HistoryDetailViewComponent.html":{}}}],["ismenuhidden",{"_index":1906,"title":{},"body":{"components/MenuButtonElementComponent.html":{}}}],["isolationsfähigkeit",{"_index":2035,"title":{},"body":{"components/OutdoorWeatherDetailViewComponent.html":{}}}],["isoutputrunning",{"_index":2371,"title":{},"body":{"injectables/SpeechService.html":{}}}],["ist",{"_index":638,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/ESPConfiguration.html":{},"injectables/ESPConfigurationAPIService.html":{},"components/ForecastDetailViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"interfaces/LoginResponse.html":{},"components/PollenflugDetailViewComponent.html":{},"injectables/TextService.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{}}}],["item",{"_index":1479,"title":{},"body":{"injectables/HistoryTileService.html":{},"injectables/LocalStorageService.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"injectables/TileService.html":{}}}],["item.humidity",{"_index":1492,"title":{},"body":{"injectables/HistoryTileService.html":{}}}],["item.id",{"_index":1236,"title":{},"body":{"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["item.loadrating",{"_index":1240,"title":{},"body":{"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["item.pollenname",{"_index":1238,"title":{},"body":{"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["item.roomid",{"_index":2554,"title":{},"body":{"injectables/TileService.html":{}}}],["item.temperature",{"_index":1491,"title":{},"body":{"injectables/HistoryTileService.html":{}}}],["item.timestamp",{"_index":1487,"title":{},"body":{"injectables/HistoryTileService.html":{}}}],["item.timestamp.getdate",{"_index":1481,"title":{},"body":{"injectables/HistoryTileService.html":{}}}],["item.timestamp.gethours",{"_index":1497,"title":{},"body":{"injectables/HistoryTileService.html":{}}}],["item.timestamp.getmonth",{"_index":1483,"title":{},"body":{"injectables/HistoryTileService.html":{}}}],["items",{"_index":457,"title":{},"body":{"components/BackButtonElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DashboardViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/RegistrationViewComponent.html":{}}}],["itself",{"_index":386,"title":{},"body":{"components/ApparentTemperatureTileViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorTileViewComponent.html":{}}}],["ja",{"_index":1169,"title":{},"body":{"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["jahreszeit",{"_index":1433,"title":{},"body":{"components/HistoryDetailViewComponent.html":{}}}],["jahrtausenden",{"_index":1067,"title":{},"body":{"components/ForecastDetailViewComponent.html":{},"components/HistoryDetailViewComponent.html":{}}}],["jahrzehnte",{"_index":1422,"title":{},"body":{"components/HistoryDetailViewComponent.html":{}}}],["januar','februar','märz','april','mai','juni','juli','august','september','oktober','november','dezember",{"_index":1548,"title":{},"body":{"injectables/HistoryTileService.html":{},"miscellaneous/variables.html":{}}}],["jede",{"_index":891,"title":{},"body":{"components/ConfigurationTileViewComponent.html":{}}}],["json.parse(disableopenapevalue",{"_index":1811,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["json.parse(objectstring",{"_index":1803,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["json.stringify(object",{"_index":1800,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["json.stringify(value",{"_index":1805,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["justify",{"_index":459,"title":{},"body":{"components/BackButtonElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DashboardViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuElementComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{}}}],["kalenderwoche",{"_index":1505,"title":{},"body":{"injectables/HistoryTileService.html":{}}}],["kalibriere",{"_index":1765,"title":{},"body":{"components/IndoorTileViewComponent.html":{}}}],["kalibrieren",{"_index":898,"title":{},"body":{"components/ConfigurationTileViewComponent.html":{}}}],["kalibrierung",{"_index":507,"title":{},"body":{"components/CalibrationInfoDetailViewComponent.html":{}}}],["kann",{"_index":499,"title":{},"body":{"components/CalibrationInfoDetailViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"interfaces/PollenType.html":{},"components/PollenflugDetailViewComponent.html":{},"interfaces/UserContext.html":{},"interfaces/UserIdentifikation.html":{}}}],["keine",{"_index":2180,"title":{},"body":{"components/PollenTagElementComponent.html":{}}}],["key",{"_index":1824,"title":{},"body":{"injectables/LocalStorageService.html":{},"miscellaneous/variables.html":{}}}],["keyframes",{"_index":1899,"title":{},"body":{"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/TtsPlayerElementComponent.html":{}}}],["kinds",{"_index":838,"title":{},"body":{"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{}}}],["kit",{"_index":810,"title":{},"body":{"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"interfaces/ESPConfiguration.html":{},"injectables/ESPConfigurationAPIService.html":{}}}],["kits",{"_index":836,"title":{},"body":{"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{}}}],["klare",{"_index":2494,"title":{},"body":{"injectables/TextService.html":{}}}],["kleidung",{"_index":2011,"title":{},"body":{"components/OutdoorWeatherDetailViewComponent.html":{}}}],["klimagröße",{"_index":1431,"title":{},"body":{"components/HistoryDetailViewComponent.html":{}}}],["klimamodelle",{"_index":1405,"title":{},"body":{"components/HistoryDetailViewComponent.html":{}}}],["know",{"_index":1396,"title":{},"body":{"components/HistoryDetailViewComponent.html":{},"components/IndoorDetailViewComponent.html":{}}}],["knows",{"_index":907,"title":{},"body":{"components/ConfigurationViewComponent.html":{}}}],["kombiniert",{"_index":2042,"title":{},"body":{"components/OutdoorWeatherDetailViewComponent.html":{}}}],["kommen",{"_index":2000,"title":{},"body":{"components/OutdoorWeatherDetailViewComponent.html":{},"components/PollenflugDetailViewComponent.html":{}}}],["konfiguration",{"_index":1959,"title":{},"body":{"components/MenuElementComponent.html":{}}}],["konfigurieren",{"_index":927,"title":{},"body":{"components/ConfigurationViewComponent.html":{}}}],["konsistent",{"_index":2453,"title":{},"body":{"injectables/TextService.html":{}}}],["konvertiert",{"_index":2193,"title":{},"body":{"interfaces/PollenType.html":{},"interfaces/UserContext.html":{},"interfaces/UserIdentifikation.html":{}}}],["krankheitssymptome",{"_index":1725,"title":{},"body":{"components/IndoorDetailViewComponent.html":{}}}],["krankmachen",{"_index":1716,"title":{},"body":{"components/IndoorDetailViewComponent.html":{}}}],["kreuzreaktionen",{"_index":2238,"title":{},"body":{"components/PollenflugDetailViewComponent.html":{}}}],["kälteempfindung",{"_index":2040,"title":{},"body":{"components/OutdoorWeatherDetailViewComponent.html":{}}}],["label",{"_index":434,"title":{},"body":{"components/BackButtonElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"interfaces/GraphDataSet.html":{},"injectables/HistoryTileService.html":{},"components/HistoryTileViewComponent.html":{},"interfaces/IndoorRoomData.html":{},"components/MenuButtonElementComponent.html":{},"components/NavBarElementComponent.html":{},"interfaces/OutdoorWeatherData.html":{},"components/PersonalizationSettingsViewComponent.html":{},"interfaces/PollenData.html":{},"components/PollenListElementComponent.html":{},"components/SliderElementComponent.html":{},"interfaces/Tile.html":{},"interfaces/TileArrays.html":{},"interfaces/WeatherData.html":{},"interfaces/WeatherForecastData.html":{},"interfaces/WeatherHistoryByDayData.html":{},"interfaces/WeatherHistoryData.html":{}}}],["label.motion",{"_index":1917,"title":{},"body":{"components/MenuButtonElementComponent.html":{}}}],["landwirtschaft",{"_index":1089,"title":{},"body":{"components/ForecastDetailViewComponent.html":{}}}],["langsam",{"_index":2015,"title":{},"body":{"components/OutdoorWeatherDetailViewComponent.html":{}}}],["language",{"_index":2206,"title":{},"body":{"interfaces/PollenType.html":{},"interfaces/UserContext.html":{},"interfaces/UserIdentifikation.html":{},"miscellaneous/enumerations.html":{}}}],["lastdate",{"_index":1471,"title":{},"body":{"injectables/HistoryTileService.html":{}}}],["lastdate.getdate",{"_index":1498,"title":{},"body":{"injectables/HistoryTileService.html":{}}}],["lastdate.gethours",{"_index":1494,"title":{},"body":{"injectables/HistoryTileService.html":{}}}],["lastdate.getmonth",{"_index":1482,"title":{},"body":{"injectables/HistoryTileService.html":{}}}],["lasthour",{"_index":1493,"title":{},"body":{"injectables/HistoryTileService.html":{}}}],["lastweek",{"_index":1473,"title":{},"body":{"injectables/HistoryTileService.html":{}}}],["layout",{"_index":391,"title":{},"body":{"components/ApparentTemperatureTileViewComponent.html":{},"components/CardElementComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/SettingsScreenComponent.html":{}}}],["layoutmodule",{"_index":2351,"title":{},"body":{"modules/ScreensModule.html":{}}}],["lazy",{"_index":2736,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["leave",{"_index":1952,"title":{},"body":{"components/MenuElementComponent.html":{},"miscellaneous/variables.html":{}}}],["left",{"_index":178,"title":{},"body":{"components/AppComponent.html":{},"components/CardElementComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DashboardViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/TtsPlayerElementComponent.html":{},"miscellaneous/variables.html":{}}}],["legend",{"_index":180,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CalibrationInfoDetailViewComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DashboardViewComponent.html":{},"components/DetailScreenComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"modules/ScreensModule.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{},"modules/UiElementsModule.html":{},"modules/ViewsModule.html":{},"overview.html":{}}}],["lehren",{"_index":1713,"title":{},"body":{"components/IndoorDetailViewComponent.html":{}}}],["leicht",{"_index":2454,"title":{},"body":{"injectables/TextService.html":{}}}],["leistungsfähigkeit",{"_index":1709,"title":{},"body":{"components/IndoorDetailViewComponent.html":{}}}],["lernen",{"_index":1712,"title":{},"body":{"components/IndoorDetailViewComponent.html":{}}}],["letter",{"_index":466,"title":{},"body":{"components/BackButtonElementComponent.html":{},"components/CardElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/OutdoorWeatherViewComponent.html":{}}}],["library",{"_index":1453,"title":{},"body":{"injectables/HistoryTileService.html":{},"components/HistoryTileViewComponent.html":{}}}],["liegen",{"_index":2483,"title":{},"body":{"injectables/TextService.html":{}}}],["liegt",{"_index":2463,"title":{},"body":{"injectables/TextService.html":{}}}],["light",{"_index":445,"title":{},"body":{"components/BackButtonElementComponent.html":{},"interfaces/CheckTokenResponse.html":{},"components/CheckboxSwitcherElementComponent.html":{},"interfaces/ImageModel.html":{},"interfaces/LoginResponse.html":{},"components/MenuElementComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"interfaces/PollenType.html":{},"interfaces/UserContext.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{},"interfaces/UserIdentifikation.html":{},"miscellaneous/enumerations.html":{}}}],["light.png",{"_index":1936,"title":{},"body":{"components/MenuElementComponent.html":{}}}],["ligth",{"_index":141,"title":{},"body":{"components/AppComponent.html":{}}}],["line",{"_index":1315,"title":{},"body":{"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{}}}],["linear",{"_index":1665,"title":{},"body":{"injectables/ImageService.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/TtsPlayerElementComponent.html":{},"miscellaneous/variables.html":{}}}],["list",{"_index":252,"title":{},"body":{"components/AppComponent.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CalibrationInfoDetailViewComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DashboardViewComponent.html":{},"components/DetailScreenComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{},"modules/UiElementsModule.html":{},"coverage.html":{}}}],["listen",{"_index":2815,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["listenforstop",{"_index":2590,"title":{},"body":{"components/TtsPlayerElementComponent.html":{}}}],["listenforstop(speechservice",{"_index":2595,"title":{},"body":{"components/TtsPlayerElementComponent.html":{}}}],["listens",{"_index":2069,"title":{},"body":{"components/OutdoorWeatherViewComponent.html":{},"components/TtsPlayerElementComponent.html":{}}}],["listentoscrollevent",{"_index":2076,"title":{},"body":{"components/OutdoorWeatherViewComponent.html":{}}}],["listentothemechange",{"_index":133,"title":{},"body":{"components/AppComponent.html":{}}}],["listtile",{"_index":2544,"title":{},"body":{"injectables/TileService.html":{}}}],["literal",{"_index":1613,"title":{},"body":{"injectables/ImageService.html":{},"components/OutdoorWeatherViewComponent.html":{}}}],["load",{"_index":1293,"title":{},"body":{"interfaces/GraphDataSet.html":{},"components/HistoryDetailViewComponent.html":{},"interfaces/IndoorRoomData.html":{},"injectables/LocalStorageService.html":{},"components/MenuBarElementComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"interfaces/OutdoorWeatherData.html":{},"interfaces/PollenData.html":{},"interfaces/Tile.html":{},"interfaces/TileArrays.html":{},"interfaces/WeatherData.html":{},"injectables/WeatherDataService.html":{},"interfaces/WeatherForecastData.html":{},"interfaces/WeatherHistoryByDayData.html":{},"interfaces/WeatherHistoryData.html":{}}}],["loadad",{"_index":1146,"title":{},"body":{"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["loadconfigurations",{"_index":919,"title":{},"body":{"components/ConfigurationViewComponent.html":{}}}],["loaddata",{"_index":991,"title":{},"body":{"components/DashboardViewComponent.html":{}}}],["loaddefaultfontsize",{"_index":118,"title":{},"body":{"components/AppComponent.html":{}}}],["loaded",{"_index":2785,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["loadespconfigs",{"_index":1014,"title":{},"body":{"interfaces/ESPConfiguration.html":{},"injectables/ESPConfigurationAPIService.html":{}}}],["loadforecast",{"_index":1154,"title":{},"body":{"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["loadforecastdata",{"_index":1048,"title":{},"body":{"components/ForecastDetailViewComponent.html":{}}}],["loadhistorydatasubject",{"_index":2703,"title":{},"body":{"injectables/WeatherAPIService.html":{}}}],["loadhistorydatasubject(enddate",{"_index":1178,"title":{},"body":{"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["loadindoorroomdata",{"_index":1164,"title":{},"body":{"interfaces/ForecastResponse.html":{},"components/IndoorDetailViewComponent.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["loading",{"_index":917,"title":{},"body":{"components/ConfigurationViewComponent.html":{},"components/DashboardViewComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"injectables/WeatherDataService.html":{}}}],["loadmonthfromhistory(oldesthistorydate",{"_index":2827,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["loadmorehistorydata",{"_index":2721,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["loadoutdoorweather",{"_index":1148,"title":{},"body":{"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"components/OutdoorWeatherViewComponent.html":{},"interfaces/PollenResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["loadoutdoorweatherdata",{"_index":1996,"title":{},"body":{"components/OutdoorWeatherDetailViewComponent.html":{}}}],["loadpollen",{"_index":1160,"title":{},"body":{"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["loadpollentiles",{"_index":2219,"title":{},"body":{"components/PollenflugDetailViewComponent.html":{}}}],["loadpollentypes",{"_index":705,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/LoginResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{}}}],["loadrating",{"_index":1246,"title":{},"body":{"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["loadreducemotionvalue",{"_index":987,"title":{},"body":{"components/DashboardViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{}}}],["loads",{"_index":916,"title":{},"body":{"components/ConfigurationViewComponent.html":{},"components/DashboardViewComponent.html":{}}}],["loadusercontext",{"_index":124,"title":{},"body":{"components/AppComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"injectables/UserContextAPIService.html":{}}}],["loadusercontext(token",{"_index":697,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/LoginResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{}}}],["loadweatherdata",{"_index":2793,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["loadweatherhistorydata",{"_index":1373,"title":{},"body":{"components/HistoryDetailViewComponent.html":{}}}],["local",{"_index":1776,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["localstorage.clear",{"_index":1814,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["localstorage.getitem(key",{"_index":1819,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["localstorage.removeitem(key",{"_index":1822,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["localstorage.setitem(key",{"_index":1816,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["localstorageservice",{"_index":1773,"title":{"injectables/LocalStorageService.html":{}},"body":{"injectables/LocalStorageService.html":{},"coverage.html":{}}}],["location",{"_index":436,"title":{},"body":{"components/BackButtonElementComponent.html":{},"interfaces/ForecastResponse.html":{},"interfaces/GraphDataSet.html":{},"interfaces/IndoorRoomData.html":{},"interfaces/IndoorRoomResponse.html":{},"components/MenuBarElementComponent.html":{},"interfaces/OutdoorWeatherData.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenData.html":{},"interfaces/PollenResponse.html":{},"injectables/TextService.html":{},"interfaces/Tile.html":{},"interfaces/TileArrays.html":{},"injectables/WeatherAPIService.html":{},"interfaces/WeatherData.html":{},"interfaces/WeatherForecastData.html":{},"interfaces/WeatherHistoryByDayData.html":{},"interfaces/WeatherHistoryData.html":{},"miscellaneous/variables.html":{}}}],["location_name",{"_index":1248,"title":{},"body":{"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["locationlabel",{"_index":1878,"title":{},"body":{"components/MenuBarElementComponent.html":{}}}],["log",{"_index":1831,"title":{},"body":{"components/LoginViewComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{}}}],["logic",{"_index":476,"title":{},"body":{"components/CalibrationInfoDetailViewComponent.html":{}}}],["login",{"_index":223,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CalibrationInfoDetailViewComponent.html":{},"components/CardElementComponent.html":{},"interfaces/CheckTokenResponse.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DashboardViewComponent.html":{},"components/DetailScreenComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"injectables/LocalStorageService.html":{},"interfaces/LoginResponse.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{},"modules/ViewsModule.html":{},"miscellaneous/variables.html":{}}}],["logindisabled",{"_index":2113,"title":{},"body":{"components/PersonalizationSettingsViewComponent.html":{}}}],["loginform",{"_index":1832,"title":{},"body":{"components/LoginViewComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{}}}],["loginresponse",{"_index":727,"title":{"interfaces/LoginResponse.html":{}},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/LoginResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{},"coverage.html":{}}}],["logintoopenape",{"_index":1980,"title":{},"body":{"components/OpenAPELoginTileViewComponent.html":{}}}],["logintoopenape(username",{"_index":1981,"title":{},"body":{"components/OpenAPELoginTileViewComponent.html":{}}}],["loginurl",{"_index":595,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/LoginResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{}}}],["loginviewcomponent",{"_index":222,"title":{"components/LoginViewComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CalibrationInfoDetailViewComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DashboardViewComponent.html":{},"components/DetailScreenComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{},"modules/ViewsModule.html":{},"coverage.html":{},"overview.html":{}}}],["logo",{"_index":1869,"title":{},"body":{"components/LoginViewComponent.html":{}}}],["logout",{"_index":1925,"title":{},"body":{"components/MenuElementComponent.html":{}}}],["logouticon",{"_index":1923,"title":{},"body":{"components/MenuElementComponent.html":{}}}],["logs",{"_index":1781,"title":{},"body":{"injectables/LocalStorageService.html":{},"components/MenuElementComponent.html":{}}}],["low",{"_index":1289,"title":{},"body":{"interfaces/GraphDataSet.html":{},"interfaces/IndoorRoomData.html":{},"interfaces/OutdoorWeatherData.html":{},"interfaces/PollenData.html":{},"interfaces/Tile.html":{},"interfaces/TileArrays.html":{},"interfaces/WeatherData.html":{},"interfaces/WeatherForecastData.html":{},"interfaces/WeatherHistoryByDayData.html":{},"interfaces/WeatherHistoryData.html":{},"miscellaneous/enumerations.html":{}}}],["lower",{"_index":2331,"title":{},"body":{"components/ProgressChartElementComponent.html":{},"components/SliderElementComponent.html":{},"injectables/TileService.html":{}}}],["luft",{"_index":2022,"title":{},"body":{"components/OutdoorWeatherDetailViewComponent.html":{}}}],["luftfeuchtigkeit",{"_index":1763,"title":{},"body":{"components/IndoorTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"injectables/TextService.html":{}}}],["luftqualität",{"_index":503,"title":{},"body":{"components/CalibrationInfoDetailViewComponent.html":{},"injectables/TextService.html":{}}}],["lufttemperatur",{"_index":2008,"title":{},"body":{"components/OutdoorWeatherDetailViewComponent.html":{}}}],["länger",{"_index":1082,"title":{},"body":{"components/ForecastDetailViewComponent.html":{}}}],["lässt",{"_index":2044,"title":{},"body":{"components/OutdoorWeatherDetailViewComponent.html":{},"components/PollenflugDetailViewComponent.html":{}}}],["lüftung",{"_index":1734,"title":{},"body":{"components/IndoorDetailViewComponent.html":{}}}],["made",{"_index":1057,"title":{},"body":{"components/ForecastDetailViewComponent.html":{}}}],["main",{"_index":168,"title":{},"body":{"components/AppComponent.html":{}}}],["make",{"_index":1300,"title":{},"body":{"interfaces/GraphDataSet.html":{},"interfaces/IndoorRoomData.html":{},"interfaces/OutdoorWeatherData.html":{},"interfaces/PollenData.html":{},"interfaces/Tile.html":{},"interfaces/TileArrays.html":{},"interfaces/WeatherData.html":{},"interfaces/WeatherForecastData.html":{},"interfaces/WeatherHistoryByDayData.html":{},"interfaces/WeatherHistoryData.html":{}}}],["man",{"_index":1084,"title":{},"body":{"components/ForecastDetailViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{}}}],["map",{"_index":2195,"title":{},"body":{"interfaces/PollenType.html":{},"interfaces/UserContext.html":{},"interfaces/UserIdentifikation.html":{}}}],["margin",{"_index":422,"title":{},"body":{"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PollenTagElementComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{}}}],["marker",{"_index":2711,"title":{},"body":{"interfaces/WeatherData.html":{}}}],["marks",{"_index":2712,"title":{},"body":{"interfaces/WeatherData.html":{}}}],["mat_dialog_data",{"_index":830,"title":{},"body":{"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{}}}],["matching",{"_index":271,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CalibrationInfoDetailViewComponent.html":{},"components/CardElementComponent.html":{},"interfaces/CheckTokenResponse.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DashboardViewComponent.html":{},"components/DetailScreenComponent.html":{},"interfaces/ESPConfiguration.html":{},"injectables/ESPConfigurationAPIService.html":{},"components/ForecastDetailViewComponent.html":{},"interfaces/ForecastResponse.html":{},"components/ForecastTileViewComponent.html":{},"interfaces/GraphDataSet.html":{},"components/HistoryDetailViewComponent.html":{},"injectables/HistoryTileService.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"interfaces/ImageModel.html":{},"injectables/ImageService.html":{},"components/IndoorDetailViewComponent.html":{},"interfaces/IndoorRoomData.html":{},"interfaces/IndoorRoomResponse.html":{},"components/IndoorTileViewComponent.html":{},"injectables/LocalStorageService.html":{},"interfaces/LoginResponse.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"interfaces/OutdoorWeatherData.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"interfaces/OutdoorWeatherResponse.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"interfaces/PollenData.html":{},"components/PollenListElementComponent.html":{},"interfaces/PollenResponse.html":{},"components/PollenTagElementComponent.html":{},"interfaces/PollenType.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"modules/ScreensModule.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"injectables/SpeechService.html":{},"injectables/TextService.html":{},"interfaces/Tile.html":{},"interfaces/TileArrays.html":{},"injectables/TileService.html":{},"components/TtsPlayerElementComponent.html":{},"modules/UiElementsModule.html":{},"interfaces/UserContext.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{},"interfaces/UserIdentifikation.html":{},"modules/ViewsModule.html":{},"injectables/WeatherAPIService.html":{},"interfaces/WeatherData.html":{},"injectables/WeatherDataService.html":{},"interfaces/WeatherForecastData.html":{},"interfaces/WeatherHistoryByDayData.html":{},"interfaces/WeatherHistoryData.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["matdialog",{"_index":829,"title":{},"body":{"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{}}}],["matdialogmodule",{"_index":2701,"title":{},"body":{"modules/ViewsModule.html":{}}}],["matdialogref",{"_index":815,"title":{},"body":{"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{}}}],["math.ceil((((date.valueof",{"_index":1523,"title":{},"body":{"injectables/HistoryTileService.html":{}}}],["math.round(humidityaverage",{"_index":1544,"title":{},"body":{"injectables/HistoryTileService.html":{}}}],["math.round(tempaverage",{"_index":1543,"title":{},"body":{"injectables/HistoryTileService.html":{}}}],["max",{"_index":904,"title":{},"body":{"components/ConfigurationTileViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/ProgressChartElementComponent.html":{}}}],["maxtemperature",{"_index":1211,"title":{},"body":{"interfaces/ForecastResponse.html":{},"interfaces/GraphDataSet.html":{},"interfaces/IndoorRoomData.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherData.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenData.html":{},"interfaces/PollenResponse.html":{},"injectables/TextService.html":{},"interfaces/Tile.html":{},"interfaces/TileArrays.html":{},"injectables/WeatherAPIService.html":{},"interfaces/WeatherData.html":{},"interfaces/WeatherForecastData.html":{},"interfaces/WeatherHistoryByDayData.html":{},"interfaces/WeatherHistoryData.html":{},"miscellaneous/variables.html":{}}}],["maxvalue",{"_index":2299,"title":{},"body":{"components/ProgressChartElementComponent.html":{}}}],["means",{"_index":3024,"title":{},"body":{"miscellaneous/variables.html":{}}}],["media",{"_index":547,"title":{},"body":{"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{}}}],["media(max",{"_index":1897,"title":{},"body":{"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/OutdoorWeatherViewComponent.html":{}}}],["media(min",{"_index":946,"title":{},"body":{"components/DashboardScreenComponent.html":{},"components/DashboardViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/OutdoorWeatherViewComponent.html":{}}}],["media(prefers",{"_index":2097,"title":{},"body":{"components/OutdoorWeatherViewComponent.html":{}}}],["mehr",{"_index":2222,"title":{},"body":{"components/PollenflugDetailViewComponent.html":{}}}],["mehrere",{"_index":1170,"title":{},"body":{"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["men",{"_index":1914,"title":{},"body":{"components/MenuButtonElementComponent.html":{}}}],["mensch",{"_index":1694,"title":{},"body":{"components/IndoorDetailViewComponent.html":{}}}],["menschen",{"_index":1065,"title":{},"body":{"components/ForecastDetailViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{}}}],["menu",{"_index":225,"title":{},"body":{"components/AppComponent.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CalibrationInfoDetailViewComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DashboardViewComponent.html":{},"components/DetailScreenComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{},"modules/UiElementsModule.html":{}}}],["menubarelementcomponent",{"_index":224,"title":{"components/MenuBarElementComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CalibrationInfoDetailViewComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DashboardViewComponent.html":{},"components/DetailScreenComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{},"modules/UiElementsModule.html":{},"coverage.html":{},"overview.html":{}}}],["menubuttonelementcomponent",{"_index":227,"title":{"components/MenuButtonElementComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CalibrationInfoDetailViewComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DashboardViewComponent.html":{},"components/DetailScreenComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{},"modules/UiElementsModule.html":{},"coverage.html":{},"overview.html":{}}}],["menuelementcomponent",{"_index":228,"title":{"components/MenuElementComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CalibrationInfoDetailViewComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DashboardViewComponent.html":{},"components/DetailScreenComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{},"modules/UiElementsModule.html":{},"coverage.html":{},"overview.html":{}}}],["message",{"_index":22,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CheckTokenResponse.html":{},"interfaces/LoginResponse.html":{},"components/LoginViewComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/RegistrationViewComponent.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{}}}],["metadata",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CalibrationInfoDetailViewComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DashboardViewComponent.html":{},"components/DetailScreenComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{}}}],["methods",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CalibrationInfoDetailViewComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DashboardViewComponent.html":{},"components/DetailScreenComponent.html":{},"injectables/ESPConfigurationAPIService.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"injectables/HistoryTileService.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"injectables/ImageService.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"injectables/LocalStorageService.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"injectables/SpeechService.html":{},"injectables/TextService.html":{},"injectables/TileService.html":{},"components/TtsPlayerElementComponent.html":{},"injectables/UserContextAPIService.html":{},"injectables/WeatherAPIService.html":{},"injectables/WeatherDataService.html":{}}}],["middle",{"_index":558,"title":{},"body":{"components/CardElementComponent.html":{},"interfaces/GraphDataSet.html":{},"interfaces/IndoorRoomData.html":{},"interfaces/OutdoorWeatherData.html":{},"interfaces/PollenData.html":{},"interfaces/Tile.html":{},"interfaces/TileArrays.html":{},"interfaces/WeatherData.html":{},"interfaces/WeatherForecastData.html":{},"interfaces/WeatherHistoryByDayData.html":{},"interfaces/WeatherHistoryData.html":{},"miscellaneous/enumerations.html":{}}}],["min",{"_index":170,"title":{},"body":{"components/AppComponent.html":{},"components/CardElementComponent.html":{},"components/ConfigurationTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/SettingsScreenComponent.html":{}}}],["mintemperature",{"_index":1213,"title":{},"body":{"interfaces/ForecastResponse.html":{},"interfaces/GraphDataSet.html":{},"interfaces/IndoorRoomData.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherData.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenData.html":{},"interfaces/PollenResponse.html":{},"injectables/TextService.html":{},"interfaces/Tile.html":{},"interfaces/TileArrays.html":{},"injectables/WeatherAPIService.html":{},"interfaces/WeatherData.html":{},"interfaces/WeatherForecastData.html":{},"interfaces/WeatherHistoryByDayData.html":{},"interfaces/WeatherHistoryData.html":{},"miscellaneous/variables.html":{}}}],["minute",{"_index":892,"title":{},"body":{"components/ConfigurationTileViewComponent.html":{}}}],["minuten",{"_index":894,"title":{},"body":{"components/ConfigurationTileViewComponent.html":{}}}],["miscellaneous",{"_index":2949,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":1423,"title":{},"body":{"components/HistoryDetailViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"injectables/TextService.html":{}}}],["mittel",{"_index":2175,"title":{},"body":{"components/PollenTagElementComponent.html":{}}}],["mittlere",{"_index":2469,"title":{},"body":{"injectables/TextService.html":{}}}],["mittlerer",{"_index":2013,"title":{},"body":{"components/OutdoorWeatherDetailViewComponent.html":{}}}],["mixin",{"_index":2304,"title":{},"body":{"components/ProgressChartElementComponent.html":{},"components/SliderElementComponent.html":{}}}],["mobile",{"_index":980,"title":{},"body":{"components/DashboardViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{}}}],["mock",{"_index":3007,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mockdaten",{"_index":2190,"title":{},"body":{"interfaces/PollenType.html":{},"interfaces/UserContext.html":{},"interfaces/UserIdentifikation.html":{}}}],["mode",{"_index":150,"title":{},"body":{"components/AppComponent.html":{}}}],["model",{"_index":578,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/ESPConfiguration.html":{},"injectables/ESPConfigurationAPIService.html":{},"interfaces/ForecastResponse.html":{},"interfaces/GraphDataSet.html":{},"interfaces/ImageModel.html":{},"injectables/ImageService.html":{},"interfaces/IndoorRoomData.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/LoginResponse.html":{},"interfaces/OutdoorWeatherData.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenData.html":{},"interfaces/PollenResponse.html":{},"interfaces/PollenType.html":{},"components/SliderElementComponent.html":{},"interfaces/Tile.html":{},"interfaces/TileArrays.html":{},"interfaces/UserContext.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{},"interfaces/UserIdentifikation.html":{},"injectables/WeatherAPIService.html":{},"interfaces/WeatherData.html":{},"interfaces/WeatherForecastData.html":{},"interfaces/WeatherHistoryByDayData.html":{},"interfaces/WeatherHistoryData.html":{}}}],["model/image",{"_index":1620,"title":{},"body":{"injectables/ImageService.html":{}}}],["model/mock",{"_index":1131,"title":{},"body":{"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["model/user",{"_index":81,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CheckTokenResponse.html":{},"injectables/ImageService.html":{},"injectables/LocalStorageService.html":{},"interfaces/LoginResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{}}}],["model/weather",{"_index":1135,"title":{},"body":{"interfaces/ForecastResponse.html":{},"injectables/HistoryTileService.html":{},"injectables/ImageService.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"components/PollenflugDetailViewComponent.html":{},"injectables/TextService.html":{},"injectables/TileService.html":{},"injectables/WeatherAPIService.html":{},"injectables/WeatherDataService.html":{}}}],["moderately",{"_index":2438,"title":{},"body":{"injectables/TextService.html":{}}}],["module",{"_index":273,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ScreensModule.html":{},"modules/UiElementsModule.html":{},"modules/ViewsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ScreensModule.html":{},"modules/UiElementsModule.html":{},"modules/ViewsModule.html":{},"overview.html":{}}}],["modules",{"_index":275,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ScreensModule.html":{},"modules/UiElementsModule.html":{},"modules/ViewsModule.html":{},"modules.html":{},"overview.html":{}}}],["moment",{"_index":2487,"title":{},"body":{"injectables/TextService.html":{}}}],["monat",{"_index":1393,"title":{},"body":{"components/HistoryDetailViewComponent.html":{}}}],["mond",{"_index":2496,"title":{},"body":{"injectables/TextService.html":{}}}],["month",{"_index":1203,"title":{},"body":{"interfaces/ForecastResponse.html":{},"components/HistoryDetailViewComponent.html":{},"injectables/HistoryTileService.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/WeatherAPIService.html":{},"injectables/WeatherDataService.html":{},"miscellaneous/enumerations.html":{}}}],["months",{"_index":1546,"title":{},"body":{"injectables/HistoryTileService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["months[date.getmonth",{"_index":1512,"title":{},"body":{"injectables/HistoryTileService.html":{}}}],["more",{"_index":1345,"title":{},"body":{"components/HistoryDetailViewComponent.html":{},"injectables/WeatherDataService.html":{},"index.html":{}}}],["motion",{"_index":948,"title":{},"body":{"components/DashboardScreenComponent.html":{},"components/DashboardViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/OutdoorWeatherViewComponent.html":{}}}],["moz",{"_index":1867,"title":{},"body":{"components/LoginViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/SliderElementComponent.html":{}}}],["ms",{"_index":2329,"title":{},"body":{"components/ProgressChartElementComponent.html":{},"components/SliderElementComponent.html":{}}}],["multiple",{"_index":2197,"title":{},"body":{"interfaces/PollenType.html":{},"interfaces/UserContext.html":{},"interfaces/UserIdentifikation.html":{}}}],["möglich",{"_index":1172,"title":{},"body":{"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["nach",{"_index":2244,"title":{},"body":{"components/PollenflugDetailViewComponent.html":{}}}],["nahrungsmitteln",{"_index":2239,"title":{},"body":{"components/PollenflugDetailViewComponent.html":{}}}],["name",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CalibrationInfoDetailViewComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DashboardViewComponent.html":{},"components/DetailScreenComponent.html":{},"injectables/ESPConfigurationAPIService.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"injectables/HistoryTileService.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"injectables/ImageService.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"injectables/LocalStorageService.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"injectables/SpeechService.html":{},"injectables/TextService.html":{},"injectables/TileService.html":{},"components/TtsPlayerElementComponent.html":{},"injectables/UserContextAPIService.html":{},"injectables/WeatherAPIService.html":{},"injectables/WeatherDataService.html":{},"index.html":{}}}],["nav",{"_index":230,"title":{},"body":{"components/AppComponent.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CalibrationInfoDetailViewComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DashboardViewComponent.html":{},"components/DetailScreenComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{},"modules/UiElementsModule.html":{}}}],["navbar",{"_index":514,"title":{},"body":{"components/CalibrationInfoDetailViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DashboardViewComponent.html":{},"components/DetailScreenComponent.html":{},"components/MenuBarElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/RegistrationViewComponent.html":{}}}],["navbarelementcomponent",{"_index":229,"title":{"components/NavBarElementComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CalibrationInfoDetailViewComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DashboardViewComponent.html":{},"components/DetailScreenComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{},"modules/UiElementsModule.html":{},"coverage.html":{},"overview.html":{}}}],["navigate",{"_index":2966,"title":{},"body":{"index.html":{}}}],["navigation",{"_index":1877,"title":{},"body":{"components/MenuBarElementComponent.html":{},"components/PersonalizationViewComponent.html":{}}}],["ndern",{"_index":869,"title":{},"body":{"components/ConfigurationTilePopUpDialogView.html":{}}}],["neben",{"_index":1400,"title":{},"body":{"components/HistoryDetailViewComponent.html":{}}}],["neblig",{"_index":2493,"title":{},"body":{"injectables/TextService.html":{}}}],["need",{"_index":984,"title":{},"body":{"components/DashboardViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{}}}],["needed",{"_index":155,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"interfaces/PollenType.html":{},"interfaces/UserContext.html":{},"interfaces/UserIdentifikation.html":{},"injectables/WeatherDataService.html":{}}}],["needs",{"_index":1290,"title":{},"body":{"interfaces/GraphDataSet.html":{},"interfaces/IndoorRoomData.html":{},"interfaces/OutdoorWeatherData.html":{},"interfaces/PollenData.html":{},"interfaces/Tile.html":{},"interfaces/TileArrays.html":{},"interfaces/WeatherData.html":{},"interfaces/WeatherForecastData.html":{},"interfaces/WeatherHistoryByDayData.html":{},"interfaces/WeatherHistoryData.html":{}}}],["network",{"_index":592,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/ESPConfiguration.html":{},"injectables/ESPConfigurationAPIService.html":{},"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/LoginResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{},"injectables/WeatherAPIService.html":{},"injectables/WeatherDataService.html":{}}}],["new",{"_index":618,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"interfaces/ESPConfiguration.html":{},"injectables/ESPConfigurationAPIService.html":{},"interfaces/ForecastResponse.html":{},"injectables/HistoryTileService.html":{},"injectables/ImageService.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/LoginResponse.html":{},"components/LoginViewComponent.html":{},"components/MenuElementComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"interfaces/OutdoorWeatherResponse.html":{},"components/PersonalizationSettingsViewComponent.html":{},"interfaces/PollenResponse.html":{},"interfaces/PollenType.html":{},"components/RegistrationViewComponent.html":{},"components/SliderElementComponent.html":{},"injectables/SpeechService.html":{},"interfaces/UserContext.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{},"interfaces/UserIdentifikation.html":{},"injectables/WeatherAPIService.html":{},"injectables/WeatherDataService.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["ng",{"_index":2963,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["ngmodule",{"_index":295,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ScreensModule.html":{},"modules/UiElementsModule.html":{},"modules/ViewsModule.html":{}}}],["ngonchanges",{"_index":30,"title":{},"body":{"components/AppComponent.html":{}}}],["ngoninit",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CalibrationInfoDetailViewComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DashboardViewComponent.html":{},"components/DetailScreenComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{}}}],["ngx",{"_index":314,"title":{},"body":{"modules/AppModule.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardViewComponent.html":{},"modules/ScreensModule.html":{},"modules/ViewsModule.html":{},"dependencies.html":{}}}],["ngxspinnermodule",{"_index":313,"title":{},"body":{"modules/AppModule.html":{},"modules/ScreensModule.html":{},"modules/ViewsModule.html":{}}}],["ngxspinnerservice",{"_index":913,"title":{},"body":{"components/ConfigurationViewComponent.html":{},"components/DashboardViewComponent.html":{}}}],["nicht",{"_index":1109,"title":{},"body":{"components/ForecastDetailViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/LoginViewComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/RegistrationViewComponent.html":{}}}],["nichts",{"_index":926,"title":{},"body":{"components/ConfigurationViewComponent.html":{}}}],["niederschlag",{"_index":1090,"title":{},"body":{"components/ForecastDetailViewComponent.html":{}}}],["niedrige",{"_index":2468,"title":{},"body":{"injectables/TextService.html":{}}}],["night",{"_index":1312,"title":{},"body":{"interfaces/GraphDataSet.html":{},"injectables/ImageService.html":{},"interfaces/IndoorRoomData.html":{},"interfaces/OutdoorWeatherData.html":{},"components/OutdoorWeatherViewComponent.html":{},"interfaces/PollenData.html":{},"injectables/TextService.html":{},"interfaces/Tile.html":{},"interfaces/TileArrays.html":{},"interfaces/WeatherData.html":{},"interfaces/WeatherForecastData.html":{},"interfaces/WeatherHistoryByDayData.html":{},"interfaces/WeatherHistoryData.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["nightdark",{"_index":1683,"title":{},"body":{"injectables/ImageService.html":{},"miscellaneous/variables.html":{}}}],["noch",{"_index":1081,"title":{},"body":{"components/ForecastDetailViewComponent.html":{},"components/IndoorDetailViewComponent.html":{}}}],["none",{"_index":453,"title":{},"body":{"components/BackButtonElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/SliderElementComponent.html":{}}}],["noon",{"_index":1311,"title":{},"body":{"interfaces/GraphDataSet.html":{},"injectables/ImageService.html":{},"interfaces/IndoorRoomData.html":{},"components/LoginViewComponent.html":{},"interfaces/OutdoorWeatherData.html":{},"components/OutdoorWeatherViewComponent.html":{},"interfaces/PollenData.html":{},"interfaces/Tile.html":{},"interfaces/TileArrays.html":{},"interfaces/WeatherData.html":{},"interfaces/WeatherForecastData.html":{},"interfaces/WeatherHistoryByDayData.html":{},"interfaces/WeatherHistoryData.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["noondark",{"_index":1676,"title":{},"body":{"injectables/ImageService.html":{},"miscellaneous/variables.html":{}}}],["not(input",{"_index":1874,"title":{},"body":{"components/LoginViewComponent.html":{}}}],["nowrap",{"_index":902,"title":{},"body":{"components/ConfigurationTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PollenTagElementComponent.html":{},"components/TtsPlayerElementComponent.html":{}}}],["null",{"_index":1818,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["number",{"_index":129,"title":{},"body":{"components/AppComponent.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"interfaces/CheckTokenResponse.html":{},"interfaces/ESPConfiguration.html":{},"injectables/ESPConfigurationAPIService.html":{},"interfaces/ForecastResponse.html":{},"interfaces/GraphDataSet.html":{},"components/HistoryDetailViewComponent.html":{},"injectables/HistoryTileService.html":{},"components/HumidityTileViewComponent.html":{},"interfaces/IndoorRoomData.html":{},"interfaces/IndoorRoomResponse.html":{},"components/IndoorTileViewComponent.html":{},"interfaces/LoginResponse.html":{},"interfaces/OutdoorWeatherData.html":{},"interfaces/OutdoorWeatherResponse.html":{},"components/PersonalizationSettingsViewComponent.html":{},"interfaces/PollenData.html":{},"interfaces/PollenResponse.html":{},"interfaces/PollenType.html":{},"components/ProgressChartElementComponent.html":{},"components/SliderElementComponent.html":{},"injectables/TextService.html":{},"interfaces/Tile.html":{},"interfaces/TileArrays.html":{},"injectables/TileService.html":{},"interfaces/UserContext.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{},"interfaces/UserIdentifikation.html":{},"injectables/WeatherAPIService.html":{},"interfaces/WeatherData.html":{},"interfaces/WeatherForecastData.html":{},"interfaces/WeatherHistoryByDayData.html":{},"interfaces/WeatherHistoryData.html":{}}}],["numberofpollen",{"_index":2114,"title":{},"body":{"components/PersonalizationSettingsViewComponent.html":{}}}],["numberofthemes",{"_index":2115,"title":{},"body":{"components/PersonalizationSettingsViewComponent.html":{}}}],["nur",{"_index":1110,"title":{},"body":{"components/ForecastDetailViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{}}}],["nutzername",{"_index":1861,"title":{},"body":{"components/LoginViewComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/RegistrationViewComponent.html":{}}}],["object",{"_index":384,"title":{},"body":{"components/ApparentTemperatureTileViewComponent.html":{},"interfaces/CheckTokenResponse.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"interfaces/ESPConfiguration.html":{},"injectables/ESPConfigurationAPIService.html":{},"interfaces/ForecastResponse.html":{},"components/ForecastTileViewComponent.html":{},"injectables/HistoryTileService.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"interfaces/IndoorRoomResponse.html":{},"components/IndoorTileViewComponent.html":{},"injectables/LocalStorageService.html":{},"interfaces/LoginResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/TextService.html":{},"injectables/TileService.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{},"injectables/WeatherAPIService.html":{},"miscellaneous/variables.html":{}}}],["object.keys(themes).length",{"_index":2137,"title":{},"body":{"components/PersonalizationSettingsViewComponent.html":{}}}],["objects",{"_index":908,"title":{},"body":{"components/ConfigurationViewComponent.html":{},"injectables/HistoryTileService.html":{},"injectables/TextService.html":{}}}],["objectstring",{"_index":1799,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["observable",{"_index":75,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CheckTokenResponse.html":{},"interfaces/ESPConfiguration.html":{},"injectables/ESPConfigurationAPIService.html":{},"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/LoginResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{},"injectables/WeatherAPIService.html":{},"injectables/WeatherDataService.html":{}}}],["observable((observer",{"_index":619,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/ESPConfiguration.html":{},"injectables/ESPConfigurationAPIService.html":{},"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/LoginResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["observable.subscribe(data",{"_index":2824,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["observe",{"_index":622,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"injectables/ImageService.html":{},"interfaces/LoginResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{}}}],["observe(['(min",{"_index":111,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{}}}],["observe(['(prefers",{"_index":775,"title":{},"body":{"components/CheckboxSwitcherElementComponent.html":{},"injectables/ImageService.html":{}}}],["observer.complete",{"_index":645,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/ESPConfiguration.html":{},"injectables/ESPConfigurationAPIService.html":{},"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/LoginResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["observer.error(\"an",{"_index":701,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/LoginResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{}}}],["observer.error(\"delete",{"_index":686,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/LoginResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{}}}],["observer.error(\"ein",{"_index":636,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/ESPConfiguration.html":{},"injectables/ESPConfigurationAPIService.html":{},"interfaces/LoginResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{}}}],["observer.error(\"post",{"_index":678,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/LoginResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{}}}],["observer.error(body.message",{"_index":634,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/LoginResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{}}}],["observer.next",{"_index":628,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/LoginResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["observer.next([indoordata",{"_index":1177,"title":{},"body":{"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["observer.next(body",{"_index":1025,"title":{},"body":{"interfaces/ESPConfiguration.html":{},"injectables/ESPConfigurationAPIService.html":{}}}],["observer.next(data",{"_index":707,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/ESPConfiguration.html":{},"injectables/ESPConfigurationAPIService.html":{},"interfaces/LoginResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{}}}],["observer.next(data.success",{"_index":695,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/LoginResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{}}}],["observer.next(false",{"_index":696,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/ESPConfiguration.html":{},"injectables/ESPConfigurationAPIService.html":{},"interfaces/LoginResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{}}}],["observer.next(forecastdata",{"_index":1159,"title":{},"body":{"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["observer.next(outdoordata",{"_index":1153,"title":{},"body":{"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["observer.next(pollendata",{"_index":1163,"title":{},"body":{"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["observer.next(this.createusercontextfromserverresponse(context",{"_index":700,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/LoginResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{}}}],["observer.next(this.createusercontextfromserverresponse(response",{"_index":656,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/LoginResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{}}}],["observer.next(true",{"_index":661,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/ESPConfiguration.html":{},"injectables/ESPConfigurationAPIService.html":{},"interfaces/LoginResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{}}}],["observer.next({'datapoints",{"_index":1190,"title":{},"body":{"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["occured",{"_index":702,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/LoginResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{}}}],["od",{"_index":1749,"title":{},"body":{"components/IndoorTileViewComponent.html":{}}}],["oder",{"_index":1105,"title":{},"body":{"components/ForecastDetailViewComponent.html":{}}}],["of([sensor1",{"_index":1016,"title":{},"body":{"interfaces/ESPConfiguration.html":{},"injectables/ESPConfigurationAPIService.html":{}}}],["of(forecast",{"_index":1155,"title":{},"body":{"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["of(indoorairquality",{"_index":1166,"title":{},"body":{"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["of(outdoorweather",{"_index":1149,"title":{},"body":{"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["of(pollen",{"_index":1161,"title":{},"body":{"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["of(weatherhistory",{"_index":1181,"title":{},"body":{"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["offenbar",{"_index":1726,"title":{},"body":{"components/IndoorDetailViewComponent.html":{}}}],["oft",{"_index":1719,"title":{},"body":{"components/IndoorDetailViewComponent.html":{}}}],["oftmals",{"_index":2237,"title":{},"body":{"components/PollenflugDetailViewComponent.html":{}}}],["ohne",{"_index":1865,"title":{},"body":{"components/LoginViewComponent.html":{}}}],["ok",{"_index":1987,"title":{},"body":{"components/OpenAPELoginTileViewComponent.html":{}}}],["oldesthistorydate",{"_index":2737,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["onboarding",{"_index":232,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CalibrationInfoDetailViewComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DashboardViewComponent.html":{},"components/DetailScreenComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"modules/ScreensModule.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{}}}],["onboardingscreencomponent",{"_index":231,"title":{"components/OnboardingScreenComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CalibrationInfoDetailViewComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DashboardViewComponent.html":{},"components/DetailScreenComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"modules/ScreensModule.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{},"coverage.html":{},"overview.html":{}}}],["onclickdone",{"_index":2151,"title":{},"body":{"components/PersonalizationViewComponent.html":{}}}],["onclickpersonalization",{"_index":1833,"title":{},"body":{"components/LoginViewComponent.html":{}}}],["onclickregistration",{"_index":1834,"title":{},"body":{"components/LoginViewComponent.html":{}}}],["one",{"_index":941,"title":{},"body":{"components/DashboardScreenComponent.html":{},"components/DashboardViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"injectables/WeatherDataService.html":{}}}],["oninit",{"_index":393,"title":{},"body":{"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CalibrationInfoDetailViewComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DashboardViewComponent.html":{},"components/DetailScreenComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{}}}],["onnoclick",{"_index":812,"title":{},"body":{"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{}}}],["onpause",{"_index":2591,"title":{},"body":{"components/TtsPlayerElementComponent.html":{}}}],["onplay",{"_index":2592,"title":{},"body":{"components/TtsPlayerElementComponent.html":{}}}],["onsubmit",{"_index":813,"title":{},"body":{"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/RegistrationViewComponent.html":{}}}],["opacity",{"_index":1949,"title":{},"body":{"components/MenuElementComponent.html":{},"components/TtsPlayerElementComponent.html":{},"miscellaneous/variables.html":{}}}],["open",{"_index":234,"title":{},"body":{"components/AppComponent.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CalibrationInfoDetailViewComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DashboardViewComponent.html":{},"components/DetailScreenComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"injectables/LocalStorageService.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{},"modules/ViewsModule.html":{}}}],["openapelogintileviewcomponent",{"_index":233,"title":{"components/OpenAPELoginTileViewComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CalibrationInfoDetailViewComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DashboardViewComponent.html":{},"components/DetailScreenComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{},"modules/ViewsModule.html":{},"coverage.html":{},"overview.html":{}}}],["openapepassword",{"_index":654,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/LoginResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{}}}],["openapeurl",{"_index":612,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/LoginResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{}}}],["openapeuser",{"_index":653,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/LoginResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{}}}],["openconfigurationsettings",{"_index":1926,"title":{},"body":{"components/MenuElementComponent.html":{}}}],["opendialog",{"_index":846,"title":{},"body":{"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{}}}],["openmenu",{"_index":1908,"title":{},"body":{"components/MenuButtonElementComponent.html":{}}}],["openpersonalizationsettings",{"_index":1927,"title":{},"body":{"components/MenuElementComponent.html":{}}}],["opens",{"_index":440,"title":{},"body":{"components/BackButtonElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/MenuButtonElementComponent.html":{}}}],["optimal",{"_index":1745,"title":{},"body":{"components/IndoorTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{}}}],["optimale",{"_index":502,"title":{},"body":{"components/CalibrationInfoDetailViewComponent.html":{}}}],["optimalvalue",{"_index":2300,"title":{},"body":{"components/ProgressChartElementComponent.html":{}}}],["option",{"_index":2104,"title":{},"body":{"components/PersonalizationSettingsViewComponent.html":{}}}],["optional",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CalibrationInfoDetailViewComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardViewComponent.html":{},"injectables/ESPConfigurationAPIService.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"injectables/HistoryTileService.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"interfaces/ImageModel.html":{},"injectables/ImageService.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"injectables/LocalStorageService.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SettingsScreenComponent.html":{},"components/SliderElementComponent.html":{},"injectables/SpeechService.html":{},"injectables/TextService.html":{},"injectables/TileService.html":{},"components/TtsPlayerElementComponent.html":{},"injectables/UserContextAPIService.html":{},"injectables/WeatherAPIService.html":{},"injectables/WeatherDataService.html":{}}}],["options",{"_index":833,"title":{},"body":{"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/MenuElementComponent.html":{}}}],["orange",{"_index":2177,"title":{},"body":{"components/PollenTagElementComponent.html":{},"components/PollenflugSmallTileComponent.html":{}}}],["orchid",{"_index":883,"title":{},"body":{"components/ConfigurationTilePopUpDialogView.html":{}}}],["order",{"_index":2506,"title":{},"body":{"injectables/TileService.html":{},"injectables/WeatherDataService.html":{}}}],["orderd",{"_index":2512,"title":{},"body":{"injectables/TileService.html":{}}}],["ordered",{"_index":2511,"title":{},"body":{"injectables/TileService.html":{}}}],["orderitemsin(tilesarray",{"_index":2580,"title":{},"body":{"injectables/TileService.html":{}}}],["ort",{"_index":1104,"title":{},"body":{"components/ForecastDetailViewComponent.html":{}}}],["otherwise",{"_index":1995,"title":{},"body":{"components/OutdoorWeatherDetailViewComponent.html":{}}}],["out",{"_index":291,"title":{},"body":{"modules/AppModule.html":{},"injectables/LocalStorageService.html":{},"components/MenuElementComponent.html":{},"modules/ScreensModule.html":{},"modules/UiElementsModule.html":{},"modules/ViewsModule.html":{},"index.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["outdoor",{"_index":237,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CalibrationInfoDetailViewComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DashboardViewComponent.html":{},"components/DetailScreenComponent.html":{},"components/ForecastDetailViewComponent.html":{},"interfaces/ForecastResponse.html":{},"components/ForecastTileViewComponent.html":{},"interfaces/GraphDataSet.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"interfaces/IndoorRoomData.html":{},"interfaces/IndoorRoomResponse.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"interfaces/OutdoorWeatherData.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"interfaces/OutdoorWeatherResponse.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"interfaces/PollenData.html":{},"components/PollenListElementComponent.html":{},"interfaces/PollenResponse.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"interfaces/Tile.html":{},"interfaces/TileArrays.html":{},"injectables/TileService.html":{},"components/TtsPlayerElementComponent.html":{},"modules/ViewsModule.html":{},"injectables/WeatherAPIService.html":{},"interfaces/WeatherData.html":{},"injectables/WeatherDataService.html":{},"interfaces/WeatherForecastData.html":{},"interfaces/WeatherHistoryByDayData.html":{},"interfaces/WeatherHistoryData.html":{},"miscellaneous/variables.html":{}}}],["outdoordata",{"_index":956,"title":{},"body":{"components/DashboardViewComponent.html":{},"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["outdoortext",{"_index":974,"title":{},"body":{"components/DashboardViewComponent.html":{}}}],["outdoorurl",{"_index":1138,"title":{},"body":{"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["outdoorwea3the3r114",{"_index":2889,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["outdoorweathe3r114",{"_index":2890,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["outdoorweather",{"_index":1129,"title":{},"body":{"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"interfaces/OutdoorWeatherResponse.html":{},"components/OutdoorWeatherViewComponent.html":{},"interfaces/PollenResponse.html":{},"injectables/TileService.html":{},"injectables/WeatherAPIService.html":{},"injectables/WeatherDataService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["outdoorweather.maxtemperature",{"_index":2087,"title":{},"body":{"components/OutdoorWeatherViewComponent.html":{}}}],["outdoorweather.mintemperature",{"_index":2088,"title":{},"body":{"components/OutdoorWeatherViewComponent.html":{}}}],["outdoorweather.temperature",{"_index":2086,"title":{},"body":{"components/OutdoorWeatherViewComponent.html":{}}}],["outdoorweather10",{"_index":2892,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["outdoorweather11",{"_index":2893,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["outdoorweather110",{"_index":2894,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["outdoorweather112",{"_index":2895,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["outdoorweather113",{"_index":2896,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["outdoorweather114",{"_index":2897,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["outdoorweather12",{"_index":2898,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["outdoorweather13",{"_index":2899,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["outdoorweather14",{"_index":2900,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["outdoorweather2",{"_index":2901,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["outdoorweather3",{"_index":2902,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["outdoorweather321",{"_index":2903,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["outdoorweather4",{"_index":2904,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["outdoorweather41",{"_index":2905,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["outdoorweatherdata",{"_index":411,"title":{"interfaces/OutdoorWeatherData.html":{}},"body":{"components/ApparentTemperatureTileViewComponent.html":{},"components/DashboardViewComponent.html":{},"interfaces/ForecastResponse.html":{},"interfaces/GraphDataSet.html":{},"injectables/HistoryTileService.html":{},"components/HumidityTileViewComponent.html":{},"interfaces/IndoorRoomData.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherData.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"interfaces/OutdoorWeatherResponse.html":{},"components/OutdoorWeatherViewComponent.html":{},"interfaces/PollenData.html":{},"interfaces/PollenResponse.html":{},"injectables/TextService.html":{},"interfaces/Tile.html":{},"interfaces/TileArrays.html":{},"injectables/TileService.html":{},"injectables/WeatherAPIService.html":{},"interfaces/WeatherData.html":{},"injectables/WeatherDataService.html":{},"interfaces/WeatherForecastData.html":{},"interfaces/WeatherHistoryByDayData.html":{},"interfaces/WeatherHistoryData.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["outdoorweatherdata(value",{"_index":2781,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["outdoorweatherdata.apparenttemperature",{"_index":420,"title":{},"body":{"components/ApparentTemperatureTileViewComponent.html":{}}}],["outdoorweatherdata.humidity",{"_index":1599,"title":{},"body":{"components/HumidityTileViewComponent.html":{}}}],["outdoorweatherdetailviewcomponent",{"_index":236,"title":{"components/OutdoorWeatherDetailViewComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CalibrationInfoDetailViewComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DashboardViewComponent.html":{},"components/DetailScreenComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{},"modules/ViewsModule.html":{},"coverage.html":{},"overview.html":{}}}],["outdoorweatherresponse",{"_index":1199,"title":{"interfaces/OutdoorWeatherResponse.html":{}},"body":{"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/WeatherAPIService.html":{},"coverage.html":{}}}],["outdoorweatherviewcomponent",{"_index":239,"title":{"components/OutdoorWeatherViewComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CalibrationInfoDetailViewComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DashboardViewComponent.html":{},"components/DetailScreenComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{},"modules/ViewsModule.html":{},"coverage.html":{},"overview.html":{}}}],["outlet",{"_index":57,"title":{},"body":{"components/AppComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/SettingsScreenComponent.html":{}}}],["outlet.activatedroutedata",{"_index":98,"title":{},"body":{"components/AppComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/SettingsScreenComponent.html":{}}}],["outlet.activatedroutedata['animationstate",{"_index":99,"title":{},"body":{"components/AppComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/SettingsScreenComponent.html":{}}}],["outline",{"_index":881,"title":{},"body":{"components/ConfigurationTilePopUpDialogView.html":{},"components/ProgressChartElementComponent.html":{},"components/SliderElementComponent.html":{}}}],["output",{"_index":762,"title":{},"body":{"components/CheckboxSwitcherElementComponent.html":{},"components/MenuElementComponent.html":{},"components/SliderElementComponent.html":{},"injectables/SpeechService.html":{},"components/TtsPlayerElementComponent.html":{}}}],["outputs",{"_index":746,"title":{},"body":{"components/CheckboxSwitcherElementComponent.html":{},"components/MenuElementComponent.html":{},"components/SliderElementComponent.html":{}}}],["overview",{"_index":2982,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["p",{"_index":550,"title":{},"body":{"components/CardElementComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/MenuElementComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PollenTagElementComponent.html":{},"components/ProgressChartElementComponent.html":{}}}],["paar",{"_index":2440,"title":{},"body":{"injectables/TextService.html":{}}}],["package",{"_index":2935,"title":{"dependencies.html":{}},"body":{}}],["padding",{"_index":173,"title":{},"body":{"components/AppComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CalibrationInfoDetailViewComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DashboardViewComponent.html":{},"components/DetailScreenComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{}}}],["padding)/2",{"_index":876,"title":{},"body":{"components/ConfigurationTilePopUpDialogView.html":{},"components/PollenListElementComponent.html":{}}}],["page",{"_index":441,"title":{},"body":{"components/BackButtonElementComponent.html":{},"index.html":{}}}],["param",{"_index":712,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/ESPConfiguration.html":{},"injectables/ESPConfigurationAPIService.html":{},"interfaces/ForecastResponse.html":{},"injectables/HistoryTileService.html":{},"components/HistoryTileViewComponent.html":{},"injectables/ImageService.html":{},"interfaces/IndoorRoomResponse.html":{},"injectables/LocalStorageService.html":{},"interfaces/LoginResponse.html":{},"components/OpenAPELoginTileViewComponent.html":{},"interfaces/OutdoorWeatherResponse.html":{},"components/PersonalizationSettingsViewComponent.html":{},"interfaces/PollenResponse.html":{},"injectables/SpeechService.html":{},"injectables/TextService.html":{},"injectables/TileService.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["parameters",{"_index":43,"title":{},"body":{"components/AppComponent.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CalibrationInfoDetailViewComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardViewComponent.html":{},"injectables/ESPConfigurationAPIService.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"injectables/HistoryTileService.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"injectables/ImageService.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"injectables/LocalStorageService.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SettingsScreenComponent.html":{},"components/SliderElementComponent.html":{},"injectables/SpeechService.html":{},"injectables/TextService.html":{},"injectables/TileService.html":{},"components/TtsPlayerElementComponent.html":{},"injectables/UserContextAPIService.html":{},"injectables/WeatherAPIService.html":{},"injectables/WeatherDataService.html":{}}}],["params",{"_index":673,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/ESPConfiguration.html":{},"injectables/ESPConfigurationAPIService.html":{},"interfaces/LoginResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{}}}],["parent",{"_index":761,"title":{},"body":{"components/CheckboxSwitcherElementComponent.html":{},"interfaces/GraphDataSet.html":{},"interfaces/IndoorRoomData.html":{},"interfaces/OutdoorWeatherData.html":{},"interfaces/PollenData.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/SliderElementComponent.html":{},"interfaces/Tile.html":{},"interfaces/TileArrays.html":{},"injectables/TileService.html":{},"components/TtsPlayerElementComponent.html":{},"interfaces/WeatherData.html":{},"interfaces/WeatherForecastData.html":{},"interfaces/WeatherHistoryByDayData.html":{},"interfaces/WeatherHistoryData.html":{}}}],["particular",{"_index":2215,"title":{},"body":{"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{}}}],["partly",{"_index":1656,"title":{},"body":{"injectables/ImageService.html":{},"injectables/TextService.html":{},"miscellaneous/variables.html":{}}}],["passed",{"_index":735,"title":{},"body":{"components/CheckboxSwitcherElementComponent.html":{},"components/DashboardViewComponent.html":{},"components/ForecastDetailViewComponent.html":{},"interfaces/GraphDataSet.html":{},"components/IndoorDetailViewComponent.html":{},"interfaces/IndoorRoomData.html":{},"interfaces/OutdoorWeatherData.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"interfaces/PollenData.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"interfaces/Tile.html":{},"interfaces/TileArrays.html":{},"components/TtsPlayerElementComponent.html":{},"interfaces/WeatherData.html":{},"interfaces/WeatherForecastData.html":{},"interfaces/WeatherHistoryByDayData.html":{},"interfaces/WeatherHistoryData.html":{}}}],["passes",{"_index":909,"title":{},"body":{"components/ConfigurationViewComponent.html":{}}}],["passing",{"_index":863,"title":{},"body":{"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{}}}],["password",{"_index":621,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/LoginResponse.html":{},"components/LoginViewComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/RegistrationViewComponent.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{}}}],["password\":\"admin",{"_index":163,"title":{},"body":{"components/AppComponent.html":{}}}],["password).then((data",{"_index":1850,"title":{},"body":{"components/LoginViewComponent.html":{},"components/RegistrationViewComponent.html":{}}}],["password).then(result",{"_index":1984,"title":{},"body":{"components/OpenAPELoginTileViewComponent.html":{}}}],["passwort",{"_index":1862,"title":{},"body":{"components/LoginViewComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/RegistrationViewComponent.html":{}}}],["path",{"_index":365,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/ImageService.html":{},"components/TtsPlayerElementComponent.html":{}}}],["pathmatch",{"_index":370,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["people",{"_index":2200,"title":{},"body":{"interfaces/PollenType.html":{},"interfaces/UserContext.html":{},"interfaces/UserIdentifikation.html":{}}}],["per",{"_index":1461,"title":{},"body":{"injectables/HistoryTileService.html":{}}}],["percent",{"_index":1748,"title":{},"body":{"components/IndoorTileViewComponent.html":{}}}],["pers",{"_index":1941,"title":{},"body":{"components/MenuElementComponent.html":{}}}],["personalisierung",{"_index":1958,"title":{},"body":{"components/MenuElementComponent.html":{}}}],["personalization",{"_index":241,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CalibrationInfoDetailViewComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DashboardViewComponent.html":{},"components/DetailScreenComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{},"interfaces/UserContext.html":{},"modules/ViewsModule.html":{},"miscellaneous/variables.html":{}}}],["personalizationsettingsviewcomponent",{"_index":240,"title":{"components/PersonalizationSettingsViewComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CalibrationInfoDetailViewComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DashboardViewComponent.html":{},"components/DetailScreenComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{},"modules/ViewsModule.html":{},"coverage.html":{},"overview.html":{}}}],["personalizationviewcomponent",{"_index":243,"title":{"components/PersonalizationViewComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CalibrationInfoDetailViewComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DashboardViewComponent.html":{},"components/DetailScreenComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{},"modules/ViewsModule.html":{},"coverage.html":{},"overview.html":{}}}],["perspective(1px",{"_index":561,"title":{},"body":{"components/CardElementComponent.html":{}}}],["pflanzenentwicklung",{"_index":2263,"title":{},"body":{"components/PollenflugDetailViewComponent.html":{}}}],["play",{"_index":2589,"title":{},"body":{"components/TtsPlayerElementComponent.html":{}}}],["player",{"_index":267,"title":{},"body":{"components/AppComponent.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CalibrationInfoDetailViewComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DashboardViewComponent.html":{},"components/DetailScreenComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{},"modules/UiElementsModule.html":{},"coverage.html":{}}}],["png",{"_index":1654,"title":{},"body":{"injectables/ImageService.html":{}}}],["pointer",{"_index":789,"title":{},"body":{"components/CheckboxSwitcherElementComponent.html":{},"components/MenuElementComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/SliderElementComponent.html":{}}}],["polle",{"_index":687,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/LoginResponse.html":{},"components/PersonalizationSettingsViewComponent.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{}}}],["pollen",{"_index":251,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CalibrationInfoDetailViewComponent.html":{},"components/CardElementComponent.html":{},"interfaces/CheckTokenResponse.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DashboardViewComponent.html":{},"components/DetailScreenComponent.html":{},"components/ForecastDetailViewComponent.html":{},"interfaces/ForecastResponse.html":{},"components/ForecastTileViewComponent.html":{},"interfaces/GraphDataSet.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"interfaces/IndoorRoomData.html":{},"interfaces/IndoorRoomResponse.html":{},"components/IndoorTileViewComponent.html":{},"interfaces/LoginResponse.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"interfaces/OutdoorWeatherData.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"interfaces/OutdoorWeatherResponse.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"interfaces/PollenData.html":{},"components/PollenListElementComponent.html":{},"interfaces/PollenResponse.html":{},"components/PollenTagElementComponent.html":{},"interfaces/PollenType.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"injectables/TextService.html":{},"interfaces/Tile.html":{},"interfaces/TileArrays.html":{},"injectables/TileService.html":{},"components/TtsPlayerElementComponent.html":{},"modules/UiElementsModule.html":{},"interfaces/UserContext.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{},"interfaces/UserIdentifikation.html":{},"injectables/WeatherAPIService.html":{},"interfaces/WeatherData.html":{},"injectables/WeatherDataService.html":{},"interfaces/WeatherForecastData.html":{},"interfaces/WeatherHistoryByDayData.html":{},"interfaces/WeatherHistoryData.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["pollen.push",{"_index":1235,"title":{},"body":{"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["pollen.today",{"_index":2567,"title":{},"body":{"injectables/TileService.html":{}}}],["pollen/all",{"_index":607,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/LoginResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["pollenallergiker",{"_index":2226,"title":{},"body":{"components/PollenflugDetailViewComponent.html":{}}}],["pollenallergikers",{"_index":2257,"title":{},"body":{"components/PollenflugDetailViewComponent.html":{}}}],["pollenbelastung",{"_index":2276,"title":{},"body":{"components/PollenflugDetailViewComponent.html":{}}}],["pollendata",{"_index":1132,"title":{"interfaces/PollenData.html":{}},"body":{"interfaces/ForecastResponse.html":{},"interfaces/GraphDataSet.html":{},"components/HumidityTileViewComponent.html":{},"interfaces/IndoorRoomData.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherData.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenData.html":{},"interfaces/PollenResponse.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"injectables/TextService.html":{},"interfaces/Tile.html":{},"interfaces/TileArrays.html":{},"injectables/TileService.html":{},"injectables/WeatherAPIService.html":{},"interfaces/WeatherData.html":{},"injectables/WeatherDataService.html":{},"interfaces/WeatherForecastData.html":{},"interfaces/WeatherHistoryByDayData.html":{},"interfaces/WeatherHistoryData.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["pollendata(value",{"_index":2762,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["pollendata.filter((item",{"_index":2543,"title":{},"body":{"injectables/TileService.html":{}}}],["pollendata.find(dataitem",{"_index":2537,"title":{},"body":{"injectables/TileService.html":{}}}],["pollendataarray",{"_index":2423,"title":{},"body":{"injectables/TextService.html":{}}}],["pollendataarray.foreach(element",{"_index":2425,"title":{},"body":{"injectables/TextService.html":{}}}],["pollenflug",{"_index":245,"title":{},"body":{"components/AppComponent.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CalibrationInfoDetailViewComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DashboardViewComponent.html":{},"components/DetailScreenComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{},"modules/ViewsModule.html":{}}}],["pollenflugdetailviewcomponent",{"_index":244,"title":{"components/PollenflugDetailViewComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CalibrationInfoDetailViewComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DashboardViewComponent.html":{},"components/DetailScreenComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{},"modules/ViewsModule.html":{},"coverage.html":{},"overview.html":{}}}],["pollenflugsmalltilecomponent",{"_index":246,"title":{"components/PollenflugSmallTileComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CalibrationInfoDetailViewComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DashboardViewComponent.html":{},"components/DetailScreenComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{},"modules/ViewsModule.html":{},"coverage.html":{},"overview.html":{}}}],["pollenflugtileviewcomponent",{"_index":249,"title":{"components/PollenflugTileViewComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CalibrationInfoDetailViewComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DashboardViewComponent.html":{},"components/DetailScreenComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{},"modules/ViewsModule.html":{},"coverage.html":{},"overview.html":{}}}],["pollenid",{"_index":683,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/LoginResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{}}}],["pollenitem",{"_index":2536,"title":{},"body":{"injectables/TileService.html":{}}}],["pollenitem.pollenname",{"_index":2540,"title":{},"body":{"injectables/TileService.html":{}}}],["pollenkonzentration",{"_index":2252,"title":{},"body":{"components/PollenflugDetailViewComponent.html":{}}}],["pollenlist",{"_index":1280,"title":{},"body":{"interfaces/GraphDataSet.html":{},"interfaces/IndoorRoomData.html":{},"interfaces/OutdoorWeatherData.html":{},"interfaces/PollenData.html":{},"interfaces/Tile.html":{},"interfaces/TileArrays.html":{},"injectables/TileService.html":{},"interfaces/WeatherData.html":{},"interfaces/WeatherForecastData.html":{},"interfaces/WeatherHistoryByDayData.html":{},"interfaces/WeatherHistoryData.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["pollenlistelementcomponent",{"_index":250,"title":{"components/PollenListElementComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CalibrationInfoDetailViewComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DashboardViewComponent.html":{},"components/DetailScreenComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{},"modules/UiElementsModule.html":{},"coverage.html":{},"overview.html":{}}}],["pollenname",{"_index":1237,"title":{},"body":{"interfaces/ForecastResponse.html":{},"interfaces/GraphDataSet.html":{},"interfaces/IndoorRoomData.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherData.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenData.html":{},"interfaces/PollenResponse.html":{},"interfaces/PollenType.html":{},"interfaces/Tile.html":{},"interfaces/TileArrays.html":{},"interfaces/UserContext.html":{},"interfaces/UserIdentifikation.html":{},"injectables/WeatherAPIService.html":{},"interfaces/WeatherData.html":{},"interfaces/WeatherForecastData.html":{},"interfaces/WeatherHistoryByDayData.html":{},"interfaces/WeatherHistoryData.html":{},"miscellaneous/variables.html":{}}}],["pollenresponse",{"_index":1233,"title":{"interfaces/PollenResponse.html":{}},"body":{"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/WeatherAPIService.html":{},"coverage.html":{}}}],["pollensmall",{"_index":1279,"title":{},"body":{"interfaces/GraphDataSet.html":{},"interfaces/IndoorRoomData.html":{},"interfaces/OutdoorWeatherData.html":{},"interfaces/PollenData.html":{},"interfaces/Tile.html":{},"interfaces/TileArrays.html":{},"interfaces/WeatherData.html":{},"interfaces/WeatherForecastData.html":{},"interfaces/WeatherHistoryByDayData.html":{},"interfaces/WeatherHistoryData.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["pollensmall2",{"_index":2906,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["pollentagelementcomponent",{"_index":253,"title":{"components/PollenTagElementComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CalibrationInfoDetailViewComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DashboardViewComponent.html":{},"components/DetailScreenComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{},"modules/UiElementsModule.html":{},"coverage.html":{},"overview.html":{}}}],["pollentiles",{"_index":2216,"title":{},"body":{"components/PollenflugDetailViewComponent.html":{},"injectables/TileService.html":{}}}],["pollentiles(tiles",{"_index":2753,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["pollentype",{"_index":587,"title":{"interfaces/PollenType.html":{}},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/LoginResponse.html":{},"components/PersonalizationSettingsViewComponent.html":{},"interfaces/PollenType.html":{},"components/PollenflugSmallTileComponent.html":{},"interfaces/UserContext.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{},"interfaces/UserIdentifikation.html":{},"coverage.html":{}}}],["pop",{"_index":803,"title":{},"body":{"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{}}}],["popup",{"_index":204,"title":{},"body":{"components/AppComponent.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CalibrationInfoDetailViewComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DashboardViewComponent.html":{},"components/DetailScreenComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{}}}],["position",{"_index":1266,"title":{},"body":{"components/ForecastTileViewComponent.html":{},"interfaces/GraphDataSet.html":{},"interfaces/IndoorRoomData.html":{},"components/MenuBarElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"interfaces/OutdoorWeatherData.html":{},"components/OutdoorWeatherViewComponent.html":{},"interfaces/PollenData.html":{},"interfaces/Tile.html":{},"interfaces/TileArrays.html":{},"components/TtsPlayerElementComponent.html":{},"interfaces/WeatherData.html":{},"interfaces/WeatherForecastData.html":{},"interfaces/WeatherHistoryByDayData.html":{},"interfaces/WeatherHistoryData.html":{},"miscellaneous/variables.html":{}}}],["possible",{"_index":840,"title":{},"body":{"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{}}}],["postcode",{"_index":1220,"title":{},"body":{"interfaces/ForecastResponse.html":{},"interfaces/GraphDataSet.html":{},"interfaces/IndoorRoomData.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherData.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenData.html":{},"interfaces/PollenResponse.html":{},"interfaces/Tile.html":{},"interfaces/TileArrays.html":{},"injectables/WeatherAPIService.html":{},"interfaces/WeatherData.html":{},"interfaces/WeatherForecastData.html":{},"interfaces/WeatherHistoryByDayData.html":{},"interfaces/WeatherHistoryData.html":{},"miscellaneous/variables.html":{}}}],["postespconfiguration",{"_index":1032,"title":{},"body":{"injectables/ESPConfigurationAPIService.html":{}}}],["postespconfiguration(configuration",{"_index":1019,"title":{},"body":{"interfaces/ESPConfiguration.html":{},"injectables/ESPConfigurationAPIService.html":{}}}],["postistokenvalid",{"_index":2679,"title":{},"body":{"injectables/UserContextAPIService.html":{}}}],["postistokenvalid(token",{"_index":692,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/LoginResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{}}}],["postlogin",{"_index":2680,"title":{},"body":{"injectables/UserContextAPIService.html":{}}}],["postlogin(password",{"_index":615,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/LoginResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{}}}],["postloginopenape",{"_index":2681,"title":{},"body":{"injectables/UserContextAPIService.html":{}}}],["postloginopenape(username",{"_index":646,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/LoginResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{}}}],["postpolletousercontext",{"_index":2682,"title":{},"body":{"injectables/UserContextAPIService.html":{}}}],["postpolletousercontext(userid",{"_index":689,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/LoginResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{}}}],["postregister",{"_index":2683,"title":{},"body":{"injectables/UserContextAPIService.html":{}}}],["postregister(password",{"_index":658,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/LoginResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{}}}],["prefered",{"_index":1455,"title":{},"body":{"injectables/HistoryTileService.html":{},"injectables/ImageService.html":{},"components/OutdoorWeatherViewComponent.html":{}}}],["preference",{"_index":1898,"title":{},"body":{"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/OutdoorWeatherViewComponent.html":{}}}],["preferredpollen",{"_index":2532,"title":{},"body":{"injectables/TileService.html":{}}}],["preferredpollen.foreach(item",{"_index":2535,"title":{},"body":{"injectables/TileService.html":{}}}],["prefers",{"_index":773,"title":{},"body":{"components/CheckboxSwitcherElementComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DashboardViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/TtsPlayerElementComponent.html":{}}}],["prepareroute",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/SettingsScreenComponent.html":{}}}],["prepareroute(outlet",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/SettingsScreenComponent.html":{}}}],["pressable",{"_index":400,"title":{},"body":{"components/ApparentTemperatureTileViewComponent.html":{},"components/CardElementComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{}}}],["pressable:active",{"_index":554,"title":{},"body":{"components/CardElementComponent.html":{}}}],["pressed",{"_index":477,"title":{},"body":{"components/CalibrationInfoDetailViewComponent.html":{},"components/CardElementComponent.html":{}}}],["presses",{"_index":1921,"title":{},"body":{"components/MenuElementComponent.html":{},"components/TtsPlayerElementComponent.html":{}}}],["pressure",{"_index":1247,"title":{},"body":{"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["prioritiy",{"_index":2558,"title":{},"body":{"injectables/TileService.html":{}}}],["priority",{"_index":1285,"title":{},"body":{"interfaces/GraphDataSet.html":{},"interfaces/IndoorRoomData.html":{},"interfaces/OutdoorWeatherData.html":{},"interfaces/PollenData.html":{},"interfaces/Tile.html":{},"interfaces/TileArrays.html":{},"injectables/TileService.html":{},"interfaces/WeatherData.html":{},"interfaces/WeatherForecastData.html":{},"interfaces/WeatherHistoryByDayData.html":{},"interfaces/WeatherHistoryData.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["prioriy",{"_index":1291,"title":{},"body":{"interfaces/GraphDataSet.html":{},"interfaces/IndoorRoomData.html":{},"interfaces/OutdoorWeatherData.html":{},"interfaces/PollenData.html":{},"interfaces/Tile.html":{},"interfaces/TileArrays.html":{},"interfaces/WeatherData.html":{},"interfaces/WeatherForecastData.html":{},"interfaces/WeatherHistoryByDayData.html":{},"interfaces/WeatherHistoryData.html":{}}}],["private",{"_index":89,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CheckTokenResponse.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardViewComponent.html":{},"interfaces/ESPConfiguration.html":{},"injectables/ESPConfigurationAPIService.html":{},"components/ForecastDetailViewComponent.html":{},"interfaces/ForecastResponse.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"injectables/HistoryTileService.html":{},"components/HistoryTileViewComponent.html":{},"injectables/ImageService.html":{},"components/IndoorDetailViewComponent.html":{},"interfaces/IndoorRoomResponse.html":{},"injectables/LocalStorageService.html":{},"interfaces/LoginResponse.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuElementComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"interfaces/OutdoorWeatherResponse.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"interfaces/PollenResponse.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/RegistrationViewComponent.html":{},"injectables/SpeechService.html":{},"injectables/TileService.html":{},"components/TtsPlayerElementComponent.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{},"injectables/WeatherAPIService.html":{},"injectables/WeatherDataService.html":{}}}],["process",{"_index":475,"title":{},"body":{"components/CalibrationInfoDetailViewComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/LoginViewComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/RegistrationViewComponent.html":{}}}],["prod",{"_index":2977,"title":{},"body":{"index.html":{}}}],["production",{"_index":2979,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["progid:dximagetransform.microsoft.gradient(startcolorstr=\"#21994a\",endcolorstr=\"#ff0000\",gradienttype=1",{"_index":2311,"title":{},"body":{"components/ProgressChartElementComponent.html":{}}}],["progid:dximagetransform.microsoft.gradient(startcolorstr=\"#61c2d8\",endcolorstr=\"#437ddb\",gradienttype=1",{"_index":1669,"title":{},"body":{"injectables/ImageService.html":{},"components/LoginViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"miscellaneous/variables.html":{}}}],["progid:dximagetransform.microsoft.gradient(startcolorstr=\"#d861cc\",endcolorstr=\"#4643db\",gradienttype=1",{"_index":1675,"title":{},"body":{"injectables/ImageService.html":{},"components/OutdoorWeatherViewComponent.html":{},"miscellaneous/variables.html":{}}}],["progid:dximagetransform.microsoft.gradient(startcolorstr=\"#ee453b\",endcolorstr=\"#a4096e\",gradienttype=1",{"_index":1672,"title":{},"body":{"injectables/ImageService.html":{},"components/OutdoorWeatherViewComponent.html":{},"miscellaneous/variables.html":{}}}],["prognose",{"_index":1096,"title":{},"body":{"components/ForecastDetailViewComponent.html":{}}}],["progress",{"_index":256,"title":{},"body":{"components/AppComponent.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CalibrationInfoDetailViewComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DashboardViewComponent.html":{},"components/DetailScreenComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{},"modules/UiElementsModule.html":{}}}],["progresschartelementcomponent",{"_index":255,"title":{"components/ProgressChartElementComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CalibrationInfoDetailViewComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DashboardViewComponent.html":{},"components/DetailScreenComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{},"modules/UiElementsModule.html":{},"coverage.html":{},"overview.html":{}}}],["project",{"_index":2957,"title":{},"body":{"index.html":{}}}],["pronounciation",{"_index":2472,"title":{},"body":{"injectables/TextService.html":{}}}],["properties",{"_index":20,"title":{},"body":{"components/AppComponent.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CardElementComponent.html":{},"interfaces/CheckTokenResponse.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardViewComponent.html":{},"components/DetailScreenComponent.html":{},"interfaces/ESPConfiguration.html":{},"components/ForecastDetailViewComponent.html":{},"interfaces/ForecastResponse.html":{},"components/ForecastTileViewComponent.html":{},"interfaces/GraphDataSet.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"interfaces/ImageModel.html":{},"components/IndoorDetailViewComponent.html":{},"interfaces/IndoorRoomData.html":{},"interfaces/IndoorRoomResponse.html":{},"components/IndoorTileViewComponent.html":{},"interfaces/LoginResponse.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"interfaces/OutdoorWeatherData.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"interfaces/OutdoorWeatherResponse.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"interfaces/PollenData.html":{},"interfaces/PollenResponse.html":{},"components/PollenTagElementComponent.html":{},"interfaces/PollenType.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"interfaces/Tile.html":{},"interfaces/TileArrays.html":{},"components/TtsPlayerElementComponent.html":{},"interfaces/UserContext.html":{},"interfaces/UserContextResponse.html":{},"interfaces/UserIdentifikation.html":{},"interfaces/WeatherForecastData.html":{},"interfaces/WeatherHistoryByDayData.html":{},"interfaces/WeatherHistoryData.html":{}}}],["property",{"_index":568,"title":{},"body":{"components/CardElementComponent.html":{},"components/HistoryDetailViewComponent.html":{}}}],["prophylaxe",{"_index":2269,"title":{},"body":{"components/PollenflugDetailViewComponent.html":{}}}],["providedin",{"_index":593,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/ESPConfiguration.html":{},"injectables/ESPConfigurationAPIService.html":{},"interfaces/ForecastResponse.html":{},"injectables/HistoryTileService.html":{},"injectables/ImageService.html":{},"interfaces/IndoorRoomResponse.html":{},"injectables/LocalStorageService.html":{},"interfaces/LoginResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/SpeechService.html":{},"injectables/TextService.html":{},"injectables/TileService.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{},"injectables/WeatherAPIService.html":{},"injectables/WeatherDataService.html":{}}}],["providers",{"_index":279,"title":{},"body":{"modules/AppModule.html":{},"modules/ScreensModule.html":{},"modules/UiElementsModule.html":{},"modules/ViewsModule.html":{},"overview.html":{}}}],["proxy",{"_index":3026,"title":{},"body":{"miscellaneous/variables.html":{}}}],["public",{"_index":431,"title":{},"body":{"components/BackButtonElementComponent.html":{},"interfaces/CheckTokenResponse.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/DetailScreenComponent.html":{},"interfaces/ESPConfiguration.html":{},"injectables/ESPConfigurationAPIService.html":{},"interfaces/ForecastResponse.html":{},"injectables/HistoryTileService.html":{},"injectables/ImageService.html":{},"interfaces/IndoorRoomResponse.html":{},"injectables/LocalStorageService.html":{},"interfaces/LoginResponse.html":{},"components/MenuElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"interfaces/OutdoorWeatherResponse.html":{},"components/PersonalizationSettingsViewComponent.html":{},"interfaces/PollenResponse.html":{},"components/PollenTagElementComponent.html":{},"injectables/SpeechService.html":{},"injectables/TextService.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{},"injectables/WeatherAPIService.html":{},"injectables/WeatherDataService.html":{}}}],["purpose",{"_index":733,"title":{},"body":{"components/CheckboxSwitcherElementComponent.html":{}}}],["putsaveusercontext",{"_index":2684,"title":{},"body":{"injectables/UserContextAPIService.html":{}}}],["putsaveusercontext(userid",{"_index":663,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/LoginResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{}}}],["quality",{"_index":1743,"title":{},"body":{"components/IndoorTileViewComponent.html":{},"injectables/TextService.html":{}}}],["query",{"_index":772,"title":{},"body":{"components/CheckboxSwitcherElementComponent.html":{}}}],["query(':enter",{"_index":3030,"title":{},"body":{"miscellaneous/variables.html":{}}}],["query(':leave",{"_index":3032,"title":{},"body":{"miscellaneous/variables.html":{}}}],["query1",{"_index":135,"title":{},"body":{"components/AppComponent.html":{}}}],["query1.addeventlistener",{"_index":142,"title":{},"body":{"components/AppComponent.html":{}}}],["query2",{"_index":140,"title":{},"body":{"components/AppComponent.html":{}}}],["query2.addeventlistener",{"_index":146,"title":{},"body":{"components/AppComponent.html":{}}}],["radius",{"_index":534,"title":{},"body":{"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/MenuElementComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{}}}],["rain",{"_index":1634,"title":{},"body":{"injectables/ImageService.html":{},"injectables/TextService.html":{}}}],["rainy",{"_index":1657,"title":{},"body":{"injectables/ImageService.html":{},"injectables/TextService.html":{},"miscellaneous/variables.html":{}}}],["range",{"_index":2327,"title":{},"body":{"components/ProgressChartElementComponent.html":{},"components/SliderElementComponent.html":{}}}],["raster",{"_index":1415,"title":{},"body":{"components/HistoryDetailViewComponent.html":{}}}],["raum",{"_index":2265,"title":{},"body":{"components/PollenflugDetailViewComponent.html":{}}}],["raumes",{"_index":1735,"title":{},"body":{"components/IndoorDetailViewComponent.html":{}}}],["raumluft",{"_index":1715,"title":{},"body":{"components/IndoorDetailViewComponent.html":{}}}],["raumluftqualität",{"_index":1702,"title":{},"body":{"components/IndoorDetailViewComponent.html":{}}}],["raumname",{"_index":868,"title":{},"body":{"components/ConfigurationTilePopUpDialogView.html":{}}}],["räumliches",{"_index":1414,"title":{},"body":{"components/HistoryDetailViewComponent.html":{}}}],["reached",{"_index":1361,"title":{},"body":{"components/HistoryDetailViewComponent.html":{}}}],["reactiveformsmodule",{"_index":2700,"title":{},"body":{"modules/ViewsModule.html":{}}}],["read",{"_index":966,"title":{},"body":{"components/DashboardViewComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"injectables/SpeechService.html":{},"injectables/TextService.html":{}}}],["readable",{"_index":1501,"title":{},"body":{"injectables/HistoryTileService.html":{},"components/PollenTagElementComponent.html":{},"injectables/TextService.html":{},"miscellaneous/variables.html":{}}}],["readaloud",{"_index":2418,"title":{},"body":{"injectables/TextService.html":{}}}],["reaktionen",{"_index":2031,"title":{},"body":{"components/OutdoorWeatherDetailViewComponent.html":{},"components/PollenflugDetailViewComponent.html":{}}}],["red",{"_index":1584,"title":{},"body":{"components/HistoryTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/RegistrationViewComponent.html":{}}}],["redirect",{"_index":478,"title":{},"body":{"components/CalibrationInfoDetailViewComponent.html":{}}}],["redirects",{"_index":483,"title":{},"body":{"components/CalibrationInfoDetailViewComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuElementComponent.html":{},"components/PersonalizationViewComponent.html":{}}}],["redirectto",{"_index":369,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["reduce",{"_index":943,"title":{},"body":{"components/DashboardScreenComponent.html":{},"components/DashboardViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{}}}],["reduced",{"_index":947,"title":{},"body":{"components/DashboardScreenComponent.html":{},"components/DashboardViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/OutdoorWeatherViewComponent.html":{}}}],["reducemotion",{"_index":671,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"components/DashboardViewComponent.html":{},"interfaces/LoginResponse.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"interfaces/PollenType.html":{},"interfaces/UserContext.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{},"interfaces/UserIdentifikation.html":{},"miscellaneous/variables.html":{}}}],["reducemotionvalue",{"_index":988,"title":{},"body":{"components/DashboardViewComponent.html":{},"components/MenuButtonElementComponent.html":{}}}],["reduces",{"_index":1336,"title":{},"body":{"components/HistoryDetailViewComponent.html":{}}}],["reference",{"_index":2984,"title":{},"body":{"index.html":{}}}],["regelmäßiges",{"_index":1413,"title":{},"body":{"components/HistoryDetailViewComponent.html":{}}}],["regen",{"_index":2456,"title":{},"body":{"injectables/TextService.html":{}}}],["region",{"_index":1432,"title":{},"body":{"components/HistoryDetailViewComponent.html":{}}}],["regional",{"_index":2261,"title":{},"body":{"components/PollenflugDetailViewComponent.html":{}}}],["register",{"_index":320,"title":{},"body":{"modules/AppModule.html":{},"interfaces/CheckTokenResponse.html":{},"interfaces/LoginResponse.html":{},"components/OnboardingScreenComponent.html":{},"components/RegistrationViewComponent.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{}}}],["registerforusercontextchange",{"_index":2818,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["registerurl",{"_index":598,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/LoginResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{}}}],["registerwhenstable:30000",{"_index":330,"title":{},"body":{"modules/AppModule.html":{}}}],["registration",{"_index":259,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CalibrationInfoDetailViewComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DashboardViewComponent.html":{},"components/DetailScreenComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{},"modules/ViewsModule.html":{},"miscellaneous/variables.html":{}}}],["registrationform",{"_index":2335,"title":{},"body":{"components/RegistrationViewComponent.html":{}}}],["registrationstrategy",{"_index":329,"title":{},"body":{"modules/AppModule.html":{}}}],["registrationviewcomponent",{"_index":258,"title":{"components/RegistrationViewComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CalibrationInfoDetailViewComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DashboardViewComponent.html":{},"components/DetailScreenComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{},"modules/ViewsModule.html":{},"coverage.html":{},"overview.html":{}}}],["registrieren",{"_index":1863,"title":{},"body":{"components/LoginViewComponent.html":{}}}],["regnen",{"_index":2445,"title":{},"body":{"injectables/TextService.html":{}}}],["regnet",{"_index":2488,"title":{},"body":{"injectables/TextService.html":{}}}],["relative",{"_index":1267,"title":{},"body":{"components/ForecastTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"miscellaneous/variables.html":{}}}],["relevance",{"_index":2513,"title":{},"body":{"injectables/TileService.html":{}}}],["reload",{"_index":154,"title":{},"body":{"components/AppComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/MenuBarElementComponent.html":{},"injectables/WeatherDataService.html":{},"index.html":{}}}],["reloaddata",{"_index":1880,"title":{},"body":{"components/MenuBarElementComponent.html":{},"injectables/WeatherDataService.html":{}}}],["reloadtiles",{"_index":2722,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["remove",{"_index":1820,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["removeitem(key:string",{"_index":1821,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["rename",{"_index":1770,"title":{},"body":{"components/IndoorTileViewComponent.html":{}}}],["renderer",{"_index":47,"title":{},"body":{"components/AppComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{}}}],["renderer2",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{}}}],["repeatedpassword",{"_index":2336,"title":{},"body":{"components/RegistrationViewComponent.html":{}}}],["required",{"_index":1577,"title":{},"body":{"components/HistoryTileViewComponent.html":{}}}],["res[\"message",{"_index":167,"title":{},"body":{"components/AppComponent.html":{}}}],["reset",{"_index":290,"title":{},"body":{"modules/AppModule.html":{},"components/HistoryDetailViewComponent.html":{},"modules/ScreensModule.html":{},"modules/UiElementsModule.html":{},"modules/ViewsModule.html":{},"overview.html":{}}}],["response",{"_index":581,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/ESPConfiguration.html":{},"injectables/ESPConfigurationAPIService.html":{},"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/LoginResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["response.apparenttemperature",{"_index":1218,"title":{},"body":{"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["response.body",{"_index":625,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/ESPConfiguration.html":{},"injectables/ESPConfigurationAPIService.html":{},"interfaces/LoginResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{}}}],["response.foreach(item",{"_index":1234,"title":{},"body":{"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["response.gasval",{"_index":1228,"title":{},"body":{"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["response.gasvalcalibrationvalue",{"_index":1231,"title":{},"body":{"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["response.humidity",{"_index":1214,"title":{},"body":{"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["response.id",{"_index":1225,"title":{},"body":{"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["response.location",{"_index":1221,"title":{},"body":{"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["response.location_name",{"_index":1219,"title":{},"body":{"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["response.roomname",{"_index":1226,"title":{},"body":{"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["response.statustext",{"_index":1023,"title":{},"body":{"interfaces/ESPConfiguration.html":{},"injectables/ESPConfigurationAPIService.html":{}}}],["response.subscribe",{"_index":685,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/ESPConfiguration.html":{},"injectables/ESPConfigurationAPIService.html":{},"interfaces/LoginResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{}}}],["response.subscribe((response",{"_index":623,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/ESPConfiguration.html":{},"injectables/ESPConfigurationAPIService.html":{},"interfaces/LoginResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{}}}],["response.subscribe(context",{"_index":699,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/LoginResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{}}}],["response.subscribe(data",{"_index":694,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/ESPConfiguration.html":{},"injectables/ESPConfigurationAPIService.html":{},"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/LoginResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["response.temperature",{"_index":1210,"title":{},"body":{"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["response.timestamp",{"_index":1200,"title":{},"body":{"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["response.trend",{"_index":1243,"title":{},"body":{"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["response.weather",{"_index":1216,"title":{},"body":{"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["response.weatherdescription",{"_index":1244,"title":{},"body":{"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["response.weathericon",{"_index":1245,"title":{},"body":{"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["responsible",{"_index":953,"title":{},"body":{"components/DashboardViewComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/HistoryDetailViewComponent.html":{}}}],["responsive",{"_index":939,"title":{},"body":{"components/DashboardScreenComponent.html":{},"components/DashboardViewComponent.html":{},"components/HistoryTileViewComponent.html":{}}}],["result",{"_index":270,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CalibrationInfoDetailViewComponent.html":{},"components/CardElementComponent.html":{},"interfaces/CheckTokenResponse.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DashboardViewComponent.html":{},"components/DetailScreenComponent.html":{},"interfaces/ESPConfiguration.html":{},"injectables/ESPConfigurationAPIService.html":{},"components/ForecastDetailViewComponent.html":{},"interfaces/ForecastResponse.html":{},"components/ForecastTileViewComponent.html":{},"interfaces/GraphDataSet.html":{},"components/HistoryDetailViewComponent.html":{},"injectables/HistoryTileService.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"interfaces/ImageModel.html":{},"injectables/ImageService.html":{},"components/IndoorDetailViewComponent.html":{},"interfaces/IndoorRoomData.html":{},"interfaces/IndoorRoomResponse.html":{},"components/IndoorTileViewComponent.html":{},"injectables/LocalStorageService.html":{},"interfaces/LoginResponse.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"interfaces/OutdoorWeatherData.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"interfaces/OutdoorWeatherResponse.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"interfaces/PollenData.html":{},"components/PollenListElementComponent.html":{},"interfaces/PollenResponse.html":{},"components/PollenTagElementComponent.html":{},"interfaces/PollenType.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"modules/ScreensModule.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"injectables/SpeechService.html":{},"injectables/TextService.html":{},"interfaces/Tile.html":{},"interfaces/TileArrays.html":{},"injectables/TileService.html":{},"components/TtsPlayerElementComponent.html":{},"modules/UiElementsModule.html":{},"interfaces/UserContext.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{},"interfaces/UserIdentifikation.html":{},"modules/ViewsModule.html":{},"injectables/WeatherAPIService.html":{},"interfaces/WeatherData.html":{},"injectables/WeatherDataService.html":{},"interfaces/WeatherForecastData.html":{},"interfaces/WeatherHistoryByDayData.html":{},"interfaces/WeatherHistoryData.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["result.dashboard",{"_index":2821,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["result.error",{"_index":1986,"title":{},"body":{"components/OpenAPELoginTileViewComponent.html":{}}}],["result.indoorrooms",{"_index":2823,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["result.pollen",{"_index":2822,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["results",{"_index":272,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CalibrationInfoDetailViewComponent.html":{},"components/CardElementComponent.html":{},"interfaces/CheckTokenResponse.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DashboardViewComponent.html":{},"components/DetailScreenComponent.html":{},"interfaces/ESPConfiguration.html":{},"injectables/ESPConfigurationAPIService.html":{},"components/ForecastDetailViewComponent.html":{},"interfaces/ForecastResponse.html":{},"components/ForecastTileViewComponent.html":{},"interfaces/GraphDataSet.html":{},"components/HistoryDetailViewComponent.html":{},"injectables/HistoryTileService.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"interfaces/ImageModel.html":{},"injectables/ImageService.html":{},"components/IndoorDetailViewComponent.html":{},"interfaces/IndoorRoomData.html":{},"interfaces/IndoorRoomResponse.html":{},"components/IndoorTileViewComponent.html":{},"injectables/LocalStorageService.html":{},"interfaces/LoginResponse.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"interfaces/OutdoorWeatherData.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"interfaces/OutdoorWeatherResponse.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"interfaces/PollenData.html":{},"components/PollenListElementComponent.html":{},"interfaces/PollenResponse.html":{},"components/PollenTagElementComponent.html":{},"interfaces/PollenType.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"modules/ScreensModule.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"injectables/SpeechService.html":{},"injectables/TextService.html":{},"interfaces/Tile.html":{},"interfaces/TileArrays.html":{},"injectables/TileService.html":{},"components/TtsPlayerElementComponent.html":{},"modules/UiElementsModule.html":{},"interfaces/UserContext.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{},"interfaces/UserIdentifikation.html":{},"modules/ViewsModule.html":{},"injectables/WeatherAPIService.html":{},"interfaces/WeatherData.html":{},"injectables/WeatherDataService.html":{},"interfaces/WeatherForecastData.html":{},"interfaces/WeatherHistoryByDayData.html":{},"interfaces/WeatherHistoryData.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["results[0",{"_index":2804,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["results[1",{"_index":2806,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["results[2",{"_index":2808,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["results[3",{"_index":2810,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["results[4",{"_index":2812,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["return",{"_index":97,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CheckTokenResponse.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/DashboardViewComponent.html":{},"interfaces/ESPConfiguration.html":{},"injectables/ESPConfigurationAPIService.html":{},"interfaces/ForecastResponse.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"injectables/HistoryTileService.html":{},"injectables/ImageService.html":{},"interfaces/IndoorRoomResponse.html":{},"components/IndoorTileViewComponent.html":{},"injectables/LocalStorageService.html":{},"interfaces/LoginResponse.html":{},"components/MenuElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"interfaces/OutdoorWeatherResponse.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"interfaces/PollenResponse.html":{},"components/PollenTagElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SettingsScreenComponent.html":{},"injectables/SpeechService.html":{},"injectables/TextService.html":{},"injectables/TileService.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{},"injectables/WeatherAPIService.html":{},"injectables/WeatherDataService.html":{}}}],["returnobservable",{"_index":617,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/ESPConfiguration.html":{},"injectables/ESPConfigurationAPIService.html":{},"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/LoginResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["returns",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CalibrationInfoDetailViewComponent.html":{},"components/CardElementComponent.html":{},"interfaces/CheckTokenResponse.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DashboardViewComponent.html":{},"components/DetailScreenComponent.html":{},"interfaces/ESPConfiguration.html":{},"injectables/ESPConfigurationAPIService.html":{},"components/ForecastDetailViewComponent.html":{},"interfaces/ForecastResponse.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"injectables/HistoryTileService.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"injectables/ImageService.html":{},"components/IndoorDetailViewComponent.html":{},"interfaces/IndoorRoomResponse.html":{},"components/IndoorTileViewComponent.html":{},"injectables/LocalStorageService.html":{},"interfaces/LoginResponse.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"interfaces/OutdoorWeatherResponse.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenListElementComponent.html":{},"interfaces/PollenResponse.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"injectables/SpeechService.html":{},"injectables/TextService.html":{},"injectables/TileService.html":{},"components/TtsPlayerElementComponent.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{},"injectables/WeatherAPIService.html":{},"injectables/WeatherDataService.html":{}}}],["rgb(216,97,204",{"_index":2101,"title":{},"body":{"components/OutdoorWeatherViewComponent.html":{}}}],["rgb(238,69,59",{"_index":2100,"title":{},"body":{"components/OutdoorWeatherViewComponent.html":{}}}],["rgb(33,153,74",{"_index":2305,"title":{},"body":{"components/ProgressChartElementComponent.html":{}}}],["rgb(97,194,216",{"_index":1866,"title":{},"body":{"components/LoginViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{}}}],["rgba(0",{"_index":565,"title":{},"body":{"components/CardElementComponent.html":{}}}],["rgba(0,0,0",{"_index":879,"title":{},"body":{"components/ConfigurationTilePopUpDialogView.html":{}}}],["rgba(0,0,0,1",{"_index":1686,"title":{},"body":{"injectables/ImageService.html":{},"miscellaneous/variables.html":{}}}],["rgba(0,0,255,0.1",{"_index":1590,"title":{},"body":{"components/HistoryTileViewComponent.html":{}}}],["rgba(108,10,72,1",{"_index":1682,"title":{},"body":{"injectables/ImageService.html":{},"miscellaneous/variables.html":{}}}],["rgba(119,48,112,1",{"_index":1684,"title":{},"body":{"injectables/ImageService.html":{},"miscellaneous/variables.html":{}}}],["rgba(151,208,255,1",{"_index":1679,"title":{},"body":{"injectables/ImageService.html":{},"miscellaneous/variables.html":{}}}],["rgba(152,152,191,1",{"_index":1685,"title":{},"body":{"injectables/ImageService.html":{},"miscellaneous/variables.html":{}}}],["rgba(164,9,110,1",{"_index":1671,"title":{},"body":{"injectables/ImageService.html":{},"components/OutdoorWeatherViewComponent.html":{},"miscellaneous/variables.html":{}}}],["rgba(20,27,87,1",{"_index":1678,"title":{},"body":{"injectables/ImageService.html":{},"miscellaneous/variables.html":{}}}],["rgba(212,108,102,1",{"_index":1681,"title":{},"body":{"injectables/ImageService.html":{},"miscellaneous/variables.html":{}}}],["rgba(216,97,204,1",{"_index":1673,"title":{},"body":{"injectables/ImageService.html":{},"components/OutdoorWeatherViewComponent.html":{},"miscellaneous/variables.html":{}}}],["rgba(238,69,59,1",{"_index":1670,"title":{},"body":{"injectables/ImageService.html":{},"components/OutdoorWeatherViewComponent.html":{},"miscellaneous/variables.html":{}}}],["rgba(255,0,0,0.1",{"_index":1586,"title":{},"body":{"components/HistoryTileViewComponent.html":{}}}],["rgba(255,0,0,1",{"_index":2310,"title":{},"body":{"components/ProgressChartElementComponent.html":{}}}],["rgba(255,230,0,0.9883801424050633",{"_index":2308,"title":{},"body":{"components/ProgressChartElementComponent.html":{}}}],["rgba(33,153,74,1",{"_index":2307,"title":{},"body":{"components/ProgressChartElementComponent.html":{}}}],["rgba(67,125,219,1",{"_index":1668,"title":{},"body":{"injectables/ImageService.html":{},"components/LoginViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"miscellaneous/variables.html":{}}}],["rgba(70,67,219,1",{"_index":1674,"title":{},"body":{"injectables/ImageService.html":{},"components/OutdoorWeatherViewComponent.html":{},"miscellaneous/variables.html":{}}}],["rgba(97,194,216,1",{"_index":1667,"title":{},"body":{"injectables/ImageService.html":{},"components/LoginViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"miscellaneous/variables.html":{}}}],["right",{"_index":176,"title":{},"body":{"components/AppComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CardElementComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DashboardViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/TtsPlayerElementComponent.html":{},"miscellaneous/variables.html":{}}}],["rinminase/ng",{"_index":1569,"title":{},"body":{"components/HistoryTileViewComponent.html":{},"modules/ViewsModule.html":{},"dependencies.html":{}}}],["rising",{"_index":2448,"title":{},"body":{"injectables/TextService.html":{}}}],["roggen",{"_index":2907,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["room",{"_index":1249,"title":{},"body":{"interfaces/ForecastResponse.html":{},"interfaces/GraphDataSet.html":{},"components/IndoorDetailViewComponent.html":{},"interfaces/IndoorRoomData.html":{},"interfaces/IndoorRoomResponse.html":{},"components/IndoorTileViewComponent.html":{},"interfaces/OutdoorWeatherData.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenData.html":{},"interfaces/PollenResponse.html":{},"injectables/TextService.html":{},"interfaces/Tile.html":{},"interfaces/TileArrays.html":{},"injectables/TileService.html":{},"injectables/WeatherAPIService.html":{},"interfaces/WeatherData.html":{},"injectables/WeatherDataService.html":{},"interfaces/WeatherForecastData.html":{},"interfaces/WeatherHistoryByDayData.html":{},"interfaces/WeatherHistoryData.html":{}}}],["room.airquality",{"_index":2562,"title":{},"body":{"injectables/TileService.html":{}}}],["room.calibrationvalue",{"_index":2563,"title":{},"body":{"injectables/TileService.html":{}}}],["roomid",{"_index":1224,"title":{},"body":{"interfaces/ForecastResponse.html":{},"interfaces/GraphDataSet.html":{},"interfaces/IndoorRoomData.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherData.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenData.html":{},"interfaces/PollenResponse.html":{},"interfaces/Tile.html":{},"interfaces/TileArrays.html":{},"injectables/WeatherAPIService.html":{},"interfaces/WeatherData.html":{},"interfaces/WeatherForecastData.html":{},"interfaces/WeatherHistoryByDayData.html":{},"interfaces/WeatherHistoryData.html":{},"miscellaneous/variables.html":{}}}],["roomname",{"_index":1002,"title":{},"body":{"interfaces/ESPConfiguration.html":{},"injectables/ESPConfigurationAPIService.html":{},"interfaces/ForecastResponse.html":{},"interfaces/GraphDataSet.html":{},"interfaces/IndoorRoomData.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherData.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenData.html":{},"interfaces/PollenResponse.html":{},"interfaces/Tile.html":{},"interfaces/TileArrays.html":{},"injectables/WeatherAPIService.html":{},"interfaces/WeatherData.html":{},"interfaces/WeatherForecastData.html":{},"interfaces/WeatherHistoryByDayData.html":{},"interfaces/WeatherHistoryData.html":{},"miscellaneous/variables.html":{}}}],["root",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CheckTokenResponse.html":{},"interfaces/ESPConfiguration.html":{},"injectables/ESPConfigurationAPIService.html":{},"interfaces/ForecastResponse.html":{},"injectables/HistoryTileService.html":{},"injectables/ImageService.html":{},"interfaces/IndoorRoomResponse.html":{},"injectables/LocalStorageService.html":{},"interfaces/LoginResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/SpeechService.html":{},"injectables/TextService.html":{},"injectables/TileService.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{},"injectables/WeatherAPIService.html":{},"injectables/WeatherDataService.html":{}}}],["root'},{'name",{"_index":190,"title":{},"body":{"components/AppComponent.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CalibrationInfoDetailViewComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DashboardViewComponent.html":{},"components/DetailScreenComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{}}}],["round",{"_index":1437,"title":{},"body":{"components/HistoryDetailViewComponent.html":{}}}],["route",{"_index":78,"title":{},"body":{"components/AppComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/SettingsScreenComponent.html":{}}}],["router",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"components/CalibrationInfoDetailViewComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuElementComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/RegistrationViewComponent.html":{}}}],["routermodule",{"_index":333,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/ScreensModule.html":{},"modules/ViewsModule.html":{}}}],["routermodule.forroot(routes",{"_index":372,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routeroutlet",{"_index":55,"title":{},"body":{"components/AppComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/SettingsScreenComponent.html":{}}}],["routes",{"_index":334,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"interfaces/CheckTokenResponse.html":{},"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/LoginResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{},"injectables/WeatherAPIService.html":{},"overview.html":{},"routes.html":{}}}],["routetransitionanimations",{"_index":77,"title":{},"body":{"components/AppComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/SettingsScreenComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["routing.module",{"_index":304,"title":{},"body":{"modules/AppModule.html":{},"modules/ScreensModule.html":{}}}],["routing.module.ts",{"_index":332,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["row",{"_index":1442,"title":{},"body":{"components/HistoryDetailViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuElementComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/TtsPlayerElementComponent.html":{}}}],["run",{"_index":2962,"title":{},"body":{"index.html":{}}}],["runnable",{"_index":2320,"title":{},"body":{"components/ProgressChartElementComponent.html":{},"components/SliderElementComponent.html":{}}}],["running",{"_index":2377,"title":{},"body":{"injectables/SpeechService.html":{}}}],["rxjs",{"_index":76,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CheckTokenResponse.html":{},"interfaces/ESPConfiguration.html":{},"injectables/ESPConfigurationAPIService.html":{},"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/LoginResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{},"injectables/WeatherAPIService.html":{},"injectables/WeatherDataService.html":{},"dependencies.html":{}}}],["räume",{"_index":1171,"title":{},"body":{"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["räumen",{"_index":1728,"title":{},"body":{"components/IndoorDetailViewComponent.html":{}}}],["sage",{"_index":2552,"title":{},"body":{"injectables/TileService.html":{}}}],["satelliten",{"_index":1424,"title":{},"body":{"components/HistoryDetailViewComponent.html":{}}}],["save",{"_index":679,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"injectables/LocalStorageService.html":{},"interfaces/LoginResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{}}}],["savepollenurl",{"_index":610,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/LoginResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{}}}],["saveusercontexturl",{"_index":604,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/LoginResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{}}}],["saving",{"_index":662,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/LoginResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{}}}],["scaffolding",{"_index":2970,"title":{},"body":{"index.html":{}}}],["scale(0.97",{"_index":572,"title":{},"body":{"components/CardElementComponent.html":{}}}],["schatten",{"_index":2017,"title":{},"body":{"components/OutdoorWeatherDetailViewComponent.html":{}}}],["scheint",{"_index":924,"title":{},"body":{"components/ConfigurationViewComponent.html":{},"injectables/TextService.html":{}}}],["scheme",{"_index":138,"title":{},"body":{"components/AppComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"injectables/ImageService.html":{}}}],["schlafzimmer",{"_index":2908,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["schlafzimmer.roomid",{"_index":2995,"title":{},"body":{"miscellaneous/variables.html":{}}}],["schlafzimmer2",{"_index":2909,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["schlecht",{"_index":2457,"title":{},"body":{"injectables/TextService.html":{}}}],["schlechte",{"_index":1714,"title":{},"body":{"components/IndoorDetailViewComponent.html":{}}}],["schlechter",{"_index":2446,"title":{},"body":{"injectables/TextService.html":{}}}],["schmurx",{"_index":160,"title":{},"body":{"components/AppComponent.html":{}}}],["schmurx.subscribe((res",{"_index":164,"title":{},"body":{"components/AppComponent.html":{}}}],["schneit",{"_index":2499,"title":{},"body":{"injectables/TextService.html":{}}}],["schon",{"_index":106,"title":{},"body":{"components/AppComponent.html":{},"components/HistoryDetailViewComponent.html":{}}}],["schwanken",{"_index":2266,"title":{},"body":{"components/PollenflugDetailViewComponent.html":{}}}],["screen",{"_index":104,"title":{},"body":{"components/AppComponent.html":{},"components/CalibrationInfoDetailViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DetailScreenComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/SettingsScreenComponent.html":{},"injectables/TileService.html":{}}}],["screen'},{'name",{"_index":208,"title":{},"body":{"components/AppComponent.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CalibrationInfoDetailViewComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DashboardViewComponent.html":{},"components/DetailScreenComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{}}}],["screen.component",{"_index":337,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/ScreensModule.html":{}}}],["screen.component.html",{"_index":933,"title":{},"body":{"components/DashboardScreenComponent.html":{},"components/DetailScreenComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/SettingsScreenComponent.html":{}}}],["screen.component.scss",{"_index":932,"title":{},"body":{"components/DashboardScreenComponent.html":{},"components/DetailScreenComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/SettingsScreenComponent.html":{}}}],["screen.component.ts",{"_index":930,"title":{},"body":{"components/DashboardScreenComponent.html":{},"components/DetailScreenComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/SettingsScreenComponent.html":{},"coverage.html":{}}}],["screen.component.ts:13",{"_index":934,"title":{},"body":{"components/DashboardScreenComponent.html":{}}}],["screen.component.ts:14",{"_index":1000,"title":{},"body":{"components/DetailScreenComponent.html":{}}}],["screen.component.ts:17",{"_index":935,"title":{},"body":{"components/DashboardScreenComponent.html":{},"components/SettingsScreenComponent.html":{}}}],["screen.component.ts:18",{"_index":1001,"title":{},"body":{"components/DetailScreenComponent.html":{},"components/OnboardingScreenComponent.html":{}}}],["screen.component.ts:21",{"_index":2353,"title":{},"body":{"components/SettingsScreenComponent.html":{}}}],["screen.component.ts:22",{"_index":1976,"title":{},"body":{"components/OnboardingScreenComponent.html":{}}}],["screen.component.ts:24",{"_index":2354,"title":{},"body":{"components/SettingsScreenComponent.html":{}}}],["screen.component.ts:25",{"_index":1977,"title":{},"body":{"components/OnboardingScreenComponent.html":{}}}],["screen/dashboard",{"_index":336,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/DashboardScreenComponent.html":{},"modules/ScreensModule.html":{},"coverage.html":{}}}],["screen/detail",{"_index":339,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/DetailScreenComponent.html":{},"modules/ScreensModule.html":{},"coverage.html":{}}}],["screen/onboarding",{"_index":341,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/OnboardingScreenComponent.html":{},"modules/ScreensModule.html":{},"coverage.html":{}}}],["screen/settings",{"_index":343,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/ScreensModule.html":{},"components/SettingsScreenComponent.html":{},"coverage.html":{}}}],["screens",{"_index":546,"title":{},"body":{"components/CardElementComponent.html":{},"components/DetailScreenComponent.html":{}}}],["screensmodule",{"_index":286,"title":{"modules/ScreensModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ScreensModule.html":{},"modules.html":{},"overview.html":{}}}],["scroll",{"_index":2070,"title":{},"body":{"components/OutdoorWeatherViewComponent.html":{}}}],["scrolling",{"_index":2074,"title":{},"body":{"components/OutdoorWeatherViewComponent.html":{},"interfaces/PollenType.html":{},"interfaces/UserContext.html":{},"interfaces/UserIdentifikation.html":{}}}],["scrollpositionrestoration",{"_index":373,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["scrollvalue",{"_index":2079,"title":{},"body":{"components/OutdoorWeatherViewComponent.html":{}}}],["seapressure",{"_index":1123,"title":{},"body":{"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["secondary",{"_index":469,"title":{},"body":{"components/BackButtonElementComponent.html":{},"components/CardElementComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/PollenListElementComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/TtsPlayerElementComponent.html":{}}}],["seconds",{"_index":325,"title":{},"body":{"modules/AppModule.html":{}}}],["sehr",{"_index":1759,"title":{},"body":{"components/IndoorTileViewComponent.html":{},"components/PollenflugDetailViewComponent.html":{}}}],["sein",{"_index":1173,"title":{},"body":{"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["seit",{"_index":1066,"title":{},"body":{"components/ForecastDetailViewComponent.html":{},"components/HistoryDetailViewComponent.html":{}}}],["selected",{"_index":770,"title":{},"body":{"components/CheckboxSwitcherElementComponent.html":{}}}],["selectedtimeinterval",{"_index":1324,"title":{},"body":{"components/HistoryDetailViewComponent.html":{}}}],["selectinterval",{"_index":1331,"title":{},"body":{"components/HistoryDetailViewComponent.html":{}}}],["selector",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CalibrationInfoDetailViewComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DashboardViewComponent.html":{},"components/DetailScreenComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{}}}],["selects",{"_index":2816,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["self",{"_index":2587,"title":{},"body":{"components/TtsPlayerElementComponent.html":{}}}],["selfvoicingenabled",{"_index":667,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/LoginResponse.html":{},"interfaces/PollenType.html":{},"interfaces/UserContext.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{},"interfaces/UserIdentifikation.html":{},"miscellaneous/variables.html":{}}}],["sendeintervall",{"_index":890,"title":{},"body":{"components/ConfigurationTileViewComponent.html":{}}}],["sensor",{"_index":809,"title":{},"body":{"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"interfaces/ESPConfiguration.html":{},"injectables/ESPConfigurationAPIService.html":{},"components/IndoorTileViewComponent.html":{}}}],["sensor1",{"_index":1005,"title":{},"body":{"interfaces/ESPConfiguration.html":{},"injectables/ESPConfigurationAPIService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["sensor2",{"_index":1006,"title":{},"body":{"interfaces/ESPConfiguration.html":{},"injectables/ESPConfigurationAPIService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["sensorid",{"_index":1027,"title":{},"body":{"interfaces/ESPConfiguration.html":{},"injectables/ESPConfigurationAPIService.html":{}}}],["sensorkalibrierung",{"_index":488,"title":{},"body":{"components/CalibrationInfoDetailViewComponent.html":{}}}],["sensortype",{"_index":1003,"title":{},"body":{"interfaces/ESPConfiguration.html":{},"injectables/ESPConfigurationAPIService.html":{},"miscellaneous/variables.html":{}}}],["serve",{"_index":2964,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["server",{"_index":711,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/LoginResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{},"injectables/WeatherAPIService.html":{},"injectables/WeatherDataService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["service",{"_index":388,"title":{},"body":{"components/ApparentTemperatureTileViewComponent.html":{},"interfaces/CheckTokenResponse.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardViewComponent.html":{},"interfaces/ESPConfiguration.html":{},"injectables/ESPConfigurationAPIService.html":{},"components/ForecastDetailViewComponent.html":{},"interfaces/ForecastResponse.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"injectables/HistoryTileService.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"injectables/ImageService.html":{},"interfaces/IndoorRoomResponse.html":{},"components/IndoorTileViewComponent.html":{},"injectables/LocalStorageService.html":{},"interfaces/LoginResponse.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuElementComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"interfaces/OutdoorWeatherResponse.html":{},"components/OutdoorWeatherViewComponent.html":{},"interfaces/PollenResponse.html":{},"components/RegistrationViewComponent.html":{},"injectables/SpeechService.html":{},"injectables/TextService.html":{},"injectables/TileService.html":{},"components/TtsPlayerElementComponent.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{},"injectables/WeatherAPIService.html":{},"injectables/WeatherDataService.html":{}}}],["services/user",{"_index":72,"title":{},"body":{"components/AppComponent.html":{}}}],["serviceworker",{"_index":321,"title":{},"body":{"modules/AppModule.html":{}}}],["serviceworkermodule",{"_index":308,"title":{},"body":{"modules/AppModule.html":{}}}],["serviceworkermodule.register('ngsw",{"_index":316,"title":{},"body":{"modules/AppModule.html":{}}}],["set",{"_index":417,"title":{},"body":{"components/ApparentTemperatureTileViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"interfaces/GraphDataSet.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"interfaces/IndoorRoomData.html":{},"components/IndoorTileViewComponent.html":{},"injectables/LocalStorageService.html":{},"interfaces/OutdoorWeatherData.html":{},"components/OutdoorWeatherViewComponent.html":{},"interfaces/PollenData.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"interfaces/Tile.html":{},"interfaces/TileArrays.html":{},"interfaces/WeatherData.html":{},"injectables/WeatherDataService.html":{},"interfaces/WeatherForecastData.html":{},"interfaces/WeatherHistoryByDayData.html":{},"interfaces/WeatherHistoryData.html":{},"miscellaneous/enumerations.html":{}}}],["setdata(data",{"_index":409,"title":{},"body":{"components/ApparentTemperatureTileViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{}}}],["setdefaultfontsize(fontsize",{"_index":128,"title":{},"body":{"components/AppComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{}}}],["setdisablelogin(value",{"_index":1794,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["setfontsize",{"_index":2116,"title":{},"body":{"components/PersonalizationSettingsViewComponent.html":{}}}],["setfontsize(value",{"_index":2127,"title":{},"body":{"components/PersonalizationSettingsViewComponent.html":{}}}],["setgraphtype(type",{"_index":1568,"title":{},"body":{"components/HistoryTileViewComponent.html":{}}}],["setindex(value",{"_index":1358,"title":{},"body":{"components/HistoryDetailViewComponent.html":{}}}],["setitem(key",{"_index":1815,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["sets",{"_index":529,"title":{},"body":{"components/CardElementComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{}}}],["setter",{"_index":2747,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["settimeout",{"_index":2607,"title":{},"body":{"components/TtsPlayerElementComponent.html":{}}}],["setting",{"_index":1359,"title":{},"body":{"components/HistoryDetailViewComponent.html":{},"components/MenuElementComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{}}}],["settings",{"_index":242,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CalibrationInfoDetailViewComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DashboardViewComponent.html":{},"components/DetailScreenComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"interfaces/PollenType.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"modules/ScreensModule.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{},"interfaces/UserContext.html":{},"interfaces/UserIdentifikation.html":{},"modules/ViewsModule.html":{},"coverage.html":{}}}],["settingsicon",{"_index":1924,"title":{},"body":{"components/MenuElementComponent.html":{}}}],["settingsscreencomponent",{"_index":260,"title":{"components/SettingsScreenComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CalibrationInfoDetailViewComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DashboardViewComponent.html":{},"components/DetailScreenComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"modules/ScreensModule.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{},"coverage.html":{},"overview.html":{}}}],["setusercontext(object",{"_index":1784,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["setuserid(value",{"_index":1788,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["setvalue(value",{"_index":2165,"title":{},"body":{"components/PollenTagElementComponent.html":{}}}],["shadow",{"_index":564,"title":{},"body":{"components/CardElementComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{}}}],["shared/styles",{"_index":1890,"title":{},"body":{"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/TtsPlayerElementComponent.html":{}}}],["short",{"_index":2050,"title":{},"body":{"components/OutdoorWeatherViewComponent.html":{}}}],["show",{"_index":1346,"title":{},"body":{"components/HistoryDetailViewComponent.html":{},"injectables/HistoryTileService.html":{},"injectables/TileService.html":{}}}],["shown",{"_index":844,"title":{},"body":{"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/DashboardViewComponent.html":{},"injectables/WeatherDataService.html":{}}}],["shows",{"_index":806,"title":{},"body":{"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardViewComponent.html":{},"components/PollenflugDetailViewComponent.html":{}}}],["showweatherdescription",{"_index":2052,"title":{},"body":{"components/OutdoorWeatherViewComponent.html":{}}}],["shrink",{"_index":555,"title":{},"body":{"components/CardElementComponent.html":{},"components/OutdoorWeatherViewComponent.html":{}}}],["shrinked",{"_index":2099,"title":{},"body":{"components/OutdoorWeatherViewComponent.html":{}}}],["sich",{"_index":1112,"title":{},"body":{"components/ForecastDetailViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"injectables/TextService.html":{}}}],["sicht",{"_index":2495,"title":{},"body":{"injectables/TextService.html":{}}}],["signifikant",{"_index":1427,"title":{},"body":{"components/HistoryDetailViewComponent.html":{}}}],["simple",{"_index":262,"title":{},"body":{"components/AppComponent.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CalibrationInfoDetailViewComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DashboardViewComponent.html":{},"components/DetailScreenComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{},"modules/ViewsModule.html":{}}}],["simpletileviewcomponent",{"_index":261,"title":{"components/SimpleTileViewComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CalibrationInfoDetailViewComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DashboardViewComponent.html":{},"components/DetailScreenComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{},"modules/ViewsModule.html":{},"coverage.html":{},"overview.html":{}}}],["simply",{"_index":730,"title":{},"body":{"components/CheckboxSwitcherElementComponent.html":{}}}],["sind",{"_index":1076,"title":{},"body":{"components/ForecastDetailViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/PollenflugDetailViewComponent.html":{}}}],["sinnvoll",{"_index":2270,"title":{},"body":{"components/PollenflugDetailViewComponent.html":{}}}],["size",{"_index":132,"title":{},"body":{"components/AppComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CardElementComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DashboardViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"miscellaneous/enumerations.html":{}}}],["sleet",{"_index":1636,"title":{},"body":{"injectables/ImageService.html":{},"injectables/TextService.html":{}}}],["slider",{"_index":264,"title":{},"body":{"components/AppComponent.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CalibrationInfoDetailViewComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DashboardViewComponent.html":{},"components/DetailScreenComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{},"modules/UiElementsModule.html":{}}}],["sliderelementcomponent",{"_index":263,"title":{"components/SliderElementComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CalibrationInfoDetailViewComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DashboardViewComponent.html":{},"components/DetailScreenComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{},"modules/UiElementsModule.html":{},"coverage.html":{},"overview.html":{}}}],["small",{"_index":247,"title":{},"body":{"components/AppComponent.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CalibrationInfoDetailViewComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DashboardViewComponent.html":{},"components/DetailScreenComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{},"modules/ViewsModule.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["smaller",{"_index":1343,"title":{},"body":{"components/HistoryDetailViewComponent.html":{}}}],["smalltile",{"_index":2539,"title":{},"body":{"injectables/TileService.html":{}}}],["smarthome",{"_index":1859,"title":{},"body":{"components/LoginViewComponent.html":{},"index.html":{}}}],["snow",{"_index":2498,"title":{},"body":{"injectables/TextService.html":{}}}],["so','mo','di','mi','do','fr','sa",{"_index":1547,"title":{},"body":{"injectables/HistoryTileService.html":{},"miscellaneous/variables.html":{}}}],["sodass",{"_index":496,"title":{},"body":{"components/CalibrationInfoDetailViewComponent.html":{}}}],["solid",{"_index":538,"title":{},"body":{"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuElementComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{}}}],["sollen",{"_index":1168,"title":{},"body":{"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["sondern",{"_index":1116,"title":{},"body":{"components/ForecastDetailViewComponent.html":{}}}],["sonne",{"_index":2019,"title":{},"body":{"components/OutdoorWeatherDetailViewComponent.html":{},"injectables/TextService.html":{}}}],["sonnenstrahlen",{"_index":2444,"title":{},"body":{"injectables/TextService.html":{}}}],["sonnig",{"_index":2439,"title":{},"body":{"injectables/TextService.html":{}}}],["soon",{"_index":322,"title":{},"body":{"modules/AppModule.html":{}}}],["sort",{"_index":1441,"title":{},"body":{"components/HistoryDetailViewComponent.html":{}}}],["sorted",{"_index":1459,"title":{},"body":{"injectables/HistoryTileService.html":{}}}],["sortierung",{"_index":1391,"title":{},"body":{"components/HistoryDetailViewComponent.html":{}}}],["sound",{"_index":2618,"title":{},"body":{"components/TtsPlayerElementComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CalibrationInfoDetailViewComponent.html":{},"components/CardElementComponent.html":{},"interfaces/CheckTokenResponse.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DashboardViewComponent.html":{},"components/DetailScreenComponent.html":{},"interfaces/ESPConfiguration.html":{},"injectables/ESPConfigurationAPIService.html":{},"components/ForecastDetailViewComponent.html":{},"interfaces/ForecastResponse.html":{},"components/ForecastTileViewComponent.html":{},"interfaces/GraphDataSet.html":{},"components/HistoryDetailViewComponent.html":{},"injectables/HistoryTileService.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"interfaces/ImageModel.html":{},"injectables/ImageService.html":{},"components/IndoorDetailViewComponent.html":{},"interfaces/IndoorRoomData.html":{},"interfaces/IndoorRoomResponse.html":{},"components/IndoorTileViewComponent.html":{},"injectables/LocalStorageService.html":{},"interfaces/LoginResponse.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"interfaces/OutdoorWeatherData.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"interfaces/OutdoorWeatherResponse.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"interfaces/PollenData.html":{},"components/PollenListElementComponent.html":{},"interfaces/PollenResponse.html":{},"components/PollenTagElementComponent.html":{},"interfaces/PollenType.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"modules/ScreensModule.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"injectables/SpeechService.html":{},"injectables/TextService.html":{},"interfaces/Tile.html":{},"interfaces/TileArrays.html":{},"injectables/TileService.html":{},"components/TtsPlayerElementComponent.html":{},"modules/UiElementsModule.html":{},"interfaces/UserContext.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{},"interfaces/UserIdentifikation.html":{},"modules/ViewsModule.html":{},"injectables/WeatherAPIService.html":{},"interfaces/WeatherData.html":{},"injectables/WeatherDataService.html":{},"interfaces/WeatherForecastData.html":{},"interfaces/WeatherHistoryByDayData.html":{},"interfaces/WeatherHistoryData.html":{},"index.html":{}}}],["sources",{"_index":1601,"title":{},"body":{"interfaces/ImageModel.html":{}}}],["sowie",{"_index":2034,"title":{},"body":{"components/OutdoorWeatherDetailViewComponent.html":{},"components/PollenflugDetailViewComponent.html":{}}}],["space",{"_index":871,"title":{},"body":{"components/ConfigurationTilePopUpDialogView.html":{},"components/DashboardScreenComponent.html":{},"components/DashboardViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuElementComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/ProgressChartElementComponent.html":{}}}],["spacer",{"_index":906,"title":{},"body":{"components/ConfigurationTileViewComponent.html":{}}}],["spacing",{"_index":467,"title":{},"body":{"components/BackButtonElementComponent.html":{},"components/CardElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/OutdoorWeatherViewComponent.html":{}}}],["span",{"_index":792,"title":{},"body":{"components/CheckboxSwitcherElementComponent.html":{},"components/MenuElementComponent.html":{}}}],["speech",{"_index":2369,"title":{},"body":{"injectables/SpeechService.html":{},"injectables/TextService.html":{},"components/TtsPlayerElementComponent.html":{}}}],["speechservice",{"_index":2367,"title":{"injectables/SpeechService.html":{}},"body":{"injectables/SpeechService.html":{},"components/TtsPlayerElementComponent.html":{},"coverage.html":{}}}],["speechsynthesisutterance(text",{"_index":2386,"title":{},"body":{"injectables/SpeechService.html":{}}}],["spinner",{"_index":315,"title":{},"body":{"modules/AppModule.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardViewComponent.html":{},"modules/ScreensModule.html":{},"modules/ViewsModule.html":{},"dependencies.html":{}}}],["später",{"_index":642,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/ESPConfiguration.html":{},"injectables/ESPConfigurationAPIService.html":{},"interfaces/LoginResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{}}}],["src",{"_index":1616,"title":{},"body":{"injectables/ImageService.html":{}}}],["src/.../card",{"_index":2951,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../environment.prod.ts",{"_index":2991,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":2992,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../history",{"_index":2953,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["src/.../image.service.ts",{"_index":2993,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../local",{"_index":2990,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../route",{"_index":2994,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../user",{"_index":2954,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["src/.../weather.mock.ts",{"_index":2989,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../weather.ts",{"_index":2952,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/app",{"_index":331,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/ScreensModule.html":{}}}],["src/app/app.component.ts",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:18",{"_index":67,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:19",{"_index":68,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:20",{"_index":65,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:21",{"_index":42,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:29",{"_index":53,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:37",{"_index":52,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:41",{"_index":56,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:45",{"_index":48,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:95",{"_index":63,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:96",{"_index":51,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":292,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/components/screens/dashboard",{"_index":929,"title":{},"body":{"components/DashboardScreenComponent.html":{},"coverage.html":{}}}],["src/app/components/screens/detail",{"_index":999,"title":{},"body":{"components/DetailScreenComponent.html":{},"coverage.html":{}}}],["src/app/components/screens/onboarding",{"_index":1975,"title":{},"body":{"components/OnboardingScreenComponent.html":{},"coverage.html":{}}}],["src/app/components/screens/screens.module.ts",{"_index":2348,"title":{},"body":{"modules/ScreensModule.html":{}}}],["src/app/components/screens/settings",{"_index":2352,"title":{},"body":{"components/SettingsScreenComponent.html":{},"coverage.html":{}}}],["src/app/components/ui",{"_index":423,"title":{},"body":{"components/BackButtonElementComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{},"modules/UiElementsModule.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/components/views/apparent",{"_index":374,"title":{},"body":{"components/ApparentTemperatureTileViewComponent.html":{},"coverage.html":{}}}],["src/app/components/views/calibration",{"_index":473,"title":{},"body":{"components/CalibrationInfoDetailViewComponent.html":{},"coverage.html":{}}}],["src/app/components/views/configuration",{"_index":802,"title":{},"body":{"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"coverage.html":{}}}],["src/app/components/views/dashboard",{"_index":949,"title":{},"body":{"components/DashboardViewComponent.html":{},"coverage.html":{}}}],["src/app/components/views/forecast",{"_index":1039,"title":{},"body":{"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"coverage.html":{}}}],["src/app/components/views/history",{"_index":1314,"title":{},"body":{"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/components/views/humidity",{"_index":1595,"title":{},"body":{"components/HumidityTileViewComponent.html":{},"coverage.html":{}}}],["src/app/components/views/indoor",{"_index":1687,"title":{},"body":{"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"coverage.html":{}}}],["src/app/components/views/login",{"_index":1828,"title":{},"body":{"components/LoginViewComponent.html":{},"coverage.html":{}}}],["src/app/components/views/open",{"_index":1978,"title":{},"body":{"components/OpenAPELoginTileViewComponent.html":{},"coverage.html":{}}}],["src/app/components/views/outdoor",{"_index":1989,"title":{},"body":{"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"coverage.html":{}}}],["src/app/components/views/personalization",{"_index":2103,"title":{},"body":{"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"coverage.html":{}}}],["src/app/components/views/pollenflug",{"_index":2211,"title":{},"body":{"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"coverage.html":{}}}],["src/app/components/views/registration",{"_index":2334,"title":{},"body":{"components/RegistrationViewComponent.html":{},"coverage.html":{}}}],["src/app/components/views/simple",{"_index":2355,"title":{},"body":{"components/SimpleTileViewComponent.html":{},"coverage.html":{}}}],["src/app/components/views/views.module.ts",{"_index":2698,"title":{},"body":{"modules/ViewsModule.html":{}}}],["src/app/model/image",{"_index":451,"title":{},"body":{"components/BackButtonElementComponent.html":{},"components/MenuElementComponent.html":{}}}],["src/app/model/image.ts",{"_index":1600,"title":{},"body":{"interfaces/ImageModel.html":{},"coverage.html":{}}}],["src/app/model/mock",{"_index":1007,"title":{},"body":{"interfaces/ESPConfiguration.html":{},"injectables/ESPConfigurationAPIService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/model/user",{"_index":763,"title":{},"body":{"components/CheckboxSwitcherElementComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"interfaces/PollenType.html":{},"components/TtsPlayerElementComponent.html":{},"interfaces/UserContext.html":{},"interfaces/UserIdentifikation.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["src/app/model/weather",{"_index":412,"title":{},"body":{"components/ApparentTemperatureTileViewComponent.html":{},"components/DashboardViewComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/SimpleTileViewComponent.html":{}}}],["src/app/model/weather.ts",{"_index":1269,"title":{},"body":{"interfaces/GraphDataSet.html":{},"interfaces/IndoorRoomData.html":{},"interfaces/OutdoorWeatherData.html":{},"interfaces/PollenData.html":{},"interfaces/Tile.html":{},"interfaces/TileArrays.html":{},"interfaces/WeatherData.html":{},"interfaces/WeatherForecastData.html":{},"interfaces/WeatherHistoryByDayData.html":{},"interfaces/WeatherHistoryData.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/route",{"_index":2915,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/services/api/esp",{"_index":827,"title":{},"body":{"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"interfaces/ESPConfiguration.html":{},"injectables/ESPConfigurationAPIService.html":{},"coverage.html":{}}}],["src/app/services/api/user",{"_index":576,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/LoginResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{},"coverage.html":{}}}],["src/app/services/api/weather",{"_index":1122,"title":{},"body":{"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/WeatherAPIService.html":{},"coverage.html":{}}}],["src/app/services/history",{"_index":1363,"title":{},"body":{"components/HistoryDetailViewComponent.html":{},"injectables/HistoryTileService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/services/image.service",{"_index":450,"title":{},"body":{"components/BackButtonElementComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/MenuElementComponent.html":{},"components/OutdoorWeatherViewComponent.html":{}}}],["src/app/services/image.service.ts",{"_index":1602,"title":{},"body":{"injectables/ImageService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/services/image.service.ts:20",{"_index":1607,"title":{},"body":{"injectables/ImageService.html":{}}}],["src/app/services/image.service.ts:34",{"_index":1615,"title":{},"body":{"injectables/ImageService.html":{}}}],["src/app/services/image.service.ts:60",{"_index":1609,"title":{},"body":{"injectables/ImageService.html":{}}}],["src/app/services/image.service.ts:92",{"_index":1619,"title":{},"body":{"injectables/ImageService.html":{}}}],["src/app/services/local",{"_index":1774,"title":{},"body":{"injectables/LocalStorageService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/services/speech.service",{"_index":2600,"title":{},"body":{"components/TtsPlayerElementComponent.html":{}}}],["src/app/services/speech.service.ts",{"_index":2368,"title":{},"body":{"injectables/SpeechService.html":{},"coverage.html":{}}}],["src/app/services/speech.service.ts:13",{"_index":2374,"title":{},"body":{"injectables/SpeechService.html":{}}}],["src/app/services/speech.service.ts:22",{"_index":2379,"title":{},"body":{"injectables/SpeechService.html":{}}}],["src/app/services/speech.service.ts:36",{"_index":2380,"title":{},"body":{"injectables/SpeechService.html":{}}}],["src/app/services/speech.service.ts:43",{"_index":2375,"title":{},"body":{"injectables/SpeechService.html":{}}}],["src/app/services/text.service",{"_index":971,"title":{},"body":{"components/DashboardViewComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PollenflugDetailViewComponent.html":{}}}],["src/app/services/text.service.ts",{"_index":2394,"title":{},"body":{"injectables/TextService.html":{},"coverage.html":{}}}],["src/app/services/text.service.ts:105",{"_index":2407,"title":{},"body":{"injectables/TextService.html":{}}}],["src/app/services/text.service.ts:137",{"_index":2409,"title":{},"body":{"injectables/TextService.html":{}}}],["src/app/services/text.service.ts:14",{"_index":2402,"title":{},"body":{"injectables/TextService.html":{}}}],["src/app/services/text.service.ts:156",{"_index":2413,"title":{},"body":{"injectables/TextService.html":{}}}],["src/app/services/text.service.ts:187",{"_index":2411,"title":{},"body":{"injectables/TextService.html":{}}}],["src/app/services/text.service.ts:215",{"_index":2417,"title":{},"body":{"injectables/TextService.html":{}}}],["src/app/services/text.service.ts:24",{"_index":2415,"title":{},"body":{"injectables/TextService.html":{}}}],["src/app/services/text.service.ts:61",{"_index":2404,"title":{},"body":{"injectables/TextService.html":{}}}],["src/app/services/tile.service.ts",{"_index":2505,"title":{},"body":{"injectables/TileService.html":{},"coverage.html":{}}}],["src/app/services/tile.service.ts:16",{"_index":2508,"title":{},"body":{"injectables/TileService.html":{}}}],["src/app/services/tile.service.ts:31",{"_index":2510,"title":{},"body":{"injectables/TileService.html":{}}}],["src/app/services/user",{"_index":764,"title":{},"body":{"components/CheckboxSwitcherElementComponent.html":{},"components/DashboardViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/RegistrationViewComponent.html":{},"components/TtsPlayerElementComponent.html":{},"coverage.html":{}}}],["src/app/services/weather",{"_index":969,"title":{},"body":{"components/DashboardViewComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"injectables/WeatherDataService.html":{},"coverage.html":{}}}],["src/environments/environment",{"_index":586,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/ESPConfiguration.html":{},"injectables/ESPConfigurationAPIService.html":{},"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/LoginResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["src/environments/environment.prod.ts",{"_index":2931,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":2932,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["stable",{"_index":323,"title":{},"body":{"modules/AppModule.html":{}}}],["stark",{"_index":1087,"title":{},"body":{"components/ForecastDetailViewComponent.html":{},"components/PollenflugDetailViewComponent.html":{}}}],["start",{"_index":901,"title":{},"body":{"components/ConfigurationTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"injectables/SpeechService.html":{},"components/TtsPlayerElementComponent.html":{}}}],["startcalibration",{"_index":858,"title":{},"body":{"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{}}}],["startconfiguration",{"_index":1033,"title":{},"body":{"injectables/ESPConfigurationAPIService.html":{}}}],["startconfiguration(sensorid",{"_index":1028,"title":{},"body":{"interfaces/ESPConfiguration.html":{},"injectables/ESPConfigurationAPIService.html":{}}}],["started",{"_index":843,"title":{"index.html":{}},"body":{"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"miscellaneous/variables.html":{}}}],["startoutput",{"_index":2372,"title":{},"body":{"injectables/SpeechService.html":{}}}],["startoutput(text",{"_index":2378,"title":{},"body":{"injectables/SpeechService.html":{}}}],["starts",{"_index":856,"title":{},"body":{"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"interfaces/ESPConfiguration.html":{},"injectables/ESPConfigurationAPIService.html":{},"components/TtsPlayerElementComponent.html":{}}}],["state.matches",{"_index":115,"title":{},"body":{"components/AppComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/DashboardViewComponent.html":{},"injectables/ImageService.html":{},"components/OutdoorWeatherDetailViewComponent.html":{}}}],["statements",{"_index":2840,"title":{},"body":{"coverage.html":{}}}],["states",{"_index":736,"title":{},"body":{"components/CheckboxSwitcherElementComponent.html":{}}}],["station",{"_index":2049,"title":{},"body":{"components/OutdoorWeatherViewComponent.html":{}}}],["status",{"_index":1022,"title":{},"body":{"interfaces/ESPConfiguration.html":{},"injectables/ESPConfigurationAPIService.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/PollenTagElementComponent.html":{},"components/RegistrationViewComponent.html":{}}}],["steady",{"_index":2452,"title":{},"body":{"injectables/TextService.html":{}}}],["steigend",{"_index":2449,"title":{},"body":{"injectables/TextService.html":{}}}],["stellen",{"_index":2278,"title":{},"body":{"components/PollenflugDetailViewComponent.html":{}}}],["stimmt",{"_index":2341,"title":{},"body":{"components/RegistrationViewComponent.html":{}}}],["stirng",{"_index":1881,"title":{},"body":{"components/MenuBarElementComponent.html":{}}}],["stll",{"_index":2376,"title":{},"body":{"injectables/SpeechService.html":{}}}],["stop",{"_index":2381,"title":{},"body":{"injectables/SpeechService.html":{},"components/TtsPlayerElementComponent.html":{}}}],["stopoutput",{"_index":2373,"title":{},"body":{"injectables/SpeechService.html":{}}}],["stops",{"_index":2598,"title":{},"body":{"components/TtsPlayerElementComponent.html":{}}}],["storage",{"_index":1777,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["storage.service.ts",{"_index":1775,"title":{},"body":{"injectables/LocalStorageService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["storage.service.ts:18",{"_index":1785,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["storage.service.ts:26",{"_index":1783,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["storage.service.ts:40",{"_index":1789,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["storage.service.ts:48",{"_index":1787,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["storage.service.ts:60",{"_index":1791,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["storage.service.ts:73",{"_index":1795,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["storage.service.ts:75",{"_index":1779,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["storage.service.ts:82",{"_index":1780,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["stored",{"_index":2713,"title":{},"body":{"interfaces/WeatherData.html":{},"injectables/WeatherDataService.html":{},"index.html":{}}}],["strahlungsintensität",{"_index":2033,"title":{},"body":{"components/OutdoorWeatherDetailViewComponent.html":{}}}],["stretch",{"_index":936,"title":{},"body":{"components/DashboardScreenComponent.html":{},"components/DashboardViewComponent.html":{},"components/LoginViewComponent.html":{},"components/RegistrationViewComponent.html":{}}}],["string",{"_index":62,"title":{},"body":{"components/AppComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CardElementComponent.html":{},"interfaces/CheckTokenResponse.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"interfaces/ESPConfiguration.html":{},"injectables/ESPConfigurationAPIService.html":{},"interfaces/ForecastResponse.html":{},"components/ForecastTileViewComponent.html":{},"interfaces/GraphDataSet.html":{},"components/HistoryDetailViewComponent.html":{},"injectables/HistoryTileService.html":{},"components/HistoryTileViewComponent.html":{},"interfaces/ImageModel.html":{},"injectables/ImageService.html":{},"interfaces/IndoorRoomData.html":{},"interfaces/IndoorRoomResponse.html":{},"components/IndoorTileViewComponent.html":{},"injectables/LocalStorageService.html":{},"interfaces/LoginResponse.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"interfaces/OutdoorWeatherData.html":{},"interfaces/OutdoorWeatherResponse.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"interfaces/PollenData.html":{},"components/PollenListElementComponent.html":{},"interfaces/PollenResponse.html":{},"components/PollenTagElementComponent.html":{},"interfaces/PollenType.html":{},"components/RegistrationViewComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"injectables/SpeechService.html":{},"injectables/TextService.html":{},"interfaces/Tile.html":{},"interfaces/TileArrays.html":{},"injectables/TileService.html":{},"components/TtsPlayerElementComponent.html":{},"interfaces/UserContext.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{},"interfaces/UserIdentifikation.html":{},"injectables/WeatherAPIService.html":{},"interfaces/WeatherData.html":{},"interfaces/WeatherForecastData.html":{},"interfaces/WeatherHistoryByDayData.html":{},"interfaces/WeatherHistoryData.html":{},"miscellaneous/variables.html":{}}}],["stroke",{"_index":472,"title":{},"body":{"components/BackButtonElementComponent.html":{},"components/HistoryDetailViewComponent.html":{}}}],["stuttgart",{"_index":1298,"title":{},"body":{"interfaces/GraphDataSet.html":{},"interfaces/IndoorRoomData.html":{},"interfaces/OutdoorWeatherData.html":{},"interfaces/PollenData.html":{},"interfaces/Tile.html":{},"interfaces/TileArrays.html":{},"interfaces/WeatherData.html":{},"interfaces/WeatherForecastData.html":{},"interfaces/WeatherHistoryByDayData.html":{},"interfaces/WeatherHistoryData.html":{},"miscellaneous/variables.html":{}}}],["style",{"_index":1946,"title":{},"body":{"components/MenuElementComponent.html":{},"miscellaneous/variables.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CalibrationInfoDetailViewComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DashboardViewComponent.html":{},"components/DetailScreenComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{}}}],["styleurls",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CalibrationInfoDetailViewComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DashboardViewComponent.html":{},"components/DetailScreenComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{}}}],["stärke",{"_index":2250,"title":{},"body":{"components/PollenflugDetailViewComponent.html":{}}}],["subject",{"_index":1045,"title":{},"body":{"components/ForecastDetailViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"injectables/WeatherDataService.html":{}}}],["subjects",{"_index":2743,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["subscribe((state",{"_index":114,"title":{},"body":{"components/AppComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/DashboardViewComponent.html":{},"injectables/ImageService.html":{},"components/OutdoorWeatherDetailViewComponent.html":{}}}],["subscribe(data",{"_index":120,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardViewComponent.html":{},"components/ForecastDetailViewComponent.html":{},"interfaces/ForecastResponse.html":{},"components/IndoorDetailViewComponent.html":{},"interfaces/IndoorRoomResponse.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"interfaces/OutdoorWeatherResponse.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"interfaces/PollenResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["subscribe(outdoorweather",{"_index":2064,"title":{},"body":{"components/OutdoorWeatherViewComponent.html":{}}}],["subscribes",{"_index":768,"title":{},"body":{"components/CheckboxSwitcherElementComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PollenflugDetailViewComponent.html":{}}}],["subtitle",{"_index":518,"title":{},"body":{"components/CardElementComponent.html":{},"components/SimpleTileViewComponent.html":{}}}],["success",{"_index":582,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/LoginResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{}}}],["successful",{"_index":657,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"components/ConfigurationViewComponent.html":{},"interfaces/LoginResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{}}}],["successfully",{"_index":857,"title":{},"body":{"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{}}}],["suiteable",{"_index":1611,"title":{},"body":{"injectables/ImageService.html":{}}}],["sunny",{"_index":1652,"title":{},"body":{"injectables/ImageService.html":{},"injectables/TextService.html":{}}}],["sunny_cloudy",{"_index":1655,"title":{},"body":{"injectables/ImageService.html":{}}}],["support",{"_index":2985,"title":{},"body":{"modules.html":{}}}],["surface",{"_index":536,"title":{},"body":{"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/MenuElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/TtsPlayerElementComponent.html":{}}}],["svg",{"_index":1892,"title":{},"body":{"components/MenuBarElementComponent.html":{},"modules.html":{}}}],["svg.motion",{"_index":1902,"title":{},"body":{"components/MenuBarElementComponent.html":{}}}],["switch",{"_index":153,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"injectables/ImageService.html":{},"components/PersonalizationSettingsViewComponent.html":{},"injectables/TextService.html":{},"injectables/TileService.html":{}}}],["switch(element.type",{"_index":2421,"title":{},"body":{"injectables/TextService.html":{}}}],["switch(theme",{"_index":720,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/LoginResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{}}}],["switch(usercontexttheme",{"_index":1625,"title":{},"body":{"injectables/ImageService.html":{}}}],["switch(value",{"_index":2168,"title":{},"body":{"components/PollenTagElementComponent.html":{}}}],["switch(weather",{"_index":2486,"title":{},"body":{"injectables/TextService.html":{}}}],["switcher",{"_index":201,"title":{},"body":{"components/AppComponent.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CalibrationInfoDetailViewComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DashboardViewComponent.html":{},"components/DetailScreenComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{},"modules/UiElementsModule.html":{},"coverage.html":{}}}],["switching",{"_index":732,"title":{},"body":{"components/CheckboxSwitcherElementComponent.html":{}}}],["symptomatik",{"_index":2251,"title":{},"body":{"components/PollenflugDetailViewComponent.html":{}}}],["symptome",{"_index":2229,"title":{},"body":{"components/PollenflugDetailViewComponent.html":{}}}],["synth",{"_index":2382,"title":{},"body":{"injectables/SpeechService.html":{}}}],["synthesiser",{"_index":2370,"title":{},"body":{"injectables/SpeechService.html":{}}}],["system",{"_index":1659,"title":{},"body":{"injectables/ImageService.html":{}}}],["systemtheme",{"_index":765,"title":{},"body":{"components/CheckboxSwitcherElementComponent.html":{},"injectables/ImageService.html":{}}}],["systemthemebreakpointobserver",{"_index":774,"title":{},"body":{"components/CheckboxSwitcherElementComponent.html":{},"injectables/ImageService.html":{}}}],["table",{"_index":2934,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":2933,"title":{},"body":{"coverage.html":{}}}],["tag",{"_index":254,"title":{},"body":{"components/AppComponent.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CalibrationInfoDetailViewComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DashboardViewComponent.html":{},"components/DetailScreenComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{},"modules/UiElementsModule.html":{},"coverage.html":{}}}],["tages",{"_index":1699,"title":{},"body":{"components/IndoorDetailViewComponent.html":{},"injectables/TextService.html":{}}}],["takes",{"_index":383,"title":{},"body":{"components/ApparentTemperatureTileViewComponent.html":{},"components/CardElementComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/PollenTagElementComponent.html":{}}}],["task",{"_index":731,"title":{},"body":{"components/CheckboxSwitcherElementComponent.html":{}}}],["tatsächlich",{"_index":1108,"title":{},"body":{"components/ForecastDetailViewComponent.html":{}}}],["tatsächliche",{"_index":2003,"title":{},"body":{"components/OutdoorWeatherDetailViewComponent.html":{}}}],["temp",{"_index":1769,"title":{},"body":{"components/IndoorTileViewComponent.html":{}}}],["tempaverage",{"_index":1537,"title":{},"body":{"injectables/HistoryTileService.html":{}}}],["temperatur",{"_index":1091,"title":{},"body":{"components/ForecastDetailViewComponent.html":{},"interfaces/GraphDataSet.html":{},"interfaces/IndoorRoomData.html":{},"components/IndoorTileViewComponent.html":{},"interfaces/OutdoorWeatherData.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"interfaces/PollenData.html":{},"interfaces/Tile.html":{},"interfaces/TileArrays.html":{},"interfaces/WeatherData.html":{},"interfaces/WeatherForecastData.html":{},"interfaces/WeatherHistoryByDayData.html":{},"interfaces/WeatherHistoryData.html":{}}}],["temperature",{"_index":187,"title":{},"body":{"components/AppComponent.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CalibrationInfoDetailViewComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DashboardViewComponent.html":{},"components/DetailScreenComponent.html":{},"components/ForecastDetailViewComponent.html":{},"interfaces/ForecastResponse.html":{},"components/ForecastTileViewComponent.html":{},"interfaces/GraphDataSet.html":{},"components/HistoryDetailViewComponent.html":{},"injectables/HistoryTileService.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"interfaces/IndoorRoomData.html":{},"interfaces/IndoorRoomResponse.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"interfaces/OutdoorWeatherData.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"interfaces/OutdoorWeatherResponse.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"interfaces/PollenData.html":{},"components/PollenListElementComponent.html":{},"interfaces/PollenResponse.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"injectables/TextService.html":{},"interfaces/Tile.html":{},"interfaces/TileArrays.html":{},"components/TtsPlayerElementComponent.html":{},"modules/ViewsModule.html":{},"injectables/WeatherAPIService.html":{},"interfaces/WeatherData.html":{},"interfaces/WeatherForecastData.html":{},"interfaces/WeatherHistoryByDayData.html":{},"interfaces/WeatherHistoryData.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["temperatureaverage",{"_index":1274,"title":{},"body":{"interfaces/GraphDataSet.html":{},"injectables/HistoryTileService.html":{},"interfaces/IndoorRoomData.html":{},"interfaces/OutdoorWeatherData.html":{},"interfaces/PollenData.html":{},"interfaces/Tile.html":{},"interfaces/TileArrays.html":{},"interfaces/WeatherData.html":{},"interfaces/WeatherForecastData.html":{},"interfaces/WeatherHistoryByDayData.html":{},"interfaces/WeatherHistoryData.html":{}}}],["temperaturedata",{"_index":1528,"title":{},"body":{"injectables/HistoryTileService.html":{}}}],["temperaturedata.length",{"_index":1538,"title":{},"body":{"injectables/HistoryTileService.html":{}}}],["temperaturedata.reduce(function",{"_index":1532,"title":{},"body":{"injectables/HistoryTileService.html":{}}}],["temperaturedata.reverse",{"_index":1540,"title":{},"body":{"injectables/HistoryTileService.html":{}}}],["temperaturedatapoints",{"_index":1275,"title":{},"body":{"interfaces/GraphDataSet.html":{},"injectables/HistoryTileService.html":{},"interfaces/IndoorRoomData.html":{},"interfaces/OutdoorWeatherData.html":{},"interfaces/PollenData.html":{},"interfaces/Tile.html":{},"interfaces/TileArrays.html":{},"interfaces/WeatherData.html":{},"interfaces/WeatherForecastData.html":{},"interfaces/WeatherHistoryByDayData.html":{},"interfaces/WeatherHistoryData.html":{}}}],["temperaturedatapoints.push(math.round(averagetemperature",{"_index":1484,"title":{},"body":{"injectables/HistoryTileService.html":{}}}],["temperaturempfinden",{"_index":2005,"title":{},"body":{"components/OutdoorWeatherDetailViewComponent.html":{}}}],["temperaturesumofweek",{"_index":1477,"title":{},"body":{"injectables/HistoryTileService.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CalibrationInfoDetailViewComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DashboardViewComponent.html":{},"components/DetailScreenComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{}}}],["templateurl",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CalibrationInfoDetailViewComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DashboardViewComponent.html":{},"components/DetailScreenComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{}}}],["tempsum",{"_index":1531,"title":{},"body":{"injectables/HistoryTileService.html":{}}}],["tendenz",{"_index":2227,"title":{},"body":{"components/PollenflugDetailViewComponent.html":{},"injectables/TextService.html":{}}}],["test",{"_index":1147,"title":{},"body":{"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/WeatherAPIService.html":{},"miscellaneous/variables.html":{}}}],["testdata",{"_index":3021,"title":{},"body":{"miscellaneous/variables.html":{}}}],["text",{"_index":474,"title":{},"body":{"components/CalibrationInfoDetailViewComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/DashboardViewComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SliderElementComponent.html":{},"injectables/SpeechService.html":{},"injectables/TextService.html":{},"components/TtsPlayerElementComponent.html":{}}}],["textservice",{"_index":960,"title":{"injectables/TextService.html":{}},"body":{"components/DashboardViewComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"injectables/TextService.html":{},"coverage.html":{}}}],["textvalue",{"_index":2161,"title":{},"body":{"components/PollenTagElementComponent.html":{},"components/PollenflugSmallTileComponent.html":{}}}],["theme",{"_index":664,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/HistoryTileViewComponent.html":{},"interfaces/LoginResponse.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"interfaces/PollenType.html":{},"interfaces/UserContext.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{},"interfaces/UserIdentifikation.html":{},"miscellaneous/variables.html":{}}}],["themes",{"_index":64,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CheckTokenResponse.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/HistoryTileViewComponent.html":{},"interfaces/ImageModel.html":{},"injectables/ImageService.html":{},"interfaces/LoginResponse.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"interfaces/PollenType.html":{},"interfaces/UserContext.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{},"interfaces/UserIdentifikation.html":{},"miscellaneous/enumerations.html":{}}}],["themes.automatic",{"_index":726,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"components/CheckboxSwitcherElementComponent.html":{},"injectables/ImageService.html":{},"interfaces/LoginResponse.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"interfaces/PollenType.html":{},"interfaces/UserContext.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{},"interfaces/UserIdentifikation.html":{},"miscellaneous/variables.html":{}}}],["themes.dark",{"_index":722,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"components/CheckboxSwitcherElementComponent.html":{},"injectables/ImageService.html":{},"interfaces/LoginResponse.html":{},"components/PersonalizationSettingsViewComponent.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{}}}],["themes.highcontrast",{"_index":725,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"components/CheckboxSwitcherElementComponent.html":{},"injectables/ImageService.html":{},"interfaces/LoginResponse.html":{},"components/PersonalizationSettingsViewComponent.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{}}}],["themes.light",{"_index":723,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/HistoryTileViewComponent.html":{},"injectables/ImageService.html":{},"interfaces/LoginResponse.html":{},"components/PersonalizationSettingsViewComponent.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{}}}],["themes[index",{"_index":2140,"title":{},"body":{"components/PersonalizationSettingsViewComponent.html":{}}}],["themes[this.getthemetypeat(index",{"_index":2142,"title":{},"body":{"components/PersonalizationSettingsViewComponent.html":{}}}],["themes[usercontext.theme",{"_index":665,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/LoginResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{}}}],["themesstring",{"_index":2139,"title":{},"body":{"components/PersonalizationSettingsViewComponent.html":{}}}],["themestype",{"_index":2107,"title":{},"body":{"components/PersonalizationSettingsViewComponent.html":{}}}],["themetype",{"_index":23,"title":{},"body":{"components/AppComponent.html":{},"components/OutdoorWeatherViewComponent.html":{}}}],["themselves",{"_index":1292,"title":{},"body":{"interfaces/GraphDataSet.html":{},"interfaces/IndoorRoomData.html":{},"interfaces/OutdoorWeatherData.html":{},"interfaces/PollenData.html":{},"interfaces/Tile.html":{},"interfaces/TileArrays.html":{},"interfaces/WeatherData.html":{},"interfaces/WeatherForecastData.html":{},"interfaces/WeatherHistoryByDayData.html":{},"interfaces/WeatherHistoryData.html":{}}}],["theoretisch",{"_index":1174,"title":{},"body":{"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["therefore",{"_index":983,"title":{},"body":{"components/DashboardViewComponent.html":{}}}],["this._apparenttemperature",{"_index":419,"title":{},"body":{"components/ApparentTemperatureTileViewComponent.html":{}}}],["this._dashboardtiles",{"_index":2832,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["this._dashboardtiles.next(tiles",{"_index":2751,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["this._dataset",{"_index":1575,"title":{},"body":{"components/HistoryTileViewComponent.html":{}}}],["this._forecast",{"_index":1258,"title":{},"body":{"components/ForecastTileViewComponent.html":{}}}],["this._forecast?.weathericon",{"_index":1260,"title":{},"body":{"components/ForecastTileViewComponent.html":{}}}],["this._forecastdata",{"_index":2835,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["this._forecastdata.getvalue",{"_index":2771,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["this._forecastdata.next(value",{"_index":2773,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["this._graphtype",{"_index":1571,"title":{},"body":{"components/HistoryTileViewComponent.html":{}}}],["this._historydata",{"_index":2834,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["this._historydata.getvalue",{"_index":2776,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["this._historydata.next(value",{"_index":2778,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["this._humidity",{"_index":1598,"title":{},"body":{"components/HumidityTileViewComponent.html":{}}}],["this._index",{"_index":1367,"title":{},"body":{"components/HistoryDetailViewComponent.html":{}}}],["this._indoorroom",{"_index":1751,"title":{},"body":{"components/IndoorTileViewComponent.html":{}}}],["this._indoorroom.airquality",{"_index":1755,"title":{},"body":{"components/IndoorTileViewComponent.html":{}}}],["this._indoorroom.calibrationvalue",{"_index":1753,"title":{},"body":{"components/IndoorTileViewComponent.html":{}}}],["this._indoorroomsdata.getvalue",{"_index":2766,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["this._indoorroomsdata.next(value",{"_index":2768,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["this._indoorroomtiles",{"_index":2836,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["this._indoorroomtiles.next(tiles",{"_index":2758,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["this._outdoorweatherdata",{"_index":2833,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["this._outdoorweatherdata.getvalue",{"_index":2780,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["this._outdoorweatherdata.next(value",{"_index":2782,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["this._pollen",{"_index":2293,"title":{},"body":{"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{}}}],["this._pollendata.getvalue",{"_index":2761,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["this._pollendata.next(value",{"_index":2763,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["this._pollentiles",{"_index":2837,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["this._pollentiles.next(tiles",{"_index":2754,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["this._value",{"_index":2166,"title":{},"body":{"components/PollenTagElementComponent.html":{}}}],["this._weatherhistory",{"_index":1375,"title":{},"body":{"components/HistoryDetailViewComponent.html":{}}}],["this.addtileto(dashboard",{"_index":2530,"title":{},"body":{"injectables/TileService.html":{}}}],["this.addtileto(indoorroom",{"_index":2556,"title":{},"body":{"injectables/TileService.html":{}}}],["this.addtileto(pollen",{"_index":2542,"title":{},"body":{"injectables/TileService.html":{}}}],["this.baseurlicons",{"_index":1626,"title":{},"body":{"injectables/ImageService.html":{}}}],["this.baseurlweather",{"_index":1650,"title":{},"body":{"injectables/ImageService.html":{}}}],["this.breakpointobserver",{"_index":110,"title":{},"body":{"components/AppComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/DashboardViewComponent.html":{},"injectables/ImageService.html":{},"components/OutdoorWeatherDetailViewComponent.html":{}}}],["this.chartcolors",{"_index":1574,"title":{},"body":{"components/HistoryTileViewComponent.html":{}}}],["this.chartlabels",{"_index":1591,"title":{},"body":{"components/HistoryTileViewComponent.html":{}}}],["this.checkedimage",{"_index":783,"title":{},"body":{"components/CheckboxSwitcherElementComponent.html":{}}}],["this.closeevent.emit",{"_index":1954,"title":{},"body":{"components/MenuElementComponent.html":{}}}],["this.colorvalue",{"_index":2173,"title":{},"body":{"components/PollenTagElementComponent.html":{}}}],["this.createforecasttext(forecastdata",{"_index":2431,"title":{},"body":{"injectables/TextService.html":{}}}],["this.createforecasttile(forecast",{"_index":2518,"title":{},"body":{"injectables/TileService.html":{}}}],["this.createhistorytile(history",{"_index":2520,"title":{},"body":{"injectables/TileService.html":{}}}],["this.createindoorroomdatafromserverresponse(data",{"_index":1176,"title":{},"body":{"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["this.createindoorroomtext(indoorarray",{"_index":2429,"title":{},"body":{"injectables/TextService.html":{}}}],["this.createindoorroomtiles(indoorroom",{"_index":2521,"title":{},"body":{"injectables/TileService.html":{}}}],["this.createoutdoorforecastdatafromserverresponse(data",{"_index":1158,"title":{},"body":{"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["this.createoutdoorweatherdatafromserverresponse(data",{"_index":1152,"title":{},"body":{"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["this.createoutdoorweatherdatafromserverresponse(element",{"_index":1189,"title":{},"body":{"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["this.createoutdoorweathertiles(outdoorweather",{"_index":2516,"title":{},"body":{"injectables/TileService.html":{}}}],["this.createpollendatafromserverresponse(data",{"_index":1162,"title":{},"body":{"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["this.createpollentext(element",{"_index":2426,"title":{},"body":{"injectables/TextService.html":{}}}],["this.createpollentext(pollendata",{"_index":2433,"title":{},"body":{"injectables/TextService.html":{}}}],["this.createpollentiles(pollen",{"_index":2522,"title":{},"body":{"injectables/TileService.html":{}}}],["this.createserverfriendlydate(begindate",{"_index":1184,"title":{},"body":{"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["this.createserverfriendlydate(enddate",{"_index":1186,"title":{},"body":{"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["this.createusercontextfromserverresponse(body.usercontext",{"_index":633,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/LoginResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{}}}],["this.createweathertext(weather",{"_index":2484,"title":{},"body":{"injectables/TextService.html":{}}}],["this.dashboardtiles",{"_index":993,"title":{},"body":{"components/DashboardViewComponent.html":{},"injectables/WeatherDataService.html":{}}}],["this.dataset",{"_index":1380,"title":{},"body":{"components/HistoryDetailViewComponent.html":{}}}],["this.dataset.length",{"_index":1369,"title":{},"body":{"components/HistoryDetailViewComponent.html":{}}}],["this.dataset[this.index].humidityaverage",{"_index":1389,"title":{},"body":{"components/HistoryDetailViewComponent.html":{}}}],["this.dataset[this.index].temperatureaverage",{"_index":1388,"title":{},"body":{"components/HistoryDetailViewComponent.html":{}}}],["this.desktop",{"_index":116,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{}}}],["this.desktopbreakpointobserver",{"_index":93,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{}}}],["this.dialog.open(configurationtilepopupdialogview",{"_index":847,"title":{},"body":{"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{}}}],["this.dialogref.close",{"_index":866,"title":{},"body":{"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{}}}],["this.dialogref.close(this.name.value",{"_index":867,"title":{},"body":{"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{}}}],["this.emojiname",{"_index":2171,"title":{},"body":{"components/PollenTagElementComponent.html":{}}}],["this.error",{"_index":1848,"title":{},"body":{"components/LoginViewComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/RegistrationViewComponent.html":{}}}],["this.espconfiguration.roomname",{"_index":852,"title":{},"body":{"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{}}}],["this.espconfiguration?.roomname",{"_index":849,"title":{},"body":{"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{}}}],["this.espconfigurations",{"_index":922,"title":{},"body":{"components/ConfigurationViewComponent.html":{}}}],["this.espconfigurationservice.loadespconfigs().subscribe((data",{"_index":921,"title":{},"body":{"components/ConfigurationViewComponent.html":{}}}],["this.espconfigurationservice.postespconfiguration(this.espconfiguration).subscribe((data",{"_index":865,"title":{},"body":{"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{}}}],["this.espconfigurationservice.startconfiguration(this.espconfiguration?.id).subscribe((success",{"_index":859,"title":{},"body":{"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{}}}],["this.forecast",{"_index":1050,"title":{},"body":{"components/ForecastDetailViewComponent.html":{}}}],["this.forecastdata",{"_index":2807,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["this.formbuilder.group",{"_index":1842,"title":{},"body":{"components/LoginViewComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/RegistrationViewComponent.html":{}}}],["this.getdatestringfromdate(lastdate",{"_index":1495,"title":{},"body":{"injectables/HistoryTileService.html":{}}}],["this.getdaytime",{"_index":1639,"title":{},"body":{"injectables/ImageService.html":{}}}],["this.getindexoftilein(tilesarray",{"_index":2573,"title":{},"body":{"injectables/TileService.html":{}}}],["this.getitem(disable_login_identifier",{"_index":1809,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["this.getitem(user_context_identifier",{"_index":1802,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["this.getitem(user_identifikation",{"_index":1807,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["this.getlocation",{"_index":1884,"title":{},"body":{"components/MenuBarElementComponent.html":{}}}],["this.getprioritiyof(data",{"_index":2527,"title":{},"body":{"injectables/TileService.html":{}}}],["this.getprioritiyof(item",{"_index":2555,"title":{},"body":{"injectables/TileService.html":{}}}],["this.getprioritiyof(pollendata",{"_index":2545,"title":{},"body":{"injectables/TileService.html":{}}}],["this.getprioritiyof(pollenitem",{"_index":2541,"title":{},"body":{"injectables/TileService.html":{}}}],["this.getthemetypefromserverresponse(usercontext.theme",{"_index":715,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/LoginResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{}}}],["this.getweeknumber(item.timestamp",{"_index":1489,"title":{},"body":{"injectables/HistoryTileService.html":{}}}],["this.getweeknumber(lastdate",{"_index":1474,"title":{},"body":{"injectables/HistoryTileService.html":{}}}],["this.getweekstringfromweeknumber(lastweek",{"_index":1475,"title":{},"body":{"injectables/HistoryTileService.html":{}}}],["this.historydata",{"_index":2809,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["this.historytileservice.gethistorydatasetdaysperweekfrom(this._weatherhistory",{"_index":1383,"title":{},"body":{"components/HistoryDetailViewComponent.html":{}}}],["this.historytileservice.gethistorydatasethoursperdayfrom(data",{"_index":2549,"title":{},"body":{"injectables/TileService.html":{}}}],["this.historytileservice.gethistorydatasethoursperdayfrom(this._weatherhistory",{"_index":1381,"title":{},"body":{"components/HistoryDetailViewComponent.html":{}}}],["this.http.post(\"http://localhost:4201/v1/auth/login",{"_index":161,"title":{},"body":{"components/AppComponent.html":{}}}],["this.httpclient.delete(this.deletepollenurl",{"_index":684,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/LoginResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{}}}],["this.httpclient.get(this.allconfigs",{"_index":1017,"title":{},"body":{"interfaces/ESPConfiguration.html":{},"injectables/ESPConfigurationAPIService.html":{}}}],["this.httpclient.get(this.allpollentypesurl",{"_index":706,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/LoginResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["this.httpclient.get(this.calibration",{"_index":1030,"title":{},"body":{"interfaces/ESPConfiguration.html":{},"injectables/ESPConfigurationAPIService.html":{}}}],["this.httpclient.get(this.checktokenurl",{"_index":693,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/LoginResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{}}}],["this.httpclient.get(this.currentusercontexturl",{"_index":698,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/LoginResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{}}}],["this.httpclient.get(this.forecasturl).subscribe(data",{"_index":1156,"title":{},"body":{"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["this.httpclient.get(this.indoorurl).subscribe(data",{"_index":1175,"title":{},"body":{"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["this.httpclient.get(this.outdoorurl).subscribe(data",{"_index":1150,"title":{},"body":{"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["this.httpclient.post(this.changeconfig",{"_index":1020,"title":{},"body":{"interfaces/ESPConfiguration.html":{},"injectables/ESPConfigurationAPIService.html":{}}}],["this.httpclient.post(this.historyurl",{"_index":1182,"title":{},"body":{"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["this.httpclient.post(this.loginurl",{"_index":620,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/LoginResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{}}}],["this.httpclient.post(this.openapeurl",{"_index":652,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/LoginResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{}}}],["this.httpclient.post(this.registerurl",{"_index":659,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/LoginResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{}}}],["this.httpclient.post(this.savepollenurl",{"_index":690,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/LoginResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{}}}],["this.httpclient.put(this.saveusercontexturl",{"_index":676,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/LoginResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{}}}],["this.imageservice.getgradientstylefor(this.outdoorweather?.weather",{"_index":2065,"title":{},"body":{"components/OutdoorWeatherViewComponent.html":{}}}],["this.imageservice.getweathericonstring(iconstring",{"_index":1261,"title":{},"body":{"components/ForecastTileViewComponent.html":{}}}],["this.imageservice.getweathericonstring(this.outdoorweather?.weather",{"_index":2066,"title":{},"body":{"components/OutdoorWeatherViewComponent.html":{}}}],["this.index",{"_index":1376,"title":{},"body":{"components/HistoryDetailViewComponent.html":{}}}],["this.indoorroomsdata",{"_index":2811,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["this.indoorroomtiles",{"_index":1693,"title":{},"body":{"components/IndoorDetailViewComponent.html":{},"injectables/WeatherDataService.html":{}}}],["this.ismenuhidden",{"_index":1913,"title":{},"body":{"components/MenuButtonElementComponent.html":{}}}],["this.label",{"_index":785,"title":{},"body":{"components/CheckboxSwitcherElementComponent.html":{}}}],["this.listenforstop(service",{"_index":2608,"title":{},"body":{"components/TtsPlayerElementComponent.html":{}}}],["this.listenforstop(this.speechservice",{"_index":2605,"title":{},"body":{"components/TtsPlayerElementComponent.html":{}}}],["this.listentoscrollevent",{"_index":2060,"title":{},"body":{"components/OutdoorWeatherViewComponent.html":{}}}],["this.listentothemechange",{"_index":92,"title":{},"body":{"components/AppComponent.html":{}}}],["this.loadconfigurations",{"_index":915,"title":{},"body":{"components/ConfigurationViewComponent.html":{}}}],["this.loaddata",{"_index":977,"title":{},"body":{"components/DashboardViewComponent.html":{}}}],["this.loaddefaultfontsize",{"_index":90,"title":{},"body":{"components/AppComponent.html":{}}}],["this.loadforecastdata",{"_index":1044,"title":{},"body":{"components/ForecastDetailViewComponent.html":{}}}],["this.loadindoorroomdata",{"_index":1691,"title":{},"body":{"components/IndoorDetailViewComponent.html":{}}}],["this.loadmonthfromhistory(new",{"_index":2798,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["this.loadoutdoorweather",{"_index":2059,"title":{},"body":{"components/OutdoorWeatherViewComponent.html":{}}}],["this.loadoutdoorweatherdata",{"_index":1993,"title":{},"body":{"components/OutdoorWeatherDetailViewComponent.html":{}}}],["this.loadpollentiles",{"_index":2218,"title":{},"body":{"components/PollenflugDetailViewComponent.html":{}}}],["this.loadreducemotionvalue",{"_index":976,"title":{},"body":{"components/DashboardViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{}}}],["this.loadusercontext",{"_index":91,"title":{},"body":{"components/AppComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"injectables/ImageService.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{}}}],["this.loadweatherdata",{"_index":2788,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["this.loadweatherhistorydata",{"_index":1372,"title":{},"body":{"components/HistoryDetailViewComponent.html":{}}}],["this.location.back",{"_index":452,"title":{},"body":{"components/BackButtonElementComponent.html":{}}}],["this.locationlabel",{"_index":1886,"title":{},"body":{"components/MenuBarElementComponent.html":{}}}],["this.loginform.get(\"password\")?.value",{"_index":1847,"title":{},"body":{"components/LoginViewComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{}}}],["this.loginform.get(\"username\")?.value",{"_index":1846,"title":{},"body":{"components/LoginViewComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{}}}],["this.logintoopenape(username",{"_index":1982,"title":{},"body":{"components/OpenAPELoginTileViewComponent.html":{}}}],["this.message",{"_index":166,"title":{},"body":{"components/AppComponent.html":{}}}],["this.oldesthistorydate",{"_index":2794,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["this.orderitemsin(tilesarray",{"_index":2570,"title":{},"body":{"injectables/TileService.html":{}}}],["this.outdoordata",{"_index":996,"title":{},"body":{"components/DashboardViewComponent.html":{}}}],["this.outdoorweather",{"_index":1998,"title":{},"body":{"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{}}}],["this.outdoorweatherdata",{"_index":2803,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["this.play",{"_index":2601,"title":{},"body":{"components/TtsPlayerElementComponent.html":{}}}],["this.pollendata",{"_index":2805,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["this.pollentiles",{"_index":2221,"title":{},"body":{"components/PollenflugDetailViewComponent.html":{},"injectables/WeatherDataService.html":{}}}],["this.reducemotion",{"_index":990,"title":{},"body":{"components/DashboardViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{}}}],["this.registerforusercontextchange",{"_index":2789,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["this.registrationform.get(\"password\")?.value",{"_index":2338,"title":{},"body":{"components/RegistrationViewComponent.html":{}}}],["this.registrationform.get(\"repeatedpassword\")?.value",{"_index":2339,"title":{},"body":{"components/RegistrationViewComponent.html":{}}}],["this.registrationform.get(\"username\")?.value",{"_index":2337,"title":{},"body":{"components/RegistrationViewComponent.html":{}}}],["this.reload",{"_index":1371,"title":{},"body":{"components/HistoryDetailViewComponent.html":{}}}],["this.reloadtiles",{"_index":2813,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["this.renderer.setstyle(document.body",{"_index":130,"title":{},"body":{"components/AppComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{}}}],["this.router.navigatebyurl('/dashboard",{"_index":100,"title":{},"body":{"components/AppComponent.html":{},"components/CalibrationInfoDetailViewComponent.html":{},"components/LoginViewComponent.html":{},"components/PersonalizationViewComponent.html":{}}}],["this.router.navigatebyurl('/onboarding/login",{"_index":2132,"title":{},"body":{"components/PersonalizationSettingsViewComponent.html":{}}}],["this.router.navigatebyurl('/onboarding/personalization",{"_index":1856,"title":{},"body":{"components/LoginViewComponent.html":{},"components/RegistrationViewComponent.html":{}}}],["this.router.navigatebyurl('/onboarding/registration",{"_index":1854,"title":{},"body":{"components/LoginViewComponent.html":{}}}],["this.router.navigatebyurl('/settings/calibration",{"_index":861,"title":{},"body":{"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{}}}],["this.router.navigatebyurl('/settings/configuration",{"_index":1956,"title":{},"body":{"components/MenuElementComponent.html":{}}}],["this.router.navigatebyurl('/settings/personalization",{"_index":1955,"title":{},"body":{"components/MenuElementComponent.html":{}}}],["this.setdefaultfontsize(fontsize",{"_index":123,"title":{},"body":{"components/AppComponent.html":{}}}],["this.setdefaultfontsize(this.usercontextdata.fontsize",{"_index":2136,"title":{},"body":{"components/PersonalizationSettingsViewComponent.html":{}}}],["this.setitem(disable_login_identifier",{"_index":1813,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["this.setitem(user_context_identifier",{"_index":1801,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["this.setitem(user_identifikation",{"_index":1806,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["this.showweatherdescription",{"_index":2084,"title":{},"body":{"components/OutdoorWeatherViewComponent.html":{}}}],["this.speechservice.startoutput(text",{"_index":2604,"title":{},"body":{"components/TtsPlayerElementComponent.html":{}}}],["this.speechservice.stopoutput",{"_index":2602,"title":{},"body":{"components/TtsPlayerElementComponent.html":{}}}],["this.spinner.hide",{"_index":923,"title":{},"body":{"components/ConfigurationViewComponent.html":{},"components/DashboardViewComponent.html":{}}}],["this.spinner.show",{"_index":920,"title":{},"body":{"components/ConfigurationViewComponent.html":{},"components/DashboardViewComponent.html":{}}}],["this.synth.cancel",{"_index":2390,"title":{},"body":{"injectables/SpeechService.html":{}}}],["this.synth.resume",{"_index":2392,"title":{},"body":{"injectables/SpeechService.html":{}}}],["this.synth.speak(utterthis",{"_index":2391,"title":{},"body":{"injectables/SpeechService.html":{}}}],["this.synth.speaking",{"_index":2393,"title":{},"body":{"injectables/SpeechService.html":{}}}],["this.systemtheme",{"_index":776,"title":{},"body":{"components/CheckboxSwitcherElementComponent.html":{},"injectables/ImageService.html":{}}}],["this.systemthemebreakpointobserver",{"_index":766,"title":{},"body":{"components/CheckboxSwitcherElementComponent.html":{},"injectables/ImageService.html":{}}}],["this.textservice.createforecasttext(this._forecast",{"_index":1263,"title":{},"body":{"components/ForecastTileViewComponent.html":{}}}],["this.textservice.createforecasttext(this.forecast",{"_index":1043,"title":{},"body":{"components/ForecastDetailViewComponent.html":{}}}],["this.textservice.createforecasttitle(this._forecast",{"_index":1262,"title":{},"body":{"components/ForecastTileViewComponent.html":{}}}],["this.textservice.createoutdoortext(this.outdoordata",{"_index":975,"title":{},"body":{"components/DashboardViewComponent.html":{}}}],["this.textservice.createoutdoortext(this.outdoorweather",{"_index":1992,"title":{},"body":{"components/OutdoorWeatherDetailViewComponent.html":{}}}],["this.textservice.createtextfromtilesarray(this.dashboardtiles",{"_index":973,"title":{},"body":{"components/DashboardViewComponent.html":{}}}],["this.textservice.createtextfromtilesarray(this.indoorroomtiles",{"_index":1690,"title":{},"body":{"components/IndoorDetailViewComponent.html":{}}}],["this.textservice.createtextfromtilesarray(this.pollentiles",{"_index":2217,"title":{},"body":{"components/PollenflugDetailViewComponent.html":{}}}],["this.textservice.createweathertext(this.outdoorweather.weather",{"_index":2068,"title":{},"body":{"components/OutdoorWeatherViewComponent.html":{}}}],["this.textvalue",{"_index":2169,"title":{},"body":{"components/PollenTagElementComponent.html":{}}}],["this.theme",{"_index":2061,"title":{},"body":{"components/OutdoorWeatherViewComponent.html":{}}}],["this.tileservice.createtiles(outdoorweatherdata",{"_index":2820,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["this.toggled.emit(!this.value",{"_index":767,"title":{},"body":{"components/CheckboxSwitcherElementComponent.html":{}}}],["this.ttstextgeneratorfunction",{"_index":2603,"title":{},"body":{"components/TtsPlayerElementComponent.html":{}}}],["this.uncheckedimagedark",{"_index":781,"title":{},"body":{"components/CheckboxSwitcherElementComponent.html":{}}}],["this.uncheckedimagelight",{"_index":782,"title":{},"body":{"components/CheckboxSwitcherElementComponent.html":{}}}],["this.updatechartdata(this.chartdata",{"_index":1573,"title":{},"body":{"components/HistoryTileViewComponent.html":{}}}],["this.updateconfiguration",{"_index":854,"title":{},"body":{"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{}}}],["this.usercontext",{"_index":126,"title":{},"body":{"components/AppComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"injectables/ImageService.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/TtsPlayerElementComponent.html":{}}}],["this.usercontext?.theme",{"_index":778,"title":{},"body":{"components/CheckboxSwitcherElementComponent.html":{},"injectables/ImageService.html":{}}}],["this.usercontextdata",{"_index":2133,"title":{},"body":{"components/PersonalizationSettingsViewComponent.html":{}}}],["this.usercontextservice.disablelogin",{"_index":1855,"title":{},"body":{"components/LoginViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{}}}],["this.usercontextservice.fontsize",{"_index":2134,"title":{},"body":{"components/PersonalizationSettingsViewComponent.html":{}}}],["this.usercontextservice.getpollenvalueat(index",{"_index":2144,"title":{},"body":{"components/PersonalizationSettingsViewComponent.html":{}}}],["this.usercontextservice.getusercontextsubject",{"_index":119,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{}}}],["this.usercontextservice.getusercontextsubject().subscribe",{"_index":2819,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["this.usercontextservice.getusercontextsubject().subscribe(data",{"_index":771,"title":{},"body":{"components/CheckboxSwitcherElementComponent.html":{},"components/TtsPlayerElementComponent.html":{}}}],["this.usercontextservice.login(username",{"_index":1849,"title":{},"body":{"components/LoginViewComponent.html":{}}}],["this.usercontextservice.logintoopenape(username",{"_index":1983,"title":{},"body":{"components/OpenAPELoginTileViewComponent.html":{}}}],["this.usercontextservice.logout",{"_index":1853,"title":{},"body":{"components/LoginViewComponent.html":{},"components/MenuElementComponent.html":{}}}],["this.usercontextservice.pollen",{"_index":2533,"title":{},"body":{"injectables/TileService.html":{}}}],["this.usercontextservice.pollentypes.length",{"_index":2143,"title":{},"body":{"components/PersonalizationSettingsViewComponent.html":{}}}],["this.usercontextservice.pollentypes[index].pollenname",{"_index":2145,"title":{},"body":{"components/PersonalizationSettingsViewComponent.html":{}}}],["this.usercontextservice.refreshusercontextifneeded().subscribe",{"_index":125,"title":{},"body":{"components/AppComponent.html":{}}}],["this.usercontextservice.refreshusercontextifneeded().subscribe((data",{"_index":2130,"title":{},"body":{"components/PersonalizationSettingsViewComponent.html":{}}}],["this.usercontextservice.register(username",{"_index":2343,"title":{},"body":{"components/RegistrationViewComponent.html":{}}}],["this.usercontextservice.tooglepollenvalueat(index",{"_index":2146,"title":{},"body":{"components/PersonalizationSettingsViewComponent.html":{}}}],["this.usercontextservice.userloggedin",{"_index":1953,"title":{},"body":{"components/MenuElementComponent.html":{}}}],["this.valuechanged.emit(event.target.value",{"_index":2366,"title":{},"body":{"components/SliderElementComponent.html":{}}}],["this.weahterdataservice.getoutdoorweatherdatasubject().subscribe(data",{"_index":1997,"title":{},"body":{"components/OutdoorWeatherDetailViewComponent.html":{}}}],["this.weatherapiservice.loadforecast",{"_index":2797,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["this.weatherapiservice.loadindoorroomdata",{"_index":2800,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["this.weatherapiservice.loadoutdoorweather",{"_index":2795,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["this.weatherapiservice.loadpollen",{"_index":2796,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["this.weatherdataservice.getdashboardtilessubject",{"_index":992,"title":{},"body":{"components/DashboardViewComponent.html":{}}}],["this.weatherdataservice.getforecastdatasubject",{"_index":1049,"title":{},"body":{"components/ForecastDetailViewComponent.html":{}}}],["this.weatherdataservice.gethistorydatasubject().subscribe(data",{"_index":1374,"title":{},"body":{"components/HistoryDetailViewComponent.html":{}}}],["this.weatherdataservice.getindoortilessubject",{"_index":1692,"title":{},"body":{"components/IndoorDetailViewComponent.html":{}}}],["this.weatherdataservice.getoutdoorweatherdatasubject",{"_index":995,"title":{},"body":{"components/DashboardViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/OutdoorWeatherViewComponent.html":{}}}],["this.weatherdataservice.getpollentilessubject().subscribe(data",{"_index":2220,"title":{},"body":{"components/PollenflugDetailViewComponent.html":{}}}],["this.weatherdataservice.loadmorehistorydata().subscribe(data",{"_index":1370,"title":{},"body":{"components/HistoryDetailViewComponent.html":{}}}],["this.weatherdataservice.reloaddata",{"_index":1889,"title":{},"body":{"components/MenuBarElementComponent.html":{}}}],["those",{"_index":1576,"title":{},"body":{"components/HistoryTileViewComponent.html":{}}}],["three",{"_index":1282,"title":{},"body":{"interfaces/GraphDataSet.html":{},"interfaces/IndoorRoomData.html":{},"components/MenuElementComponent.html":{},"interfaces/OutdoorWeatherData.html":{},"interfaces/PollenData.html":{},"components/RegistrationViewComponent.html":{},"interfaces/Tile.html":{},"interfaces/TileArrays.html":{},"injectables/TileService.html":{},"interfaces/WeatherData.html":{},"interfaces/WeatherForecastData.html":{},"interfaces/WeatherHistoryByDayData.html":{},"interfaces/WeatherHistoryData.html":{}}}],["through",{"_index":526,"title":{},"body":{"components/CardElementComponent.html":{},"injectables/WeatherDataService.html":{},"miscellaneous/enumerations.html":{}}}],["thumb",{"_index":2312,"title":{},"body":{"components/ProgressChartElementComponent.html":{},"components/SliderElementComponent.html":{}}}],["thunderstorm",{"_index":1638,"title":{},"body":{"injectables/ImageService.html":{},"injectables/TextService.html":{}}}],["tile",{"_index":188,"title":{"interfaces/Tile.html":{}},"body":{"components/AppComponent.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CalibrationInfoDetailViewComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DashboardViewComponent.html":{},"components/DetailScreenComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"interfaces/GraphDataSet.html":{},"components/HistoryDetailViewComponent.html":{},"injectables/HistoryTileService.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"interfaces/IndoorRoomData.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"interfaces/OutdoorWeatherData.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"interfaces/PollenData.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"injectables/TextService.html":{},"interfaces/Tile.html":{},"interfaces/TileArrays.html":{},"injectables/TileService.html":{},"components/TtsPlayerElementComponent.html":{},"modules/ViewsModule.html":{},"interfaces/WeatherData.html":{},"injectables/WeatherDataService.html":{},"interfaces/WeatherForecastData.html":{},"interfaces/WeatherHistoryByDayData.html":{},"interfaces/WeatherHistoryData.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["tile'},{'name",{"_index":248,"title":{},"body":{"components/AppComponent.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CalibrationInfoDetailViewComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DashboardViewComponent.html":{},"components/DetailScreenComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{}}}],["tile.component",{"_index":2699,"title":{},"body":{"modules/ViewsModule.html":{}}}],["tile.component.html",{"_index":2285,"title":{},"body":{"components/PollenflugSmallTileComponent.html":{}}}],["tile.component.scss",{"_index":2284,"title":{},"body":{"components/PollenflugSmallTileComponent.html":{}}}],["tile.component.ts",{"_index":2280,"title":{},"body":{"components/PollenflugSmallTileComponent.html":{},"coverage.html":{}}}],["tile.component.ts:19",{"_index":2290,"title":{},"body":{"components/PollenflugSmallTileComponent.html":{}}}],["tile.component.ts:20",{"_index":2289,"title":{},"body":{"components/PollenflugSmallTileComponent.html":{}}}],["tile.component.ts:22",{"_index":2288,"title":{},"body":{"components/PollenflugSmallTileComponent.html":{}}}],["tile.component.ts:25",{"_index":2292,"title":{},"body":{"components/PollenflugSmallTileComponent.html":{}}}],["tile.component.ts:26",{"_index":2287,"title":{},"body":{"components/PollenflugSmallTileComponent.html":{}}}],["tile.component.ts:30",{"_index":2291,"title":{},"body":{"components/PollenflugSmallTileComponent.html":{}}}],["tile.id",{"_index":2574,"title":{},"body":{"injectables/TileService.html":{}}}],["tile.service",{"_index":1364,"title":{},"body":{"components/HistoryDetailViewComponent.html":{},"injectables/TileService.html":{},"injectables/WeatherDataService.html":{}}}],["tile.service.ts",{"_index":1444,"title":{},"body":{"injectables/HistoryTileService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["tile.service.ts:12",{"_index":1447,"title":{},"body":{"injectables/HistoryTileService.html":{}}}],["tile.service.ts:24",{"_index":1449,"title":{},"body":{"injectables/HistoryTileService.html":{}}}],["tile.service.ts:86",{"_index":1463,"title":{},"body":{"injectables/HistoryTileService.html":{}}}],["tile/pollenflug",{"_index":2279,"title":{},"body":{"components/PollenflugSmallTileComponent.html":{},"modules/ViewsModule.html":{},"coverage.html":{}}}],["tilearrays",{"_index":1284,"title":{"interfaces/TileArrays.html":{}},"body":{"interfaces/GraphDataSet.html":{},"interfaces/IndoorRoomData.html":{},"interfaces/OutdoorWeatherData.html":{},"interfaces/PollenData.html":{},"interfaces/Tile.html":{},"interfaces/TileArrays.html":{},"injectables/TileService.html":{},"interfaces/WeatherData.html":{},"interfaces/WeatherForecastData.html":{},"interfaces/WeatherHistoryByDayData.html":{},"interfaces/WeatherHistoryData.html":{},"coverage.html":{}}}],["tilepriority",{"_index":1286,"title":{},"body":{"interfaces/GraphDataSet.html":{},"interfaces/IndoorRoomData.html":{},"interfaces/OutdoorWeatherData.html":{},"interfaces/PollenData.html":{},"interfaces/Tile.html":{},"interfaces/TileArrays.html":{},"injectables/TileService.html":{},"interfaces/WeatherData.html":{},"interfaces/WeatherForecastData.html":{},"interfaces/WeatherHistoryByDayData.html":{},"interfaces/WeatherHistoryData.html":{},"miscellaneous/enumerations.html":{}}}],["tilepriority.important",{"_index":2564,"title":{},"body":{"injectables/TileService.html":{}}}],["tilepriority.low",{"_index":2566,"title":{},"body":{"injectables/TileService.html":{},"miscellaneous/variables.html":{}}}],["tilepriority.middle",{"_index":2565,"title":{},"body":{"injectables/TileService.html":{}}}],["tiles",{"_index":516,"title":{},"body":{"components/CardElementComponent.html":{},"components/DashboardViewComponent.html":{},"interfaces/GraphDataSet.html":{},"interfaces/IndoorRoomData.html":{},"interfaces/OutdoorWeatherData.html":{},"interfaces/PollenData.html":{},"components/PollenflugDetailViewComponent.html":{},"injectables/TextService.html":{},"interfaces/Tile.html":{},"interfaces/TileArrays.html":{},"injectables/TileService.html":{},"interfaces/WeatherData.html":{},"injectables/WeatherDataService.html":{},"interfaces/WeatherForecastData.html":{},"interfaces/WeatherHistoryByDayData.html":{},"interfaces/WeatherHistoryData.html":{}}}],["tilesarray.findindex(element",{"_index":2578,"title":{},"body":{"injectables/TileService.html":{}}}],["tilesarray.push(tile",{"_index":2569,"title":{},"body":{"injectables/TileService.html":{}}}],["tilesarray.sort((a",{"_index":2581,"title":{},"body":{"injectables/TileService.html":{}}}],["tilesarray[indexintilesarray",{"_index":2576,"title":{},"body":{"injectables/TileService.html":{}}}],["tilesarrays",{"_index":2514,"title":{},"body":{"injectables/TileService.html":{}}}],["tileservice",{"_index":2504,"title":{"injectables/TileService.html":{}},"body":{"injectables/TileService.html":{},"injectables/WeatherDataService.html":{},"coverage.html":{}}}],["tilestext",{"_index":972,"title":{},"body":{"components/DashboardViewComponent.html":{}}}],["tiletype",{"_index":957,"title":{},"body":{"components/DashboardViewComponent.html":{},"interfaces/GraphDataSet.html":{},"interfaces/IndoorRoomData.html":{},"interfaces/OutdoorWeatherData.html":{},"interfaces/PollenData.html":{},"components/PollenflugDetailViewComponent.html":{},"injectables/TextService.html":{},"interfaces/Tile.html":{},"interfaces/TileArrays.html":{},"injectables/TileService.html":{},"interfaces/WeatherData.html":{},"interfaces/WeatherForecastData.html":{},"interfaces/WeatherHistoryByDayData.html":{},"interfaces/WeatherHistoryData.html":{},"miscellaneous/enumerations.html":{}}}],["tiletype.apparenttemperature",{"_index":2529,"title":{},"body":{"injectables/TileService.html":{}}}],["tiletype.forecast",{"_index":2430,"title":{},"body":{"injectables/TextService.html":{},"injectables/TileService.html":{},"miscellaneous/variables.html":{}}}],["tiletype.history",{"_index":2550,"title":{},"body":{"injectables/TileService.html":{}}}],["tiletype.humidity",{"_index":2526,"title":{},"body":{"injectables/TileService.html":{}}}],["tiletype.indoorroom",{"_index":2427,"title":{},"body":{"injectables/TextService.html":{},"injectables/TileService.html":{},"miscellaneous/variables.html":{}}}],["tiletype.pollenlist",{"_index":2422,"title":{},"body":{"injectables/TextService.html":{},"injectables/TileService.html":{},"miscellaneous/variables.html":{}}}],["tiletype.pollensmall",{"_index":2432,"title":{},"body":{"injectables/TextService.html":{},"injectables/TileService.html":{},"miscellaneous/variables.html":{}}}],["tiletype[item.type",{"_index":997,"title":{},"body":{"components/DashboardViewComponent.html":{},"components/PollenflugDetailViewComponent.html":{}}}],["time",{"_index":1046,"title":{},"body":{"components/ForecastDetailViewComponent.html":{},"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"components/OutdoorWeatherViewComponent.html":{},"interfaces/PollenResponse.html":{},"injectables/WeatherAPIService.html":{},"injectables/WeatherDataService.html":{}}}],["timeinterval",{"_index":1355,"title":{},"body":{"components/HistoryDetailViewComponent.html":{},"miscellaneous/enumerations.html":{}}}],["timeinterval.day",{"_index":1354,"title":{},"body":{"components/HistoryDetailViewComponent.html":{}}}],["timeinterval.month",{"_index":1384,"title":{},"body":{"components/HistoryDetailViewComponent.html":{}}}],["timeinterval.week",{"_index":1382,"title":{},"body":{"components/HistoryDetailViewComponent.html":{}}}],["timeintervaltype",{"_index":1325,"title":{},"body":{"components/HistoryDetailViewComponent.html":{}}}],["timestamp",{"_index":1215,"title":{},"body":{"interfaces/ForecastResponse.html":{},"interfaces/GraphDataSet.html":{},"interfaces/IndoorRoomData.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherData.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenData.html":{},"interfaces/PollenResponse.html":{},"interfaces/Tile.html":{},"interfaces/TileArrays.html":{},"injectables/WeatherAPIService.html":{},"interfaces/WeatherData.html":{},"interfaces/WeatherForecastData.html":{},"interfaces/WeatherHistoryByDayData.html":{},"interfaces/WeatherHistoryData.html":{},"miscellaneous/variables.html":{}}}],["timestampd",{"_index":1124,"title":{},"body":{"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["timestring",{"_index":1195,"title":{},"body":{"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["title",{"_index":24,"title":{},"body":{"components/AppComponent.html":{},"components/CardElementComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/SimpleTileViewComponent.html":{},"injectables/TextService.html":{}}}],["titlelabel",{"_index":1974,"title":{},"body":{"components/NavBarElementComponent.html":{}}}],["tobt",{"_index":2503,"title":{},"body":{"injectables/TextService.html":{}}}],["todate",{"_index":2830,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["today",{"_index":1239,"title":{},"body":{"interfaces/ForecastResponse.html":{},"interfaces/GraphDataSet.html":{},"interfaces/IndoorRoomData.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherData.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenData.html":{},"interfaces/PollenResponse.html":{},"interfaces/Tile.html":{},"interfaces/TileArrays.html":{},"injectables/WeatherAPIService.html":{},"interfaces/WeatherData.html":{},"interfaces/WeatherForecastData.html":{},"interfaces/WeatherHistoryByDayData.html":{},"interfaces/WeatherHistoryData.html":{},"miscellaneous/variables.html":{}}}],["todo",{"_index":1299,"title":{},"body":{"interfaces/GraphDataSet.html":{},"interfaces/IndoorRoomData.html":{},"interfaces/OutdoorWeatherData.html":{},"interfaces/PollenData.html":{},"interfaces/PollenType.html":{},"interfaces/Tile.html":{},"interfaces/TileArrays.html":{},"interfaces/UserContext.html":{},"interfaces/UserIdentifikation.html":{},"interfaces/WeatherData.html":{},"interfaces/WeatherForecastData.html":{},"interfaces/WeatherHistoryByDayData.html":{},"interfaces/WeatherHistoryData.html":{}}}],["togglecheckbox",{"_index":742,"title":{},"body":{"components/CheckboxSwitcherElementComponent.html":{}}}],["toggled",{"_index":747,"title":{},"body":{"components/CheckboxSwitcherElementComponent.html":{}}}],["togglepollenvalueat",{"_index":2117,"title":{},"body":{"components/PersonalizationSettingsViewComponent.html":{}}}],["togglepollenvalueat(index",{"_index":2128,"title":{},"body":{"components/PersonalizationSettingsViewComponent.html":{}}}],["toggles",{"_index":759,"title":{},"body":{"components/CheckboxSwitcherElementComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{}}}],["token",{"_index":580,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"injectables/LocalStorageService.html":{},"interfaces/LoginResponse.html":{},"interfaces/PollenType.html":{},"interfaces/UserContext.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{},"interfaces/UserIdentifikation.html":{},"miscellaneous/variables.html":{}}}],["told",{"_index":1362,"title":{},"body":{"components/HistoryDetailViewComponent.html":{}}}],["tomorrow",{"_index":1241,"title":{},"body":{"interfaces/ForecastResponse.html":{},"interfaces/GraphDataSet.html":{},"interfaces/IndoorRoomData.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherData.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenData.html":{},"interfaces/PollenResponse.html":{},"interfaces/Tile.html":{},"interfaces/TileArrays.html":{},"injectables/WeatherAPIService.html":{},"interfaces/WeatherData.html":{},"interfaces/WeatherForecastData.html":{},"interfaces/WeatherHistoryByDayData.html":{},"interfaces/WeatherHistoryData.html":{},"miscellaneous/variables.html":{}}}],["top",{"_index":175,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/CalibrationInfoDetailViewComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DashboardViewComponent.html":{},"components/DetailScreenComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{},"miscellaneous/variables.html":{}}}],["track",{"_index":2321,"title":{},"body":{"components/ProgressChartElementComponent.html":{},"components/SliderElementComponent.html":{}}}],["traditionellen",{"_index":1418,"title":{},"body":{"components/HistoryDetailViewComponent.html":{}}}],["transform",{"_index":560,"title":{},"body":{"components/CardElementComponent.html":{}}}],["transition",{"_index":79,"title":{},"body":{"components/AppComponent.html":{},"components/CardElementComponent.html":{},"components/MenuElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/SettingsScreenComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["transition('dashboard",{"_index":3029,"title":{},"body":{"miscellaneous/variables.html":{}}}],["transition('detail",{"_index":3035,"title":{},"body":{"miscellaneous/variables.html":{}}}],["transition('personalization",{"_index":3036,"title":{},"body":{"miscellaneous/variables.html":{}}}],["translatez(0",{"_index":562,"title":{},"body":{"components/CardElementComponent.html":{}}}],["transmissionfrequency",{"_index":1004,"title":{},"body":{"interfaces/ESPConfiguration.html":{},"injectables/ESPConfigurationAPIService.html":{},"miscellaneous/variables.html":{}}}],["transparent",{"_index":2316,"title":{},"body":{"components/ProgressChartElementComponent.html":{},"components/SliderElementComponent.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CalibrationInfoDetailViewComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DashboardViewComponent.html":{},"components/DetailScreenComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{}}}],["treffen",{"_index":2047,"title":{},"body":{"components/OutdoorWeatherDetailViewComponent.html":{}}}],["trend",{"_index":1125,"title":{},"body":{"interfaces/ForecastResponse.html":{},"interfaces/GraphDataSet.html":{},"components/HistoryDetailViewComponent.html":{},"interfaces/IndoorRoomData.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherData.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenData.html":{},"interfaces/PollenResponse.html":{},"injectables/TextService.html":{},"interfaces/Tile.html":{},"interfaces/TileArrays.html":{},"injectables/WeatherAPIService.html":{},"interfaces/WeatherData.html":{},"interfaces/WeatherForecastData.html":{},"interfaces/WeatherHistoryByDayData.html":{},"interfaces/WeatherHistoryData.html":{},"miscellaneous/variables.html":{}}}],["trigger",{"_index":1945,"title":{},"body":{"components/MenuElementComponent.html":{},"injectables/WeatherDataService.html":{}}}],["trigger('triggername",{"_index":3028,"title":{},"body":{"miscellaneous/variables.html":{}}}],["triggerd",{"_index":2203,"title":{},"body":{"interfaces/PollenType.html":{},"interfaces/UserContext.html":{},"interfaces/UserIdentifikation.html":{}}}],["triggers",{"_index":1840,"title":{},"body":{"components/LoginViewComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/RegistrationViewComponent.html":{}}}],["true",{"_index":117,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"injectables/SpeechService.html":{},"components/TtsPlayerElementComponent.html":{},"miscellaneous/variables.html":{}}}],["truth",{"_index":2746,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["tslib",{"_index":2945,"title":{},"body":{"dependencies.html":{}}}],["tts",{"_index":266,"title":{},"body":{"components/AppComponent.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CalibrationInfoDetailViewComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DashboardViewComponent.html":{},"components/DetailScreenComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{},"modules/UiElementsModule.html":{}}}],["ttsplayerelementcomponent",{"_index":265,"title":{"components/TtsPlayerElementComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CalibrationInfoDetailViewComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DashboardViewComponent.html":{},"components/DetailScreenComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{},"modules/UiElementsModule.html":{},"coverage.html":{},"overview.html":{}}}],["ttstextgeneratorfunction",{"_index":958,"title":{},"body":{"components/DashboardViewComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/TtsPlayerElementComponent.html":{}}}],["turn",{"_index":986,"title":{},"body":{"components/DashboardViewComponent.html":{},"miscellaneous/variables.html":{}}}],["turns",{"_index":1910,"title":{},"body":{"components/MenuButtonElementComponent.html":{}}}],["twice",{"_index":985,"title":{},"body":{"components/DashboardViewComponent.html":{},"components/HistoryDetailViewComponent.html":{}}}],["two",{"_index":837,"title":{},"body":{"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/LoginViewComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{}}}],["type",{"_index":46,"title":{},"body":{"components/AppComponent.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CalibrationInfoDetailViewComponent.html":{},"components/CardElementComponent.html":{},"interfaces/CheckTokenResponse.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardViewComponent.html":{},"components/DetailScreenComponent.html":{},"interfaces/ESPConfiguration.html":{},"injectables/ESPConfigurationAPIService.html":{},"components/ForecastDetailViewComponent.html":{},"interfaces/ForecastResponse.html":{},"components/ForecastTileViewComponent.html":{},"interfaces/GraphDataSet.html":{},"components/HistoryDetailViewComponent.html":{},"injectables/HistoryTileService.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"interfaces/ImageModel.html":{},"injectables/ImageService.html":{},"components/IndoorDetailViewComponent.html":{},"interfaces/IndoorRoomData.html":{},"interfaces/IndoorRoomResponse.html":{},"components/IndoorTileViewComponent.html":{},"injectables/LocalStorageService.html":{},"interfaces/LoginResponse.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"interfaces/OutdoorWeatherData.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"interfaces/OutdoorWeatherResponse.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"interfaces/PollenData.html":{},"components/PollenListElementComponent.html":{},"interfaces/PollenResponse.html":{},"components/PollenTagElementComponent.html":{},"interfaces/PollenType.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"injectables/SpeechService.html":{},"injectables/TextService.html":{},"interfaces/Tile.html":{},"interfaces/TileArrays.html":{},"injectables/TileService.html":{},"components/TtsPlayerElementComponent.html":{},"interfaces/UserContext.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{},"interfaces/UserIdentifikation.html":{},"injectables/WeatherAPIService.html":{},"interfaces/WeatherData.html":{},"injectables/WeatherDataService.html":{},"interfaces/WeatherForecastData.html":{},"interfaces/WeatherHistoryByDayData.html":{},"interfaces/WeatherHistoryData.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["types",{"_index":703,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/LoginResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{}}}],["täglich",{"_index":2271,"title":{},"body":{"components/PollenflugDetailViewComponent.html":{}}}],["uhr",{"_index":1503,"title":{},"body":{"injectables/HistoryTileService.html":{}}}],["ui",{"_index":413,"title":{},"body":{"components/ApparentTemperatureTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"modules/ScreensModule.html":{},"components/SimpleTileViewComponent.html":{},"modules/ViewsModule.html":{}}}],["uielementsmodule",{"_index":287,"title":{"modules/UiElementsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ScreensModule.html":{},"modules/UiElementsModule.html":{},"modules/ViewsModule.html":{},"modules.html":{},"overview.html":{}}}],["um",{"_index":2189,"title":{},"body":{"interfaces/PollenType.html":{},"interfaces/UserContext.html":{},"interfaces/UserIdentifikation.html":{}}}],["umbenennen",{"_index":899,"title":{},"body":{"components/ConfigurationTileViewComponent.html":{}}}],["umgerechnet",{"_index":1416,"title":{},"body":{"components/HistoryDetailViewComponent.html":{}}}],["unchecked",{"_index":757,"title":{},"body":{"components/CheckboxSwitcherElementComponent.html":{}}}],["uncheckedimagedark",{"_index":744,"title":{},"body":{"components/CheckboxSwitcherElementComponent.html":{}}}],["uncheckedimagelight",{"_index":745,"title":{},"body":{"components/CheckboxSwitcherElementComponent.html":{}}}],["und",{"_index":1068,"title":{},"body":{"components/ForecastDetailViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"injectables/TextService.html":{}}}],["undefined",{"_index":753,"title":{},"body":{"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"interfaces/ForecastResponse.html":{},"components/ForecastTileViewComponent.html":{},"injectables/ImageService.html":{},"interfaces/IndoorRoomResponse.html":{},"components/LoginViewComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"interfaces/OutdoorWeatherResponse.html":{},"components/OutdoorWeatherViewComponent.html":{},"interfaces/PollenResponse.html":{},"components/RegistrationViewComponent.html":{},"injectables/TextService.html":{},"injectables/TileService.html":{},"injectables/WeatherAPIService.html":{},"injectables/WeatherDataService.html":{}}}],["underline",{"_index":1872,"title":{},"body":{"components/LoginViewComponent.html":{}}}],["understandable",{"_index":1191,"title":{},"body":{"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["unterschiedlich",{"_index":2243,"title":{},"body":{"components/PollenflugDetailViewComponent.html":{}}}],["unterschiedlicher",{"_index":2262,"title":{},"body":{"components/PollenflugDetailViewComponent.html":{}}}],["unterschiedlichster",{"_index":1724,"title":{},"body":{"components/IndoorDetailViewComponent.html":{}}}],["until",{"_index":2791,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["up",{"_index":804,"title":{},"body":{"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{}}}],["update",{"_index":862,"title":{},"body":{"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{}}}],["updatechartdata(chartdataset",{"_index":1578,"title":{},"body":{"components/HistoryTileViewComponent.html":{}}}],["updateconfiguration",{"_index":864,"title":{},"body":{"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{}}}],["updatet",{"_index":1018,"title":{},"body":{"interfaces/ESPConfiguration.html":{},"injectables/ESPConfigurationAPIService.html":{}}}],["upper",{"_index":2332,"title":{},"body":{"components/ProgressChartElementComponent.html":{},"components/SliderElementComponent.html":{}}}],["url",{"_index":754,"title":{},"body":{"components/CheckboxSwitcherElementComponent.html":{},"components/ForecastTileViewComponent.html":{}}}],["use",{"_index":590,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/ESPConfiguration.html":{},"injectables/ESPConfigurationAPIService.html":{},"interfaces/ForecastResponse.html":{},"injectables/HistoryTileService.html":{},"injectables/ImageService.html":{},"interfaces/IndoorRoomResponse.html":{},"injectables/LocalStorageService.html":{},"interfaces/LoginResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/SpeechService.html":{},"injectables/TextService.html":{},"injectables/TileService.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{},"injectables/WeatherAPIService.html":{},"injectables/WeatherDataService.html":{},"index.html":{}}}],["used",{"_index":955,"title":{},"body":{"components/DashboardViewComponent.html":{},"interfaces/GraphDataSet.html":{},"components/HistoryDetailViewComponent.html":{},"interfaces/IndoorRoomData.html":{},"interfaces/OutdoorWeatherData.html":{},"interfaces/PollenData.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/SimpleTileViewComponent.html":{},"interfaces/Tile.html":{},"interfaces/TileArrays.html":{},"injectables/TileService.html":{},"interfaces/WeatherData.html":{},"interfaces/WeatherForecastData.html":{},"interfaces/WeatherHistoryByDayData.html":{},"interfaces/WeatherHistoryData.html":{}}}],["user",{"_index":479,"title":{},"body":{"components/CalibrationInfoDetailViewComponent.html":{},"interfaces/CheckTokenResponse.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ForecastDetailViewComponent.html":{},"injectables/ImageService.html":{},"injectables/LocalStorageService.html":{},"interfaces/LoginResponse.html":{},"components/LoginViewComponent.html":{},"components/MenuElementComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"interfaces/PollenType.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"injectables/TileService.html":{},"components/TtsPlayerElementComponent.html":{},"interfaces/UserContext.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{},"interfaces/UserIdentifikation.html":{},"injectables/WeatherDataService.html":{},"miscellaneous/variables.html":{}}}],["user/currentuser",{"_index":603,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/LoginResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{}}}],["user/loadopenapesettingsandsave",{"_index":613,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/LoginResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{}}}],["user/register",{"_index":599,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/LoginResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{}}}],["user/save",{"_index":605,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/LoginResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{}}}],["user_context_identifier",{"_index":1826,"title":{},"body":{"injectables/LocalStorageService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["user_identifikation",{"_index":1825,"title":{},"body":{"injectables/LocalStorageService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["usercontext",{"_index":26,"title":{"interfaces/UserContext.html":{}},"body":{"components/AppComponent.html":{},"interfaces/CheckTokenResponse.html":{},"components/CheckboxSwitcherElementComponent.html":{},"injectables/ImageService.html":{},"injectables/LocalStorageService.html":{},"interfaces/LoginResponse.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"interfaces/PollenType.html":{},"components/TtsPlayerElementComponent.html":{},"interfaces/UserContext.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{},"interfaces/UserIdentifikation.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["usercontext(object",{"_index":1798,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["usercontext.doventilationreminder",{"_index":670,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/LoginResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{}}}],["usercontext.fontsize",{"_index":666,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/LoginResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{}}}],["usercontext.pollen",{"_index":716,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/LoginResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{}}}],["usercontext.reducemotion",{"_index":672,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/LoginResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{}}}],["usercontext.selfvoicingenabled",{"_index":668,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/LoginResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{}}}],["usercontextapiservice",{"_index":594,"title":{"injectables/UserContextAPIService.html":{}},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/LoginResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{},"coverage.html":{}}}],["usercontextdata",{"_index":2108,"title":{},"body":{"components/PersonalizationSettingsViewComponent.html":{}}}],["usercontextresponse",{"_index":714,"title":{"interfaces/UserContextResponse.html":{}},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/LoginResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{},"coverage.html":{}}}],["usercontextservice",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/DashboardViewComponent.html":{},"injectables/ImageService.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/RegistrationViewComponent.html":{},"injectables/TileService.html":{},"components/TtsPlayerElementComponent.html":{},"injectables/WeatherDataService.html":{},"coverage.html":{}}}],["usercontexttheme",{"_index":777,"title":{},"body":{"components/CheckboxSwitcherElementComponent.html":{},"injectables/ImageService.html":{}}}],["usercontstringext",{"_index":2384,"title":{},"body":{"injectables/SpeechService.html":{}}}],["userid",{"_index":629,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"injectables/LocalStorageService.html":{},"interfaces/LoginResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{}}}],["userid(value",{"_index":1804,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["userid.id",{"_index":675,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/LoginResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{}}}],["userid.token",{"_index":651,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/LoginResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{}}}],["useridentifikation",{"_index":588,"title":{"interfaces/UserIdentifikation.html":{}},"body":{"interfaces/CheckTokenResponse.html":{},"injectables/LocalStorageService.html":{},"interfaces/LoginResponse.html":{},"interfaces/PollenType.html":{},"interfaces/UserContext.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{},"interfaces/UserIdentifikation.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userloggedin",{"_index":1929,"title":{},"body":{"components/MenuElementComponent.html":{}}}],["username",{"_index":616,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/LoginResponse.html":{},"components/LoginViewComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/RegistrationViewComponent.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{}}}],["username\":\"admin",{"_index":162,"title":{},"body":{"components/AppComponent.html":{}}}],["users",{"_index":1920,"title":{},"body":{"components/MenuElementComponent.html":{},"interfaces/PollenType.html":{},"interfaces/UserContext.html":{},"interfaces/UserIdentifikation.html":{}}}],["uses",{"_index":389,"title":{},"body":{"components/ApparentTemperatureTileViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/TtsPlayerElementComponent.html":{},"injectables/WeatherDataService.html":{}}}],["using",{"_index":527,"title":{},"body":{"components/CardElementComponent.html":{},"injectables/HistoryTileService.html":{},"components/IndoorDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["utterthis",{"_index":2385,"title":{},"body":{"injectables/SpeechService.html":{}}}],["utterthis.lang",{"_index":2387,"title":{},"body":{"injectables/SpeechService.html":{}}}],["utterthis.pitch",{"_index":2388,"title":{},"body":{"injectables/SpeechService.html":{}}}],["utterthis.rate",{"_index":2389,"title":{},"body":{"injectables/SpeechService.html":{}}}],["valid",{"_index":691,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/LoginResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{}}}],["validators",{"_index":1844,"title":{},"body":{"components/LoginViewComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/RegistrationViewComponent.html":{}}}],["validators.minlength(2",{"_index":1843,"title":{},"body":{"components/LoginViewComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/RegistrationViewComponent.html":{}}}],["validdate",{"_index":1208,"title":{},"body":{"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["value",{"_index":60,"title":{},"body":{"components/AppComponent.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/DashboardViewComponent.html":{},"components/DetailScreenComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"injectables/LocalStorageService.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"injectables/TextService.html":{},"components/TtsPlayerElementComponent.html":{},"miscellaneous/variables.html":{}}}],["value(value",{"_index":2167,"title":{},"body":{"components/PollenTagElementComponent.html":{}}}],["valuechanged",{"_index":2361,"title":{},"body":{"components/SliderElementComponent.html":{}}}],["values",{"_index":528,"title":{},"body":{"components/CardElementComponent.html":{},"miscellaneous/enumerations.html":{}}}],["var",{"_index":159,"title":{},"body":{"components/AppComponent.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CalibrationInfoDetailViewComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DashboardViewComponent.html":{},"components/DetailScreenComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{}}}],["variable",{"_index":2075,"title":{},"body":{"components/OutdoorWeatherViewComponent.html":{},"coverage.html":{}}}],["variables",{"_index":2988,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["verbunden",{"_index":1729,"title":{},"body":{"components/IndoorDetailViewComponent.html":{},"components/PollenflugDetailViewComponent.html":{}}}],["vereinzelt",{"_index":2497,"title":{},"body":{"injectables/TextService.html":{}}}],["vereinzelten",{"_index":2443,"title":{},"body":{"injectables/TextService.html":{}}}],["verfügung",{"_index":2277,"title":{},"body":{"components/PollenflugDetailViewComponent.html":{}}}],["vergangenen",{"_index":1421,"title":{},"body":{"components/HistoryDetailViewComponent.html":{}}}],["verlaufe",{"_index":2436,"title":{},"body":{"injectables/TextService.html":{}}}],["version",{"_index":2405,"title":{},"body":{"injectables/TextService.html":{},"index.html":{}}}],["verstanden",{"_index":513,"title":{},"body":{"components/CalibrationInfoDetailViewComponent.html":{}}}],["versuche",{"_index":640,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/ESPConfiguration.html":{},"injectables/ESPConfigurationAPIService.html":{},"components/ForecastDetailViewComponent.html":{},"interfaces/LoginResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{}}}],["vertical",{"_index":557,"title":{},"body":{"components/CardElementComponent.html":{}}}],["very",{"_index":2593,"title":{},"body":{"components/TtsPlayerElementComponent.html":{}}}],["vestibular",{"_index":2201,"title":{},"body":{"interfaces/PollenType.html":{},"interfaces/UserContext.html":{},"interfaces/UserIdentifikation.html":{}}}],["vielzahl",{"_index":1723,"title":{},"body":{"components/IndoorDetailViewComponent.html":{}}}],["view",{"_index":378,"title":{},"body":{"components/ApparentTemperatureTileViewComponent.html":{},"components/CalibrationInfoDetailViewComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardViewComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"interfaces/GraphDataSet.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"interfaces/IndoorRoomData.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"interfaces/OutdoorWeatherData.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"interfaces/PollenData.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"interfaces/Tile.html":{},"interfaces/TileArrays.html":{},"interfaces/WeatherData.html":{},"interfaces/WeatherForecastData.html":{},"interfaces/WeatherHistoryByDayData.html":{},"interfaces/WeatherHistoryData.html":{}}}],["view'},{'name",{"_index":189,"title":{},"body":{"components/AppComponent.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CalibrationInfoDetailViewComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DashboardViewComponent.html":{},"components/DetailScreenComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{}}}],["view.component",{"_index":346,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/HistoryDetailViewComponent.html":{},"modules/ViewsModule.html":{}}}],["view.component.html",{"_index":395,"title":{},"body":{"components/ApparentTemperatureTileViewComponent.html":{},"components/CalibrationInfoDetailViewComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardViewComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SimpleTileViewComponent.html":{}}}],["view.component.scss",{"_index":394,"title":{},"body":{"components/ApparentTemperatureTileViewComponent.html":{},"components/CalibrationInfoDetailViewComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardViewComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SimpleTileViewComponent.html":{}}}],["view.component.ts",{"_index":376,"title":{},"body":{"components/ApparentTemperatureTileViewComponent.html":{},"components/CalibrationInfoDetailViewComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardViewComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SimpleTileViewComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["view.component.ts:105",{"_index":2119,"title":{},"body":{"components/PersonalizationSettingsViewComponent.html":{}}}],["view.component.ts:106",{"_index":1344,"title":{},"body":{"components/HistoryDetailViewComponent.html":{}}}],["view.component.ts:114",{"_index":2129,"title":{},"body":{"components/PersonalizationSettingsViewComponent.html":{}}}],["view.component.ts:116",{"_index":1335,"title":{},"body":{"components/HistoryDetailViewComponent.html":{}}}],["view.component.ts:121",{"_index":2125,"title":{},"body":{"components/PersonalizationSettingsViewComponent.html":{}}}],["view.component.ts:125",{"_index":1342,"title":{},"body":{"components/HistoryDetailViewComponent.html":{}}}],["view.component.ts:135",{"_index":1341,"title":{},"body":{"components/HistoryDetailViewComponent.html":{}}}],["view.component.ts:145",{"_index":1339,"title":{},"body":{"components/HistoryDetailViewComponent.html":{}}}],["view.component.ts:15",{"_index":2152,"title":{},"body":{"components/PersonalizationViewComponent.html":{}}}],["view.component.ts:17",{"_index":482,"title":{},"body":{"components/CalibrationInfoDetailViewComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/SimpleTileViewComponent.html":{}}}],["view.component.ts:18",{"_index":914,"title":{},"body":{"components/ConfigurationViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/LoginViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SimpleTileViewComponent.html":{}}}],["view.component.ts:19",{"_index":405,"title":{},"body":{"components/ApparentTemperatureTileViewComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/SimpleTileViewComponent.html":{}}}],["view.component.ts:20",{"_index":404,"title":{},"body":{"components/ApparentTemperatureTileViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/SimpleTileViewComponent.html":{}}}],["view.component.ts:21",{"_index":484,"title":{},"body":{"components/CalibrationInfoDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/PollenflugDetailViewComponent.html":{}}}],["view.component.ts:22",{"_index":403,"title":{},"body":{"components/ApparentTemperatureTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugTileViewComponent.html":{}}}],["view.component.ts:23",{"_index":963,"title":{},"body":{"components/DashboardViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/RegistrationViewComponent.html":{}}}],["view.component.ts:24",{"_index":885,"title":{},"body":{"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardViewComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/SimpleTileViewComponent.html":{}}}],["view.component.ts:25",{"_index":962,"title":{},"body":{"components/DashboardViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenflugTileViewComponent.html":{}}}],["view.component.ts:26",{"_index":407,"title":{},"body":{"components/ApparentTemperatureTileViewComponent.html":{},"components/DashboardViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{}}}],["view.component.ts:27",{"_index":402,"title":{},"body":{"components/ApparentTemperatureTileViewComponent.html":{},"components/CalibrationInfoDetailViewComponent.html":{},"components/ConfigurationTileViewComponent.html":{},"components/DashboardViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PollenflugDetailViewComponent.html":{}}}],["view.component.ts:28",{"_index":1689,"title":{},"body":{"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{}}}],["view.component.ts:29",{"_index":1041,"title":{},"body":{"components/ForecastDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/RegistrationViewComponent.html":{}}}],["view.component.ts:30",{"_index":886,"title":{},"body":{"components/ConfigurationTileViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{}}}],["view.component.ts:31",{"_index":406,"title":{},"body":{"components/ApparentTemperatureTileViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{}}}],["view.component.ts:32",{"_index":964,"title":{},"body":{"components/DashboardViewComponent.html":{},"components/PollenflugDetailViewComponent.html":{}}}],["view.component.ts:33",{"_index":1747,"title":{},"body":{"components/IndoorTileViewComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{}}}],["view.component.ts:35",{"_index":1839,"title":{},"body":{"components/LoginViewComponent.html":{},"components/RegistrationViewComponent.html":{}}}],["view.component.ts:36",{"_index":887,"title":{},"body":{"components/ConfigurationTileViewComponent.html":{},"components/DashboardViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{}}}],["view.component.ts:37",{"_index":1559,"title":{},"body":{"components/HistoryTileViewComponent.html":{}}}],["view.component.ts:38",{"_index":1357,"title":{},"body":{"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{}}}],["view.component.ts:41",{"_index":1351,"title":{},"body":{"components/HistoryDetailViewComponent.html":{}}}],["view.component.ts:43",{"_index":1353,"title":{},"body":{"components/HistoryDetailViewComponent.html":{}}}],["view.component.ts:44",{"_index":961,"title":{},"body":{"components/DashboardViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{}}}],["view.component.ts:45",{"_index":1334,"title":{},"body":{"components/HistoryDetailViewComponent.html":{}}}],["view.component.ts:47",{"_index":1565,"title":{},"body":{"components/HistoryTileViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{}}}],["view.component.ts:48",{"_index":1567,"title":{},"body":{"components/HistoryTileViewComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{}}}],["view.component.ts:50",{"_index":1347,"title":{},"body":{"components/HistoryDetailViewComponent.html":{}}}],["view.component.ts:51",{"_index":1257,"title":{},"body":{"components/ForecastTileViewComponent.html":{},"components/HistoryTileViewComponent.html":{}}}],["view.component.ts:52",{"_index":1566,"title":{},"body":{"components/HistoryTileViewComponent.html":{}}}],["view.component.ts:53",{"_index":1557,"title":{},"body":{"components/HistoryTileViewComponent.html":{}}}],["view.component.ts:55",{"_index":1838,"title":{},"body":{"components/LoginViewComponent.html":{}}}],["view.component.ts:56",{"_index":888,"title":{},"body":{"components/ConfigurationTileViewComponent.html":{}}}],["view.component.ts:57",{"_index":1558,"title":{},"body":{"components/HistoryTileViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{}}}],["view.component.ts:63",{"_index":1837,"title":{},"body":{"components/LoginViewComponent.html":{}}}],["view.component.ts:66",{"_index":2123,"title":{},"body":{"components/PersonalizationSettingsViewComponent.html":{}}}],["view.component.ts:67",{"_index":2056,"title":{},"body":{"components/OutdoorWeatherViewComponent.html":{}}}],["view.component.ts:68",{"_index":1348,"title":{},"body":{"components/HistoryDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{}}}],["view.component.ts:69",{"_index":889,"title":{},"body":{"components/ConfigurationTileViewComponent.html":{}}}],["view.component.ts:74",{"_index":2058,"title":{},"body":{"components/OutdoorWeatherViewComponent.html":{}}}],["view.component.ts:79",{"_index":1746,"title":{},"body":{"components/IndoorTileViewComponent.html":{}}}],["view.component.ts:81",{"_index":2057,"title":{},"body":{"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{}}}],["view.component.ts:88",{"_index":2126,"title":{},"body":{"components/PersonalizationSettingsViewComponent.html":{}}}],["view.component.ts:89",{"_index":816,"title":{},"body":{"components/ConfigurationTilePopUpDialogView.html":{}}}],["view.component.ts:92",{"_index":822,"title":{},"body":{"components/ConfigurationTilePopUpDialogView.html":{}}}],["view.component.ts:93",{"_index":821,"title":{},"body":{"components/ConfigurationTilePopUpDialogView.html":{}}}],["view.component.ts:95",{"_index":817,"title":{},"body":{"components/ConfigurationTilePopUpDialogView.html":{}}}],["view.component.ts:97",{"_index":1337,"title":{},"body":{"components/HistoryDetailViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{}}}],["view.component.ts:99",{"_index":818,"title":{},"body":{"components/ConfigurationTilePopUpDialogView.html":{}}}],["view/apparent",{"_index":375,"title":{},"body":{"components/ApparentTemperatureTileViewComponent.html":{},"modules/ViewsModule.html":{},"coverage.html":{}}}],["view/calibration",{"_index":345,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/CalibrationInfoDetailViewComponent.html":{},"modules/ViewsModule.html":{},"coverage.html":{}}}],["view/configuration",{"_index":348,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"modules/ViewsModule.html":{},"coverage.html":{}}}],["view/dashboard",{"_index":950,"title":{},"body":{"components/DashboardViewComponent.html":{},"modules/ViewsModule.html":{},"coverage.html":{}}}],["view/forecast",{"_index":350,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"modules/ViewsModule.html":{},"coverage.html":{}}}],["view/history",{"_index":352,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"modules/ViewsModule.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["view/humidity",{"_index":1596,"title":{},"body":{"components/HumidityTileViewComponent.html":{},"modules/ViewsModule.html":{},"coverage.html":{}}}],["view/indoor",{"_index":354,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"modules/ViewsModule.html":{},"coverage.html":{}}}],["view/login",{"_index":356,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/LoginViewComponent.html":{},"modules/ViewsModule.html":{},"coverage.html":{}}}],["view/open",{"_index":1979,"title":{},"body":{"components/OpenAPELoginTileViewComponent.html":{},"modules/ViewsModule.html":{},"coverage.html":{}}}],["view/outdoor",{"_index":358,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"modules/ViewsModule.html":{},"coverage.html":{}}}],["view/personalization",{"_index":360,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"modules/ViewsModule.html":{},"coverage.html":{}}}],["view/pollenflug",{"_index":362,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugTileViewComponent.html":{},"modules/ViewsModule.html":{},"coverage.html":{}}}],["view/registration",{"_index":364,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/RegistrationViewComponent.html":{},"modules/ViewsModule.html":{},"coverage.html":{}}}],["view/simple",{"_index":2356,"title":{},"body":{"components/SimpleTileViewComponent.html":{},"modules/ViewsModule.html":{},"coverage.html":{}}}],["views/views.module",{"_index":2350,"title":{},"body":{"modules/ScreensModule.html":{}}}],["viewsmodule",{"_index":288,"title":{"modules/ViewsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ScreensModule.html":{},"modules/ViewsModule.html":{},"modules.html":{},"overview.html":{}}}],["voicing",{"_index":2588,"title":{},"body":{"components/TtsPlayerElementComponent.html":{}}}],["void",{"_index":50,"title":{},"body":{"components/AppComponent.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CalibrationInfoDetailViewComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DashboardViewComponent.html":{},"components/DetailScreenComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"injectables/LocalStorageService.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"injectables/SpeechService.html":{},"injectables/TileService.html":{},"components/TtsPlayerElementComponent.html":{},"injectables/WeatherDataService.html":{}}}],["von",{"_index":148,"title":{},"body":{"components/AppComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/PollenflugDetailViewComponent.html":{}}}],["vorausschauende",{"_index":2268,"title":{},"body":{"components/PollenflugDetailViewComponent.html":{}}}],["voraussetzung",{"_index":1731,"title":{},"body":{"components/IndoorDetailViewComponent.html":{}}}],["vorhersage",{"_index":1060,"title":{},"body":{"components/ForecastDetailViewComponent.html":{}}}],["vorherzusagen",{"_index":1075,"title":{},"body":{"components/ForecastDetailViewComponent.html":{}}}],["waits",{"_index":2790,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["waren",{"_index":1093,"title":{},"body":{"components/ForecastDetailViewComponent.html":{}}}],["wasserdampfgehalt",{"_index":2021,"title":{},"body":{"components/OutdoorWeatherDetailViewComponent.html":{}}}],["wather",{"_index":2063,"title":{},"body":{"components/OutdoorWeatherViewComponent.html":{}}}],["way",{"_index":1319,"title":{},"body":{"components/HistoryDetailViewComponent.html":{},"injectables/HistoryTileService.html":{},"injectables/TileService.html":{},"interfaces/WeatherData.html":{}}}],["während",{"_index":1420,"title":{},"body":{"components/HistoryDetailViewComponent.html":{}}}],["weahter",{"_index":2733,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["weahterdataservice",{"_index":1991,"title":{},"body":{"components/OutdoorWeatherDetailViewComponent.html":{}}}],["weahterhistorydata",{"_index":1451,"title":{},"body":{"injectables/HistoryTileService.html":{}}}],["weahther",{"_index":1612,"title":{},"body":{"injectables/ImageService.html":{}}}],["weather",{"_index":238,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CalibrationInfoDetailViewComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DashboardViewComponent.html":{},"components/DetailScreenComponent.html":{},"components/ForecastDetailViewComponent.html":{},"interfaces/ForecastResponse.html":{},"components/ForecastTileViewComponent.html":{},"interfaces/GraphDataSet.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"injectables/ImageService.html":{},"components/IndoorDetailViewComponent.html":{},"interfaces/IndoorRoomData.html":{},"interfaces/IndoorRoomResponse.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"interfaces/OutdoorWeatherData.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"interfaces/OutdoorWeatherResponse.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"interfaces/PollenData.html":{},"components/PollenListElementComponent.html":{},"interfaces/PollenResponse.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"injectables/TextService.html":{},"interfaces/Tile.html":{},"interfaces/TileArrays.html":{},"injectables/TileService.html":{},"components/TtsPlayerElementComponent.html":{},"modules/ViewsModule.html":{},"injectables/WeatherAPIService.html":{},"interfaces/WeatherData.html":{},"injectables/WeatherDataService.html":{},"interfaces/WeatherForecastData.html":{},"interfaces/WeatherHistoryByDayData.html":{},"interfaces/WeatherHistoryData.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["weatherapiservice",{"_index":1137,"title":{"injectables/WeatherAPIService.html":{}},"body":{"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/WeatherAPIService.html":{},"injectables/WeatherDataService.html":{},"coverage.html":{}}}],["weatherdata",{"_index":385,"title":{"interfaces/WeatherData.html":{}},"body":{"components/ApparentTemperatureTileViewComponent.html":{},"components/DashboardViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"interfaces/GraphDataSet.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"interfaces/IndoorRoomData.html":{},"components/IndoorTileViewComponent.html":{},"interfaces/OutdoorWeatherData.html":{},"interfaces/PollenData.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/SimpleTileViewComponent.html":{},"injectables/TextService.html":{},"interfaces/Tile.html":{},"interfaces/TileArrays.html":{},"injectables/TileService.html":{},"interfaces/WeatherData.html":{},"injectables/WeatherDataService.html":{},"interfaces/WeatherForecastData.html":{},"interfaces/WeatherHistoryByDayData.html":{},"interfaces/WeatherHistoryData.html":{},"coverage.html":{}}}],["weatherdataservice",{"_index":959,"title":{"injectables/WeatherDataService.html":{}},"body":{"components/DashboardViewComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"injectables/WeatherDataService.html":{},"coverage.html":{}}}],["weatherdescription",{"_index":1126,"title":{},"body":{"interfaces/ForecastResponse.html":{},"interfaces/GraphDataSet.html":{},"interfaces/IndoorRoomData.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherData.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenData.html":{},"interfaces/PollenResponse.html":{},"interfaces/Tile.html":{},"interfaces/TileArrays.html":{},"injectables/WeatherAPIService.html":{},"interfaces/WeatherData.html":{},"interfaces/WeatherForecastData.html":{},"interfaces/WeatherHistoryByDayData.html":{},"interfaces/WeatherHistoryData.html":{},"miscellaneous/variables.html":{}}}],["weatherforecastdata",{"_index":1042,"title":{"interfaces/WeatherForecastData.html":{}},"body":{"components/ForecastDetailViewComponent.html":{},"interfaces/ForecastResponse.html":{},"components/ForecastTileViewComponent.html":{},"interfaces/GraphDataSet.html":{},"interfaces/IndoorRoomData.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherData.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenData.html":{},"interfaces/PollenResponse.html":{},"injectables/TextService.html":{},"interfaces/Tile.html":{},"interfaces/TileArrays.html":{},"injectables/TileService.html":{},"injectables/WeatherAPIService.html":{},"interfaces/WeatherData.html":{},"injectables/WeatherDataService.html":{},"interfaces/WeatherForecastData.html":{},"interfaces/WeatherHistoryByDayData.html":{},"interfaces/WeatherHistoryData.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["weatherhistory",{"_index":1130,"title":{},"body":{"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/WeatherAPIService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["weatherhistorybyday",{"_index":2910,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["weatherhistorybydaydata",{"_index":1307,"title":{"interfaces/WeatherHistoryByDayData.html":{}},"body":{"interfaces/GraphDataSet.html":{},"interfaces/IndoorRoomData.html":{},"interfaces/OutdoorWeatherData.html":{},"interfaces/PollenData.html":{},"interfaces/Tile.html":{},"interfaces/TileArrays.html":{},"interfaces/WeatherData.html":{},"interfaces/WeatherForecastData.html":{},"interfaces/WeatherHistoryByDayData.html":{},"interfaces/WeatherHistoryData.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["weatherhistorydata",{"_index":1134,"title":{"interfaces/WeatherHistoryData.html":{}},"body":{"interfaces/ForecastResponse.html":{},"interfaces/GraphDataSet.html":{},"components/HistoryDetailViewComponent.html":{},"injectables/HistoryTileService.html":{},"interfaces/IndoorRoomData.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherData.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenData.html":{},"interfaces/PollenResponse.html":{},"interfaces/Tile.html":{},"interfaces/TileArrays.html":{},"injectables/TileService.html":{},"injectables/WeatherAPIService.html":{},"interfaces/WeatherData.html":{},"injectables/WeatherDataService.html":{},"interfaces/WeatherForecastData.html":{},"interfaces/WeatherHistoryByDayData.html":{},"interfaces/WeatherHistoryData.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["weatherhistorydata.datapoints",{"_index":1466,"title":{},"body":{"injectables/HistoryTileService.html":{}}}],["weatherhistorydata.datapoints.length",{"_index":1465,"title":{},"body":{"injectables/HistoryTileService.html":{}}}],["weathericon",{"_index":1127,"title":{},"body":{"interfaces/ForecastResponse.html":{},"interfaces/GraphDataSet.html":{},"interfaces/IndoorRoomData.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherData.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenData.html":{},"interfaces/PollenResponse.html":{},"interfaces/Tile.html":{},"interfaces/TileArrays.html":{},"injectables/WeatherAPIService.html":{},"interfaces/WeatherData.html":{},"interfaces/WeatherForecastData.html":{},"interfaces/WeatherHistoryByDayData.html":{},"interfaces/WeatherHistoryData.html":{},"miscellaneous/variables.html":{}}}],["weatherio",{"_index":1857,"title":{},"body":{"components/LoginViewComponent.html":{}}}],["weathertype",{"_index":1649,"title":{},"body":{"injectables/ImageService.html":{}}}],["web",{"_index":2106,"title":{},"body":{"components/PersonalizationSettingsViewComponent.html":{},"components/TtsPlayerElementComponent.html":{}}}],["webapp",{"_index":952,"title":{},"body":{"components/DashboardViewComponent.html":{}}}],["webkit",{"_index":559,"title":{},"body":{"components/CardElementComponent.html":{},"components/LoginViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/SliderElementComponent.html":{}}}],["week",{"_index":1390,"title":{},"body":{"components/HistoryDetailViewComponent.html":{},"injectables/HistoryTileService.html":{},"miscellaneous/enumerations.html":{}}}],["weekday",{"_index":1506,"title":{},"body":{"injectables/HistoryTileService.html":{}}}],["weight",{"_index":464,"title":{},"body":{"components/BackButtonElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/OutdoorWeatherViewComponent.html":{}}}],["weiter",{"_index":1864,"title":{},"body":{"components/LoginViewComponent.html":{},"components/PollenflugDetailViewComponent.html":{}}}],["welchen",{"_index":500,"title":{},"body":{"components/CalibrationInfoDetailViewComponent.html":{}}}],["well",{"_index":841,"title":{},"body":{"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{}}}],["wenn",{"_index":105,"title":{},"body":{"components/AppComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/PollenflugDetailViewComponent.html":{}}}],["werden",{"_index":498,"title":{},"body":{"components/CalibrationInfoDetailViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"interfaces/PollenType.html":{},"injectables/TextService.html":{},"interfaces/UserContext.html":{},"interfaces/UserIdentifikation.html":{}}}],["wert",{"_index":501,"title":{},"body":{"components/CalibrationInfoDetailViewComponent.html":{}}}],["wetter",{"_index":1074,"title":{},"body":{"components/ForecastDetailViewComponent.html":{},"components/HistoryDetailViewComponent.html":{}}}],["wetteraufzeichnung",{"_index":1398,"title":{},"body":{"components/HistoryDetailViewComponent.html":{}}}],["wetterbeobachtung",{"_index":1397,"title":{},"body":{"components/HistoryDetailViewComponent.html":{}}}],["wetterentwicklung",{"_index":1063,"title":{},"body":{"components/ForecastDetailViewComponent.html":{}}}],["wettererscheinungen",{"_index":1111,"title":{},"body":{"components/ForecastDetailViewComponent.html":{}}}],["wetterradaren",{"_index":1425,"title":{},"body":{"components/HistoryDetailViewComponent.html":{}}}],["wetters",{"_index":2264,"title":{},"body":{"components/PollenflugDetailViewComponent.html":{}}}],["wetterstation",{"_index":66,"title":{},"body":{"components/AppComponent.html":{},"injectables/LocalStorageService.html":{},"miscellaneous/variables.html":{}}}],["wetterstationen",{"_index":1403,"title":{},"body":{"components/HistoryDetailViewComponent.html":{}}}],["wettervorhersage",{"_index":1095,"title":{},"body":{"components/ForecastDetailViewComponent.html":{}}}],["wettervorhersagen",{"_index":2001,"title":{},"body":{"components/OutdoorWeatherDetailViewComponent.html":{}}}],["whichever",{"_index":326,"title":{},"body":{"modules/AppModule.html":{}}}],["white",{"_index":875,"title":{},"body":{"components/ConfigurationTilePopUpDialogView.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/PollenTagElementComponent.html":{}}}],["wichtige",{"_index":1730,"title":{},"body":{"components/IndoorDetailViewComponent.html":{}}}],["widget",{"_index":381,"title":{},"body":{"components/ApparentTemperatureTileViewComponent.html":{},"components/CardElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/DashboardViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"interfaces/GraphDataSet.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"interfaces/IndoorRoomData.html":{},"components/IndoorTileViewComponent.html":{},"interfaces/OutdoorWeatherData.html":{},"interfaces/PollenData.html":{},"components/SimpleTileViewComponent.html":{},"interfaces/Tile.html":{},"interfaces/TileArrays.html":{},"interfaces/WeatherData.html":{},"interfaces/WeatherForecastData.html":{},"interfaces/WeatherHistoryByDayData.html":{},"interfaces/WeatherHistoryData.html":{},"miscellaneous/enumerations.html":{}}}],["widgets",{"_index":517,"title":{},"body":{"components/CardElementComponent.html":{}}}],["width",{"_index":112,"title":{},"body":{"components/AppComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DashboardViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{},"miscellaneous/variables.html":{}}}],["wie",{"_index":1086,"title":{},"body":{"components/ForecastDetailViewComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"injectables/TextService.html":{}}}],["wieder",{"_index":2194,"title":{},"body":{"interfaces/PollenType.html":{},"interfaces/UserContext.html":{},"interfaces/UserIdentifikation.html":{}}}],["wiederholen",{"_index":2344,"title":{},"body":{"components/RegistrationViewComponent.html":{}}}],["wind",{"_index":1635,"title":{},"body":{"injectables/ImageService.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"injectables/TextService.html":{}}}],["windgeschwindigkeit",{"_index":2032,"title":{},"body":{"components/OutdoorWeatherDetailViewComponent.html":{}}}],["windig",{"_index":2489,"title":{},"body":{"injectables/TextService.html":{}}}],["window",{"_index":2071,"title":{},"body":{"components/OutdoorWeatherViewComponent.html":{}}}],["window.addeventlistener('scroll",{"_index":2077,"title":{},"body":{"components/OutdoorWeatherViewComponent.html":{}}}],["window.location.reload",{"_index":145,"title":{},"body":{"components/AppComponent.html":{}}}],["window.matchmedia(\"(prefers",{"_index":136,"title":{},"body":{"components/AppComponent.html":{}}}],["window.pageyoffset",{"_index":2080,"title":{},"body":{"components/OutdoorWeatherViewComponent.html":{}}}],["window.speechsynthesis",{"_index":2383,"title":{},"body":{"injectables/SpeechService.html":{}}}],["windstille",{"_index":2014,"title":{},"body":{"components/OutdoorWeatherDetailViewComponent.html":{}}}],["winter",{"_index":2026,"title":{},"body":{"components/OutdoorWeatherDetailViewComponent.html":{}}}],["wir",{"_index":95,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["wird",{"_index":1117,"title":{},"body":{"components/ForecastDetailViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"injectables/TextService.html":{}}}],["wissenschaftlich",{"_index":1718,"title":{},"body":{"components/IndoorDetailViewComponent.html":{}}}],["without",{"_index":1456,"title":{},"body":{"injectables/HistoryTileService.html":{}}}],["wlan",{"_index":1302,"title":{},"body":{"interfaces/GraphDataSet.html":{},"interfaces/IndoorRoomData.html":{},"interfaces/OutdoorWeatherData.html":{},"interfaces/PollenData.html":{},"interfaces/Tile.html":{},"interfaces/TileArrays.html":{},"interfaces/WeatherData.html":{},"interfaces/WeatherForecastData.html":{},"interfaces/WeatherHistoryByDayData.html":{},"interfaces/WeatherHistoryData.html":{}}}],["woche",{"_index":1392,"title":{},"body":{"components/HistoryDetailViewComponent.html":{}}}],["woher",{"_index":1999,"title":{},"body":{"components/OutdoorWeatherDetailViewComponent.html":{}}}],["wohl",{"_index":925,"title":{},"body":{"components/ConfigurationViewComponent.html":{}}}],["wohlbefinden",{"_index":1708,"title":{},"body":{"components/IndoorDetailViewComponent.html":{}}}],["wohnzimmer",{"_index":2911,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["wohnzimmer2",{"_index":2912,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["wolken",{"_index":2441,"title":{},"body":{"injectables/TextService.html":{}}}],["wolkenlos",{"_index":2437,"title":{},"body":{"injectables/TextService.html":{}}}],["word",{"_index":793,"title":{},"body":{"components/CheckboxSwitcherElementComponent.html":{}}}],["worker",{"_index":310,"title":{},"body":{"modules/AppModule.html":{},"interfaces/ESPConfiguration.html":{},"injectables/ESPConfigurationAPIService.html":{},"dependencies.html":{}}}],["worker.js",{"_index":317,"title":{},"body":{"modules/AppModule.html":{}}}],["worsening",{"_index":1658,"title":{},"body":{"injectables/ImageService.html":{},"injectables/TextService.html":{}}}],["wrap",{"_index":794,"title":{},"body":{"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTileViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DashboardViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/TtsPlayerElementComponent.html":{}}}],["wrapper",{"_index":931,"title":{},"body":{"components/DashboardScreenComponent.html":{},"components/DetailScreenComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/SettingsScreenComponent.html":{}}}],["wurde",{"_index":1419,"title":{},"body":{"components/HistoryDetailViewComponent.html":{}}}],["während",{"_index":492,"title":{},"body":{"components/CalibrationInfoDetailViewComponent.html":{}}}],["wärmebalance",{"_index":2046,"title":{},"body":{"components/OutdoorWeatherDetailViewComponent.html":{}}}],["wärmebelastung",{"_index":2039,"title":{},"body":{"components/OutdoorWeatherDetailViewComponent.html":{}}}],["xaxislabel",{"_index":1276,"title":{},"body":{"interfaces/GraphDataSet.html":{},"injectables/HistoryTileService.html":{},"interfaces/IndoorRoomData.html":{},"interfaces/OutdoorWeatherData.html":{},"interfaces/PollenData.html":{},"interfaces/Tile.html":{},"interfaces/TileArrays.html":{},"interfaces/WeatherData.html":{},"interfaces/WeatherForecastData.html":{},"interfaces/WeatherHistoryByDayData.html":{},"interfaces/WeatherHistoryData.html":{}}}],["xaxislabels",{"_index":1476,"title":{},"body":{"injectables/HistoryTileService.html":{}}}],["xaxislabels.push(this.gethourstring(lasthour",{"_index":1499,"title":{},"body":{"injectables/HistoryTileService.html":{}}}],["xaxislabels.push(this.getweekdaystringfromdate(lastdate",{"_index":1486,"title":{},"body":{"injectables/HistoryTileService.html":{}}}],["xaxislabels.reverse",{"_index":1542,"title":{},"body":{"injectables/HistoryTileService.html":{}}}],["year",{"_index":1201,"title":{},"body":{"interfaces/ForecastResponse.html":{},"injectables/HistoryTileService.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["yearstart",{"_index":1521,"title":{},"body":{"injectables/HistoryTileService.html":{}}}],["yearstart.valueof",{"_index":1524,"title":{},"body":{"injectables/HistoryTileService.html":{}}}],["yellow",{"_index":2174,"title":{},"body":{"components/PollenTagElementComponent.html":{}}}],["yield",{"_index":2176,"title":{},"body":{"components/PollenTagElementComponent.html":{}}}],["z",{"_index":1893,"title":{},"body":{"components/MenuBarElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"miscellaneous/variables.html":{}}}],["zambretti",{"_index":1054,"title":{},"body":{"components/ForecastDetailViewComponent.html":{}}}],["zeit",{"_index":1102,"title":{},"body":{"components/ForecastDetailViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"injectables/TextService.html":{}}}],["zeitraum",{"_index":1434,"title":{},"body":{"components/HistoryDetailViewComponent.html":{}}}],["ziel",{"_index":1094,"title":{},"body":{"components/ForecastDetailViewComponent.html":{}}}],["zimmer",{"_index":505,"title":{},"body":{"components/CalibrationInfoDetailViewComponent.html":{}}}],["zone.js",{"_index":2947,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":289,"title":{},"body":{"modules/AppModule.html":{},"modules/ScreensModule.html":{},"modules/UiElementsModule.html":{},"modules/ViewsModule.html":{},"overview.html":{}}}],["zu",{"_index":102,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"interfaces/PollenType.html":{},"components/PollenflugDetailViewComponent.html":{},"interfaces/UserContext.html":{},"interfaces/UserIdentifikation.html":{}}}],["zukünftigen",{"_index":1062,"title":{},"body":{"components/ForecastDetailViewComponent.html":{}}}],["zunehmend",{"_index":2228,"title":{},"body":{"components/PollenflugDetailViewComponent.html":{}}}],["zunehmender",{"_index":1072,"title":{},"body":{"components/ForecastDetailViewComponent.html":{}}}],["zur",{"_index":1059,"title":{},"body":{"components/ForecastDetailViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"injectables/TextService.html":{}}}],["zurückreichen",{"_index":1083,"title":{},"body":{"components/ForecastDetailViewComponent.html":{}}}],["zusammenhang",{"_index":2248,"title":{},"body":{"components/PollenflugDetailViewComponent.html":{}}}],["zusammenhänge",{"_index":1717,"title":{},"body":{"components/IndoorDetailViewComponent.html":{}}}],["zusätzlich",{"_index":1417,"title":{},"body":{"components/HistoryDetailViewComponent.html":{}}}],["zustandes",{"_index":1098,"title":{},"body":{"components/ForecastDetailViewComponent.html":{}}}],["zwischen",{"_index":2249,"title":{},"body":{"components/PollenflugDetailViewComponent.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                desktop\n                            \n                            \n                                message\n                            \n                            \n                                ThemeType\n                            \n                            \n                                title\n                            \n                            \n                                    Optional\n                                userContext\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clickedOutdoorWeatherView\n                            \n                            \n                                clickMe\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                prepareRoute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(renderer: Renderer2, userContextService: UserContextService, http: HttpClient, breakpointObserver: BreakpointObserver, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        renderer\n                                                  \n                                                        \n                                                                        Renderer2\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userContextService\n                                                  \n                                                        \n                                                                        UserContextService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        breakpointObserver\n                                                  \n                                                        \n                                                                    BreakpointObserver\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clickedOutdoorWeatherView\n                        \n                        \n                    \n                \n            \n            \n                \nclickedOutdoorWeatherView()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clickMe\n                        \n                        \n                    \n                \n            \n            \n                \nclickMe()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:96\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            prepareRoute\n                        \n                        \n                    \n                \n            \n            \n                \nprepareRoute(outlet: RouterOutlet)\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    outlet\n                                    \n                                                RouterOutlet\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            desktop\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            message\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:95\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ThemeType\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : Themes\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'wetterstation'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            userContext\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserContext\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:19\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Renderer2 } from '@angular/core';\nimport { RouterOutlet } from '@angular/router';\nimport { UserContextService } from './services/user-context.service';\nimport { HttpClient } from \"@angular/common/http\";\nimport { Observable } from 'rxjs';\nimport { routeTransitionAnimations } from './route-transition-animation';\nimport { Themes, UserContext } from './model/user-context';\nimport { Router } from '@angular/router';\nimport { BreakpointObserver, BreakpointState} from '@angular/cdk/layout';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n  animations: [routeTransitionAnimations],\n})\nexport class AppComponent {\n  title = 'wetterstation';\n  userContext?: UserContext\n  ThemeType = Themes;\n  desktop: boolean = false;\n\n  constructor(private renderer: Renderer2,\n              private userContextService: UserContextService,\n              private http: HttpClient,\n              private breakpointObserver: BreakpointObserver,\n              private router: Router) { }\n\n  ngOnInit(): void {\n    this.loadDefaultFontSize();\n    this.loadUserContext();\n    this.listenToThemeChange();  \n    this.desktopBreakpointObserver();\n  }\n\n\n  ngOnChanges(): void {\n    this.loadDefaultFontSize() // Brauchen wir das?\n  }\n\n  prepareRoute(outlet: RouterOutlet) {\n    return outlet && outlet.activatedRouteData && outlet.activatedRouteData['animationState'];\n  }\n\n  clickedOutdoorWeatherView() {\n    this.router.navigateByUrl('/dashboard'); //FIXME: Zu detail screen wenn schon in Dashboard ansicht\n  }\n\n  private desktopBreakpointObserver() {\n    this.breakpointObserver\n    .observe(['(min-width: 770px)'])\n    .subscribe((state: BreakpointState) => {\n      if (state.matches) {\n        this.desktop = true;\n      } else {\n        this.desktop = false;\n      }\n    });\n  }\n\n  private loadDefaultFontSize() {\n    this.userContextService.getUserContextSubject()\n    .subscribe(data => {\n      let fontSize = data.fontSize\n      this.setDefaultFontSize(fontSize);\n      });\n  }\n\n  private loadUserContext() {\n    this.userContextService.refreshUserContextIfNeeded().subscribe();\n    this.userContextService.getUserContextSubject()\n    .subscribe(data => this.userContext = data);\n  }\n\n  private setDefaultFontSize(fontSize: number) {\n    this.renderer.setStyle(document.body, \"font-size\", fontSize + \"%\");  \n  }\n\n  private listenToThemeChange(){\n    const query1 = window.matchMedia(\"(prefers-color-scheme: dark)\")\n    const query2 = window.matchMedia(\"(prefers-color-scheme: ligth)\")\n\n    query1.addEventListener( \"change\", (e) => {\n      window.location.reload();\n    });\n    query2.addEventListener( \"change\", (e) => {\n      window.location.reload();\n    });\n\n    // FIXME: Bug wenn von Explizit Dark Mode auf Autoatic Mode switch -> Reload needed!\n  }\n  \n  //Dummy - delete all below\n  \n  message: string = \"\";\n  clickMe(): void{\n    var schmurx : Observable = this.http.post(\"http://localhost:4201/v1/auth/login\", {\"username\":\"admin\", \"password\":\"admin\"});\n    \n    schmurx.subscribe((res) => {\n      console.log(res);\n      this.message = res[\"message\"]\n    })\n  }\n}\n\n    \n\n    \n        \n  \n    \n  \n  \n  \n  \n  \n\n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                .main-container {\n    min-height: 100vh;\n}\n.container {\n    // padding: var(--border-padding-top) var(--border-padding-right) 0 var(--border-padding-left);\n    background-color: var(--background);\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                '\n    var COMPONENTS = [{'name': 'ApparentTemperatureTileViewComponent', 'selector': 'app-apparent-temperature-tile-view'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BackButtonElementComponent', 'selector': 'app-back-button-element'},{'name': 'CalibrationInfoDetailViewComponent', 'selector': 'app-calibration-info-detail-view'},{'name': 'CardElementComponent', 'selector': 'card-element'},{'name': 'CheckboxSwitcherElementComponent', 'selector': 'app-checkbox-switcher-element'},{'name': 'ConfigurationTilePopUpDialogView', 'selector': 'configuration-tile-popup-view'},{'name': 'ConfigurationTileViewComponent', 'selector': 'app-configuration-tile-view'},{'name': 'ConfigurationViewComponent', 'selector': 'app-configuration-view'},{'name': 'DashboardScreenComponent', 'selector': 'app-dashboard-screen'},{'name': 'DashboardViewComponent', 'selector': 'app-dashboard-view'},{'name': 'DetailScreenComponent', 'selector': 'app-detail-screen'},{'name': 'ForecastDetailViewComponent', 'selector': 'app-forecast-detail-view'},{'name': 'ForecastTileViewComponent', 'selector': 'app-forecast-tile-view'},{'name': 'HistoryDetailViewComponent', 'selector': 'app-history-detail-view'},{'name': 'HistoryTileViewComponent', 'selector': 'app-history-tile-view'},{'name': 'HumidityTileViewComponent', 'selector': 'app-humidity-tile-view'},{'name': 'IndoorDetailViewComponent', 'selector': 'app-indoor-detail-view'},{'name': 'IndoorTileViewComponent', 'selector': 'app-indoor-tile-view'},{'name': 'LoginViewComponent', 'selector': 'app-login-view'},{'name': 'MenuBarElementComponent', 'selector': 'app-menu-bar-element'},{'name': 'MenuButtonElementComponent', 'selector': 'app-menu-button-element'},{'name': 'MenuElementComponent', 'selector': 'app-menu-element'},{'name': 'NavBarElementComponent', 'selector': 'app-nav-bar-element'},{'name': 'OnboardingScreenComponent', 'selector': 'app-onboarding-screen'},{'name': 'OpenAPELoginTileViewComponent', 'selector': 'app-open-apelogin-tile-view'},{'name': 'OutdoorWeatherDetailViewComponent', 'selector': 'app-outdoor-weather-detail-view'},{'name': 'OutdoorWeatherViewComponent', 'selector': 'app-outdoor-weather-view'},{'name': 'PersonalizationSettingsViewComponent', 'selector': 'app-personalization-settings-view'},{'name': 'PersonalizationViewComponent', 'selector': 'app-personalization-view'},{'name': 'PollenflugDetailViewComponent', 'selector': 'app-pollenflug-detail-view'},{'name': 'PollenflugSmallTileComponent', 'selector': 'app-pollenflug-small-tile'},{'name': 'PollenflugTileViewComponent', 'selector': 'app-pollenflug-tile-view'},{'name': 'PollenListElementComponent', 'selector': 'app-pollen-list-element'},{'name': 'PollenTagElementComponent', 'selector': 'app-pollen-tag-element'},{'name': 'ProgressChartElementComponent', 'selector': 'app-progress-chart-element'},{'name': 'RegistrationViewComponent', 'selector': 'app-registration-view'},{'name': 'SettingsScreenComponent', 'selector': 'app-settings-screen'},{'name': 'SimpleTileViewComponent', 'selector': 'app-simple-tile-view'},{'name': 'SliderElementComponent', 'selector': 'app-slider-element'},{'name': 'TtsPlayerElementComponent', 'selector': 'app-tts-player-element'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nScreensModule\n\nScreensModule\n\nAppModule -->\n\nScreensModule->AppModule\n\n\n\n\n\nUiElementsModule\n\nUiElementsModule\n\nAppModule -->\n\nUiElementsModule->AppModule\n\n\n\n\n\nViewsModule\n\nViewsModule\n\nAppModule -->\n\nViewsModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                            ScreensModule\n                        \n                        \n                            UiElementsModule\n                        \n                        \n                            ViewsModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { HttpClientModule } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { UiElementsModule } from './components/ui-elements/ui-elements.module';\nimport { ScreensModule } from './components/screens/screens.module';\nimport { ViewsModule } from './components/views/views.module';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { ServiceWorkerModule } from '@angular/service-worker';\nimport { environment } from '../environments/environment';\nimport { NgxSpinnerModule } from \"ngx-spinner\";\n\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    UiElementsModule,\n    ScreensModule,\n    ViewsModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    NgxSpinnerModule,\n    ServiceWorkerModule.register('ngsw-worker.js', {\n      enabled: environment.production,\n      // Register the ServiceWorker as soon as the app is stable\n      // or after 30 seconds (whichever comes first).\n      registrationStrategy: 'registerWhenStable:30000'\n    }),\n  ],\n  providers: [\n    \n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { DashboardScreenComponent } from './components/screens/dashboard-screen/dashboard-screen.component';\nimport { DetailScreenComponent } from './components/screens/detail-screen/detail-screen.component';\nimport { OnboardingScreenComponent } from './components/screens/onboarding-screen/onboarding-screen.component';\nimport { SettingsScreenComponent } from './components/screens/settings-screen/settings-screen.component';\nimport { CalibrationInfoDetailViewComponent } from './components/views/calibration-info-detail-view/calibration-info-detail-view.component';\nimport { ConfigurationViewComponent } from './components/views/configuration-view/configuration-view.component';\nimport { ForecastDetailViewComponent } from './components/views/forecast-detail-view/forecast-detail-view.component';\nimport { HistoryDetailViewComponent } from './components/views/history-detail-view/history-detail-view.component';\nimport { IndoorDetailViewComponent } from './components/views/indoor-detail-view/indoor-detail-view.component';\nimport { LoginViewComponent } from './components/views/login-view/login-view.component';\nimport { OutdoorWeatherDetailViewComponent } from './components/views/outdoor-weather-detail-view/outdoor-weather-detail-view.component';\nimport { PersonalizationSettingsViewComponent } from './components/views/personalization-settings-view/personalization-settings-view.component';\nimport { PersonalizationViewComponent } from './components/views/personalization-view/personalization-view.component';\nimport { PollenflugDetailViewComponent } from './components/views/pollenflug-detail-view/pollenflug-detail-view.component';\nimport { RegistrationViewComponent } from './components/views/registration-view/registration-view.component';\n\nconst routes: Routes = [\n  { path: 'dashboard', \n    component: DashboardScreenComponent, \n    data: { animationState: 'Dashboard' }\n  },\n  { path: 'detail', \n    component: DetailScreenComponent,  \n    children: [\n      {\n        path: 'indoorrooms',\n        component: IndoorDetailViewComponent, \n      },\n      {\n        path: 'forecast',\n        component: ForecastDetailViewComponent, \n      },\n      {\n        path: 'pollen',\n        component: PollenflugDetailViewComponent, \n      },\n      {\n        path: 'history',\n        component: HistoryDetailViewComponent, \n      },\n      {\n        path: 'outdoor',\n        component: OutdoorWeatherDetailViewComponent, \n      },\n    ], \n    data: { animationState: 'Detail' }\n  },\n  { path: 'settings', \n    component: SettingsScreenComponent, \n    children: [\n      {\n        path: 'configuration',\n        component: ConfigurationViewComponent, \n        data: { animationState: 'Configuration' }\n      },\n      {\n        path: 'personalization',\n        component: PersonalizationViewComponent, \n      },\n      {\n        path: 'calibration-info',\n        component: CalibrationInfoDetailViewComponent, \n        data: { animationState: 'Calibration' }\n      },\n    ], \n    data: { animationState: 'Detail' }\n  },\n  { path: 'onboarding', \n    component: OnboardingScreenComponent, \n    children: [\n      {\n        path: 'login',\n        component: LoginViewComponent, \n        data: { animationState: 'Login' }\n      },\n      {\n        path: 'registration',\n        component: RegistrationViewComponent, \n        data: { animationState: 'Registration' }\n      },\n      {\n        path: 'personalization',\n        component: PersonalizationViewComponent, \n        data: { animationState: 'Personalization' }\n      },\n    ], \n    data: { animationState: 'Detail' }\n  },\n  { path: '', redirectTo: '/dashboard', pathMatch: 'full' },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, \n    { scrollPositionRestoration: 'top' }\n    )],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ApparentTemperatureTileViewComponent.html":{"url":"components/ApparentTemperatureTileViewComponent.html","title":"component - ApparentTemperatureTileViewComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ApparentTemperatureTileViewComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/views/apparent-temperature-tile-view/apparent-temperature-tile-view.component.ts\n\n\n    \n        Description\n    \n    \n        Apparent temperature tile view component\nThis component displays in form of a tile (widget) the apparent \ntemperature information. It takes an object of the type\nWeatherData as information source. Itself has no connection to any\nservice. It uses the card-view-element to define the layout.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-apparent-temperature-tile-view\n            \n\n            \n                styleUrls\n                ./apparent-temperature-tile-view.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./apparent-temperature-tile-view.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                _apparentTemperature\n                            \n                            \n                                cardSizeType\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                hideSubtitle\n                            \n                            \n                                pressable\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    data\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/views/apparent-temperature-tile-view/apparent-temperature-tile-view.component.ts:27\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        data\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/views/apparent-temperature-tile-view/apparent-temperature-tile-view.component.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        hideSubtitle\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/views/apparent-temperature-tile-view/apparent-temperature-tile-view.component.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        pressable\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/views/apparent-temperature-tile-view/apparent-temperature-tile-view.component.ts:19\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/views/apparent-temperature-tile-view/apparent-temperature-tile-view.component.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            _apparentTemperature\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/views/apparent-temperature-tile-view/apparent-temperature-tile-view.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cardSizeType\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : CardSize\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/views/apparent-temperature-tile-view/apparent-temperature-tile-view.component.ts:27\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        data\n                    \n                \n\n\n                \n                    \n                        setdata(data)\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/views/apparent-temperature-tile-view/apparent-temperature-tile-view.component.ts:22\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            data\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { OutdoorWeatherData, WeatherData } from 'src/app/model/weather';\nimport { CardSize } from '../../ui-elements/card-element/card-element.component';\n\n/**\n * Apparent temperature tile view component\n * \n * This component displays in form of a tile (widget) the apparent \n * temperature information. It takes an object of the type\n * WeatherData as information source. Itself has no connection to any\n * service. It uses the card-view-element to define the layout.\n */\n@Component({\n  selector: 'app-apparent-temperature-tile-view',\n  templateUrl: './apparent-temperature-tile-view.component.html',\n  styleUrls: ['./apparent-temperature-tile-view.component.scss']\n})\nexport class ApparentTemperatureTileViewComponent implements OnInit {\n  @Input() pressable: boolean = false;\n  @Input() hideSubtitle = false;\n  @Input()\n  set data(data: WeatherData) {\n    let outdoorWeatherData = data as OutdoorWeatherData\n    this._apparentTemperature = outdoorWeatherData.apparentTemperature;\n  }\n  _apparentTemperature?: number;\n  cardSizeType = CardSize;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        \n    \n        {{_apparentTemperature}}°  \n    \n\n    \n\n    \n                \n                    ./apparent-temperature-tile-view.component.scss\n                \n                h1 {\n    margin: 0;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{_apparentTemperature}}°      '\n    var COMPONENTS = [{'name': 'ApparentTemperatureTileViewComponent', 'selector': 'app-apparent-temperature-tile-view'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BackButtonElementComponent', 'selector': 'app-back-button-element'},{'name': 'CalibrationInfoDetailViewComponent', 'selector': 'app-calibration-info-detail-view'},{'name': 'CardElementComponent', 'selector': 'card-element'},{'name': 'CheckboxSwitcherElementComponent', 'selector': 'app-checkbox-switcher-element'},{'name': 'ConfigurationTilePopUpDialogView', 'selector': 'configuration-tile-popup-view'},{'name': 'ConfigurationTileViewComponent', 'selector': 'app-configuration-tile-view'},{'name': 'ConfigurationViewComponent', 'selector': 'app-configuration-view'},{'name': 'DashboardScreenComponent', 'selector': 'app-dashboard-screen'},{'name': 'DashboardViewComponent', 'selector': 'app-dashboard-view'},{'name': 'DetailScreenComponent', 'selector': 'app-detail-screen'},{'name': 'ForecastDetailViewComponent', 'selector': 'app-forecast-detail-view'},{'name': 'ForecastTileViewComponent', 'selector': 'app-forecast-tile-view'},{'name': 'HistoryDetailViewComponent', 'selector': 'app-history-detail-view'},{'name': 'HistoryTileViewComponent', 'selector': 'app-history-tile-view'},{'name': 'HumidityTileViewComponent', 'selector': 'app-humidity-tile-view'},{'name': 'IndoorDetailViewComponent', 'selector': 'app-indoor-detail-view'},{'name': 'IndoorTileViewComponent', 'selector': 'app-indoor-tile-view'},{'name': 'LoginViewComponent', 'selector': 'app-login-view'},{'name': 'MenuBarElementComponent', 'selector': 'app-menu-bar-element'},{'name': 'MenuButtonElementComponent', 'selector': 'app-menu-button-element'},{'name': 'MenuElementComponent', 'selector': 'app-menu-element'},{'name': 'NavBarElementComponent', 'selector': 'app-nav-bar-element'},{'name': 'OnboardingScreenComponent', 'selector': 'app-onboarding-screen'},{'name': 'OpenAPELoginTileViewComponent', 'selector': 'app-open-apelogin-tile-view'},{'name': 'OutdoorWeatherDetailViewComponent', 'selector': 'app-outdoor-weather-detail-view'},{'name': 'OutdoorWeatherViewComponent', 'selector': 'app-outdoor-weather-view'},{'name': 'PersonalizationSettingsViewComponent', 'selector': 'app-personalization-settings-view'},{'name': 'PersonalizationViewComponent', 'selector': 'app-personalization-view'},{'name': 'PollenflugDetailViewComponent', 'selector': 'app-pollenflug-detail-view'},{'name': 'PollenflugSmallTileComponent', 'selector': 'app-pollenflug-small-tile'},{'name': 'PollenflugTileViewComponent', 'selector': 'app-pollenflug-tile-view'},{'name': 'PollenListElementComponent', 'selector': 'app-pollen-list-element'},{'name': 'PollenTagElementComponent', 'selector': 'app-pollen-tag-element'},{'name': 'ProgressChartElementComponent', 'selector': 'app-progress-chart-element'},{'name': 'RegistrationViewComponent', 'selector': 'app-registration-view'},{'name': 'SettingsScreenComponent', 'selector': 'app-settings-screen'},{'name': 'SimpleTileViewComponent', 'selector': 'app-simple-tile-view'},{'name': 'SliderElementComponent', 'selector': 'app-slider-element'},{'name': 'TtsPlayerElementComponent', 'selector': 'app-tts-player-element'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ApparentTemperatureTileViewComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BackButtonElementComponent.html":{"url":"components/BackButtonElementComponent.html","title":"component - BackButtonElementComponent","body":"\n                   \n\n\n\n\n\n  Components\n  BackButtonElementComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/ui-elements/back-button-element/back-button-element.component.ts\n\n\n    \n        Description\n    \n    \n        Back button element component\nThis component is the back button which is displayed \nin the nav bar element.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-back-button-element\n            \n\n            \n                styleUrls\n                ./back-button-element.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./back-button-element.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                backIconModel\n                            \n                            \n                                    Public\n                                imageService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                goBack\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                label\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(location: Location, imageService: ImageService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/ui-elements/back-button-element/back-button-element.component.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        location\n                                                  \n                                                        \n                                                                        Location\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        imageService\n                                                  \n                                                        \n                                                                        ImageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/ui-elements/back-button-element/back-button-element.component.ts:18\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            goBack\n                        \n                        \n                    \n                \n            \n            \n                \ngoBack()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/ui-elements/back-button-element/back-button-element.component.ts:32\n                \n            \n\n\n            \n                \n                    Opens the page before.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/ui-elements/back-button-element/back-button-element.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            backIconModel\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ImageModel\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    light: \"back-button.svg\",\n    dark: \"back-button.svg\",\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/ui-elements/back-button-element/back-button-element.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            imageService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ImageService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/ui-elements/back-button-element/back-button-element.component.ts:24\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { Location } from '@angular/common';\nimport { ImageService } from 'src/app/services/image.service';\nimport { ImageModel } from 'src/app/model/image';\n\n/**\n * Back button element component\n * \n * This component is the back button which is displayed \n * in the nav bar element.\n */\n@Component({\n  selector: 'app-back-button-element',\n  templateUrl: './back-button-element.component.html',\n  styleUrls: ['./back-button-element.component.scss']\n})\nexport class BackButtonElementComponent implements OnInit {\n  @Input() label?: string;\n  backIconModel: ImageModel = {\n    light: \"back-button.svg\",\n    dark: \"back-button.svg\",\n  }\n  constructor(private location: Location,\n    public imageService: ImageService) { }\n\n  ngOnInit(): void {\n  }\n\n  /**\n   * Opens the page before.\n   */\n  goBack(): void {\n    this.location.back();\n  }\n\n}\n\n    \n\n    \n        \n    \n    \n        {{label}}\n    \n\n    \n\n    \n                \n                    ./back-button-element.component.scss\n                \n                .back-button {\n    margin: 0;\n    padding: 0;\n    border: none;\n\n    display: flex;\n    align-items: center;\n    justify-content: center;\n}\n\n.back-image {\n    padding-right: 10px;\n    height: 1.7em; \n}\n\n.back-label {\n    font-weight: 700;\n    letter-spacing: 0.05em;\n    color: var(--secondary);\n}\n\nbutton {\n    font-size: 1.0em;\n}\n\n.back-image * {\n    fill: var(--secondary);\n    stroke: var(--secondary);\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                {{label}}    '\n    var COMPONENTS = [{'name': 'ApparentTemperatureTileViewComponent', 'selector': 'app-apparent-temperature-tile-view'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BackButtonElementComponent', 'selector': 'app-back-button-element'},{'name': 'CalibrationInfoDetailViewComponent', 'selector': 'app-calibration-info-detail-view'},{'name': 'CardElementComponent', 'selector': 'card-element'},{'name': 'CheckboxSwitcherElementComponent', 'selector': 'app-checkbox-switcher-element'},{'name': 'ConfigurationTilePopUpDialogView', 'selector': 'configuration-tile-popup-view'},{'name': 'ConfigurationTileViewComponent', 'selector': 'app-configuration-tile-view'},{'name': 'ConfigurationViewComponent', 'selector': 'app-configuration-view'},{'name': 'DashboardScreenComponent', 'selector': 'app-dashboard-screen'},{'name': 'DashboardViewComponent', 'selector': 'app-dashboard-view'},{'name': 'DetailScreenComponent', 'selector': 'app-detail-screen'},{'name': 'ForecastDetailViewComponent', 'selector': 'app-forecast-detail-view'},{'name': 'ForecastTileViewComponent', 'selector': 'app-forecast-tile-view'},{'name': 'HistoryDetailViewComponent', 'selector': 'app-history-detail-view'},{'name': 'HistoryTileViewComponent', 'selector': 'app-history-tile-view'},{'name': 'HumidityTileViewComponent', 'selector': 'app-humidity-tile-view'},{'name': 'IndoorDetailViewComponent', 'selector': 'app-indoor-detail-view'},{'name': 'IndoorTileViewComponent', 'selector': 'app-indoor-tile-view'},{'name': 'LoginViewComponent', 'selector': 'app-login-view'},{'name': 'MenuBarElementComponent', 'selector': 'app-menu-bar-element'},{'name': 'MenuButtonElementComponent', 'selector': 'app-menu-button-element'},{'name': 'MenuElementComponent', 'selector': 'app-menu-element'},{'name': 'NavBarElementComponent', 'selector': 'app-nav-bar-element'},{'name': 'OnboardingScreenComponent', 'selector': 'app-onboarding-screen'},{'name': 'OpenAPELoginTileViewComponent', 'selector': 'app-open-apelogin-tile-view'},{'name': 'OutdoorWeatherDetailViewComponent', 'selector': 'app-outdoor-weather-detail-view'},{'name': 'OutdoorWeatherViewComponent', 'selector': 'app-outdoor-weather-view'},{'name': 'PersonalizationSettingsViewComponent', 'selector': 'app-personalization-settings-view'},{'name': 'PersonalizationViewComponent', 'selector': 'app-personalization-view'},{'name': 'PollenflugDetailViewComponent', 'selector': 'app-pollenflug-detail-view'},{'name': 'PollenflugSmallTileComponent', 'selector': 'app-pollenflug-small-tile'},{'name': 'PollenflugTileViewComponent', 'selector': 'app-pollenflug-tile-view'},{'name': 'PollenListElementComponent', 'selector': 'app-pollen-list-element'},{'name': 'PollenTagElementComponent', 'selector': 'app-pollen-tag-element'},{'name': 'ProgressChartElementComponent', 'selector': 'app-progress-chart-element'},{'name': 'RegistrationViewComponent', 'selector': 'app-registration-view'},{'name': 'SettingsScreenComponent', 'selector': 'app-settings-screen'},{'name': 'SimpleTileViewComponent', 'selector': 'app-simple-tile-view'},{'name': 'SliderElementComponent', 'selector': 'app-slider-element'},{'name': 'TtsPlayerElementComponent', 'selector': 'app-tts-player-element'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'BackButtonElementComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CalibrationInfoDetailViewComponent.html":{"url":"components/CalibrationInfoDetailViewComponent.html","title":"component - CalibrationInfoDetailViewComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CalibrationInfoDetailViewComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/views/calibration-info-detail-view/calibration-info-detail-view.component.ts\n\n\n    \n        Description\n    \n    \n        Calibration info detail view component\nThis component displays an information text about the \ncalibration process. It has no logic, only a button which can be\npressed. If the button is pressed, it will redirect the\nuser back to the dashboard.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-calibration-info-detail-view\n            \n\n            \n                styleUrls\n                ./calibration-info-detail-view.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./calibration-info-detail-view.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                gotIt\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/views/calibration-info-detail-view/calibration-info-detail-view.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            gotIt\n                        \n                        \n                    \n                \n            \n            \n                \ngotIt()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/views/calibration-info-detail-view/calibration-info-detail-view.component.ts:27\n                \n            \n\n\n            \n                \n                    Redirects to the dashboard screen\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/views/calibration-info-detail-view/calibration-info-detail-view.component.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n/**\n * Calibration info detail view component\n * \n * This component displays an information text about the \n * calibration process. It has no logic, only a button which can be\n * pressed. If the button is pressed, it will redirect the\n * user back to the dashboard.\n */\n@Component({\n  selector: 'app-calibration-info-detail-view',\n  templateUrl: './calibration-info-detail-view.component.html',\n  styleUrls: ['./calibration-info-detail-view.component.scss']\n})\nexport class CalibrationInfoDetailViewComponent implements OnInit {\n\n  constructor(private router: Router) { }\n\n  ngOnInit(): void {\n  }\n\n  /**\n   * Redirects to the dashboard screen\n   */\n  gotIt(): void {\n    this.router.navigateByUrl('/dashboard');\n  }\n}\n\n    \n\n    \n        \n    \n       \n        Du hast die Sensorkalibrierung gestartet.\n        \n        Bitte öffne während der Sensorkalibrierung dein Fenster, sodass gemessen werden kann, welchen Wert die optimale Luftqualität in deinem Zimmer hat.\n        Die Kalibrierung dauert ca. 4h.\n        Habe ich verstanden\n    \n\n    \n\n    \n                \n                    ./calibration-info-detail-view.component.scss\n                \n                .container {\n    padding-top: var(--navbar-height);\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                   Du hast die Sensorkalibrierung gestartet.                Bitte öffne während der Sensorkalibrierung dein Fenster, sodass gemessen werden kann, welchen Wert die optimale Luftqualität in deinem Zimmer hat.        Die Kalibrierung dauert ca. 4h.        Habe ich verstanden    '\n    var COMPONENTS = [{'name': 'ApparentTemperatureTileViewComponent', 'selector': 'app-apparent-temperature-tile-view'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BackButtonElementComponent', 'selector': 'app-back-button-element'},{'name': 'CalibrationInfoDetailViewComponent', 'selector': 'app-calibration-info-detail-view'},{'name': 'CardElementComponent', 'selector': 'card-element'},{'name': 'CheckboxSwitcherElementComponent', 'selector': 'app-checkbox-switcher-element'},{'name': 'ConfigurationTilePopUpDialogView', 'selector': 'configuration-tile-popup-view'},{'name': 'ConfigurationTileViewComponent', 'selector': 'app-configuration-tile-view'},{'name': 'ConfigurationViewComponent', 'selector': 'app-configuration-view'},{'name': 'DashboardScreenComponent', 'selector': 'app-dashboard-screen'},{'name': 'DashboardViewComponent', 'selector': 'app-dashboard-view'},{'name': 'DetailScreenComponent', 'selector': 'app-detail-screen'},{'name': 'ForecastDetailViewComponent', 'selector': 'app-forecast-detail-view'},{'name': 'ForecastTileViewComponent', 'selector': 'app-forecast-tile-view'},{'name': 'HistoryDetailViewComponent', 'selector': 'app-history-detail-view'},{'name': 'HistoryTileViewComponent', 'selector': 'app-history-tile-view'},{'name': 'HumidityTileViewComponent', 'selector': 'app-humidity-tile-view'},{'name': 'IndoorDetailViewComponent', 'selector': 'app-indoor-detail-view'},{'name': 'IndoorTileViewComponent', 'selector': 'app-indoor-tile-view'},{'name': 'LoginViewComponent', 'selector': 'app-login-view'},{'name': 'MenuBarElementComponent', 'selector': 'app-menu-bar-element'},{'name': 'MenuButtonElementComponent', 'selector': 'app-menu-button-element'},{'name': 'MenuElementComponent', 'selector': 'app-menu-element'},{'name': 'NavBarElementComponent', 'selector': 'app-nav-bar-element'},{'name': 'OnboardingScreenComponent', 'selector': 'app-onboarding-screen'},{'name': 'OpenAPELoginTileViewComponent', 'selector': 'app-open-apelogin-tile-view'},{'name': 'OutdoorWeatherDetailViewComponent', 'selector': 'app-outdoor-weather-detail-view'},{'name': 'OutdoorWeatherViewComponent', 'selector': 'app-outdoor-weather-view'},{'name': 'PersonalizationSettingsViewComponent', 'selector': 'app-personalization-settings-view'},{'name': 'PersonalizationViewComponent', 'selector': 'app-personalization-view'},{'name': 'PollenflugDetailViewComponent', 'selector': 'app-pollenflug-detail-view'},{'name': 'PollenflugSmallTileComponent', 'selector': 'app-pollenflug-small-tile'},{'name': 'PollenflugTileViewComponent', 'selector': 'app-pollenflug-tile-view'},{'name': 'PollenListElementComponent', 'selector': 'app-pollen-list-element'},{'name': 'PollenTagElementComponent', 'selector': 'app-pollen-tag-element'},{'name': 'ProgressChartElementComponent', 'selector': 'app-progress-chart-element'},{'name': 'RegistrationViewComponent', 'selector': 'app-registration-view'},{'name': 'SettingsScreenComponent', 'selector': 'app-settings-screen'},{'name': 'SimpleTileViewComponent', 'selector': 'app-simple-tile-view'},{'name': 'SliderElementComponent', 'selector': 'app-slider-element'},{'name': 'TtsPlayerElementComponent', 'selector': 'app-tts-player-element'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CalibrationInfoDetailViewComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CardElementComponent.html":{"url":"components/CardElementComponent.html","title":"component - CardElementComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CardElementComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/ui-elements/card-element/card-element.component.ts\n\n\n    \n        Description\n    \n    \n        Card element component\nThis component defines the layout of the tiles (widgets).\nIt takes a subtitle and title. \n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                card-element\n            \n\n            \n                styleUrls\n                ./card-element.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./card-element.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                CardSize\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                cardSize\n                            \n                            \n                                hideSubtitle\n                            \n                            \n                                pressable\n                            \n                            \n                                subtitle\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/ui-elements/card-element/card-element.component.ts:20\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        cardSize\n                    \n                \n                \n                    \n                        Type :         CardSize\n\n                    \n                \n                \n                    \n                        Default value : CardSize.auto\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/ui-elements/card-element/card-element.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        hideSubtitle\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/ui-elements/card-element/card-element.component.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        pressable\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/ui-elements/card-element/card-element.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        subtitle\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/ui-elements/card-element/card-element.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        title\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/ui-elements/card-element/card-element.component.ts:15\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/ui-elements/card-element/card-element.component.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            CardSize\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : CardSize\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/ui-elements/card-element/card-element.component.ts:20\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\n\n/**\n * Card element component\n * \n * This component defines the layout of the tiles (widgets).\n * It takes a subtitle and title. \n */\n@Component({\n  selector: 'card-element',\n  templateUrl: './card-element.component.html',\n  styleUrls: ['./card-element.component.scss']\n})\nexport class CardElementComponent implements OnInit {\n  @Input() title?: string;\n  @Input() subtitle?: string;\n  @Input() pressable: boolean = false;\n  @Input() hideSubtitle: boolean = false;\n  @Input() cardSize: CardSize = CardSize.auto\n  CardSize = CardSize; // Enum\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n/**\n * The size of the widget can be changed through using this\n * enum values. \n */\nexport enum CardSize {\n  small, // Sets the size of the card to fixed small values\n  auto // Card grows on his own behalf\n}\n\n    \n\n    \n        \n    \n        {{subtitle}}\n        {{title}}\n        \n    \n\n    \n\n    \n                \n                    ./card-element.component.scss\n                \n                .container {\n    border-radius: var(--corner-radius);\n    background-color: var(--surface);\n    padding: var(--padding);\n    margin: var(--padding) 0 0 0;\n    width: auto;\n    height: auto;\n    border: 1px solid var(--border);\n}\n\n.flex-child-container {\n    width: calc((100vw - var(--border-padding-left) - var(--border-padding-right)));\n}\n\n.flex-child-container.small {\n    width: calc(((100vw) - var(--border-padding-left) - var(--border-padding-right)) / 2 - var(--padding) / 2);\n}\n\n// CSS for big screens\n@media (min-width: 1000px) {\n    .flex-child-container {\n        width: calc((100vw - var(--border-padding-left) - var(--border-padding-right)) / 2 - var(--padding) / 2);\n    }\n    \n    .flex-child-container.small {\n        width: calc(((100vw) - var(--border-padding-left) - var(--border-padding-right)) / 4 - var(--padding) / 2);\n    }\n}\n\np {\n    color: var(--secondary);\n    letter-spacing: var(--letter-spacing);\n}\n\nh3 {\n    margin-top: calc(var(--padding) / 4);\n    margin-bottom: calc(var(--padding) / 2);\n}\n\n.pressable:active {\n    background-color: var(--pressed);\n}\n\n.shrink-on-hover {\n    vertical-align: middle;\n    -webkit-transform: perspective(1px) translateZ(0);\n    transform: perspective(1px) translateZ(0);\n    box-shadow: 0 0 1px rgba(0, 0, 0, 0);\n    -webkit-transition-duration: 0.3s;\n    transition-duration: 0.3s;\n    -webkit-transition-property: transform;\n    transition-property: transform;\n  }\n.shrink-on-hover:hover, .shrink-on-hover:focus, .shrink-on-hover:active {\n    -webkit-transform: scale(0.97);\n    transform: scale(0.97);\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{subtitle}}        {{title}}            '\n    var COMPONENTS = [{'name': 'ApparentTemperatureTileViewComponent', 'selector': 'app-apparent-temperature-tile-view'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BackButtonElementComponent', 'selector': 'app-back-button-element'},{'name': 'CalibrationInfoDetailViewComponent', 'selector': 'app-calibration-info-detail-view'},{'name': 'CardElementComponent', 'selector': 'card-element'},{'name': 'CheckboxSwitcherElementComponent', 'selector': 'app-checkbox-switcher-element'},{'name': 'ConfigurationTilePopUpDialogView', 'selector': 'configuration-tile-popup-view'},{'name': 'ConfigurationTileViewComponent', 'selector': 'app-configuration-tile-view'},{'name': 'ConfigurationViewComponent', 'selector': 'app-configuration-view'},{'name': 'DashboardScreenComponent', 'selector': 'app-dashboard-screen'},{'name': 'DashboardViewComponent', 'selector': 'app-dashboard-view'},{'name': 'DetailScreenComponent', 'selector': 'app-detail-screen'},{'name': 'ForecastDetailViewComponent', 'selector': 'app-forecast-detail-view'},{'name': 'ForecastTileViewComponent', 'selector': 'app-forecast-tile-view'},{'name': 'HistoryDetailViewComponent', 'selector': 'app-history-detail-view'},{'name': 'HistoryTileViewComponent', 'selector': 'app-history-tile-view'},{'name': 'HumidityTileViewComponent', 'selector': 'app-humidity-tile-view'},{'name': 'IndoorDetailViewComponent', 'selector': 'app-indoor-detail-view'},{'name': 'IndoorTileViewComponent', 'selector': 'app-indoor-tile-view'},{'name': 'LoginViewComponent', 'selector': 'app-login-view'},{'name': 'MenuBarElementComponent', 'selector': 'app-menu-bar-element'},{'name': 'MenuButtonElementComponent', 'selector': 'app-menu-button-element'},{'name': 'MenuElementComponent', 'selector': 'app-menu-element'},{'name': 'NavBarElementComponent', 'selector': 'app-nav-bar-element'},{'name': 'OnboardingScreenComponent', 'selector': 'app-onboarding-screen'},{'name': 'OpenAPELoginTileViewComponent', 'selector': 'app-open-apelogin-tile-view'},{'name': 'OutdoorWeatherDetailViewComponent', 'selector': 'app-outdoor-weather-detail-view'},{'name': 'OutdoorWeatherViewComponent', 'selector': 'app-outdoor-weather-view'},{'name': 'PersonalizationSettingsViewComponent', 'selector': 'app-personalization-settings-view'},{'name': 'PersonalizationViewComponent', 'selector': 'app-personalization-view'},{'name': 'PollenflugDetailViewComponent', 'selector': 'app-pollenflug-detail-view'},{'name': 'PollenflugSmallTileComponent', 'selector': 'app-pollenflug-small-tile'},{'name': 'PollenflugTileViewComponent', 'selector': 'app-pollenflug-tile-view'},{'name': 'PollenListElementComponent', 'selector': 'app-pollen-list-element'},{'name': 'PollenTagElementComponent', 'selector': 'app-pollen-tag-element'},{'name': 'ProgressChartElementComponent', 'selector': 'app-progress-chart-element'},{'name': 'RegistrationViewComponent', 'selector': 'app-registration-view'},{'name': 'SettingsScreenComponent', 'selector': 'app-settings-screen'},{'name': 'SimpleTileViewComponent', 'selector': 'app-simple-tile-view'},{'name': 'SliderElementComponent', 'selector': 'app-slider-element'},{'name': 'TtsPlayerElementComponent', 'selector': 'app-tts-player-element'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CardElementComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CheckTokenResponse.html":{"url":"interfaces/CheckTokenResponse.html","title":"interface - CheckTokenResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CheckTokenResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/api/user-context-api.service.ts\n        \n\n            \n                Description\n            \n            \n                Model of the check token response\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        message\n                                \n                                \n                                        success\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        success\n                                    \n                                \n                                \n                                    \n                                        success:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { PollenType, Themes, UserContext, UserIdentifikation } from '../../model/user-context';\n\n/**\n * User context api service injectable\n * \n * Use this service to access the network. It implements all routes for \n * user context data\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserContextAPIService {\n  private loginURL = environment.baseURL + 'auth/login';\n  private registerURL = environment.baseURL + 'user/register';\n  private checkTokenURL = environment.baseURL + 'auth/checkToken';\n  private currentUserContextURL = environment.baseURL + 'user/currentUser';\n  private saveUserContextURL = environment.baseURL + 'user/save';\n  private allPollenTypesURL = environment.baseURL + 'pollen/all';\n  private deletePollenURL = environment.baseURL + 'allergies/delete';\n  private savePollenURL = environment.baseURL + 'allergies/save';\n  private openAPEURL = environment.baseURL + 'user/loadOpenAPESettingsAndSave';\n\n  constructor(private httpClient: HttpClient) { }\n\n  /**\n   * @returns an observable with the user identifikation and the user context\n   */\n  public postLogin(password: string, username: string): Observable {\n    let returnObservable = new Observable((observer) => {\n      let response = this.httpClient.post(this.loginURL, \n                                                        {username: username, password: password}, {observe: 'response'});\n      response.subscribe((response) => {\n        let body = response.body\n        if(body){\n          if(body.success) {\n            observer.next({\n              userID: {\n                token: body.token,\n                id: body.userContext.id\n              },\n              userContext: this.createUserContextFromServerResponse(body.userContext)\n            });\n          } else {\n            observer.error(body.message);\n          }\n        }\n      },\n      (error)=> {\n        observer.error(\"Ein Fehler ist aufgetreten. Bitte versuche es später erneut. \");\n        console.log(error);\n        observer.complete();\n      },() => {\n        observer.complete();\n      });\n    }\n  );\n  return returnObservable;\n  }\n\n  /**\n   * @returns an observable with an user context object\n   */\n  public postLoginOpenAPE(username: string, password: string, userID: UserIdentifikation): Observable {\n    let returnObservable = new Observable((observer) => {\n      let httpOptions = {\n        headers: new HttpHeaders({ 'Authorization': 'Bearer ' + userID.token }),\n      };\n      let response = this.httpClient.post(this.openAPEURL, \n                                                              {openApeUser: username, openApePassword: password}, httpOptions);\n      response.subscribe((response) => {\n        if(response){\n            observer.next(this.createUserContextFromServerResponse(response));\n        }\n      },\n      (error)=> {\n        observer.error(\"Ein Fehler ist aufgetreten. Bitte versuche es später erneut. \");\n        console.log(error);\n        observer.complete();\n      },() => {\n        observer.complete();\n      });\n    }\n  );\n  return returnObservable;\n  }\n\n  /**\n   * @returns an observable with a boolean if the register was successful or not\n   */\n  public postRegister(password: string, username: string): Observable {\n    let returnObservable = new Observable((observer) => {\n      let response = this.httpClient.post(this.registerURL, \n                                                              {username: username, password: password}, {observe: 'response'});\n      response.subscribe((response) => {\n        let body = response.body\n        if(body){\n          if(body.id) {\n            observer.next(true);\n          } else {\n            observer.error(\"Ein Fehler ist aufgetreten. Bitte versuche es später erneut\");\n          }\n        }\n      },\n      (error)=> {\n        observer.error(\"Ein Fehler ist aufgetreten. Bitte versuche es später erneut\");\n        console.log(error);\n        observer.complete();\n      },\n      () => {\n        observer.complete();\n      });\n    }\n  );\n  return returnObservable;\n  }\n\n  /**\n   * @returns an observable with a boolean if the saving user context was successful or not\n   */\n  public putSaveUserContext(userID: UserIdentifikation, userContext: UserContext): Observable{\n    let body = {\n      theme: Themes[userContext.theme],\n      fontSize: userContext.fontSize,\n      selfVoicingEnabled: userContext.selfVoicingEnabled,\n      doVentilationReminder: userContext.doVentilationReminder,\n      reduceMotion: userContext.reduceMotion\n    }\n    let httpOptions = {\n      headers: new HttpHeaders({ 'Authorization': 'Bearer ' + userID.token }),\n      params: new HttpParams().set('id', userID.id + ''),\n    };\n    let returnObservable = new Observable((observer) => {\n      let response = this.httpClient.put(this.saveUserContextURL, body, httpOptions);\n      response.subscribe((response) => {\n        let body = response\n        if(body && body.id) {\n          observer.next(true);\n        } else {\n          observer.error(\"POST - SAVE USER CONTEXT - Ein Fehler ist aufgetreten.\");\n        }\n      },\n      (error)=> {\n        observer.error(\"POST - SAVE USER CONTEXT - Ein Fehler ist aufgetreten.\");\n        console.log(error);\n        observer.complete();\n      }, \n      () => {\n        observer.complete();\n      });\n    });\n    return returnObservable;\n  }\n\n  /**\n   * @returns an observable with a boolean if the deletion user context was successful or not\n   */\n  public deletePolleFromUserContext(userID: UserIdentifikation, pollenID: number): Observable  {\n    let body = {\n      userID: userID.id,\n      pollenID: pollenID\n    }\n    let httpOptions = {\n      headers: new HttpHeaders({ 'Authorization': 'Bearer ' + userID.token }), body: body\n    };\n    let returnObservable = new Observable((observer) => {\n      let response = this.httpClient.delete(this.deletePollenURL, httpOptions);\n      response.subscribe(() => {\n        observer.next(true);\n      },\n      (error) => {\n        observer.error(\"DELETE - Polle\");\n        console.log(error);\n        observer.complete();\n      }, \n      () => {\n        observer.complete();\n      });\n\n    });\n    return returnObservable;\n  }\n\n  /**\n   * @returns an observable with a boolean if the insertion was successful or not\n   */\n  public postPolleToUserContext(userID: UserIdentifikation, pollenID: number): Observable {\n    let body = {\n      userID: userID.id,\n      pollenID: pollenID\n    }\n    let httpOptions = {\n      headers: new HttpHeaders({ 'Authorization': 'Bearer ' + userID.token }),\n    };\n    let returnObservable = new Observable((observer) => {\n      let response = this.httpClient.post(this.savePollenURL, body, httpOptions);\n      response.subscribe(() => {\n        observer.next(true);\n      },\n      (error)=> {\n        observer.error(\"DELETE - Polle\");\n        console.log(error);\n        observer.complete();\n      }, \n      () => {\n        observer.complete();\n      });\n    });\n    return returnObservable;\n  }\n  /**\n   * @returns an observable with a boolean if the token is valid or not\n   */\n  public postIsTokenValid(token: string): Observable {\n    let returnObservable = new Observable((observer) => {\n      let httpOptions = {\n        headers: new HttpHeaders({ 'Authorization': 'Bearer ' + token })\n      };\n      let response = this.httpClient.get(this.checkTokenURL, httpOptions);\n      response.subscribe(data => {\n        observer.next(data.success);\n        observer.complete();\n      }, \n      () => {\n        observer.next(false);\n        observer.complete();\n      })\n    });\n    return returnObservable;\n  }\n\n  /**\n   * @returns an observable with an user context object\n   */\n  public loadUserContext(token: string): Observable{\n    let returnObservable = new Observable((observer) => {\n      let httpOptions = {\n        headers: new HttpHeaders({ 'Authorization': 'Bearer ' + token })\n      };\n      let response = this.httpClient.get(this.currentUserContextURL, httpOptions);\n      response.subscribe(context => {\n        observer.next(this.createUserContextFromServerResponse(context));\n        observer.complete();\n      }, \n      () => {\n        observer.error(\"An error occured\")\n        observer.complete();\n      })\n    });\n    return returnObservable;\n  }\n\n  /**\n   * @returns an observable with pollen types array\n   */\n  public loadPollenTypes(): Observable{\n    let returnObservable = new Observable((observer) => {\n      let response = this.httpClient.get(this.allPollenTypesURL);\n      response.subscribe(data => {\n        observer.next(data);\n      });\n    });\n    return returnObservable\n  }\n\n  /**\n   * Helper function to create user context object from server response.\n   * @param userContext \n   * @returns an user context object\n   */\n  private createUserContextFromServerResponse(userContext: UserContextResponse): UserContext {\n    return {\n      theme: this.getThemeTypeFromServerResponse(userContext.theme),\n      fontSize: userContext.fontSize,\n      pollen: userContext.pollen, \n      doVentilationReminder: userContext.doVentilationReminder,\n      reduceMotion: userContext.reduceMotion,\n      selfVoicingEnabled: userContext.selfVoicingEnabled\n    }\n  }\n\n  /**\n   * Helper function to convert theme String to Theme type\n   * @return the converted Theme\n   */\n  private getThemeTypeFromServerResponse(theme: string): Themes {\n    switch(theme) {\n      case \"Dark\": return Themes.Dark;\n      case \"Light\": return Themes.Light;\n      case \"HighContrast\": return Themes.HighContrast;\n      default: return Themes.Automatic;\n    }\n  }\n}\n\n/**\n * Model of the login response\n */\ninterface LoginResponse {\n  success: boolean,\n  message: string,\n  userContext: UserContextResponse,\n  token: string,\n}\n\n/**\n * Model of the user context response\n */\ninterface UserContextResponse {\n  id: number,\n  username: string,\n  theme: string,\n  fontSize: number,\n  selfVoicingEnabled: boolean,\n  doVentilationReminder: boolean,\n  reduceMotion: boolean,\n  pollen: string[]\n}\n\n/**\n * Model of the check token response\n */\ninterface CheckTokenResponse {\n  success: boolean,\n  message: string,\n}\n\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CheckboxSwitcherElementComponent.html":{"url":"components/CheckboxSwitcherElementComponent.html","title":"component - CheckboxSwitcherElementComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CheckboxSwitcherElementComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/ui-elements/checkbox-switcher-element/checkbox-switcher-element.component.ts\n\n\n    \n        Description\n    \n    \n        Checkbox switcher element component\nThis component simply has the task of switching a function on and off. \nFor this purpose, images are passed for the states on and off. \nIf the value changes, an event is emitted.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-checkbox-switcher-element\n            \n\n            \n                styleUrls\n                ./checkbox-switcher-element.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./checkbox-switcher-element.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getCheckedImageSrc\n                            \n                            \n                                getUncheckedImageSrc\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                toggleCheckbox\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                checkedImage\n                            \n                            \n                                label\n                            \n                            \n                                unCheckedImageDark\n                            \n                            \n                                unCheckedImageLight\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                toggled\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userContextService: UserContextService, breakpointObserver: BreakpointObserver)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/ui-elements/checkbox-switcher-element/checkbox-switcher-element.component.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userContextService\n                                                  \n                                                        \n                                                                        UserContextService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        breakpointObserver\n                                                  \n                                                        \n                                                                    BreakpointObserver\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        checkedImage\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/ui-elements/checkbox-switcher-element/checkbox-switcher-element.component.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/ui-elements/checkbox-switcher-element/checkbox-switcher-element.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        unCheckedImageDark\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/ui-elements/checkbox-switcher-element/checkbox-switcher-element.component.ts:23\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        unCheckedImageLight\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/ui-elements/checkbox-switcher-element/checkbox-switcher-element.component.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/ui-elements/checkbox-switcher-element/checkbox-switcher-element.component.ts:20\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        toggled\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/ui-elements/checkbox-switcher-element/checkbox-switcher-element.component.ts:24\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getCheckedImageSrc\n                        \n                        \n                    \n                \n            \n            \n                \ngetCheckedImageSrc()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/ui-elements/checkbox-switcher-element/checkbox-switcher-element.component.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :     string | undefined\n\n                    \n                    \n                        the image url of the checked image. \n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getUncheckedImageSrc\n                        \n                        \n                    \n                \n            \n            \n                \ngetUncheckedImageSrc()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/ui-elements/checkbox-switcher-element/checkbox-switcher-element.component.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :     string | undefined\n\n                    \n                    \n                        the image url of the unchecked image.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/ui-elements/checkbox-switcher-element/checkbox-switcher-element.component.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toggleCheckbox\n                        \n                        \n                    \n                \n            \n            \n                \ntoggleCheckbox()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/ui-elements/checkbox-switcher-element/checkbox-switcher-element.component.ts:41\n                \n            \n\n\n            \n                \n                    Toggles the checkbox and emits the new value\nto the parent component\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { BreakpointObserver, BreakpointState } from '@angular/cdk/layout';\nimport { Component, Input, OnInit, Output, EventEmitter } from '@angular/core';\nimport { Themes, UserContext } from 'src/app/model/user-context';\nimport { UserContextService } from 'src/app/services/user-context.service';\n\n/**\n * Checkbox switcher element component\n * \n * This component simply has the task of switching a function on and off. \n * For this purpose, images are passed for the states on and off. \n * If the value changes, an event is emitted.\n */\n@Component({\n  selector: 'app-checkbox-switcher-element',\n  templateUrl: './checkbox-switcher-element.component.html',\n  styleUrls: ['./checkbox-switcher-element.component.scss']\n})\nexport class CheckboxSwitcherElementComponent implements OnInit {\n  @Input() label?: string;\n  @Input() value?: boolean;\n  @Input() checkedImage?: string\n  @Input() unCheckedImageLight?: string;\n  @Input() unCheckedImageDark?: string;\n  @Output() toggled = new EventEmitter();\n  private userContext?: UserContext\n  private systemTheme = Themes.Light\n\n  constructor(\n    private userContextService: UserContextService,               \n    private breakpointObserver: BreakpointObserver) { }\n\n  ngOnInit(): void {\n    this.loadUserContext();\n    this.systemThemeBreakpointObserver();\n  }\n\n  /**\n   * Toggles the checkbox and emits the new value\n   * to the parent component\n   */\n  toggleCheckbox() {\n    this.toggled.emit(!this.value);\n  }\n\n  /**\n   * Subscribes to the user context data to determine\n   * which theme is selected\n   */\n  private loadUserContext() {\n    this.userContextService.getUserContextSubject().subscribe(data => this.userContext = data);\n  }\n\n  /**\n   * Subscribes to the Media Query prefers-color-scheme \n   */\n  private systemThemeBreakpointObserver() {\n    this.breakpointObserver\n    .observe(['(prefers-color-scheme: light)'])\n    .subscribe((state: BreakpointState) => {\n      if (state.matches) {\n        this.systemTheme = Themes.Light;\n      } else {\n        this.systemTheme = Themes.Dark;\n      }\n    });\n  }\n\n  /**\n   * @returns the image url of the unchecked image.\n   */\n  getUncheckedImageSrc(): string | undefined {\n    let userContextTheme = this.userContext?.theme\n    if(userContextTheme == Themes.Automatic) {\n      if(this.systemTheme == Themes.Dark) {\n        return this.unCheckedImageDark\n      } else {\n        return this.unCheckedImageLight\n      }\n    } \n    if(userContextTheme == Themes.Dark || userContextTheme == Themes.HighContrast ) {\n      return this.unCheckedImageDark\n    }\n    return this.unCheckedImageLight\n  }\n\n  /**\n   * @returns the image url of the checked image. \n   */\n  getCheckedImageSrc(): string | undefined {\n    let userContextTheme = this.userContext?.theme\n    if(userContextTheme == Themes.HighContrast ) {\n      if (this.checkedImage)\n      return this.checkedImage + \"-black\"\n    }\n    return this.checkedImage \n  }\n}\n\n    \n\n    \n        \n    \n    \n\n    {{this.label}}\n\n    \n\n    \n                \n                    ./checkbox-switcher-element.component.scss\n                \n                .container {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n  margin: var(--padding) 0 0 0;\n\n  border-radius: var(--corner-radius);\n  background-color: var(--surface);\n  height: 12em;\n  width: 10.3em;\n  border: 1px solid var(--border);\n}\n\nspan {\n  color: var(--text);\n  word-wrap: break-word;\n  text-align: center;\n  margin-top: 0.7em;\n  font-weight: 700;\n}\n\n.container.checked {\n  background-color: var(--accent);\n\n  span {\n    color: var(--inverted);\n  }\n}\n\n.icon {\n  height: 2.5em;\n}\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{this.label}}'\n    var COMPONENTS = [{'name': 'ApparentTemperatureTileViewComponent', 'selector': 'app-apparent-temperature-tile-view'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BackButtonElementComponent', 'selector': 'app-back-button-element'},{'name': 'CalibrationInfoDetailViewComponent', 'selector': 'app-calibration-info-detail-view'},{'name': 'CardElementComponent', 'selector': 'card-element'},{'name': 'CheckboxSwitcherElementComponent', 'selector': 'app-checkbox-switcher-element'},{'name': 'ConfigurationTilePopUpDialogView', 'selector': 'configuration-tile-popup-view'},{'name': 'ConfigurationTileViewComponent', 'selector': 'app-configuration-tile-view'},{'name': 'ConfigurationViewComponent', 'selector': 'app-configuration-view'},{'name': 'DashboardScreenComponent', 'selector': 'app-dashboard-screen'},{'name': 'DashboardViewComponent', 'selector': 'app-dashboard-view'},{'name': 'DetailScreenComponent', 'selector': 'app-detail-screen'},{'name': 'ForecastDetailViewComponent', 'selector': 'app-forecast-detail-view'},{'name': 'ForecastTileViewComponent', 'selector': 'app-forecast-tile-view'},{'name': 'HistoryDetailViewComponent', 'selector': 'app-history-detail-view'},{'name': 'HistoryTileViewComponent', 'selector': 'app-history-tile-view'},{'name': 'HumidityTileViewComponent', 'selector': 'app-humidity-tile-view'},{'name': 'IndoorDetailViewComponent', 'selector': 'app-indoor-detail-view'},{'name': 'IndoorTileViewComponent', 'selector': 'app-indoor-tile-view'},{'name': 'LoginViewComponent', 'selector': 'app-login-view'},{'name': 'MenuBarElementComponent', 'selector': 'app-menu-bar-element'},{'name': 'MenuButtonElementComponent', 'selector': 'app-menu-button-element'},{'name': 'MenuElementComponent', 'selector': 'app-menu-element'},{'name': 'NavBarElementComponent', 'selector': 'app-nav-bar-element'},{'name': 'OnboardingScreenComponent', 'selector': 'app-onboarding-screen'},{'name': 'OpenAPELoginTileViewComponent', 'selector': 'app-open-apelogin-tile-view'},{'name': 'OutdoorWeatherDetailViewComponent', 'selector': 'app-outdoor-weather-detail-view'},{'name': 'OutdoorWeatherViewComponent', 'selector': 'app-outdoor-weather-view'},{'name': 'PersonalizationSettingsViewComponent', 'selector': 'app-personalization-settings-view'},{'name': 'PersonalizationViewComponent', 'selector': 'app-personalization-view'},{'name': 'PollenflugDetailViewComponent', 'selector': 'app-pollenflug-detail-view'},{'name': 'PollenflugSmallTileComponent', 'selector': 'app-pollenflug-small-tile'},{'name': 'PollenflugTileViewComponent', 'selector': 'app-pollenflug-tile-view'},{'name': 'PollenListElementComponent', 'selector': 'app-pollen-list-element'},{'name': 'PollenTagElementComponent', 'selector': 'app-pollen-tag-element'},{'name': 'ProgressChartElementComponent', 'selector': 'app-progress-chart-element'},{'name': 'RegistrationViewComponent', 'selector': 'app-registration-view'},{'name': 'SettingsScreenComponent', 'selector': 'app-settings-screen'},{'name': 'SimpleTileViewComponent', 'selector': 'app-simple-tile-view'},{'name': 'SliderElementComponent', 'selector': 'app-slider-element'},{'name': 'TtsPlayerElementComponent', 'selector': 'app-tts-player-element'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CheckboxSwitcherElementComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ConfigurationTilePopUpDialogView.html":{"url":"components/ConfigurationTilePopUpDialogView.html","title":"component - ConfigurationTilePopUpDialogView","body":"\n                   \n\n\n\n\n\n  Components\n  ConfigurationTilePopUpDialogView\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/views/configuration-tile-view/configuration-tile-view.component.ts\n\n\n    \n        Description\n    \n    \n        Configuration tile pop up dialog component\nIt shows a text field to change the name of the current sensor\nkit.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                configuration-tile-popup-view\n            \n\n            \n                styleUrls\n                ./configuration-tile-popup-view.component.scss\n            \n\n\n\n            \n                templateUrl\n                configuration-tile-popup-view.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onNoClick\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, data: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/views/configuration-tile-view/configuration-tile-view.component.ts:89\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onNoClick\n                        \n                        \n                    \n                \n            \n            \n                \nonNoClick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/views/configuration-tile-view/configuration-tile-view.component.ts:95\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSubmit\n                        \n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/views/configuration-tile-view/configuration-tile-view.component.ts:99\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Inject(MAT_DIALOG_DATA)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/views/configuration-tile-view/configuration-tile-view.component.ts:93\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialogRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MatDialogRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/views/configuration-tile-view/configuration-tile-view.component.ts:92\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new FormControl('')\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/views/configuration-tile-view/configuration-tile-view.component.ts:89\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Inject, Input, OnInit } from '@angular/core';\nimport { ESPConfiguration, ESPConfigurationAPIService } from 'src/app/services/api/esp-configuration-api.service';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { FormControl } from '@angular/forms'; \nimport { Router } from '@angular/router';\n\n/**\n * Configuration tile view component\n * \n * This component displays in form of a tile (widget) the configuration \n * options of the different esp kits (sensor kits). There are two\n * different kinds of esp kits, for outdoor and indoor. For both it is possible\n * to change the name as well as the frequency and for the indoor sensor kits\n * the calibration can be started. \n * \n * For the name change a pop up will be shown.\n */\n@Component({\n  selector: 'app-configuration-tile-view',\n  templateUrl: './configuration-tile-view.component.html',\n  styleUrls: ['./configuration-tile-view.component.scss']\n})\nexport class ConfigurationTileViewComponent implements OnInit {\n  @Input() espConfiguration?: ESPConfiguration\n  \n  constructor(private espConfigurationService: ESPConfigurationAPIService,\n              public dialog: MatDialog,\n              private router: Router) { }\n\n  ngOnInit(): void {\n  }\n\n  /**\n   * Opens the pop up to change the name\n   */\n  openDialog(): void {\n    const dialogRef = this.dialog.open(ConfigurationTilePopUpDialogView, {\n      width: '300px',\n      data: this.espConfiguration?.roomName\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if(this.espConfiguration && result !== undefined && result !== '') {\n        this.espConfiguration.roomName  = result;  \n        console.log(\"re\", result, this.espConfiguration.roomName);\n        this.updateConfiguration();\n      }\n    });\n  }\n  \n  /**\n   * calls the espConfiguration service and starts the calibration process.\n   * If the process is started successfully it redirects to the \n   * calibration info detail view component.\n   */\n  startCalibration(): void {\n    if(this.espConfiguration)\n    this.espConfigurationService.startConfiguration(this.espConfiguration?.id).subscribe((success) => {\n      if(success) {\n        this.router.navigateByUrl('/settings/calibration-info');\n      }\n    })\n  }\n\n  /**\n   * Calls the esp configuration service to update the esp configuration by passing\n   * the changed object \n   */\n  updateConfiguration() {\n    if(this.espConfiguration) {\n      this.espConfigurationService.postESPConfiguration(this.espConfiguration).subscribe((data) => {\n      })\n    }\n  }\n}\n\n/**\n * Configuration tile pop up dialog component\n * \n * It shows a text field to change the name of the current sensor\n * kit.\n */\n@Component({\n  selector: 'configuration-tile-popup-view',\n  templateUrl: 'configuration-tile-popup-view.component.html',\n  styleUrls: ['./configuration-tile-popup-view.component.scss']\n})\nexport class ConfigurationTilePopUpDialogView {\n  name = new FormControl('');\n\n  constructor(\n    public dialogRef: MatDialogRef,\n    @Inject(MAT_DIALOG_DATA) public data: string) {}\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  onSubmit(): void {\n    this.dialogRef.close(this.name.value)\n  }\n}\n\n    \n\n    \n        \n    Raumname ändern\n    \n        \n            Raumname\n        \n        \n            \n                \n                Abbrechen\n            \n    \n   \n\n    \n\n    \n                \n                    ./configuration-tile-popup-view.component.scss\n                \n                .container {\n    \n}\n\n.button-container{\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    align-content: space-between;\n  }\n\n.b1, .b2 {\n    border-radius: var(--corner-radius);\n    color: white;\n    padding: calc(var(--padding)/2);\n}\n\n.b2 {\n    margin: 0;\n    background-color: #4480DB;\n}\n\n.b1 {\n    margin-top: 20px;\n}\n\n.input-field{\n    background-color: rgba(0,0,0, .25);\n    outline: none;\n    caret-color: orchid;\n}\n\n \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Raumname ändern                        Raumname                                                            Abbrechen                   '\n    var COMPONENTS = [{'name': 'ApparentTemperatureTileViewComponent', 'selector': 'app-apparent-temperature-tile-view'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BackButtonElementComponent', 'selector': 'app-back-button-element'},{'name': 'CalibrationInfoDetailViewComponent', 'selector': 'app-calibration-info-detail-view'},{'name': 'CardElementComponent', 'selector': 'card-element'},{'name': 'CheckboxSwitcherElementComponent', 'selector': 'app-checkbox-switcher-element'},{'name': 'ConfigurationTilePopUpDialogView', 'selector': 'configuration-tile-popup-view'},{'name': 'ConfigurationTileViewComponent', 'selector': 'app-configuration-tile-view'},{'name': 'ConfigurationViewComponent', 'selector': 'app-configuration-view'},{'name': 'DashboardScreenComponent', 'selector': 'app-dashboard-screen'},{'name': 'DashboardViewComponent', 'selector': 'app-dashboard-view'},{'name': 'DetailScreenComponent', 'selector': 'app-detail-screen'},{'name': 'ForecastDetailViewComponent', 'selector': 'app-forecast-detail-view'},{'name': 'ForecastTileViewComponent', 'selector': 'app-forecast-tile-view'},{'name': 'HistoryDetailViewComponent', 'selector': 'app-history-detail-view'},{'name': 'HistoryTileViewComponent', 'selector': 'app-history-tile-view'},{'name': 'HumidityTileViewComponent', 'selector': 'app-humidity-tile-view'},{'name': 'IndoorDetailViewComponent', 'selector': 'app-indoor-detail-view'},{'name': 'IndoorTileViewComponent', 'selector': 'app-indoor-tile-view'},{'name': 'LoginViewComponent', 'selector': 'app-login-view'},{'name': 'MenuBarElementComponent', 'selector': 'app-menu-bar-element'},{'name': 'MenuButtonElementComponent', 'selector': 'app-menu-button-element'},{'name': 'MenuElementComponent', 'selector': 'app-menu-element'},{'name': 'NavBarElementComponent', 'selector': 'app-nav-bar-element'},{'name': 'OnboardingScreenComponent', 'selector': 'app-onboarding-screen'},{'name': 'OpenAPELoginTileViewComponent', 'selector': 'app-open-apelogin-tile-view'},{'name': 'OutdoorWeatherDetailViewComponent', 'selector': 'app-outdoor-weather-detail-view'},{'name': 'OutdoorWeatherViewComponent', 'selector': 'app-outdoor-weather-view'},{'name': 'PersonalizationSettingsViewComponent', 'selector': 'app-personalization-settings-view'},{'name': 'PersonalizationViewComponent', 'selector': 'app-personalization-view'},{'name': 'PollenflugDetailViewComponent', 'selector': 'app-pollenflug-detail-view'},{'name': 'PollenflugSmallTileComponent', 'selector': 'app-pollenflug-small-tile'},{'name': 'PollenflugTileViewComponent', 'selector': 'app-pollenflug-tile-view'},{'name': 'PollenListElementComponent', 'selector': 'app-pollen-list-element'},{'name': 'PollenTagElementComponent', 'selector': 'app-pollen-tag-element'},{'name': 'ProgressChartElementComponent', 'selector': 'app-progress-chart-element'},{'name': 'RegistrationViewComponent', 'selector': 'app-registration-view'},{'name': 'SettingsScreenComponent', 'selector': 'app-settings-screen'},{'name': 'SimpleTileViewComponent', 'selector': 'app-simple-tile-view'},{'name': 'SliderElementComponent', 'selector': 'app-slider-element'},{'name': 'TtsPlayerElementComponent', 'selector': 'app-tts-player-element'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ConfigurationTilePopUpDialogView'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ConfigurationTileViewComponent.html":{"url":"components/ConfigurationTileViewComponent.html","title":"component - ConfigurationTileViewComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ConfigurationTileViewComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/views/configuration-tile-view/configuration-tile-view.component.ts\n\n\n    \n        Description\n    \n    \n        Configuration tile view component\nThis component displays in form of a tile (widget) the configuration \noptions of the different esp kits (sensor kits). There are two\ndifferent kinds of esp kits, for outdoor and indoor. For both it is possible\nto change the name as well as the frequency and for the indoor sensor kits\nthe calibration can be started. \nFor the name change a pop up will be shown.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-configuration-tile-view\n            \n\n            \n                styleUrls\n                ./configuration-tile-view.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./configuration-tile-view.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dialog\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                openDialog\n                            \n                            \n                                startCalibration\n                            \n                            \n                                updateConfiguration\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                espConfiguration\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(espConfigurationService: ESPConfigurationAPIService, dialog: MatDialog, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/views/configuration-tile-view/configuration-tile-view.component.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        espConfigurationService\n                                                  \n                                                        \n                                                                        ESPConfigurationAPIService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        espConfiguration\n                    \n                \n                \n                    \n                        Type :         ESPConfiguration\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/views/configuration-tile-view/configuration-tile-view.component.ts:24\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/views/configuration-tile-view/configuration-tile-view.component.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openDialog\n                        \n                        \n                    \n                \n            \n            \n                \nopenDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/views/configuration-tile-view/configuration-tile-view.component.ts:36\n                \n            \n\n\n            \n                \n                    Opens the pop up to change the name\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            startCalibration\n                        \n                        \n                    \n                \n            \n            \n                \nstartCalibration()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/views/configuration-tile-view/configuration-tile-view.component.ts:56\n                \n            \n\n\n            \n                \n                    calls the espConfiguration service and starts the calibration process.\nIf the process is started successfully it redirects to the \ncalibration info detail view component.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateConfiguration\n                        \n                        \n                    \n                \n            \n            \n                \nupdateConfiguration()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/views/configuration-tile-view/configuration-tile-view.component.ts:69\n                \n            \n\n\n            \n                \n                    Calls the esp configuration service to update the esp configuration by passing\nthe changed object \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialog\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatDialog\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/views/configuration-tile-view/configuration-tile-view.component.ts:27\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Inject, Input, OnInit } from '@angular/core';\nimport { ESPConfiguration, ESPConfigurationAPIService } from 'src/app/services/api/esp-configuration-api.service';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { FormControl } from '@angular/forms'; \nimport { Router } from '@angular/router';\n\n/**\n * Configuration tile view component\n * \n * This component displays in form of a tile (widget) the configuration \n * options of the different esp kits (sensor kits). There are two\n * different kinds of esp kits, for outdoor and indoor. For both it is possible\n * to change the name as well as the frequency and for the indoor sensor kits\n * the calibration can be started. \n * \n * For the name change a pop up will be shown.\n */\n@Component({\n  selector: 'app-configuration-tile-view',\n  templateUrl: './configuration-tile-view.component.html',\n  styleUrls: ['./configuration-tile-view.component.scss']\n})\nexport class ConfigurationTileViewComponent implements OnInit {\n  @Input() espConfiguration?: ESPConfiguration\n  \n  constructor(private espConfigurationService: ESPConfigurationAPIService,\n              public dialog: MatDialog,\n              private router: Router) { }\n\n  ngOnInit(): void {\n  }\n\n  /**\n   * Opens the pop up to change the name\n   */\n  openDialog(): void {\n    const dialogRef = this.dialog.open(ConfigurationTilePopUpDialogView, {\n      width: '300px',\n      data: this.espConfiguration?.roomName\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if(this.espConfiguration && result !== undefined && result !== '') {\n        this.espConfiguration.roomName  = result;  \n        console.log(\"re\", result, this.espConfiguration.roomName);\n        this.updateConfiguration();\n      }\n    });\n  }\n  \n  /**\n   * calls the espConfiguration service and starts the calibration process.\n   * If the process is started successfully it redirects to the \n   * calibration info detail view component.\n   */\n  startCalibration(): void {\n    if(this.espConfiguration)\n    this.espConfigurationService.startConfiguration(this.espConfiguration?.id).subscribe((success) => {\n      if(success) {\n        this.router.navigateByUrl('/settings/calibration-info');\n      }\n    })\n  }\n\n  /**\n   * Calls the esp configuration service to update the esp configuration by passing\n   * the changed object \n   */\n  updateConfiguration() {\n    if(this.espConfiguration) {\n      this.espConfigurationService.postESPConfiguration(this.espConfiguration).subscribe((data) => {\n      })\n    }\n  }\n}\n\n/**\n * Configuration tile pop up dialog component\n * \n * It shows a text field to change the name of the current sensor\n * kit.\n */\n@Component({\n  selector: 'configuration-tile-popup-view',\n  templateUrl: 'configuration-tile-popup-view.component.html',\n  styleUrls: ['./configuration-tile-popup-view.component.scss']\n})\nexport class ConfigurationTilePopUpDialogView {\n  name = new FormControl('');\n\n  constructor(\n    public dialogRef: MatDialogRef,\n    @Inject(MAT_DIALOG_DATA) public data: string) {}\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  onSubmit(): void {\n    this.dialogRef.close(this.name.value)\n  }\n}\n\n    \n\n    \n        \n    \n        \n            \n                Sendeintervall:\n                \n                \n                    Jede Minute\n                    Alle 2 Minuten\n                    Alle 5 Minuten\n                    Alle 7 Minuten\n                    Alle 10 Minuten\n                \n            \n            \n                Kalibrieren\n                \n                Umbenennen\n            \n        \n    \n\n\n    \n\n    \n                \n                    ./configuration-tile-view.component.scss\n                \n                .btn {\n    color: var(--text);\n    text-align: start;\n}\n\n.flex-container {\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-start;\n    align-content: flex-start;\n    flex-wrap: nowrap;\n}\n\n.button-full-width {\n    min-width: calc(100% / 2 - var(--padding));\n    max-width: 100%;\n}\n\n.button-container {\n    display: flex;\n    flex-wrap: nowrap;\n}\n\n.spacer {\n    width: var(--padding);\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        Sendeintervall:                                                    Jede Minute                    Alle 2 Minuten                    Alle 5 Minuten                    Alle 7 Minuten                    Alle 10 Minuten                                                        Kalibrieren                                Umbenennen                        '\n    var COMPONENTS = [{'name': 'ApparentTemperatureTileViewComponent', 'selector': 'app-apparent-temperature-tile-view'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BackButtonElementComponent', 'selector': 'app-back-button-element'},{'name': 'CalibrationInfoDetailViewComponent', 'selector': 'app-calibration-info-detail-view'},{'name': 'CardElementComponent', 'selector': 'card-element'},{'name': 'CheckboxSwitcherElementComponent', 'selector': 'app-checkbox-switcher-element'},{'name': 'ConfigurationTilePopUpDialogView', 'selector': 'configuration-tile-popup-view'},{'name': 'ConfigurationTileViewComponent', 'selector': 'app-configuration-tile-view'},{'name': 'ConfigurationViewComponent', 'selector': 'app-configuration-view'},{'name': 'DashboardScreenComponent', 'selector': 'app-dashboard-screen'},{'name': 'DashboardViewComponent', 'selector': 'app-dashboard-view'},{'name': 'DetailScreenComponent', 'selector': 'app-detail-screen'},{'name': 'ForecastDetailViewComponent', 'selector': 'app-forecast-detail-view'},{'name': 'ForecastTileViewComponent', 'selector': 'app-forecast-tile-view'},{'name': 'HistoryDetailViewComponent', 'selector': 'app-history-detail-view'},{'name': 'HistoryTileViewComponent', 'selector': 'app-history-tile-view'},{'name': 'HumidityTileViewComponent', 'selector': 'app-humidity-tile-view'},{'name': 'IndoorDetailViewComponent', 'selector': 'app-indoor-detail-view'},{'name': 'IndoorTileViewComponent', 'selector': 'app-indoor-tile-view'},{'name': 'LoginViewComponent', 'selector': 'app-login-view'},{'name': 'MenuBarElementComponent', 'selector': 'app-menu-bar-element'},{'name': 'MenuButtonElementComponent', 'selector': 'app-menu-button-element'},{'name': 'MenuElementComponent', 'selector': 'app-menu-element'},{'name': 'NavBarElementComponent', 'selector': 'app-nav-bar-element'},{'name': 'OnboardingScreenComponent', 'selector': 'app-onboarding-screen'},{'name': 'OpenAPELoginTileViewComponent', 'selector': 'app-open-apelogin-tile-view'},{'name': 'OutdoorWeatherDetailViewComponent', 'selector': 'app-outdoor-weather-detail-view'},{'name': 'OutdoorWeatherViewComponent', 'selector': 'app-outdoor-weather-view'},{'name': 'PersonalizationSettingsViewComponent', 'selector': 'app-personalization-settings-view'},{'name': 'PersonalizationViewComponent', 'selector': 'app-personalization-view'},{'name': 'PollenflugDetailViewComponent', 'selector': 'app-pollenflug-detail-view'},{'name': 'PollenflugSmallTileComponent', 'selector': 'app-pollenflug-small-tile'},{'name': 'PollenflugTileViewComponent', 'selector': 'app-pollenflug-tile-view'},{'name': 'PollenListElementComponent', 'selector': 'app-pollen-list-element'},{'name': 'PollenTagElementComponent', 'selector': 'app-pollen-tag-element'},{'name': 'ProgressChartElementComponent', 'selector': 'app-progress-chart-element'},{'name': 'RegistrationViewComponent', 'selector': 'app-registration-view'},{'name': 'SettingsScreenComponent', 'selector': 'app-settings-screen'},{'name': 'SimpleTileViewComponent', 'selector': 'app-simple-tile-view'},{'name': 'SliderElementComponent', 'selector': 'app-slider-element'},{'name': 'TtsPlayerElementComponent', 'selector': 'app-tts-player-element'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ConfigurationTileViewComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ConfigurationViewComponent.html":{"url":"components/ConfigurationViewComponent.html","title":"component - ConfigurationViewComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ConfigurationViewComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/views/configuration-view/configuration-view.component.ts\n\n\n    \n        Description\n    \n    \n        Configuration view component\nThis component displays the different configuration\ntile view components. It knows  all of the esp configuration\nobjects and passes the data to each individual tile view. \n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-configuration-view\n            \n\n            \n                styleUrls\n                ./configuration-view.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./configuration-view.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                espConfigurations\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(espConfigurationService: ESPConfigurationAPIService, spinner: NgxSpinnerService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/views/configuration-view/configuration-view.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        espConfigurationService\n                                                  \n                                                        \n                                                                        ESPConfigurationAPIService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        spinner\n                                                  \n                                                        \n                                                                    NgxSpinnerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/views/configuration-view/configuration-view.component.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            espConfigurations\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ESPConfiguration[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/views/configuration-view/configuration-view.component.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { ESPConfiguration, ESPConfigurationAPIService } from 'src/app/services/api/esp-configuration-api.service';\n\n/**\n * Configuration view component\n * \n * This component displays the different configuration\n * tile view components. It knows  all of the esp configuration\n * objects and passes the data to each individual tile view. \n */\n@Component({\n  selector: 'app-configuration-view',\n  templateUrl: './configuration-view.component.html',\n  styleUrls: ['./configuration-view.component.scss']\n})\nexport class ConfigurationViewComponent implements OnInit {\n  espConfigurations?: ESPConfiguration[]\n\n  constructor(\n    private espConfigurationService: ESPConfigurationAPIService,\n    private spinner: NgxSpinnerService) { }\n\n  ngOnInit(): void {\n    this.loadConfigurations();\n  }\n\n  /**\n   * Loads the esp configuration objects from the \n   * esp configuration service. It also shows the spinner \n   * when the loading process starts and hides it if it was successful. \n   */\n  private loadConfigurations() {\n    this.spinner.show()\n    this.espConfigurationService.loadESPConfigs().subscribe((data) => {\n      this.espConfigurations = data;\n      this.spinner.hide()\n    })\n  }\n\n}\n\n    \n\n    \n        \n    \n       \n         \n            \n                \n            \n            \n                Es scheint wohl nichts zu konfigurieren zu geben... :( \n            \n        \n    \n\n\n\n\n    \n\n    \n                \n                    ./configuration-view.component.scss\n                \n                .container {\n    padding-top: var(--navbar-height);\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                        Es scheint wohl nichts zu konfigurieren zu geben... :(                         '\n    var COMPONENTS = [{'name': 'ApparentTemperatureTileViewComponent', 'selector': 'app-apparent-temperature-tile-view'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BackButtonElementComponent', 'selector': 'app-back-button-element'},{'name': 'CalibrationInfoDetailViewComponent', 'selector': 'app-calibration-info-detail-view'},{'name': 'CardElementComponent', 'selector': 'card-element'},{'name': 'CheckboxSwitcherElementComponent', 'selector': 'app-checkbox-switcher-element'},{'name': 'ConfigurationTilePopUpDialogView', 'selector': 'configuration-tile-popup-view'},{'name': 'ConfigurationTileViewComponent', 'selector': 'app-configuration-tile-view'},{'name': 'ConfigurationViewComponent', 'selector': 'app-configuration-view'},{'name': 'DashboardScreenComponent', 'selector': 'app-dashboard-screen'},{'name': 'DashboardViewComponent', 'selector': 'app-dashboard-view'},{'name': 'DetailScreenComponent', 'selector': 'app-detail-screen'},{'name': 'ForecastDetailViewComponent', 'selector': 'app-forecast-detail-view'},{'name': 'ForecastTileViewComponent', 'selector': 'app-forecast-tile-view'},{'name': 'HistoryDetailViewComponent', 'selector': 'app-history-detail-view'},{'name': 'HistoryTileViewComponent', 'selector': 'app-history-tile-view'},{'name': 'HumidityTileViewComponent', 'selector': 'app-humidity-tile-view'},{'name': 'IndoorDetailViewComponent', 'selector': 'app-indoor-detail-view'},{'name': 'IndoorTileViewComponent', 'selector': 'app-indoor-tile-view'},{'name': 'LoginViewComponent', 'selector': 'app-login-view'},{'name': 'MenuBarElementComponent', 'selector': 'app-menu-bar-element'},{'name': 'MenuButtonElementComponent', 'selector': 'app-menu-button-element'},{'name': 'MenuElementComponent', 'selector': 'app-menu-element'},{'name': 'NavBarElementComponent', 'selector': 'app-nav-bar-element'},{'name': 'OnboardingScreenComponent', 'selector': 'app-onboarding-screen'},{'name': 'OpenAPELoginTileViewComponent', 'selector': 'app-open-apelogin-tile-view'},{'name': 'OutdoorWeatherDetailViewComponent', 'selector': 'app-outdoor-weather-detail-view'},{'name': 'OutdoorWeatherViewComponent', 'selector': 'app-outdoor-weather-view'},{'name': 'PersonalizationSettingsViewComponent', 'selector': 'app-personalization-settings-view'},{'name': 'PersonalizationViewComponent', 'selector': 'app-personalization-view'},{'name': 'PollenflugDetailViewComponent', 'selector': 'app-pollenflug-detail-view'},{'name': 'PollenflugSmallTileComponent', 'selector': 'app-pollenflug-small-tile'},{'name': 'PollenflugTileViewComponent', 'selector': 'app-pollenflug-tile-view'},{'name': 'PollenListElementComponent', 'selector': 'app-pollen-list-element'},{'name': 'PollenTagElementComponent', 'selector': 'app-pollen-tag-element'},{'name': 'ProgressChartElementComponent', 'selector': 'app-progress-chart-element'},{'name': 'RegistrationViewComponent', 'selector': 'app-registration-view'},{'name': 'SettingsScreenComponent', 'selector': 'app-settings-screen'},{'name': 'SimpleTileViewComponent', 'selector': 'app-simple-tile-view'},{'name': 'SliderElementComponent', 'selector': 'app-slider-element'},{'name': 'TtsPlayerElementComponent', 'selector': 'app-tts-player-element'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ConfigurationViewComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DashboardScreenComponent.html":{"url":"components/DashboardScreenComponent.html","title":"component - DashboardScreenComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DashboardScreenComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/screens/dashboard-screen/dashboard-screen.component.ts\n\n\n    \n        Description\n    \n    \n        Dashboard screen component \nWrapper component to display the dashboard screen component.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-dashboard-screen\n            \n\n            \n                styleUrls\n                ./dashboard-screen.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./dashboard-screen.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/screens/dashboard-screen/dashboard-screen.component.ts:13\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/screens/dashboard-screen/dashboard-screen.component.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n/**\n * Dashboard screen component \n * \n * Wrapper component to display the dashboard screen component.\n */\n@Component({\n  selector: 'app-dashboard-screen',\n  templateUrl: './dashboard-screen.component.html',\n  styleUrls: ['./dashboard-screen.component.scss']\n})\nexport class DashboardScreenComponent implements OnInit {\n  \n  constructor() { }\n\n  ngOnInit(): void {\n  }\n}\n\n    \n\n    \n        \n    \n\n    \n\n    \n                \n                    ./dashboard-screen.component.scss\n                \n                .card-container {\n    padding-top: calc(var(--dashboard-outdoor-weather-size) + var(--navbar-height) + var(--padding));\n    left: 0;\n    right: 0;\n}\n\n.flex-container {\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: space-between;\n    // align-items: stretch;\n}\n\n.card-container.motion-disabled {\n    padding: var(--navbar-height) 0 var(--border-padding-bottom) 0;\n}\n\n\n// Responsive design -> only one breakpoint to reduce complexity\n// css code for desktop\n@media(min-width: 770px), (prefers-reduced-motion: reduce){\n    .card-container {\n        padding-top: var(--navbar-height);\n    }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'ApparentTemperatureTileViewComponent', 'selector': 'app-apparent-temperature-tile-view'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BackButtonElementComponent', 'selector': 'app-back-button-element'},{'name': 'CalibrationInfoDetailViewComponent', 'selector': 'app-calibration-info-detail-view'},{'name': 'CardElementComponent', 'selector': 'card-element'},{'name': 'CheckboxSwitcherElementComponent', 'selector': 'app-checkbox-switcher-element'},{'name': 'ConfigurationTilePopUpDialogView', 'selector': 'configuration-tile-popup-view'},{'name': 'ConfigurationTileViewComponent', 'selector': 'app-configuration-tile-view'},{'name': 'ConfigurationViewComponent', 'selector': 'app-configuration-view'},{'name': 'DashboardScreenComponent', 'selector': 'app-dashboard-screen'},{'name': 'DashboardViewComponent', 'selector': 'app-dashboard-view'},{'name': 'DetailScreenComponent', 'selector': 'app-detail-screen'},{'name': 'ForecastDetailViewComponent', 'selector': 'app-forecast-detail-view'},{'name': 'ForecastTileViewComponent', 'selector': 'app-forecast-tile-view'},{'name': 'HistoryDetailViewComponent', 'selector': 'app-history-detail-view'},{'name': 'HistoryTileViewComponent', 'selector': 'app-history-tile-view'},{'name': 'HumidityTileViewComponent', 'selector': 'app-humidity-tile-view'},{'name': 'IndoorDetailViewComponent', 'selector': 'app-indoor-detail-view'},{'name': 'IndoorTileViewComponent', 'selector': 'app-indoor-tile-view'},{'name': 'LoginViewComponent', 'selector': 'app-login-view'},{'name': 'MenuBarElementComponent', 'selector': 'app-menu-bar-element'},{'name': 'MenuButtonElementComponent', 'selector': 'app-menu-button-element'},{'name': 'MenuElementComponent', 'selector': 'app-menu-element'},{'name': 'NavBarElementComponent', 'selector': 'app-nav-bar-element'},{'name': 'OnboardingScreenComponent', 'selector': 'app-onboarding-screen'},{'name': 'OpenAPELoginTileViewComponent', 'selector': 'app-open-apelogin-tile-view'},{'name': 'OutdoorWeatherDetailViewComponent', 'selector': 'app-outdoor-weather-detail-view'},{'name': 'OutdoorWeatherViewComponent', 'selector': 'app-outdoor-weather-view'},{'name': 'PersonalizationSettingsViewComponent', 'selector': 'app-personalization-settings-view'},{'name': 'PersonalizationViewComponent', 'selector': 'app-personalization-view'},{'name': 'PollenflugDetailViewComponent', 'selector': 'app-pollenflug-detail-view'},{'name': 'PollenflugSmallTileComponent', 'selector': 'app-pollenflug-small-tile'},{'name': 'PollenflugTileViewComponent', 'selector': 'app-pollenflug-tile-view'},{'name': 'PollenListElementComponent', 'selector': 'app-pollen-list-element'},{'name': 'PollenTagElementComponent', 'selector': 'app-pollen-tag-element'},{'name': 'ProgressChartElementComponent', 'selector': 'app-progress-chart-element'},{'name': 'RegistrationViewComponent', 'selector': 'app-registration-view'},{'name': 'SettingsScreenComponent', 'selector': 'app-settings-screen'},{'name': 'SimpleTileViewComponent', 'selector': 'app-simple-tile-view'},{'name': 'SliderElementComponent', 'selector': 'app-slider-element'},{'name': 'TtsPlayerElementComponent', 'selector': 'app-tts-player-element'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DashboardScreenComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DashboardViewComponent.html":{"url":"components/DashboardViewComponent.html","title":"component - DashboardViewComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DashboardViewComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/views/dashboard-view/dashboard-view.component.ts\n\n\n    \n        Description\n    \n    \n        Dashboard view component\nThis component is one of the most important components in this\nwebapp. This component is responsible for the loading of the\ndashboard tiles data. One of its properties are the dashboardTiles \nwhich are used by a switch to display the matching tile view (widget)\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-dashboard-view\n            \n\n            \n                styleUrls\n                ./dashboard-view.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./dashboard-view.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                dashboardTiles\n                            \n                            \n                                desktop\n                            \n                            \n                                    Optional\n                                outdoorData\n                            \n                            \n                                reduceMotion\n                            \n                            \n                                tileType\n                            \n                            \n                                ttsTextGeneratorFunction\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userContextService: UserContextService, weatherDataService: WeatherDataService, breakpointObserver: BreakpointObserver, textService: TextService, spinner: NgxSpinnerService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/views/dashboard-view/dashboard-view.component.ts:36\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userContextService\n                                                  \n                                                        \n                                                                        UserContextService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        weatherDataService\n                                                  \n                                                        \n                                                                        WeatherDataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        breakpointObserver\n                                                  \n                                                        \n                                                                    BreakpointObserver\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        textService\n                                                  \n                                                        \n                                                                        TextService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        spinner\n                                                  \n                                                        \n                                                                    NgxSpinnerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/views/dashboard-view/dashboard-view.component.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            dashboardTiles\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Tile[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/views/dashboard-view/dashboard-view.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            desktop\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/views/dashboard-view/dashboard-view.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            outdoorData\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         OutdoorWeatherData\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/views/dashboard-view/dashboard-view.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            reduceMotion\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/views/dashboard-view/dashboard-view.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tileType\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : TileType\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/views/dashboard-view/dashboard-view.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ttsTextGeneratorFunction\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/views/dashboard-view/dashboard-view.component.ts:32\n                            \n                        \n\n                \n                    \n                        this function computes the to be read aloud text for the tts feature. \nThis function is passed to the tts player element\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { OutdoorWeatherData, Tile, TileType, WeatherData } from 'src/app/model/weather';\nimport { UserContextService } from 'src/app/services/user-context.service';\nimport { BreakpointObserver, BreakpointState } from '@angular/cdk/layout';\nimport { WeatherDataService } from 'src/app/services/weather-data.service';\nimport { TextService } from 'src/app/services/text.service';\nimport { NgxSpinnerService } from 'ngx-spinner';\n\n/**\n * Dashboard view component\n * \n * This component is one of the most important components in this\n * webapp. This component is responsible for the loading of the\n * dashboard tiles data. One of its properties are the dashboardTiles \n * which are used by a switch to display the matching tile view (widget)\n */\n@Component({\n  selector: 'app-dashboard-view',\n  templateUrl: './dashboard-view.component.html',\n  styleUrls: ['./dashboard-view.component.scss']\n})\nexport class DashboardViewComponent implements OnInit {\n  reduceMotion: boolean = false;\n  dashboardTiles?: Tile[];\n  outdoorData?: OutdoorWeatherData;\n  tileType = TileType;\n  desktop: boolean = false;\n  /**\n   * this function computes the to be read aloud text for the tts feature. \n   * This function is passed to the tts player element\n   */\n  ttsTextGeneratorFunction = () => {\n    let tilesText = this.textService.createTextFromTilesArray(this.dashboardTiles);\n    let outdoorText = this.textService.createOutdoorText(this.outdoorData);\n    return outdoorText + tilesText;\n  }\n\n  constructor(private userContextService: UserContextService,\n    private weatherDataService: WeatherDataService,\n    private breakpointObserver: BreakpointObserver,\n    private textService: TextService,\n    private spinner: NgxSpinnerService) { }\n\n  ngOnInit(): void {\n    this.loadReduceMotionValue();\n    this.loadData();\n    this.desktopBreakpointObserver(); \n  }\n\n  /**\n   * Is needed to detect if the current device is\n   * a desktop or mobile device. For desktop devices the\n   * outdoor weather view is shown by the app component globally\n   * and therefore there is no need to display it twice.\n   */\n  private desktopBreakpointObserver() {\n    this.breakpointObserver\n    .observe(['(min-width: 770px)'])\n    .subscribe((state: BreakpointState) => {\n      if (state.matches) {\n        this.desktop = true;\n      } else {\n        this.desktop = false;\n      }\n    });\n  }\n\n  /**\n   * This function loads the reduce motion value. This is needed\n   * to turn on or off the motion of the outdoor weather view\n   * component.\n   */\n   private loadReduceMotionValue() {\n    this.userContextService.getUserContextSubject()\n    .subscribe(data => {\n      let reduceMotionValue = data.reduceMotion;\n      this.reduceMotion = reduceMotionValue;\n    });\n  }\n\n  /**\n   * This function loads the needed data for the \n   * dashboard. These are the dashboard tiles array and\n   * the outdoor weather data. For both the weather data\n   * service is used. \n   * This function also shows and hides the loading spinner.\n   */\n   private loadData(): void {\n    this.spinner.show()\n    this.weatherDataService.getDashboardTilesSubject()\n                      .subscribe(data => {\n                        this.dashboardTiles = data\n                        if (data.length > 0) {\n                          this.spinner.hide();\n                        }\n                      });\n    this.weatherDataService.getOutdoorWeatherDataSubject()\n                        .subscribe(data => {\n                          this.outdoorData = data});\n  }\n}\n\n    \n\n    \n        \n    \n    \n    \n        \n            \n            \n                \n         \n            \n                \n                    \n                    \n                \n                \n                    \n                    \n                \n                \n                    \n                    \n                \n                \n                    \n                    \n                    \n                    \n                \n                \n                    \n                    \n                    \n                    \n                \n                {{tileType[item.type]}} is not implemented yet\n            \n        \n    \n    \n\n    \n\n    \n                \n                    ./dashboard-view.component.scss\n                \n                .card-container {\n    padding-top: calc(var(--dashboard-outdoor-weather-size) + var(--navbar-height) + var(--padding));\n    left: 0;\n    right: 0;\n}\n\n.flex-container {\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: space-between;\n    // align-items: stretch;\n}\n\n.card-container.motion-disabled {\n    padding: var(--navbar-height) 0 var(--border-padding-bottom) 0;\n}\n\n\n// Responsive design -> only one breakpoint to reduce complexity\n// css code for desktop\n@media(min-width: 770px), (prefers-reduced-motion: reduce){\n    .card-container {\n        padding-top: var(--navbar-height);\n    }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var{{tileType[item.type]}} is not implemented yet                            '\n    var COMPONENTS = [{'name': 'ApparentTemperatureTileViewComponent', 'selector': 'app-apparent-temperature-tile-view'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BackButtonElementComponent', 'selector': 'app-back-button-element'},{'name': 'CalibrationInfoDetailViewComponent', 'selector': 'app-calibration-info-detail-view'},{'name': 'CardElementComponent', 'selector': 'card-element'},{'name': 'CheckboxSwitcherElementComponent', 'selector': 'app-checkbox-switcher-element'},{'name': 'ConfigurationTilePopUpDialogView', 'selector': 'configuration-tile-popup-view'},{'name': 'ConfigurationTileViewComponent', 'selector': 'app-configuration-tile-view'},{'name': 'ConfigurationViewComponent', 'selector': 'app-configuration-view'},{'name': 'DashboardScreenComponent', 'selector': 'app-dashboard-screen'},{'name': 'DashboardViewComponent', 'selector': 'app-dashboard-view'},{'name': 'DetailScreenComponent', 'selector': 'app-detail-screen'},{'name': 'ForecastDetailViewComponent', 'selector': 'app-forecast-detail-view'},{'name': 'ForecastTileViewComponent', 'selector': 'app-forecast-tile-view'},{'name': 'HistoryDetailViewComponent', 'selector': 'app-history-detail-view'},{'name': 'HistoryTileViewComponent', 'selector': 'app-history-tile-view'},{'name': 'HumidityTileViewComponent', 'selector': 'app-humidity-tile-view'},{'name': 'IndoorDetailViewComponent', 'selector': 'app-indoor-detail-view'},{'name': 'IndoorTileViewComponent', 'selector': 'app-indoor-tile-view'},{'name': 'LoginViewComponent', 'selector': 'app-login-view'},{'name': 'MenuBarElementComponent', 'selector': 'app-menu-bar-element'},{'name': 'MenuButtonElementComponent', 'selector': 'app-menu-button-element'},{'name': 'MenuElementComponent', 'selector': 'app-menu-element'},{'name': 'NavBarElementComponent', 'selector': 'app-nav-bar-element'},{'name': 'OnboardingScreenComponent', 'selector': 'app-onboarding-screen'},{'name': 'OpenAPELoginTileViewComponent', 'selector': 'app-open-apelogin-tile-view'},{'name': 'OutdoorWeatherDetailViewComponent', 'selector': 'app-outdoor-weather-detail-view'},{'name': 'OutdoorWeatherViewComponent', 'selector': 'app-outdoor-weather-view'},{'name': 'PersonalizationSettingsViewComponent', 'selector': 'app-personalization-settings-view'},{'name': 'PersonalizationViewComponent', 'selector': 'app-personalization-view'},{'name': 'PollenflugDetailViewComponent', 'selector': 'app-pollenflug-detail-view'},{'name': 'PollenflugSmallTileComponent', 'selector': 'app-pollenflug-small-tile'},{'name': 'PollenflugTileViewComponent', 'selector': 'app-pollenflug-tile-view'},{'name': 'PollenListElementComponent', 'selector': 'app-pollen-list-element'},{'name': 'PollenTagElementComponent', 'selector': 'app-pollen-tag-element'},{'name': 'ProgressChartElementComponent', 'selector': 'app-progress-chart-element'},{'name': 'RegistrationViewComponent', 'selector': 'app-registration-view'},{'name': 'SettingsScreenComponent', 'selector': 'app-settings-screen'},{'name': 'SimpleTileViewComponent', 'selector': 'app-simple-tile-view'},{'name': 'SliderElementComponent', 'selector': 'app-slider-element'},{'name': 'TtsPlayerElementComponent', 'selector': 'app-tts-player-element'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DashboardViewComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DetailScreenComponent.html":{"url":"components/DetailScreenComponent.html","title":"component - DetailScreenComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DetailScreenComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/screens/detail-screen/detail-screen.component.ts\n\n\n    \n        Description\n    \n    \n        Detail screen component \nWrapper component to display the detail screens.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-detail-screen\n            \n\n            \n                styleUrls\n                ./detail-screen.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./detail-screen.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                desktop\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/screens/detail-screen/detail-screen.component.ts:14\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/screens/detail-screen/detail-screen.component.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            desktop\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/screens/detail-screen/detail-screen.component.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n/**\n * Detail screen component \n * \n * Wrapper component to display the detail screens.\n */\n@Component({\n  selector: 'app-detail-screen',\n  templateUrl: './detail-screen.component.html',\n  styleUrls: ['./detail-screen.component.scss'],\n})\nexport class DetailScreenComponent implements OnInit {\n  public desktop: boolean = false;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        \n    \n        \n    \n\n\n    \n\n    \n                \n                    ./detail-screen.component.scss\n                \n                .container {\n    padding-top: var(--navbar-height);\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                '\n    var COMPONENTS = [{'name': 'ApparentTemperatureTileViewComponent', 'selector': 'app-apparent-temperature-tile-view'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BackButtonElementComponent', 'selector': 'app-back-button-element'},{'name': 'CalibrationInfoDetailViewComponent', 'selector': 'app-calibration-info-detail-view'},{'name': 'CardElementComponent', 'selector': 'card-element'},{'name': 'CheckboxSwitcherElementComponent', 'selector': 'app-checkbox-switcher-element'},{'name': 'ConfigurationTilePopUpDialogView', 'selector': 'configuration-tile-popup-view'},{'name': 'ConfigurationTileViewComponent', 'selector': 'app-configuration-tile-view'},{'name': 'ConfigurationViewComponent', 'selector': 'app-configuration-view'},{'name': 'DashboardScreenComponent', 'selector': 'app-dashboard-screen'},{'name': 'DashboardViewComponent', 'selector': 'app-dashboard-view'},{'name': 'DetailScreenComponent', 'selector': 'app-detail-screen'},{'name': 'ForecastDetailViewComponent', 'selector': 'app-forecast-detail-view'},{'name': 'ForecastTileViewComponent', 'selector': 'app-forecast-tile-view'},{'name': 'HistoryDetailViewComponent', 'selector': 'app-history-detail-view'},{'name': 'HistoryTileViewComponent', 'selector': 'app-history-tile-view'},{'name': 'HumidityTileViewComponent', 'selector': 'app-humidity-tile-view'},{'name': 'IndoorDetailViewComponent', 'selector': 'app-indoor-detail-view'},{'name': 'IndoorTileViewComponent', 'selector': 'app-indoor-tile-view'},{'name': 'LoginViewComponent', 'selector': 'app-login-view'},{'name': 'MenuBarElementComponent', 'selector': 'app-menu-bar-element'},{'name': 'MenuButtonElementComponent', 'selector': 'app-menu-button-element'},{'name': 'MenuElementComponent', 'selector': 'app-menu-element'},{'name': 'NavBarElementComponent', 'selector': 'app-nav-bar-element'},{'name': 'OnboardingScreenComponent', 'selector': 'app-onboarding-screen'},{'name': 'OpenAPELoginTileViewComponent', 'selector': 'app-open-apelogin-tile-view'},{'name': 'OutdoorWeatherDetailViewComponent', 'selector': 'app-outdoor-weather-detail-view'},{'name': 'OutdoorWeatherViewComponent', 'selector': 'app-outdoor-weather-view'},{'name': 'PersonalizationSettingsViewComponent', 'selector': 'app-personalization-settings-view'},{'name': 'PersonalizationViewComponent', 'selector': 'app-personalization-view'},{'name': 'PollenflugDetailViewComponent', 'selector': 'app-pollenflug-detail-view'},{'name': 'PollenflugSmallTileComponent', 'selector': 'app-pollenflug-small-tile'},{'name': 'PollenflugTileViewComponent', 'selector': 'app-pollenflug-tile-view'},{'name': 'PollenListElementComponent', 'selector': 'app-pollen-list-element'},{'name': 'PollenTagElementComponent', 'selector': 'app-pollen-tag-element'},{'name': 'ProgressChartElementComponent', 'selector': 'app-progress-chart-element'},{'name': 'RegistrationViewComponent', 'selector': 'app-registration-view'},{'name': 'SettingsScreenComponent', 'selector': 'app-settings-screen'},{'name': 'SimpleTileViewComponent', 'selector': 'app-simple-tile-view'},{'name': 'SliderElementComponent', 'selector': 'app-slider-element'},{'name': 'TtsPlayerElementComponent', 'selector': 'app-tts-player-element'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DetailScreenComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ESPConfiguration.html":{"url":"interfaces/ESPConfiguration.html","title":"interface - ESPConfiguration","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ESPConfiguration\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/api/esp-configuration-api.service.ts\n        \n\n            \n                Description\n            \n            \n                Model of ESPConfiguration response\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        id\n                                \n                                \n                                        roomName\n                                \n                                \n                                        sensorType\n                                \n                                \n                                        transmissionFrequency\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        roomName\n                                    \n                                \n                                \n                                    \n                                        roomName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sensorType\n                                    \n                                \n                                \n                                    \n                                        sensorType:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        transmissionFrequency\n                                    \n                                \n                                \n                                    \n                                        transmissionFrequency:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpClient, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { SENSOR1, SENSOR2 } from 'src/app/model/mock-data/weather.mock';\nimport { environment } from 'src/environments/environment';\n\n/**\n * ESP configuration api service injectable\n * \n * Use this service to access the network\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class ESPConfigurationAPIService {\n  private allConfigs = environment.baseURL + 'espconfig/all';\n  private changeConfig = environment.baseURL + 'espconfig/change';\n  private calibration = environment.baseURL + 'calibration/insert';\n\n  constructor(private httpClient: HttpClient) { }\n\n  /**\n   * @returns an observable with ESPConfigurations[] object\n   */\n  public loadESPConfigs(): Observable {\n    if (environment.testData) {\n      return of([SENSOR1, SENSOR2]) \n    }\n    let returnObservable = new Observable((observer) => {\n      let response = this.httpClient.get(this.allConfigs);\n      response.subscribe(data => {\n        observer.next(data);\n        observer.complete();\n      })\n    });\n    return returnObservable;\n  }\n\n  /**\n   * @returns an observable with the updatet ESPConfiguration\n   */\n  public postESPConfiguration(configuration: ESPConfiguration): Observable {\n    let returnObservable = new Observable((observer) => {\n      let response = this.httpClient.post(this.changeConfig, configuration,{observe: 'response'});\n      response.subscribe((response) => {\n        let body = response.body\n        let status = response.statusText\n        console.log(status);\n\n        if(body){\n          observer.next(body);\n          observer.complete();\n        }\n    \n        },\n        (error)=> {\n          observer.error(\"Ein Fehler ist aufgetreten. Bitte versuche es später erneut. \");\n          console.log(error);\n          observer.complete();\n        },() => {\n          observer.complete();\n        }\n      );\n    });\n    return returnObservable;\n  }\n\n  /**\n   * Starts the Calibration worker for the given sensor kit\n   * @param sensorId  the device id of the sensor\n   * @returns an observable with a boolean\n   */\n     public startConfiguration(sensorId: number): Observable{\n      let returnObservable = new Observable((observer) => {\n        let httpOptions = {\n          params: new HttpParams().set('deviceID', sensorId + ''),\n        };\n        let response = this.httpClient.get(this.calibration, httpOptions);\n        response.subscribe(() => {\n          observer.next(true);\n          observer.complete();\n        },\n        () => {\n          observer.next(false);\n          observer.complete();\n        })\n      });\n      return returnObservable;\n    }\n}\n\n/**\n * Model of ESPConfiguration response\n */\nexport interface ESPConfiguration {\n  id: number,\n  roomName: string,\n  transmissionFrequency: number,\n  sensorType: string,\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ESPConfigurationAPIService.html":{"url":"injectables/ESPConfigurationAPIService.html","title":"injectable - ESPConfigurationAPIService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ESPConfigurationAPIService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/api/esp-configuration-api.service.ts\n        \n\n            \n                Description\n            \n            \n                ESP configuration api service injectable\nUse this service to access the network\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                loadESPConfigs\n                            \n                            \n                                    Public\n                                postESPConfiguration\n                            \n                            \n                                    Public\n                                startConfiguration\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/api/esp-configuration-api.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            loadESPConfigs\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    loadESPConfigs()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/api/esp-configuration-api.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        an observable with ESPConfigurations[] object\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            postESPConfiguration\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    postESPConfiguration(configuration: ESPConfiguration)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/api/esp-configuration-api.service.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    configuration\n                                    \n                                                ESPConfiguration\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        an observable with the updatet ESPConfiguration\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            startConfiguration\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    startConfiguration(sensorId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/api/esp-configuration-api.service.ts:73\n                \n            \n\n\n            \n                \n                    Starts the Calibration worker for the given sensor kit\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    sensorId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the device id of the sensor\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        an observable with a boolean\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { SENSOR1, SENSOR2 } from 'src/app/model/mock-data/weather.mock';\nimport { environment } from 'src/environments/environment';\n\n/**\n * ESP configuration api service injectable\n * \n * Use this service to access the network\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class ESPConfigurationAPIService {\n  private allConfigs = environment.baseURL + 'espconfig/all';\n  private changeConfig = environment.baseURL + 'espconfig/change';\n  private calibration = environment.baseURL + 'calibration/insert';\n\n  constructor(private httpClient: HttpClient) { }\n\n  /**\n   * @returns an observable with ESPConfigurations[] object\n   */\n  public loadESPConfigs(): Observable {\n    if (environment.testData) {\n      return of([SENSOR1, SENSOR2]) \n    }\n    let returnObservable = new Observable((observer) => {\n      let response = this.httpClient.get(this.allConfigs);\n      response.subscribe(data => {\n        observer.next(data);\n        observer.complete();\n      })\n    });\n    return returnObservable;\n  }\n\n  /**\n   * @returns an observable with the updatet ESPConfiguration\n   */\n  public postESPConfiguration(configuration: ESPConfiguration): Observable {\n    let returnObservable = new Observable((observer) => {\n      let response = this.httpClient.post(this.changeConfig, configuration,{observe: 'response'});\n      response.subscribe((response) => {\n        let body = response.body\n        let status = response.statusText\n        console.log(status);\n\n        if(body){\n          observer.next(body);\n          observer.complete();\n        }\n    \n        },\n        (error)=> {\n          observer.error(\"Ein Fehler ist aufgetreten. Bitte versuche es später erneut. \");\n          console.log(error);\n          observer.complete();\n        },() => {\n          observer.complete();\n        }\n      );\n    });\n    return returnObservable;\n  }\n\n  /**\n   * Starts the Calibration worker for the given sensor kit\n   * @param sensorId  the device id of the sensor\n   * @returns an observable with a boolean\n   */\n     public startConfiguration(sensorId: number): Observable{\n      let returnObservable = new Observable((observer) => {\n        let httpOptions = {\n          params: new HttpParams().set('deviceID', sensorId + ''),\n        };\n        let response = this.httpClient.get(this.calibration, httpOptions);\n        response.subscribe(() => {\n          observer.next(true);\n          observer.complete();\n        },\n        () => {\n          observer.next(false);\n          observer.complete();\n        })\n      });\n      return returnObservable;\n    }\n}\n\n/**\n * Model of ESPConfiguration response\n */\nexport interface ESPConfiguration {\n  id: number,\n  roomName: string,\n  transmissionFrequency: number,\n  sensorType: string,\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ForecastDetailViewComponent.html":{"url":"components/ForecastDetailViewComponent.html","title":"component - ForecastDetailViewComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ForecastDetailViewComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/views/forecast-detail-view/forecast-detail-view.component.ts\n\n\n    \n        Description\n    \n    \n        Forecast detail view component\nThis component displays the forecast tile view component and\nan information text about the forecast. It is also responsible\nfor the loading of the forecast data.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-forecast-detail-view\n            \n\n            \n                styleUrls\n                ./forecast-detail-view.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./forecast-detail-view.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                forecast\n                            \n                            \n                                ttsTextGeneratorFunction\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(weatherDataService: WeatherDataService, textService: TextService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/views/forecast-detail-view/forecast-detail-view.component.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        weatherDataService\n                                                  \n                                                        \n                                                                        WeatherDataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        textService\n                                                  \n                                                        \n                                                                        TextService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/views/forecast-detail-view/forecast-detail-view.component.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            forecast\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         WeatherForecastData\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/views/forecast-detail-view/forecast-detail-view.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ttsTextGeneratorFunction\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/views/forecast-detail-view/forecast-detail-view.component.ts:24\n                            \n                        \n\n                \n                    \n                        this function computes the to be read aloud text for the tts feature. \nThis function is passed to the tts player element\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { WeatherForecastData } from 'src/app/model/weather';\nimport { TextService } from 'src/app/services/text.service';\nimport { WeatherDataService } from 'src/app/services/weather-data.service';\n\n/**\n * Forecast detail view component\n * \n * This component displays the forecast tile view component and\n * an information text about the forecast. It is also responsible\n * for the loading of the forecast data.\n */\n@Component({\n  selector: 'app-forecast-detail-view',\n  templateUrl: './forecast-detail-view.component.html',\n  styleUrls: ['./forecast-detail-view.component.scss']\n})\nexport class ForecastDetailViewComponent implements OnInit {\n  forecast?: WeatherForecastData;\n  /**\n   * this function computes the to be read aloud text for the tts feature. \n   * This function is passed to the tts player element\n   */\n  ttsTextGeneratorFunction = () => this.textService.createForecastText(this.forecast)\n\n  constructor(private weatherDataService: WeatherDataService,\n    private textService: TextService) { }\n\n  ngOnInit(): void {\n    this.loadForecastData();\n  }\n\n  /**\n   * Subscribes the forecast data subject. Every time the data in the\n   * service changes this function will be called. \n   */\n  private loadForecastData() {\n    this.weatherDataService.getForecastDataSubject()\n                        .subscribe(data => this.forecast = data);\n  }\n}\n\n    \n\n    \n        \n\n\n\n\n \n\n/**\n * Imprecise description of the basic funcionality of the Zambretti Algorithm \n * to inform the user how weather forecast is made\n */\n\nAlles zur Vorhersage\n    Die Abschätzung der zukünftigen Wetterentwicklung interessiert die Menschen seit Jahrtausenden und ist Gegenstand intensiver Erfahrung und zunehmender Forschung.\n    Versuche, das Wetter vorherzusagen, sind seit dem Altertum überliefert und dürften noch länger zurückreichen, wenn man bedenkt, wie stark Menschen – besonders in der Landwirtschaft – von Niederschlag und Temperatur abhängig waren. Ziel der Wettervorhersage ist die Prognose eines Zustandes der Atmosphäre zu einer bestimmten Zeit an einem bestimmten Ort oder in einem bestimmten Gebiet. Dabei sind tatsächlich nicht nur Wettererscheinungen, die sich am Boden auswirken, gemeint, sondern es wird die gesamte Erdatmosphäre betrachtet.\n\n\n\n\n    \n\n    \n                \n                    ./forecast-detail-view.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ' /** * Imprecise description of the basic funcionality of the Zambretti Algorithm  * to inform the user how weather forecast is made */Alles zur Vorhersage    Die Abschätzung der zukünftigen Wetterentwicklung interessiert die Menschen seit Jahrtausenden und ist Gegenstand intensiver Erfahrung und zunehmender Forschung.    Versuche, das Wetter vorherzusagen, sind seit dem Altertum überliefert und dürften noch länger zurückreichen, wenn man bedenkt, wie stark Menschen – besonders in der Landwirtschaft – von Niederschlag und Temperatur abhängig waren. Ziel der Wettervorhersage ist die Prognose eines Zustandes der Atmosphäre zu einer bestimmten Zeit an einem bestimmten Ort oder in einem bestimmten Gebiet. Dabei sind tatsächlich nicht nur Wettererscheinungen, die sich am Boden auswirken, gemeint, sondern es wird die gesamte Erdatmosphäre betrachtet.'\n    var COMPONENTS = [{'name': 'ApparentTemperatureTileViewComponent', 'selector': 'app-apparent-temperature-tile-view'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BackButtonElementComponent', 'selector': 'app-back-button-element'},{'name': 'CalibrationInfoDetailViewComponent', 'selector': 'app-calibration-info-detail-view'},{'name': 'CardElementComponent', 'selector': 'card-element'},{'name': 'CheckboxSwitcherElementComponent', 'selector': 'app-checkbox-switcher-element'},{'name': 'ConfigurationTilePopUpDialogView', 'selector': 'configuration-tile-popup-view'},{'name': 'ConfigurationTileViewComponent', 'selector': 'app-configuration-tile-view'},{'name': 'ConfigurationViewComponent', 'selector': 'app-configuration-view'},{'name': 'DashboardScreenComponent', 'selector': 'app-dashboard-screen'},{'name': 'DashboardViewComponent', 'selector': 'app-dashboard-view'},{'name': 'DetailScreenComponent', 'selector': 'app-detail-screen'},{'name': 'ForecastDetailViewComponent', 'selector': 'app-forecast-detail-view'},{'name': 'ForecastTileViewComponent', 'selector': 'app-forecast-tile-view'},{'name': 'HistoryDetailViewComponent', 'selector': 'app-history-detail-view'},{'name': 'HistoryTileViewComponent', 'selector': 'app-history-tile-view'},{'name': 'HumidityTileViewComponent', 'selector': 'app-humidity-tile-view'},{'name': 'IndoorDetailViewComponent', 'selector': 'app-indoor-detail-view'},{'name': 'IndoorTileViewComponent', 'selector': 'app-indoor-tile-view'},{'name': 'LoginViewComponent', 'selector': 'app-login-view'},{'name': 'MenuBarElementComponent', 'selector': 'app-menu-bar-element'},{'name': 'MenuButtonElementComponent', 'selector': 'app-menu-button-element'},{'name': 'MenuElementComponent', 'selector': 'app-menu-element'},{'name': 'NavBarElementComponent', 'selector': 'app-nav-bar-element'},{'name': 'OnboardingScreenComponent', 'selector': 'app-onboarding-screen'},{'name': 'OpenAPELoginTileViewComponent', 'selector': 'app-open-apelogin-tile-view'},{'name': 'OutdoorWeatherDetailViewComponent', 'selector': 'app-outdoor-weather-detail-view'},{'name': 'OutdoorWeatherViewComponent', 'selector': 'app-outdoor-weather-view'},{'name': 'PersonalizationSettingsViewComponent', 'selector': 'app-personalization-settings-view'},{'name': 'PersonalizationViewComponent', 'selector': 'app-personalization-view'},{'name': 'PollenflugDetailViewComponent', 'selector': 'app-pollenflug-detail-view'},{'name': 'PollenflugSmallTileComponent', 'selector': 'app-pollenflug-small-tile'},{'name': 'PollenflugTileViewComponent', 'selector': 'app-pollenflug-tile-view'},{'name': 'PollenListElementComponent', 'selector': 'app-pollen-list-element'},{'name': 'PollenTagElementComponent', 'selector': 'app-pollen-tag-element'},{'name': 'ProgressChartElementComponent', 'selector': 'app-progress-chart-element'},{'name': 'RegistrationViewComponent', 'selector': 'app-registration-view'},{'name': 'SettingsScreenComponent', 'selector': 'app-settings-screen'},{'name': 'SimpleTileViewComponent', 'selector': 'app-simple-tile-view'},{'name': 'SliderElementComponent', 'selector': 'app-slider-element'},{'name': 'TtsPlayerElementComponent', 'selector': 'app-tts-player-element'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ForecastDetailViewComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ForecastResponse.html":{"url":"interfaces/ForecastResponse.html","title":"interface - ForecastResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ForecastResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/api/weather-api.service.ts\n        \n\n            \n                Description\n            \n            \n                Model of the forecast api response\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        id\n                                \n                                \n                                        seaPressure\n                                \n                                \n                                        timestampd\n                                \n                                \n                                        trend\n                                \n                                \n                                        weatherDescription\n                                \n                                \n                                        weatherIcon\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        seaPressure\n                                    \n                                \n                                \n                                    \n                                        seaPressure:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timestampd\n                                    \n                                \n                                \n                                    \n                                        timestampd:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        trend\n                                    \n                                \n                                \n                                    \n                                        trend:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        weatherDescription\n                                    \n                                \n                                \n                                    \n                                        weatherDescription:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        weatherIcon\n                                    \n                                \n                                \n                                    \n                                        weatherIcon:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { FORECAST, INDOORAIRQUALITY, OUTDOORWEATHER, POLLEN, WEATHERHISTORY } from '../../model/mock-data/weather.mock';\nimport { OutdoorWeatherData, PollenData, IndoorRoomData, WeatherForecastData, WeatherHistoryData } from '../../model/weather';\nimport { Observable, of } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\n\n/**\n * Weather api service injectable\n * \n * Use this service to access the network. It implementes all routes \n * for the weather data.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class WeatherAPIService {\n  private outdoorURL = environment.baseURL + 'weather-data/outdoor/latest';\n  private indoorURL = environment.baseURL + 'weather-data/indoor/latest';\n  private historyURL = environment.baseURL + 'weather-data/outdoor/history';\n  private forecastURL = environment.baseURL + 'weather-data/forecast/latest';\n  private allPollenTypesURL = environment.baseURL + 'pollen/all';\n\n  constructor(private httpClient: HttpClient) { }\n\n  /**\n   * @returns an observable with the loadad OutdoorWeatherData from the api or test data\n   */\n  public loadOutdoorWeather(): Observable {\n    if (environment.testData) {\n      return of(OUTDOORWEATHER);\n    }\n    let returnObservable = new Observable((observer) => {\n        this.httpClient.get(this.outdoorURL).subscribe(data => {\n          if(data.id === undefined) {\n            observer.next();\n            observer.complete();\n          } else {\n            let outdoorData = this.createOutdoorWeatherDataFromServerResponse(data);\n            observer.next(outdoorData);\n            observer.complete();\n          }\n        },\n        (error) => {\n          console.log(error);\n          observer.next();\n          observer.complete();\n        })\n      }\n    );\n    return returnObservable;\n  }\n\n  /**\n   * @returns an observable with the loadad WeatherForecastData from the api or test data\n   */\n  public loadForecast(): Observable {\n    if (environment.testData) {\n      return of(FORECAST);\n    }\n    let returnObservable = new Observable((observer) => {\n        this.httpClient.get(this.forecastURL).subscribe(data => {\n          let forecastData = this.createOutdoorForecastDataFromServerResponse(data);\n          observer.next(forecastData);\n          observer.complete();\n        },\n        (error) => {\n          console.log(error);\n          observer.next();\n          observer.complete();\n        })\n      }\n    );\n    return returnObservable;\n  }\n\n  /**\n   * @returns an observable with the loadad PollenData from the api or test data\n   */\n  public loadPollen(): Observable{\n    if (environment.testData) {\n      let pollen = of(POLLEN);\n      return pollen;\n    }\n    let returnObservable = new Observable((observer) => {\n      let response = this.httpClient.get(this.allPollenTypesURL);\n      response.subscribe(data => {\n        let pollenData = this.createPollenDataFromServerResponse(data);\n        observer.next(pollenData);\n        observer.complete();\n      },\n      (error) => {\n        console.log(error);\n        observer.next([]);\n        observer.complete();\n      })\n    });\n    return returnObservable;\n  }\n\n  /**\n   * @returns an observable with the loadad IndoorRoomData from the api or test data\n   */\n  public loadIndoorRoomData(): Observable {\n    if (environment.testData) {\n      let indoorData = of(INDOORAIRQUALITY);\n      return indoorData;\n    }\n    let returnObservable = new Observable((observer) => { // Wir brauchen hier ein Array, -> sollen ja mehrere Räume möglich sein (theoretisch...)\n        this.httpClient.get(this.indoorURL).subscribe(data => {\n          let indoorData = this.createIndoorRoomDataFromServerResponse(data);\n          observer.next([indoorData]);\n          observer.complete();\n        },\n        (error) => {\n          console.log(error);\n          observer.next([]);\n          observer.complete();\n        })\n      }\n    );\n    return returnObservable;\n  }\n\n  /**\n   * @returns an observable with the loadad WeatherHistoryData or test data\n   */\n  public loadHistoryDataSubject(endDate: Date, beginDate: Date): Observable {\n    if (environment.testData) {\n      let forecastData = of(WEATHERHISTORY);\n      return forecastData;\n    }\n    let returnObservable = new Observable((observer) => { \n        this.httpClient.post(this.historyURL,\n          {\n            'begin': this.createServerFriendlyDate(beginDate),\n            'end': this.createServerFriendlyDate(endDate)\n          })\n        .subscribe(data => {\n          let dataPoints: OutdoorWeatherData[] = data.map((element) => {\n            return this.createOutdoorWeatherDataFromServerResponse(element);\n          });\n          observer.next({'datapoints': dataPoints});\n          observer.complete();\n        },\n        (error) => {\n          console.log(error);\n          observer.next();\n          observer.complete();\n        })\n      }\n    );\n    return returnObservable;\n  }\n\n  /**\n   * Helper function to convert date to string\n   * @param date \n   * @returns a date as a string which is understandable for the server\n   */\n  private createServerFriendlyDate(date: Date): string {\n    let dateString = date.toISOString().slice(0, 10);\n    let timeString = date.toTimeString().slice(0, 8);\n    return dateString + ' ' + timeString;\n  }\n\n  /**\n   * Helper function to convert the response from the server to an OutdoorWeatherData object\n   * \n   * @param response\n   * @returns OutdoorWeatherData object\n   */\n  private createOutdoorWeatherDataFromServerResponse(response: OutdoorWeatherResponse): OutdoorWeatherData {\n    const date = response.timestamp;\n    const year = date.substr(0, 4);\n    const month = date.substr(5, 2);\n    const day = date.substr(8, 2);\n    const time = date.substr(11);\n\n    const validDate = new Date(month + '/' + day + '/' + year + ' ' + time);\n\n    return {\n            temperature: response.temperature,\n            maxTemperature: -99, // Not implemented yet\n            minTemperature: -99, // Not implemented yet\n            humidity: response.humidity,\n            timestamp: validDate,\n            weather: response.weather,\n            apparentTemperature: response.apparentTemperature,\n            location: response.location_name,\n            postCode: response.location\n          }\n  }\n\n  /**\n   * Helper function to convert the response from the server to an IndoorRoomData object\n   * \n   * @param response\n   * @returns IndoorRoomData object\n   */\n  private createIndoorRoomDataFromServerResponse(response: IndoorRoomResponse): IndoorRoomData {\n    return {\n            roomID: response.id + '',\n            roomName: response.roomName,\n            airQuality: response.gasVal, \n            temperature: response.temperature, \n            humidity: response.humidity, \n            timestamp: new Date(response.timestamp), \n            calibrationValue: response.gasValCalibrationValue,\n          }\n  }\n\n  /**\n   * Helper function to convert the response from the server to an PollenData[] object\n   * \n   * @param response\n   * @returns PollenData[] object\n   */\n  private createPollenDataFromServerResponse(response: PollenResponse[]): PollenData[] {\n    let pollen: PollenData[] = [];\n    response.forEach(item => {\n      pollen.push({\n        id: item.id,\n        pollenName: item.pollenName,\n        today: item.loadRating,\n        tomorrow: ''\n      })\n    })\n    return pollen\n  }\n\n  /**\n   * Helper function to convert the response from the server to an WeatherForecastData object\n   * \n   * @param response\n   * @returns WeatherForecastData object\n   */\n  private createOutdoorForecastDataFromServerResponse(response: ForecastResponse): WeatherForecastData {\n    return {\n      trend: response.trend,\n      weatherDescription: response.weatherDescription, \n      weatherIcon: response.weatherIcon\n    }\n  }\n}\n\n/**\n * Model of the pollen api response\n */\ninterface PollenResponse {\n  id: number,\n  pollenName: string,\n  loadRating: string,\n}\n\n/**\n * Model of the outdoor weather api response\n */\ninterface OutdoorWeatherResponse {\n  id: number,\n  humidity: number,\n  temperature: number,\n  pressure: number,\n  location: string,\n  location_name: string,\n  timestamp: string,\n  weather: string,\n  apparentTemperature: number\n}\n\n/**\n * Model of the indoor room api response\n */\ninterface IndoorRoomResponse {\n  id: number,\n  humidity: number,\n  temperature: number,\n  pressure: number,\n  gasVal: number,\n  location: string,\n  timestamp: string,\n  gasValCalibrationValue: number,\n  roomName: string,\n}\n\n/**\n * Model of the forecast api response\n */\ninterface ForecastResponse {\n  id: number,\n  trend: string,\n  weatherIcon: string,\n  weatherDescription: string,\n  seaPressure: number,\n  timestampd: string\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ForecastTileViewComponent.html":{"url":"components/ForecastTileViewComponent.html","title":"component - ForecastTileViewComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ForecastTileViewComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/views/forecast-tile-view/forecast-tile-view.component.ts\n\n\n    \n        Description\n    \n    \n        Forecast tile view component\nThis component displays in form of a tile (widget) the forecast \ninformation. It takes an object of the type WeatherData as information source. \nItself has no connection to any data service. \nIt uses the card-view-element to define the layout.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-forecast-tile-view\n            \n\n            \n                styleUrls\n                ./forecast-tile-view.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./forecast-tile-view.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                _forecast\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getForecastDescription\n                            \n                            \n                                getForecastIcon\n                            \n                            \n                                getForecastTitle\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                hideSubtitle\n                            \n                            \n                                pressable\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    data\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(imageService: ImageService, textService: TextService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/views/forecast-tile-view/forecast-tile-view.component.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        imageService\n                                                  \n                                                        \n                                                                        ImageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        textService\n                                                  \n                                                        \n                                                                        TextService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        data\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/views/forecast-tile-view/forecast-tile-view.component.ts:23\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        hideSubtitle\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/views/forecast-tile-view/forecast-tile-view.component.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        pressable\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/views/forecast-tile-view/forecast-tile-view.component.ts:20\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getForecastDescription\n                        \n                        \n                    \n                \n            \n            \n                \ngetForecastDescription()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/views/forecast-tile-view/forecast-tile-view.component.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :     string | undefined\n\n                    \n                    \n                        The forecast description string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getForecastIcon\n                        \n                        \n                    \n                \n            \n            \n                \ngetForecastIcon()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/views/forecast-tile-view/forecast-tile-view.component.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :     string | undefined\n\n                    \n                    \n                        The url string to the forecast icon\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getForecastTitle\n                        \n                        \n                    \n                \n            \n            \n                \ngetForecastTitle()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/views/forecast-tile-view/forecast-tile-view.component.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :     string | undefined\n\n                    \n                    \n                        The forecast string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/views/forecast-tile-view/forecast-tile-view.component.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            _forecast\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         WeatherForecastData\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/views/forecast-tile-view/forecast-tile-view.component.ts:26\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        data\n                    \n                \n\n\n                \n                    \n                        setdata(data)\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/views/forecast-tile-view/forecast-tile-view.component.ts:23\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            data\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { WeatherData, WeatherForecastData } from 'src/app/model/weather';\nimport { ImageService } from 'src/app/services/image.service';\nimport { TextService } from 'src/app/services/text.service';\n\n/**\n * Forecast tile view component\n * \n * This component displays in form of a tile (widget) the forecast \n * information. It takes an object of the type WeatherData as information source. \n * Itself has no connection to any data service. \n * It uses the card-view-element to define the layout.\n */\n@Component({\n  selector: 'app-forecast-tile-view',\n  templateUrl: './forecast-tile-view.component.html',\n  styleUrls: ['./forecast-tile-view.component.scss']\n})\nexport class ForecastTileViewComponent implements OnInit {\n  @Input() pressable: boolean = false;\n  @Input() hideSubtitle: boolean = false;\n  @Input()\n  set data(data: WeatherData) {\n    this._forecast = data as WeatherForecastData;\n  }\n  _forecast?: WeatherForecastData\n  constructor(private imageService: ImageService,\n    private textService: TextService) { }\n\n  ngOnInit(): void {\n  }\n\n  /**\n   * @returns The url string to the forecast icon\n   */\n  getForecastIcon(): string | undefined {\n    let iconString = this._forecast?.weatherIcon;\n    return this.imageService.getWeatherIconString(iconString);\n  }\n\n  /**\n   * @returns The forecast string\n   */\n  getForecastTitle(): string | undefined {\n    return this.textService.createForecastTitle(this._forecast);\n  }\n\n  /**\n   * @returns The forecast description string\n   */\n  getForecastDescription(): string | undefined {\n    return this.textService.createForecastText(this._forecast);\n  }\n}\n\n    \n\n    \n        \n    \n        {{getForecastDescription()}}\n        \n\n    \n\n\n    \n\n    \n                \n                    ./forecast-tile-view.component.scss\n                \n                // .forecast-image {\n//     width: 7em;\n// }\n\n.flex-container {\n    display: flex;\n    justify-content: space-between;\n    // padding-right: calc(var(--padding) + 60px);\n}\n\n.forecast-image {\n    position: relative;\n    top: -20px;\n    height: 60px;\n    padding-left: var(--padding);\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{getForecastDescription()}}            '\n    var COMPONENTS = [{'name': 'ApparentTemperatureTileViewComponent', 'selector': 'app-apparent-temperature-tile-view'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BackButtonElementComponent', 'selector': 'app-back-button-element'},{'name': 'CalibrationInfoDetailViewComponent', 'selector': 'app-calibration-info-detail-view'},{'name': 'CardElementComponent', 'selector': 'card-element'},{'name': 'CheckboxSwitcherElementComponent', 'selector': 'app-checkbox-switcher-element'},{'name': 'ConfigurationTilePopUpDialogView', 'selector': 'configuration-tile-popup-view'},{'name': 'ConfigurationTileViewComponent', 'selector': 'app-configuration-tile-view'},{'name': 'ConfigurationViewComponent', 'selector': 'app-configuration-view'},{'name': 'DashboardScreenComponent', 'selector': 'app-dashboard-screen'},{'name': 'DashboardViewComponent', 'selector': 'app-dashboard-view'},{'name': 'DetailScreenComponent', 'selector': 'app-detail-screen'},{'name': 'ForecastDetailViewComponent', 'selector': 'app-forecast-detail-view'},{'name': 'ForecastTileViewComponent', 'selector': 'app-forecast-tile-view'},{'name': 'HistoryDetailViewComponent', 'selector': 'app-history-detail-view'},{'name': 'HistoryTileViewComponent', 'selector': 'app-history-tile-view'},{'name': 'HumidityTileViewComponent', 'selector': 'app-humidity-tile-view'},{'name': 'IndoorDetailViewComponent', 'selector': 'app-indoor-detail-view'},{'name': 'IndoorTileViewComponent', 'selector': 'app-indoor-tile-view'},{'name': 'LoginViewComponent', 'selector': 'app-login-view'},{'name': 'MenuBarElementComponent', 'selector': 'app-menu-bar-element'},{'name': 'MenuButtonElementComponent', 'selector': 'app-menu-button-element'},{'name': 'MenuElementComponent', 'selector': 'app-menu-element'},{'name': 'NavBarElementComponent', 'selector': 'app-nav-bar-element'},{'name': 'OnboardingScreenComponent', 'selector': 'app-onboarding-screen'},{'name': 'OpenAPELoginTileViewComponent', 'selector': 'app-open-apelogin-tile-view'},{'name': 'OutdoorWeatherDetailViewComponent', 'selector': 'app-outdoor-weather-detail-view'},{'name': 'OutdoorWeatherViewComponent', 'selector': 'app-outdoor-weather-view'},{'name': 'PersonalizationSettingsViewComponent', 'selector': 'app-personalization-settings-view'},{'name': 'PersonalizationViewComponent', 'selector': 'app-personalization-view'},{'name': 'PollenflugDetailViewComponent', 'selector': 'app-pollenflug-detail-view'},{'name': 'PollenflugSmallTileComponent', 'selector': 'app-pollenflug-small-tile'},{'name': 'PollenflugTileViewComponent', 'selector': 'app-pollenflug-tile-view'},{'name': 'PollenListElementComponent', 'selector': 'app-pollen-list-element'},{'name': 'PollenTagElementComponent', 'selector': 'app-pollen-tag-element'},{'name': 'ProgressChartElementComponent', 'selector': 'app-progress-chart-element'},{'name': 'RegistrationViewComponent', 'selector': 'app-registration-view'},{'name': 'SettingsScreenComponent', 'selector': 'app-settings-screen'},{'name': 'SimpleTileViewComponent', 'selector': 'app-simple-tile-view'},{'name': 'SliderElementComponent', 'selector': 'app-slider-element'},{'name': 'TtsPlayerElementComponent', 'selector': 'app-tts-player-element'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ForecastTileViewComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GraphDataSet.html":{"url":"interfaces/GraphDataSet.html","title":"interface - GraphDataSet","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  GraphDataSet\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/weather.ts\n        \n\n            \n                Description\n            \n            \n                Model of the indoor room data. It contains all information about \nthe temperature, humidity, roomname, airQuality of the current room. \n\n            \n\n            \n                Extends\n            \n            \n                        WeatherData\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        humidityAverage\n                                \n                                \n                                        humidityDataPoints\n                                \n                                \n                                        label\n                                \n                                \n                                        temperatureAverage\n                                \n                                \n                                        temperatureDataPoints\n                                \n                                \n                                        xAxisLabel\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        humidityAverage\n                                    \n                                \n                                \n                                    \n                                        humidityAverage:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        humidityDataPoints\n                                    \n                                \n                                \n                                    \n                                        humidityDataPoints:     number[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        temperatureAverage\n                                    \n                                \n                                \n                                    \n                                        temperatureAverage:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        temperatureDataPoints\n                                    \n                                \n                                \n                                    \n                                        temperatureDataPoints:     number[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        xAxisLabel\n                                    \n                                \n                                \n                                    \n                                        xAxisLabel:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface WeatherData { }\n\n/**\n * Enum to identify the type of the tile. \n */\nexport enum TileType {\n    indoorRoom,\n    pollenSmall,\n    pollenList,\n    history,\n    forecast,\n    humidity,\n    apparentTemperature,\n}\n\n/**\n * This interface bundles the three tile arrays\n */\nexport interface TileArrays {\n    dashboard: Tile[],\n    pollen : Tile[],\n    indoorRooms: Tile[]\n}\n  \n/**\n * Enum to set the priority of a tile\n */\nexport enum TilePriority {\n    important, //Highest \n    high,\n    middle,\n    low,\n}\n\n/**\n * Tile model -\n * Every tile (widget) needs data and a prioriy. The priority is \n * used to determine the position of the tiles on the dashboard. The tiles themselves do not load the data.\n * The data is passed from the parent view of the tiles.\n */\nexport interface Tile {\n    type: TileType;\n    data: A;\n    id: string;\n    priority: TilePriority\n}\n\n/**\n * Model of the outdoor weather data. It contains all information about the current \n * outdoor weather including temperature, humidity and weather type. \n */\nexport interface OutdoorWeatherData extends WeatherData {\n    temperature: number // in °C\n    maxTemperature: number,\n    minTemperature: number, \n    humidity: number, // in %\n    timestamp: Date, \n    weather: string, \n    apparentTemperature: number, // in °C ---> die \"gefühlte\" Temperatur\n    location: string, // e.g. \"Stuttgart\" TODO: Make configurable in ESP Wlan-Board\n    postCode: string,\n}\n\n/**\n * Model of the weather forecast data. It contains all information about \n * the forecast including weather and trend. \n */\nexport interface WeatherForecastData extends WeatherData {\n    trend: string,\n    weatherDescription: string,\n    weatherIcon: string,\n  }\n\n/**\n * Model of the pollen data. It contains all information about \n * the current pollen count.\n */\nexport interface PollenData extends WeatherData {\n    pollenName: string, \n    id: number,\n    today: string, // -1  3\n    tomorrow: string, // -1  3\n}\n\n/**\n * Model of the indoor room data. It contains all information about \n * the temperature, humidity, roomname, airQuality of the current room. \n */\nexport interface IndoorRoomData extends WeatherData {\n    roomID: string,\n    roomName: string,\n    airQuality: number, // in %\n    temperature: number // in °C \n    humidity: number, // in %\n    timestamp: Date, \n    calibrationValue: number\n}\n\n/**\n * Model of the indoor room data. It contains all information about \n * the temperature, humidity, roomname, airQuality of the current room. \n */\nexport interface WeatherHistoryData extends WeatherData {\n    datapoints: OutdoorWeatherData[],\n}\n\n/**\n * Model of the indoor room data. It contains all information about \n * the temperature, humidity, roomname, airQuality of the current room. \n */\nexport interface GraphDataSet extends WeatherData {\n    temperatureDataPoints: number[];\n    humidityDataPoints: number[];\n    xAxisLabel: string[];\n    label: string;\n    temperatureAverage: number;\n    humidityAverage: number;\n}\n\nexport interface WeatherHistoryByDayData extends WeatherData  {\n    averageTemperature: number, // in °C\n    averageHumidity: number, // in %\n}\n\nexport enum Daytime {\n    noon,\n    night,\n    dawn,\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HistoryDetailViewComponent.html":{"url":"components/HistoryDetailViewComponent.html","title":"component - HistoryDetailViewComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HistoryDetailViewComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/views/history-detail-view/history-detail-view.component.ts\n\n\n    \n        Description\n    \n    \n        History detail view component\nThis component displays the history data in form of a line chart.\nIt displays two line charts. One for the temperature history and one\nfor the humidity history. For this the history tile view is used twice.\nIt is also responsible for the loading of the history data.\nThis component uses the history service to compute the graph data.\nIn this way the data can be filterd by day or month.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-history-detail-view\n            \n\n            \n                styleUrls\n                ./history-detail-view.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./history-detail-view.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _index\n                            \n                            \n                                    Optional\n                                dataSet\n                            \n                            \n                                graphType\n                            \n                            \n                                selectedTimeInterval\n                            \n                            \n                                timeIntervalType\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                back\n                            \n                            \n                                forward\n                            \n                            \n                                getAverageHumidityString\n                            \n                            \n                                getAverageTempString\n                            \n                            \n                                isBackPossible\n                            \n                            \n                                isForwardPossible\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                selectInterval\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    index\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(historyTileService: HistoryTileService, weatherDataService: WeatherDataService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/views/history-detail-view/history-detail-view.component.ts:45\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        historyTileService\n                                                  \n                                                        \n                                                                        HistoryTileService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        weatherDataService\n                                                  \n                                                        \n                                                                        WeatherDataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            back\n                        \n                        \n                    \n                \n            \n            \n                \nback()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/views/history-detail-view/history-detail-view.component.ts:116\n                \n            \n\n\n            \n                \n                    Reduces the index\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            forward\n                        \n                        \n                    \n                \n            \n            \n                \nforward()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/views/history-detail-view/history-detail-view.component.ts:97\n                \n            \n\n\n            \n                \n                    Increases the index\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getAverageHumidityString\n                        \n                        \n                    \n                \n            \n            \n                \ngetAverageHumidityString()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/views/history-detail-view/history-detail-view.component.ts:145\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        the average humidity string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getAverageTempString\n                        \n                        \n                    \n                \n            \n            \n                \ngetAverageTempString()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/views/history-detail-view/history-detail-view.component.ts:135\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        the average temperature string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isBackPossible\n                        \n                        \n                    \n                \n            \n            \n                \nisBackPossible()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/views/history-detail-view/history-detail-view.component.ts:125\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        true if the index is not smaller than 0. \n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isForwardPossible\n                        \n                        \n                    \n                \n            \n            \n                \nisForwardPossible()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/views/history-detail-view/history-detail-view.component.ts:106\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        true if more data is there to show\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/views/history-detail-view/history-detail-view.component.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            selectInterval\n                        \n                        \n                    \n                \n            \n            \n                \nselectInterval()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/views/history-detail-view/history-detail-view.component.ts:68\n                \n            \n\n\n            \n                \n                    Is called after the interval was changed. In this way the index is reset\nto the inital value\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _index\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/views/history-detail-view/history-detail-view.component.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            dataSet\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         GraphDataSet[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/views/history-detail-view/history-detail-view.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            graphType\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : HistoryGraphType\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/views/history-detail-view/history-detail-view.component.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedTimeInterval\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : TimeInterval.day\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/views/history-detail-view/history-detail-view.component.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            timeIntervalType\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : TimeInterval\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/views/history-detail-view/history-detail-view.component.ts:45\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        index\n                    \n                \n\n                \n                    \n                        getindex()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/views/history-detail-view/history-detail-view.component.ts:38\n                                \n                            \n\n                \n                    \n                        setindex(value: number)\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/views/history-detail-view/history-detail-view.component.ts:30\n                                \n                            \n                    \n                        \n                                Setting the index  checks if the end of the array is\nreached. In this the case, the weather data \nservice is told to load more data if possible.\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            number\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { GraphDataSet, WeatherHistoryData } from 'src/app/model/weather';\nimport { HistoryTileService } from 'src/app/services/history-tile.service';\nimport { WeatherDataService } from 'src/app/services/weather-data.service';\nimport { HistoryGraphType } from '../history-tile-view/history-tile-view.component';\n\n/**\n * History detail view component\n * \n * This component displays the history data in form of a line chart.\n * It displays two line charts. One for the temperature history and one\n * for the humidity history. For this the history tile view is used twice.\n * It is also responsible for the loading of the history data.\n * This component uses the history service to compute the graph data.\n * In this way the data can be filterd by day or month.\n */\n@Component({\n  selector: 'app-history-detail-view',\n  templateUrl: './history-detail-view.component.html',\n  styleUrls: ['./history-detail-view.component.scss']\n})\nexport class HistoryDetailViewComponent implements OnInit {\n  private _weatherHistory?: WeatherHistoryData\n  dataSet?: GraphDataSet[] \n  /**\n   * Setting the index  checks if the end of the array is\n   * reached. In this the case, the weather data \n   * service is told to load more data if possible.\n   */\n  set index(value: number) {\n    this._index = value;\n    if(this.dataSet && !(this.dataSet.length > value + 1)) {\n      this.weatherDataService.loadMoreHistoryData().subscribe(data => {\n        this.reload();\n      });\n    }\n  }\n  get index() {\n    return this._index;\n  }\n  _index = 0;\n\n  graphType = HistoryGraphType\n  selectedTimeInterval = TimeInterval.day;\n  timeIntervalType = TimeInterval\n\n  constructor(private historyTileService: HistoryTileService,\n    private weatherDataService: WeatherDataService) { }\n\n  ngOnInit(): void {\n    this.loadWeatherHistoryData() \n  }\n\n  /**\n   * Subscribes the history data subject from the weather service.\n   */\n  private loadWeatherHistoryData(): void {\n    this.weatherDataService.getHistoryDataSubject().subscribe(data => {\n      this._weatherHistory = data\n      this.reload();\n    });\n  }\n\n  /**\n   * Is called after the interval was changed. In this way the index is reset\n   * to the inital value\n   */\n  selectInterval() {\n    this.reload();\n    this.index = 0;\n  }\n\n  /**\n   * This functio uses the history service to compute \n   * the graph data by passing the weather history property.  \n   */\n  private reload() {\n    if(this._weatherHistory) {\n      if(this.selectedTimeInterval == TimeInterval.day) {\n        this.dataSet = this.historyTileService.getHistoryDataSetHoursPerDayFrom(this._weatherHistory);\n        return\n      }\n      if(this.selectedTimeInterval == TimeInterval.week) {\n        this.dataSet = this.historyTileService.getHistoryDataSetDaysPerWeekFrom(this._weatherHistory);\n        return\n      }\n      if(this.selectedTimeInterval == TimeInterval.month) {\n        this.dataSet = this.historyTileService.getHistoryDataSetHoursPerDayFrom(this._weatherHistory);\n        return\n      }\n    }\n  }\n\n  /**\n   * Increases the index\n   */\n  forward(): void {\n    if(this.isForwardPossible()) {\n     this.index = this.index + 1;\n    }\n  }\n\n  /** \n   * @returns true if more data is there to show\n   */\n  isForwardPossible(): boolean {\n    if(this.dataSet && this.dataSet.length > this.index + 1)  {\n      return true\n    }\n    return false;\n  }\n\n  /**\n   * Reduces the index\n   */\n  back(): void {\n    if(this.isBackPossible()) {\n      this.index = this.index - 1;\n    } \n  }\n\n  /**\n   * @returns true if the index is not smaller than 0. \n   */\n  isBackPossible(): boolean {\n    if(this.index > 0) {\n      return true\n    }\n    return false;\n  }\n\n  /**\n   * @returns the average temperature string\n   */\n  getAverageTempString(): string {\n    if(this.dataSet){\n      return this.dataSet[this.index].temperatureAverage + \"°C\"\n    }\n    return \"\"\n  }\n\n  /**\n   * @returns the average humidity string\n   */\n  getAverageHumidityString(): string {\n    if(this.dataSet){\n      return this.dataSet[this.index].humidityAverage + \"%\"\n    }\n    return \"\"\n  }\n}\n\nenum TimeInterval {\n  day,\n  week,\n  month,\n}\n\n    \n\n    \n        \n\n    \n        Sortierung: \n        \n            Tag\n            Woche\n            Monat\n        \n    \n\n    \n        \n            \n                \n            \n        \n        {{dataSet[index].label}}\n        \n            \n                \n                    \n        \n    \n\n    \n        \n            \n            \n            \n            \n        \n        \n            \n            \n            \n            \n        \n    \n\n     \n        Good to know\n            \n                Die Wetterbeobachtung und Wetteraufzeichnung existiert schon seit Jahrtausenden. Neben den Beobachtungsdaten der Wetterstationen werden zur Bewertung der Klimamodelle häufig auch aufbereitete Daten eingesetzt, die, ausgehend von den Beobachtungen, auf ein regelmäßiges räumliches Raster umgerechnet werden. Zusätzlich zu den traditionellen Beobachtungen wurde das Wetter während der vergangenen Jahrzehnte auch mit Satelliten und Wetterradaren beobachtet.Wie signifikant ein Trend ausfällt, hängt von der betrachteten Klimagröße, der Region, der Jahreszeit und dem Zeitraum der Auswertung ab.\n            \n    \n\n    \n\n    \n                \n                    ./history-detail-view.component.scss\n                \n                .round-button * {\n    stroke: var(--text);\n}\n\n.round-button {\n    height: 50px;\n    width: 70px;\n}\n\nbutton.disabled * {\n    stroke: var(--secondary);\n}\n\n.button-container {\n    display: flex;\n    justify-content: space-between;\n    padding: 0 0 var(--padding) 0;\n    flex-wrap: nowrap;\n    align-items: center;\n}\n\n.flex-container {\n    display: flex;\n    justify-content: space-between;\n    flex-wrap: wrap;\n}\n\n.tile-container {\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-start;\n}\n\n.sort-container {\n    display: flex;\n    flex-direction: row;\n    flex-wrap: nowrap;\n    justify-content: flex-end;\n    padding-bottom: var(--padding);\n    p {\n        padding-right: 0.5em;\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Sortierung:                     Tag            Woche            Monat                                                                                {{dataSet[index].label}}                                                                                                                                                                                                                         Good to know                            Die Wetterbeobachtung und Wetteraufzeichnung existiert schon seit Jahrtausenden. Neben den Beobachtungsdaten der Wetterstationen werden zur Bewertung der Klimamodelle häufig auch aufbereitete Daten eingesetzt, die, ausgehend von den Beobachtungen, auf ein regelmäßiges räumliches Raster umgerechnet werden. Zusätzlich zu den traditionellen Beobachtungen wurde das Wetter während der vergangenen Jahrzehnte auch mit Satelliten und Wetterradaren beobachtet.Wie signifikant ein Trend ausfällt, hängt von der betrachteten Klimagröße, der Region, der Jahreszeit und dem Zeitraum der Auswertung ab.                '\n    var COMPONENTS = [{'name': 'ApparentTemperatureTileViewComponent', 'selector': 'app-apparent-temperature-tile-view'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BackButtonElementComponent', 'selector': 'app-back-button-element'},{'name': 'CalibrationInfoDetailViewComponent', 'selector': 'app-calibration-info-detail-view'},{'name': 'CardElementComponent', 'selector': 'card-element'},{'name': 'CheckboxSwitcherElementComponent', 'selector': 'app-checkbox-switcher-element'},{'name': 'ConfigurationTilePopUpDialogView', 'selector': 'configuration-tile-popup-view'},{'name': 'ConfigurationTileViewComponent', 'selector': 'app-configuration-tile-view'},{'name': 'ConfigurationViewComponent', 'selector': 'app-configuration-view'},{'name': 'DashboardScreenComponent', 'selector': 'app-dashboard-screen'},{'name': 'DashboardViewComponent', 'selector': 'app-dashboard-view'},{'name': 'DetailScreenComponent', 'selector': 'app-detail-screen'},{'name': 'ForecastDetailViewComponent', 'selector': 'app-forecast-detail-view'},{'name': 'ForecastTileViewComponent', 'selector': 'app-forecast-tile-view'},{'name': 'HistoryDetailViewComponent', 'selector': 'app-history-detail-view'},{'name': 'HistoryTileViewComponent', 'selector': 'app-history-tile-view'},{'name': 'HumidityTileViewComponent', 'selector': 'app-humidity-tile-view'},{'name': 'IndoorDetailViewComponent', 'selector': 'app-indoor-detail-view'},{'name': 'IndoorTileViewComponent', 'selector': 'app-indoor-tile-view'},{'name': 'LoginViewComponent', 'selector': 'app-login-view'},{'name': 'MenuBarElementComponent', 'selector': 'app-menu-bar-element'},{'name': 'MenuButtonElementComponent', 'selector': 'app-menu-button-element'},{'name': 'MenuElementComponent', 'selector': 'app-menu-element'},{'name': 'NavBarElementComponent', 'selector': 'app-nav-bar-element'},{'name': 'OnboardingScreenComponent', 'selector': 'app-onboarding-screen'},{'name': 'OpenAPELoginTileViewComponent', 'selector': 'app-open-apelogin-tile-view'},{'name': 'OutdoorWeatherDetailViewComponent', 'selector': 'app-outdoor-weather-detail-view'},{'name': 'OutdoorWeatherViewComponent', 'selector': 'app-outdoor-weather-view'},{'name': 'PersonalizationSettingsViewComponent', 'selector': 'app-personalization-settings-view'},{'name': 'PersonalizationViewComponent', 'selector': 'app-personalization-view'},{'name': 'PollenflugDetailViewComponent', 'selector': 'app-pollenflug-detail-view'},{'name': 'PollenflugSmallTileComponent', 'selector': 'app-pollenflug-small-tile'},{'name': 'PollenflugTileViewComponent', 'selector': 'app-pollenflug-tile-view'},{'name': 'PollenListElementComponent', 'selector': 'app-pollen-list-element'},{'name': 'PollenTagElementComponent', 'selector': 'app-pollen-tag-element'},{'name': 'ProgressChartElementComponent', 'selector': 'app-progress-chart-element'},{'name': 'RegistrationViewComponent', 'selector': 'app-registration-view'},{'name': 'SettingsScreenComponent', 'selector': 'app-settings-screen'},{'name': 'SimpleTileViewComponent', 'selector': 'app-simple-tile-view'},{'name': 'SliderElementComponent', 'selector': 'app-slider-element'},{'name': 'TtsPlayerElementComponent', 'selector': 'app-tts-player-element'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HistoryDetailViewComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HistoryTileService.html":{"url":"injectables/HistoryTileService.html","title":"injectable - HistoryTileService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  HistoryTileService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/history-tile.service.ts\n        \n\n            \n                Description\n            \n            \n                History tile service injectable\nUse this service to convert WeatherHistoryData objects to GraphDataSet[ ] objects.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getHistoryDataSetDaysPerWeekFrom\n                            \n                            \n                                    Public\n                                getHistoryDataSetHoursPerDayFrom\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/history-tile.service.ts:12\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getHistoryDataSetDaysPerWeekFrom\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getHistoryDataSetDaysPerWeekFrom(weatherHistoryData: WeatherHistoryData)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/history-tile.service.ts:24\n                \n            \n\n\n            \n                \n                    Converts the datapoints of a WeahterHistoryData object to a GraphDataSet[ ] object\nIn this way all components which are using the external charts library can easily\nshow the prefered data without any further conversion. \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    weatherHistoryData\n                                    \n                                                WeatherHistoryData\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The history data object to convert \n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         GraphDataSet[]\n\n                    \n                    \n                        The history data sorted by days per week per GraphDataSet object\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getHistoryDataSetHoursPerDayFrom\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getHistoryDataSetHoursPerDayFrom(weatherHistoryData: WeatherHistoryData)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/history-tile.service.ts:86\n                \n            \n\n\n            \n                \n                    Converts the datapoints of a WeahterHistoryData object to a GraphDataSet[ ] object\nIn this way all components which are using the external charts library can easily\nshow the prefered data without any further conversion. \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    weatherHistoryData\n                                    \n                                                WeatherHistoryData\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The history data object to convert \n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         GraphDataSet[]\n\n                    \n                    \n                        The history data sorted by hours per day per GraphDataSet object\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { GraphDataSet, OutdoorWeatherData, WeatherHistoryData } from '../model/weather';\n\n/**\n * History tile service injectable\n * \n * Use this service to convert WeatherHistoryData objects to GraphDataSet[ ] objects.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class HistoryTileService {\n  constructor() { \n  }\n\n  /**\n   * Converts the datapoints of a WeahterHistoryData object to a GraphDataSet[ ] object\n   * In this way all components which are using the external charts library can easily\n   * show the prefered data without any further conversion. \n   * \n   * @param {WeatherHistoryData} weatherHistoryData  The history data object to convert \n   * @returns The history data sorted by days per week per GraphDataSet object\n   */\n  public getHistoryDataSetDaysPerWeekFrom(weatherHistoryData: WeatherHistoryData): GraphDataSet[] {\n    if (weatherHistoryData.datapoints.length > 0) {\n      let dataSet: GraphDataSet[] = []\n      let dataPoints = weatherHistoryData.datapoints\n\n      dataPoints.sort((a, b) => {\n        return b.timestamp.getTime() - a.timestamp.getTime()\n      });\n\n      let lastDate: Date = dataPoints[0].timestamp;\n      let lastWeek: number = this.getWeekNumber(lastDate);\n      let label: string = this.getWeekStringFromWeekNumber(lastWeek)\n      let temperatureDataPoints: number[]  = []; \n      let humidityDataPoints : number[] = [];\n      let xAxisLabels: string[] = [];\n      let temperatureSumOfWeek = 0\n      let humiditySumOfWeek = 0\n      let index = 0\n\n      for (const item of dataPoints) {\n        if(lastDate.getDate() > item.timestamp.getDate() || lastDate.getMonth() > item.timestamp.getMonth()) {\n          const averageTemperature = temperatureSumOfWeek / index;\n          const averageHumidity = humiditySumOfWeek / index;\n          temperatureDataPoints.push(Math.round(averageTemperature));\n          humidityDataPoints.push(Math.round(averageHumidity));\n          xAxisLabels.push(this.getWeekDayStringFromDate(lastDate))\n          index = 0;\n          temperatureSumOfWeek = 0;\n          humiditySumOfWeek = 0;\n          lastDate = item.timestamp\n          if(lastWeek > this.getWeekNumber(item.timestamp)) {\n            dataSet.push(this.createWeatherGraphDataSet(temperatureDataPoints, humidityDataPoints, xAxisLabels, label));\n            temperatureDataPoints = [];\n            humidityDataPoints = [];\n            xAxisLabels = [];\n            lastWeek = this.getWeekNumber(lastDate);\n            label = this.getWeekStringFromWeekNumber(lastWeek);\n          }\n        }\n        index = index + 1;\n        temperatureSumOfWeek = temperatureSumOfWeek + item.temperature;\n        humiditySumOfWeek = humiditySumOfWeek + item.humidity;\n      }\n      const averageTemperature = temperatureSumOfWeek / index;\n      const averageHumidity = humiditySumOfWeek / index;\n      temperatureDataPoints.push(Math.round(averageTemperature));\n      humidityDataPoints.push(Math.round(averageHumidity));\n      xAxisLabels.push(this.getWeekDayStringFromDate(lastDate))\n      dataSet.push(this.createWeatherGraphDataSet(temperatureDataPoints, humidityDataPoints, xAxisLabels, label));\n      return dataSet;\n    }\n    return [];\n  }\n\n  /**\n   * Converts the datapoints of a WeahterHistoryData object to a GraphDataSet[ ] object\n   * In this way all components which are using the external charts library can easily\n   * show the prefered data without any further conversion. \n   * \n   * @param {WeatherHistoryData} weatherHistoryData  The history data object to convert \n   * @returns The history data sorted by hours per day per GraphDataSet object\n   */\n   public getHistoryDataSetHoursPerDayFrom(weatherHistoryData: WeatherHistoryData): GraphDataSet[] {\n    if (weatherHistoryData.datapoints.length > 0) {\n      let dataSet: GraphDataSet[] = []\n      let dataPoints = weatherHistoryData.datapoints\n\n      dataPoints.sort((a, b) => {\n        return b.timestamp.getTime() - a.timestamp.getTime()\n      });\n\n      let lastDate: Date = dataPoints[0].timestamp;\n      let lastHour: number = lastDate.getHours();\n      let label: string = this.getDateStringFromDate(lastDate);\n      let temperatureDataPoints: number[]  = []; \n      let humidityDataPoints : number[] = [];\n      let xAxisLabels: string[] = [];\n      let temperatureSumOfWeek = 0\n      let humiditySumOfWeek = 0\n      let index = 0\n\n      for (const item of dataPoints) {\n        if(lastDate.getHours() > item.timestamp.getHours() || lastDate.getDate() > item.timestamp.getDate() || lastDate.getMonth() > item.timestamp.getMonth()) {\n          const averageTemperature = temperatureSumOfWeek / index;\n          const averageHumidity = humiditySumOfWeek / index;\n          temperatureDataPoints.push(Math.round(averageTemperature));\n          humidityDataPoints.push(Math.round(averageHumidity));\n          xAxisLabels.push(this.getHourString(lastHour))\n          index = 0;\n          temperatureSumOfWeek = 0;\n          humiditySumOfWeek = 0;\n          if(lastDate.getDate() > item.timestamp.getDate() || lastDate.getMonth() > item.timestamp.getMonth()) {\n            dataSet.push(this.createWeatherGraphDataSet(temperatureDataPoints, humidityDataPoints, xAxisLabels, label));\n            temperatureDataPoints = [];\n            humidityDataPoints = [];\n            xAxisLabels = [];\n          }\n            lastDate = item.timestamp;\n            lastHour = lastDate.getHours();\n            label = this.getDateStringFromDate(lastDate);\n          \n        }\n        index = index + 1;\n        temperatureSumOfWeek = temperatureSumOfWeek + item.temperature;\n        humiditySumOfWeek = humiditySumOfWeek + item.humidity;\n      }\n      const averageTemperature = temperatureSumOfWeek / index;\n      const averageHumidity = humiditySumOfWeek / index;\n      temperatureDataPoints.push(Math.round(averageTemperature));\n      humidityDataPoints.push(Math.round(averageHumidity));\n      xAxisLabels.push(this.getHourString(lastHour))\n      dataSet.push(this.createWeatherGraphDataSet(temperatureDataPoints, humidityDataPoints, xAxisLabels, label));\n      return dataSet;\n    }\n    return [];\n  }\n\n  /**\n   * @param {number} hour \n   * @returns A readable string of the hour\n   */\n  private getHourString(hour: number): string {\n    return hour + ' Uhr';\n  }\n\n  /**\n   * @param {number} week \n   * @returns A readable string of the week\n   */\n  private getWeekStringFromWeekNumber(week: number): string {\n    return 'Kalenderwoche ' + week;\n  }\n  \n  /**\n   * @param {date} date \n   * @returns A readable string of the WEEKDAY\n   */\n  private getWeekDayStringFromDate(date: Date): string {\n    return DAYS[date.getDay()] + ', ' + date.getDate() + '. ' + date.getMonth() + '.' ;\n  }\n\n  /**\n   * @param {number} hour \n   * @returns A readable string of the date\n   */\n  private getDateStringFromDate(date: Date): string {\n    const day = date.getDate();\n    const month = MONTHS[date.getMonth()];\n    const year = date.getFullYear();\n\n    return DAYS[date.getDay()] + ', ' + day + ' ' + month + ' ' + year\n  }\n\n  /**\n   * @param {Date} date \n   * @returns A readable string of the week number of the year\n   */\n  private getWeekNumber(inputDate: Date) {\n    let date = new Date(Date.UTC(inputDate.getFullYear(), inputDate.getMonth(), inputDate.getDate()));\n    let dayNum = date.getUTCDay() || 7;\n    date.setUTCDate(date.getUTCDate() + 4 - dayNum);\n    let yearStart = new Date(Date.UTC(date.getUTCFullYear(),0,1));\n\n    return Math.ceil((((date.valueOf() - yearStart.valueOf()) / 86400000) + 1)/7)\n  };\n\n  /**\n   * Calculates the average temperature and humidity for the \n   * GraphDataSet object\n   * \n   * @param {number[]} temperatureData \n   * @param {number[]} humidityData \n   * @param {string[]} xAxisLabels\n   * @param {string} label\n   * @returns A GraphDataSet object\n   */\n  private createWeatherGraphDataSet(temperatureData: number[], humidityData: number[], xAxisLabels: string[], label: string): GraphDataSet{\n    const tempSum = temperatureData.reduce(function (accumulator, currentValue) {\n      return accumulator + currentValue;\n    }, 0)\n    const humiditySum = humidityData.reduce(function (accumulator, currentValue) {\n      return accumulator + currentValue;\n    }, 0)\n\n    const tempAverage = tempSum / temperatureData.length\n    const humidityAverage = humiditySum / humidityData.length\n\n    return {\n      temperatureDataPoints: temperatureData.reverse(),\n      humidityDataPoints: humidityData.reverse(),\n      xAxisLabel: xAxisLabels.reverse(),\n      label: label,\n      temperatureAverage: Math.round(tempAverage),\n      humidityAverage: Math.round(humidityAverage),\n    }\n  }\n}\n\n/**\n * Readable string constants of days and months\n */\nconst DAYS = ['So','Mo','Di','Mi','Do','Fr','Sa'];\nconst MONTHS = ['Januar','Februar','März','April','Mai','Juni','Juli','August','September','Oktober','November','Dezember'];\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HistoryTileViewComponent.html":{"url":"components/HistoryTileViewComponent.html","title":"component - HistoryTileViewComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HistoryTileViewComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/views/history-tile-view/history-tile-view.component.ts\n\n\n    \n        Description\n    \n    \n        History tile view component\nThis component displays in form of a tile (widget) the history data \nas a line chart. It takes an object of the type GraphDataSet as information source. \nItself has no connection to any data service. \nIt uses the card-view-element to define the layout.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-history-tile-view\n            \n\n            \n                styleUrls\n                ./history-tile-view.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./history-tile-view.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                _dataSet\n                            \n                            \n                                _graphType\n                            \n                            \n                                chartColors\n                            \n                            \n                                chartData\n                            \n                            \n                                chartLabels\n                            \n                            \n                                chartLegend\n                            \n                            \n                                chartOptions\n                            \n                            \n                                chartPlugins\n                            \n                            \n                                theme\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                graphType\n                            \n                            \n                                pressable\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    graphType\n                                \n                                \n                                    data\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/views/history-tile-view/history-tile-view.component.ts:53\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        data\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/views/history-tile-view/history-tile-view.component.ts:31\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        graphType\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/views/history-tile-view/history-tile-view.component.ts:23\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        pressable\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/views/history-tile-view/history-tile-view.component.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        title\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/views/history-tile-view/history-tile-view.component.ts:21\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/views/history-tile-view/history-tile-view.component.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            _dataSet\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         GraphDataSet\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/views/history-tile-view/history-tile-view.component.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _graphType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         HistoryGraphType\n\n                        \n                    \n                    \n                        \n                            Default value : HistoryGraphType.temperature\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/views/history-tile-view/history-tile-view.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            chartColors\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ChartColor\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/views/history-tile-view/history-tile-view.component.ts:51\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            chartData\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ChartDataset[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    { data: [], label: '' },\n  ]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/views/history-tile-view/history-tile-view.component.ts:44\n                            \n                        \n\n                \n                    \n                        The following properties are needed for\nthe chart.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            chartLabels\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ChartLabel[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/views/history-tile-view/history-tile-view.component.ts:47\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            chartLegend\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/views/history-tile-view/history-tile-view.component.ts:52\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            chartOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    responsive: true,\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/views/history-tile-view/history-tile-view.component.ts:48\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            chartPlugins\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/views/history-tile-view/history-tile-view.component.ts:53\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            theme\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Themes\n\n                        \n                    \n                    \n                        \n                            Default value : Themes.Light\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/views/history-tile-view/history-tile-view.component.ts:38\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        graphType\n                    \n                \n\n\n                \n                    \n                        setgraphType(type)\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/views/history-tile-view/history-tile-view.component.ts:23\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            type\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        data\n                    \n                \n\n\n                \n                    \n                        setdata(data)\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/views/history-tile-view/history-tile-view.component.ts:31\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            data\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { Themes } from 'src/app/model/user-context';\nimport { GraphDataSet, WeatherData } from 'src/app/model/weather';\nimport { ChartLabel, ChartColor, ChartDataset } from '@rinminase/ng-charts';\n\n/**\n * History tile view component\n * \n * This component displays in form of a tile (widget) the history data \n * as a line chart. It takes an object of the type GraphDataSet as information source. \n * Itself has no connection to any data service. \n * It uses the card-view-element to define the layout.\n */\n@Component({\n  selector: 'app-history-tile-view',\n  templateUrl: './history-tile-view.component.html',\n  styleUrls: ['./history-tile-view.component.scss']\n})\nexport class HistoryTileViewComponent implements OnInit {\n  @Input() pressable: boolean = false;\n  @Input() title?: string;\n  @Input() \n  set graphType(type: HistoryGraphType) {\n    this._graphType = type;\n    if(this._dataSet) {\n      this.updateChartData(this.chartData, this.chartColors, this._dataSet, this._graphType)\n    }\n  }\n  _graphType: HistoryGraphType = HistoryGraphType.temperature\n  @Input()\n  set data(data: WeatherData) {\n    this._dataSet = data as GraphDataSet;\n    if(this._dataSet) {\n      this.updateChartData(this.chartData, this.chartColors, this._dataSet, this._graphType)\n    }\n  }\n  _dataSet?: GraphDataSet;\n  theme: Themes = Themes.Light;\n\n  /**\n   * The following properties are needed for\n   * the chart.\n   */\n  chartData: ChartDataset[] = [\n    { data: [], label: '' },\n  ];\n  chartLabels: ChartLabel[] = [];\n  chartOptions = {\n    responsive: true,\n  };\n  chartColors: ChartColor = [];\n  chartLegend = false;\n  chartPlugins = [];\n\n  constructor() { }\n\n  ngOnInit(): void { }\n  \n  /**\n   * This function converts the GraphDataSet to the ChartDataset and ChartColor. \n   * Those are required for the graph library. \n   * \n   * @param chartDataset \n   * @param chartColors \n   * @param dataSet \n   * @param graphType \n   */\n  private updateChartData(chartDataset: ChartDataset[], chartColors: ChartColor, dataSet: GraphDataSet, graphType: HistoryGraphType) {\n    switch (graphType) {\n      case HistoryGraphType.temperature:\n        chartDataset[0].data = dataSet.temperatureDataPoints\n        chartDataset[0].label = \"°C\"\n        chartColors[0] = {\n          borderColor: 'red',\n          backgroundColor: 'rgba(255,0,0,0.1)',\n        };\n        break;\n      case HistoryGraphType.humidity:\n        chartDataset[0].data = dataSet.humidityDataPoints\n        chartDataset[0].label = \"%\"\n        chartColors[0] = {\n          borderColor: 'blue',\n          backgroundColor: 'rgba(0,0,255,0.1)',\n        };\n        break;\n    }\n    this.chartLabels = dataSet.xAxisLabel\n\n  }\n\n}\n\nexport enum HistoryGraphType {\n  temperature,\n  humidity\n}\n\n\n    \n\n    \n        \n    \n       -->\n    \n\n    \n    \n\n\n    \n\n    \n                \n                    ./history-tile-view.component.scss\n                \n                .container {\n    width: calc(100vw - var(--padding) - var(--padding) - var(--border-padding-left) - var(--border-padding-right));\n    font-size: 1.6em;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '           -->            '\n    var COMPONENTS = [{'name': 'ApparentTemperatureTileViewComponent', 'selector': 'app-apparent-temperature-tile-view'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BackButtonElementComponent', 'selector': 'app-back-button-element'},{'name': 'CalibrationInfoDetailViewComponent', 'selector': 'app-calibration-info-detail-view'},{'name': 'CardElementComponent', 'selector': 'card-element'},{'name': 'CheckboxSwitcherElementComponent', 'selector': 'app-checkbox-switcher-element'},{'name': 'ConfigurationTilePopUpDialogView', 'selector': 'configuration-tile-popup-view'},{'name': 'ConfigurationTileViewComponent', 'selector': 'app-configuration-tile-view'},{'name': 'ConfigurationViewComponent', 'selector': 'app-configuration-view'},{'name': 'DashboardScreenComponent', 'selector': 'app-dashboard-screen'},{'name': 'DashboardViewComponent', 'selector': 'app-dashboard-view'},{'name': 'DetailScreenComponent', 'selector': 'app-detail-screen'},{'name': 'ForecastDetailViewComponent', 'selector': 'app-forecast-detail-view'},{'name': 'ForecastTileViewComponent', 'selector': 'app-forecast-tile-view'},{'name': 'HistoryDetailViewComponent', 'selector': 'app-history-detail-view'},{'name': 'HistoryTileViewComponent', 'selector': 'app-history-tile-view'},{'name': 'HumidityTileViewComponent', 'selector': 'app-humidity-tile-view'},{'name': 'IndoorDetailViewComponent', 'selector': 'app-indoor-detail-view'},{'name': 'IndoorTileViewComponent', 'selector': 'app-indoor-tile-view'},{'name': 'LoginViewComponent', 'selector': 'app-login-view'},{'name': 'MenuBarElementComponent', 'selector': 'app-menu-bar-element'},{'name': 'MenuButtonElementComponent', 'selector': 'app-menu-button-element'},{'name': 'MenuElementComponent', 'selector': 'app-menu-element'},{'name': 'NavBarElementComponent', 'selector': 'app-nav-bar-element'},{'name': 'OnboardingScreenComponent', 'selector': 'app-onboarding-screen'},{'name': 'OpenAPELoginTileViewComponent', 'selector': 'app-open-apelogin-tile-view'},{'name': 'OutdoorWeatherDetailViewComponent', 'selector': 'app-outdoor-weather-detail-view'},{'name': 'OutdoorWeatherViewComponent', 'selector': 'app-outdoor-weather-view'},{'name': 'PersonalizationSettingsViewComponent', 'selector': 'app-personalization-settings-view'},{'name': 'PersonalizationViewComponent', 'selector': 'app-personalization-view'},{'name': 'PollenflugDetailViewComponent', 'selector': 'app-pollenflug-detail-view'},{'name': 'PollenflugSmallTileComponent', 'selector': 'app-pollenflug-small-tile'},{'name': 'PollenflugTileViewComponent', 'selector': 'app-pollenflug-tile-view'},{'name': 'PollenListElementComponent', 'selector': 'app-pollen-list-element'},{'name': 'PollenTagElementComponent', 'selector': 'app-pollen-tag-element'},{'name': 'ProgressChartElementComponent', 'selector': 'app-progress-chart-element'},{'name': 'RegistrationViewComponent', 'selector': 'app-registration-view'},{'name': 'SettingsScreenComponent', 'selector': 'app-settings-screen'},{'name': 'SimpleTileViewComponent', 'selector': 'app-simple-tile-view'},{'name': 'SliderElementComponent', 'selector': 'app-slider-element'},{'name': 'TtsPlayerElementComponent', 'selector': 'app-tts-player-element'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HistoryTileViewComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HumidityTileViewComponent.html":{"url":"components/HumidityTileViewComponent.html","title":"component - HumidityTileViewComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HumidityTileViewComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/views/humidity-tile-view/humidity-tile-view.component.ts\n\n\n    \n        Description\n    \n    \n        Humidity tile view component\nThis component displays in form of a tile (widget) the humidity \ninformation. It takes an object of the type WeatherData as \ninformation source. Itself has no connection to any\nservice. It uses the card-view-element to define the layout.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-humidity-tile-view\n            \n\n            \n                styleUrls\n                ./humidity-tile-view.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./humidity-tile-view.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                _humidity\n                            \n                            \n                                cardSizeType\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                hideSubtitle\n                            \n                            \n                                pressable\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    data\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/views/humidity-tile-view/humidity-tile-view.component.ts:27\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        data\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/views/humidity-tile-view/humidity-tile-view.component.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        hideSubtitle\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/views/humidity-tile-view/humidity-tile-view.component.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        pressable\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/views/humidity-tile-view/humidity-tile-view.component.ts:19\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/views/humidity-tile-view/humidity-tile-view.component.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            _humidity\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/views/humidity-tile-view/humidity-tile-view.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cardSizeType\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : CardSize\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/views/humidity-tile-view/humidity-tile-view.component.ts:27\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        data\n                    \n                \n\n\n                \n                    \n                        setdata(data)\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/views/humidity-tile-view/humidity-tile-view.component.ts:22\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            data\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { OutdoorWeatherData, PollenData, WeatherData } from 'src/app/model/weather';\nimport { CardSize } from '../../ui-elements/card-element/card-element.component';\n\n/**\n * Humidity tile view component\n * \n * This component displays in form of a tile (widget) the humidity \n * information. It takes an object of the type WeatherData as \n * information source. Itself has no connection to any\n * service. It uses the card-view-element to define the layout.\n */\n@Component({\n  selector: 'app-humidity-tile-view',\n  templateUrl: './humidity-tile-view.component.html',\n  styleUrls: ['./humidity-tile-view.component.scss']\n})\nexport class HumidityTileViewComponent implements OnInit {\n  @Input() pressable: boolean = false;\n  @Input() hideSubtitle: boolean = false;\n  @Input()\n  set data(data: WeatherData) {\n    let outdoorWeatherData = data as OutdoorWeatherData\n    this._humidity = outdoorWeatherData.humidity;\n  }\n  _humidity?: number;\n  cardSizeType = CardSize;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        \n    \n        {{_humidity}}%  \n    \n\n    \n\n    \n                \n                    ./humidity-tile-view.component.scss\n                \n                h1 {\n    margin: 0;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{_humidity}}%      '\n    var COMPONENTS = [{'name': 'ApparentTemperatureTileViewComponent', 'selector': 'app-apparent-temperature-tile-view'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BackButtonElementComponent', 'selector': 'app-back-button-element'},{'name': 'CalibrationInfoDetailViewComponent', 'selector': 'app-calibration-info-detail-view'},{'name': 'CardElementComponent', 'selector': 'card-element'},{'name': 'CheckboxSwitcherElementComponent', 'selector': 'app-checkbox-switcher-element'},{'name': 'ConfigurationTilePopUpDialogView', 'selector': 'configuration-tile-popup-view'},{'name': 'ConfigurationTileViewComponent', 'selector': 'app-configuration-tile-view'},{'name': 'ConfigurationViewComponent', 'selector': 'app-configuration-view'},{'name': 'DashboardScreenComponent', 'selector': 'app-dashboard-screen'},{'name': 'DashboardViewComponent', 'selector': 'app-dashboard-view'},{'name': 'DetailScreenComponent', 'selector': 'app-detail-screen'},{'name': 'ForecastDetailViewComponent', 'selector': 'app-forecast-detail-view'},{'name': 'ForecastTileViewComponent', 'selector': 'app-forecast-tile-view'},{'name': 'HistoryDetailViewComponent', 'selector': 'app-history-detail-view'},{'name': 'HistoryTileViewComponent', 'selector': 'app-history-tile-view'},{'name': 'HumidityTileViewComponent', 'selector': 'app-humidity-tile-view'},{'name': 'IndoorDetailViewComponent', 'selector': 'app-indoor-detail-view'},{'name': 'IndoorTileViewComponent', 'selector': 'app-indoor-tile-view'},{'name': 'LoginViewComponent', 'selector': 'app-login-view'},{'name': 'MenuBarElementComponent', 'selector': 'app-menu-bar-element'},{'name': 'MenuButtonElementComponent', 'selector': 'app-menu-button-element'},{'name': 'MenuElementComponent', 'selector': 'app-menu-element'},{'name': 'NavBarElementComponent', 'selector': 'app-nav-bar-element'},{'name': 'OnboardingScreenComponent', 'selector': 'app-onboarding-screen'},{'name': 'OpenAPELoginTileViewComponent', 'selector': 'app-open-apelogin-tile-view'},{'name': 'OutdoorWeatherDetailViewComponent', 'selector': 'app-outdoor-weather-detail-view'},{'name': 'OutdoorWeatherViewComponent', 'selector': 'app-outdoor-weather-view'},{'name': 'PersonalizationSettingsViewComponent', 'selector': 'app-personalization-settings-view'},{'name': 'PersonalizationViewComponent', 'selector': 'app-personalization-view'},{'name': 'PollenflugDetailViewComponent', 'selector': 'app-pollenflug-detail-view'},{'name': 'PollenflugSmallTileComponent', 'selector': 'app-pollenflug-small-tile'},{'name': 'PollenflugTileViewComponent', 'selector': 'app-pollenflug-tile-view'},{'name': 'PollenListElementComponent', 'selector': 'app-pollen-list-element'},{'name': 'PollenTagElementComponent', 'selector': 'app-pollen-tag-element'},{'name': 'ProgressChartElementComponent', 'selector': 'app-progress-chart-element'},{'name': 'RegistrationViewComponent', 'selector': 'app-registration-view'},{'name': 'SettingsScreenComponent', 'selector': 'app-settings-screen'},{'name': 'SimpleTileViewComponent', 'selector': 'app-simple-tile-view'},{'name': 'SliderElementComponent', 'selector': 'app-slider-element'},{'name': 'TtsPlayerElementComponent', 'selector': 'app-tts-player-element'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HumidityTileViewComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ImageModel.html":{"url":"interfaces/ImageModel.html","title":"interface - ImageModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ImageModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/image.ts\n        \n\n            \n                Description\n            \n            \n                Image model to define the image sources for\nthe different themes.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        dark\n                                \n                                \n                                            Optional\n                                        highContrast\n                                \n                                \n                                        light\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        dark\n                                    \n                                \n                                \n                                    \n                                        dark:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        highContrast\n                                    \n                                \n                                \n                                    \n                                        highContrast:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        light\n                                    \n                                \n                                \n                                    \n                                        light:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ImageModel {\n    dark: string,\n    light: string,\n    highContrast?: string\n  }\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ImageService.html":{"url":"injectables/ImageService.html","title":"injectable - ImageService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ImageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/image.service.ts\n        \n\n            \n                Description\n            \n            \n                Image service injectable\nUse this service to get the full assets path of an image.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getGradientStyleFor\n                            \n                            \n                                    Public\n                                getImageSrcFrom\n                            \n                            \n                                    Public\n                                getWeatherIconString\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userContextService: UserContextService, breakpointObserver: BreakpointObserver)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/image.service.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userContextService\n                                                  \n                                                        \n                                                                        UserContextService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        breakpointObserver\n                                                  \n                                                        \n                                                                    BreakpointObserver\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getGradientStyleFor\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getGradientStyleFor(weather: string | undefined)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/image.service.ts:60\n                \n            \n\n\n            \n                \n                    Use this function to get the current background gradient\nsuiteable for the current weahther and daytime.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    weather\n                                    \n                                            string | undefined\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     literal type\n\n                    \n                    \n                        The full assets path of the image\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getImageSrcFrom\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getImageSrcFrom(imageModel: ImageModel)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/image.service.ts:34\n                \n            \n\n\n            \n                \n                    Use this function to get the image src in the applied color scheme \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    imageModel\n                                    \n                                                ImageModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the image model of the prefered image\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        The full assets path of the image in the applied color scheme\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getWeatherIconString\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getWeatherIconString(weather: string | undefined)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/image.service.ts:92\n                \n            \n\n\n            \n                \n                    Use this function to get the image src of the current weather icon\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    weather\n                                    \n                                            string | undefined\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string | undefined\n\n                    \n                    \n                        The full assets path of the image\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { BreakpointObserver, BreakpointState } from '@angular/cdk/layout';\nimport { Injectable } from '@angular/core';\nimport { ImageModel } from '../model/image';\nimport { Themes, UserContext } from '../model/user-context';\nimport { Daytime } from '../model/weather';\nimport { UserContextService } from './user-context.service';\n\n/**\n * Image service injectable\n *\n * Use this service to get the full assets path of an image.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class ImageService {\n  private baseURLIcons = 'assets/icons/';\n  private baseURLWeather = 'assets/weather/';\n  private userContext?: UserContext;\n  private systemTheme = Themes.Light;\n\n  constructor(private userContextService: UserContextService,\n              private breakpointObserver: BreakpointObserver) { \n    this.loadUserContext();\n    this.systemThemeBreakpointObserver();\n  }\n\n  /**\n   * Use this function to get the image src in the applied color scheme \n   * \n   * @param {ImageModel} imageModel  the image model of the prefered image\n   * @returns The full assets path of the image in the applied color scheme\n   */\n  public getImageSrcFrom(imageModel: ImageModel): string {\n    const userContextTheme = this.userContext?.theme\n    switch(userContextTheme) {\n      case Themes.Automatic: \n        if(this.systemTheme == Themes.Dark) {\n          return this.baseURLIcons + imageModel.dark;\n        } else {\n          return this.baseURLIcons + imageModel.light;\n        }\n      case Themes.Dark: \n        return this.baseURLIcons + imageModel.dark;\n      case Themes.Light: \n        return this.baseURLIcons + imageModel.light;\n      case Themes.HighContrast: \n        return imageModel.highContrast ? this.baseURLIcons + imageModel.highContrast : this.baseURLIcons + imageModel.dark;\n      default: return ''\n    }\n  }\n\n  /**\n   * Use this function to get the current background gradient\n   * suiteable for the current weahther and daytime.\n   * \n   * @param {weather} string  the current weather string\n   * @returns The full assets path of the image\n   */\n  public getGradientStyleFor(weather: string | undefined): { background: string, filter: string }  {\n    if(this.userContext?.theme === Themes.HighContrast) {\n      return Gradients.highContrast;\n    }\n    switch (weather) {\n      case 'cloudy':\n      case 'rain':\n      case 'wind':\n      case 'sleet':\n      case 'fog':\n      case 'thunderstorm':\n        switch (this.getDaytime()) {\n          case Daytime.noon: return Gradients.noonDark\n          case Daytime.dawn: return Gradients.dawnDark\n          case Daytime.night: return Gradients.nightDark\n        }\n      default: {\n        switch (this.getDaytime()) {\n          case Daytime.noon: return Gradients.noon\n          case Daytime.dawn: return Gradients.dawn\n          case Daytime.night: return Gradients.night\n        }\n      }\n    }\n  }\n\n  /**\n   * Use this function to get the image src of the current weather icon\n   * \n   * @param {weather} WeatherType  the current weather\n   * @returns The full assets path of the image\n   */\n   public getWeatherIconString(weather: string | undefined): string | undefined {\n    let src = this.baseURLWeather;\n    if(weather !== undefined) {\n      switch (weather) {\n        case \"sunny\":  return src + 'clear-day' + '.png'\n        case \"sunny_cloudy\":  return src + 'partly-cloudy-day' + '.png'\n        case \"rainy\": return src + 'rain' + '.png'\n        case \"worsening\":  return src + 'worsening' + '.png'\n        default: return src + weather + '.png'\n      }\n    } else {\n      return undefined\n    }\n  }\n\n  /**\n  * Observe the system color scheme for changes\n  */\n  private systemThemeBreakpointObserver() {\n    this.breakpointObserver\n    .observe(['(prefers-color-scheme: dark)'])\n    .subscribe((state: BreakpointState) => {\n      if (state.matches) {\n        this.systemTheme = Themes.Dark;\n      } else {\n        this.systemTheme = Themes.Light;\n      }\n    });\n  }\n\n  /**\n  * Returns the current daytime\n  */\n  private getDaytime(): Daytime {\n    const date = new Date();\n    const dayHour = date.getHours();\n    if(dayHour  {\n      this.userContext = data;\n    })\n  }\n}\n\nconst Gradients = {\n  noon: {\n    background: 'linear-gradient(0deg, rgba(97,194,216,1) 0%, rgba(67,125,219,1) 100%)',\n    filter: 'progid:DXImageTransform.Microsoft.gradient(startColorstr=\"#61c2d8\",endColorstr=\"#437ddb\",GradientType=1)'\n  },\n  dawn: {\n    background: 'linear-gradient(0deg, rgba(238,69,59,1) 0%, rgba(164,9,110,1) 100%)',\n    filter: 'progid:DXImageTransform.Microsoft.gradient(startColorstr=\"#ee453b\",endColorstr=\"#a4096e\",GradientType=1)'\n  },\n  night: {\n    background: 'linear-gradient(0deg, rgba(216,97,204,1) 0%, rgba(70,67,219,1) 100%)',\n    filter: 'progid:DXImageTransform.Microsoft.gradient(startColorstr=\"#d861cc\",endColorstr=\"#4643db\",GradientType=1)'\n  },\n  noonDark: {\n    background: 'linear-gradient(170deg, rgba(20,27,87,1) 0%, rgba(151,208,255,1) 100%)',\n    filter: 'progid:DXImageTransform.Microsoft.gradient(startColorstr=\"#61c2d8\",endColorstr=\"#437ddb\",GradientType=1)'\n  },\n  dawnDark: {\n    background: 'linear-gradient(170deg, rgba(212,108,102,1) 0%, rgba(108,10,72,1) 100%)',\n    filter: 'progid:DXImageTransform.Microsoft.gradient(startColorstr=\"#ee453b\",endColorstr=\"#a4096e\",GradientType=1)'\n  },\n  nightDark: {\n    background: 'linear-gradient(170deg, rgba(119,48,112,1) 0%, rgba(152,152,191,1) 100%)',\n    filter: 'progid:DXImageTransform.Microsoft.gradient(startColorstr=\"#d861cc\",endColorstr=\"#4643db\",GradientType=1)'\n  },\n  highContrast: {\n    background: 'linear-gradient(170deg, rgba(0,0,0,1) 0%, rgba(0,0,0,1) 100%)',\n    filter: 'progid:DXImageTransform.Microsoft.gradient(startColorstr=\"#d861cc\",endColorstr=\"#4643db\",GradientType=1)'\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IndoorDetailViewComponent.html":{"url":"components/IndoorDetailViewComponent.html","title":"component - IndoorDetailViewComponent","body":"\n                   \n\n\n\n\n\n  Components\n  IndoorDetailViewComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/views/indoor-detail-view/indoor-detail-view.component.ts\n\n\n    \n        Description\n    \n    \n        Indoor detail view component\nThis component displays the indoor room data. It displays the \ninformation by using the IndoorTileViewComponent.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-indoor-detail-view\n            \n\n            \n                styleUrls\n                ./indoor-detail-view.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./indoor-detail-view.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                indoorRoomTiles\n                            \n                            \n                                ttsTextGeneratorFunction\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(weatherDataService: WeatherDataService, textService: TextService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/views/indoor-detail-view/indoor-detail-view.component.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        weatherDataService\n                                                  \n                                                        \n                                                                        WeatherDataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        textService\n                                                  \n                                                        \n                                                                        TextService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/views/indoor-detail-view/indoor-detail-view.component.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            indoorRoomTiles\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Tile[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/views/indoor-detail-view/indoor-detail-view.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ttsTextGeneratorFunction\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/views/indoor-detail-view/indoor-detail-view.component.ts:23\n                            \n                        \n\n                \n                    \n                        this function computes the to be read aloud text for the tts feature. \nThis function is passed to the tts player element\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Tile, WeatherData } from 'src/app/model/weather';\nimport { TextService } from 'src/app/services/text.service';\nimport { WeatherDataService } from 'src/app/services/weather-data.service';\n\n/**\n * Indoor detail view component\n * \n * This component displays the indoor room data. It displays the \n * information by using the IndoorTileViewComponent.\n */\n@Component({\n  selector: 'app-indoor-detail-view',\n  templateUrl: './indoor-detail-view.component.html',\n  styleUrls: ['./indoor-detail-view.component.scss']\n})\nexport class IndoorDetailViewComponent implements OnInit {\n  indoorRoomTiles?: Tile[];\n  /**\n   * this function computes the to be read aloud text for the tts feature. \n   * This function is passed to the tts player element\n   */\n  ttsTextGeneratorFunction = () => this.textService.createTextFromTilesArray(this.indoorRoomTiles)\n\n  constructor(private weatherDataService: WeatherDataService,\n    private textService: TextService) { }\n\n  ngOnInit(): void {\n    this.loadIndoorRoomData();\n  }\n\n  /**\n   * Subscribes to the indoor tile subject.\n   */\n  private loadIndoorRoomData() {\n    this.weatherDataService.getIndoorTilesSubject()\n                        .subscribe(data => this.indoorRoomTiles = data);\n  }\n}\n\n    \n\n    \n        \n\n    \n    \n\n \n    Good to know\n    \n        Der Mensch hält sich einen Großteil der Zeit des Tages in Innenräumen auf. Gute Raumluftqualität ist daher eine der Grundlagen für Gesundheit, Wohlbefinden, Leistungsfähigkeit und für gutes Arbeiten, Lernen und Lehren. Schlechte Raumluft kann krankmachen, auch wenn die Zusammenhänge hier wissenschaftlich oft noch nicht abschließend geklärt sind gibt es eine Vielzahl unterschiedlichster Krankheitssymptome, die offenbar mit dem Aufenthalt in Räumen verbunden sind. Eine wichtige Voraussetzung für gute Raumluftqualität ist deshalb eine ausreichende Lüftung des Raumes.\n    \n\n\n\n\n    \n\n    \n                \n                    ./indoor-detail-view.component.scss\n                \n                .container {\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: space-between;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '             Good to know            Der Mensch hält sich einen Großteil der Zeit des Tages in Innenräumen auf. Gute Raumluftqualität ist daher eine der Grundlagen für Gesundheit, Wohlbefinden, Leistungsfähigkeit und für gutes Arbeiten, Lernen und Lehren. Schlechte Raumluft kann krankmachen, auch wenn die Zusammenhänge hier wissenschaftlich oft noch nicht abschließend geklärt sind gibt es eine Vielzahl unterschiedlichster Krankheitssymptome, die offenbar mit dem Aufenthalt in Räumen verbunden sind. Eine wichtige Voraussetzung für gute Raumluftqualität ist deshalb eine ausreichende Lüftung des Raumes.    '\n    var COMPONENTS = [{'name': 'ApparentTemperatureTileViewComponent', 'selector': 'app-apparent-temperature-tile-view'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BackButtonElementComponent', 'selector': 'app-back-button-element'},{'name': 'CalibrationInfoDetailViewComponent', 'selector': 'app-calibration-info-detail-view'},{'name': 'CardElementComponent', 'selector': 'card-element'},{'name': 'CheckboxSwitcherElementComponent', 'selector': 'app-checkbox-switcher-element'},{'name': 'ConfigurationTilePopUpDialogView', 'selector': 'configuration-tile-popup-view'},{'name': 'ConfigurationTileViewComponent', 'selector': 'app-configuration-tile-view'},{'name': 'ConfigurationViewComponent', 'selector': 'app-configuration-view'},{'name': 'DashboardScreenComponent', 'selector': 'app-dashboard-screen'},{'name': 'DashboardViewComponent', 'selector': 'app-dashboard-view'},{'name': 'DetailScreenComponent', 'selector': 'app-detail-screen'},{'name': 'ForecastDetailViewComponent', 'selector': 'app-forecast-detail-view'},{'name': 'ForecastTileViewComponent', 'selector': 'app-forecast-tile-view'},{'name': 'HistoryDetailViewComponent', 'selector': 'app-history-detail-view'},{'name': 'HistoryTileViewComponent', 'selector': 'app-history-tile-view'},{'name': 'HumidityTileViewComponent', 'selector': 'app-humidity-tile-view'},{'name': 'IndoorDetailViewComponent', 'selector': 'app-indoor-detail-view'},{'name': 'IndoorTileViewComponent', 'selector': 'app-indoor-tile-view'},{'name': 'LoginViewComponent', 'selector': 'app-login-view'},{'name': 'MenuBarElementComponent', 'selector': 'app-menu-bar-element'},{'name': 'MenuButtonElementComponent', 'selector': 'app-menu-button-element'},{'name': 'MenuElementComponent', 'selector': 'app-menu-element'},{'name': 'NavBarElementComponent', 'selector': 'app-nav-bar-element'},{'name': 'OnboardingScreenComponent', 'selector': 'app-onboarding-screen'},{'name': 'OpenAPELoginTileViewComponent', 'selector': 'app-open-apelogin-tile-view'},{'name': 'OutdoorWeatherDetailViewComponent', 'selector': 'app-outdoor-weather-detail-view'},{'name': 'OutdoorWeatherViewComponent', 'selector': 'app-outdoor-weather-view'},{'name': 'PersonalizationSettingsViewComponent', 'selector': 'app-personalization-settings-view'},{'name': 'PersonalizationViewComponent', 'selector': 'app-personalization-view'},{'name': 'PollenflugDetailViewComponent', 'selector': 'app-pollenflug-detail-view'},{'name': 'PollenflugSmallTileComponent', 'selector': 'app-pollenflug-small-tile'},{'name': 'PollenflugTileViewComponent', 'selector': 'app-pollenflug-tile-view'},{'name': 'PollenListElementComponent', 'selector': 'app-pollen-list-element'},{'name': 'PollenTagElementComponent', 'selector': 'app-pollen-tag-element'},{'name': 'ProgressChartElementComponent', 'selector': 'app-progress-chart-element'},{'name': 'RegistrationViewComponent', 'selector': 'app-registration-view'},{'name': 'SettingsScreenComponent', 'selector': 'app-settings-screen'},{'name': 'SimpleTileViewComponent', 'selector': 'app-simple-tile-view'},{'name': 'SliderElementComponent', 'selector': 'app-slider-element'},{'name': 'TtsPlayerElementComponent', 'selector': 'app-tts-player-element'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'IndoorDetailViewComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IndoorRoomData.html":{"url":"interfaces/IndoorRoomData.html","title":"interface - IndoorRoomData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IndoorRoomData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/weather.ts\n        \n\n            \n                Description\n            \n            \n                Model of the indoor room data. It contains all information about \nthe temperature, humidity, roomname, airQuality of the current room. \n\n            \n\n            \n                Extends\n            \n            \n                        WeatherData\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        airQuality\n                                \n                                \n                                        calibrationValue\n                                \n                                \n                                        humidity\n                                \n                                \n                                        roomID\n                                \n                                \n                                        roomName\n                                \n                                \n                                        temperature\n                                \n                                \n                                        timestamp\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        airQuality\n                                    \n                                \n                                \n                                    \n                                        airQuality:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        calibrationValue\n                                    \n                                \n                                \n                                    \n                                        calibrationValue:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        humidity\n                                    \n                                \n                                \n                                    \n                                        humidity:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        roomID\n                                    \n                                \n                                \n                                    \n                                        roomID:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        roomName\n                                    \n                                \n                                \n                                    \n                                        roomName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        temperature\n                                    \n                                \n                                \n                                    \n                                        temperature:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timestamp\n                                    \n                                \n                                \n                                    \n                                        timestamp:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface WeatherData { }\n\n/**\n * Enum to identify the type of the tile. \n */\nexport enum TileType {\n    indoorRoom,\n    pollenSmall,\n    pollenList,\n    history,\n    forecast,\n    humidity,\n    apparentTemperature,\n}\n\n/**\n * This interface bundles the three tile arrays\n */\nexport interface TileArrays {\n    dashboard: Tile[],\n    pollen : Tile[],\n    indoorRooms: Tile[]\n}\n  \n/**\n * Enum to set the priority of a tile\n */\nexport enum TilePriority {\n    important, //Highest \n    high,\n    middle,\n    low,\n}\n\n/**\n * Tile model -\n * Every tile (widget) needs data and a prioriy. The priority is \n * used to determine the position of the tiles on the dashboard. The tiles themselves do not load the data.\n * The data is passed from the parent view of the tiles.\n */\nexport interface Tile {\n    type: TileType;\n    data: A;\n    id: string;\n    priority: TilePriority\n}\n\n/**\n * Model of the outdoor weather data. It contains all information about the current \n * outdoor weather including temperature, humidity and weather type. \n */\nexport interface OutdoorWeatherData extends WeatherData {\n    temperature: number // in °C\n    maxTemperature: number,\n    minTemperature: number, \n    humidity: number, // in %\n    timestamp: Date, \n    weather: string, \n    apparentTemperature: number, // in °C ---> die \"gefühlte\" Temperatur\n    location: string, // e.g. \"Stuttgart\" TODO: Make configurable in ESP Wlan-Board\n    postCode: string,\n}\n\n/**\n * Model of the weather forecast data. It contains all information about \n * the forecast including weather and trend. \n */\nexport interface WeatherForecastData extends WeatherData {\n    trend: string,\n    weatherDescription: string,\n    weatherIcon: string,\n  }\n\n/**\n * Model of the pollen data. It contains all information about \n * the current pollen count.\n */\nexport interface PollenData extends WeatherData {\n    pollenName: string, \n    id: number,\n    today: string, // -1  3\n    tomorrow: string, // -1  3\n}\n\n/**\n * Model of the indoor room data. It contains all information about \n * the temperature, humidity, roomname, airQuality of the current room. \n */\nexport interface IndoorRoomData extends WeatherData {\n    roomID: string,\n    roomName: string,\n    airQuality: number, // in %\n    temperature: number // in °C \n    humidity: number, // in %\n    timestamp: Date, \n    calibrationValue: number\n}\n\n/**\n * Model of the indoor room data. It contains all information about \n * the temperature, humidity, roomname, airQuality of the current room. \n */\nexport interface WeatherHistoryData extends WeatherData {\n    datapoints: OutdoorWeatherData[],\n}\n\n/**\n * Model of the indoor room data. It contains all information about \n * the temperature, humidity, roomname, airQuality of the current room. \n */\nexport interface GraphDataSet extends WeatherData {\n    temperatureDataPoints: number[];\n    humidityDataPoints: number[];\n    xAxisLabel: string[];\n    label: string;\n    temperatureAverage: number;\n    humidityAverage: number;\n}\n\nexport interface WeatherHistoryByDayData extends WeatherData  {\n    averageTemperature: number, // in °C\n    averageHumidity: number, // in %\n}\n\nexport enum Daytime {\n    noon,\n    night,\n    dawn,\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IndoorRoomResponse.html":{"url":"interfaces/IndoorRoomResponse.html","title":"interface - IndoorRoomResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IndoorRoomResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/api/weather-api.service.ts\n        \n\n            \n                Description\n            \n            \n                Model of the indoor room api response\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        gasVal\n                                \n                                \n                                        gasValCalibrationValue\n                                \n                                \n                                        humidity\n                                \n                                \n                                        id\n                                \n                                \n                                        location\n                                \n                                \n                                        pressure\n                                \n                                \n                                        roomName\n                                \n                                \n                                        temperature\n                                \n                                \n                                        timestamp\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        gasVal\n                                    \n                                \n                                \n                                    \n                                        gasVal:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        gasValCalibrationValue\n                                    \n                                \n                                \n                                    \n                                        gasValCalibrationValue:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        humidity\n                                    \n                                \n                                \n                                    \n                                        humidity:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        location\n                                    \n                                \n                                \n                                    \n                                        location:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pressure\n                                    \n                                \n                                \n                                    \n                                        pressure:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        roomName\n                                    \n                                \n                                \n                                    \n                                        roomName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        temperature\n                                    \n                                \n                                \n                                    \n                                        temperature:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timestamp\n                                    \n                                \n                                \n                                    \n                                        timestamp:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { FORECAST, INDOORAIRQUALITY, OUTDOORWEATHER, POLLEN, WEATHERHISTORY } from '../../model/mock-data/weather.mock';\nimport { OutdoorWeatherData, PollenData, IndoorRoomData, WeatherForecastData, WeatherHistoryData } from '../../model/weather';\nimport { Observable, of } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\n\n/**\n * Weather api service injectable\n * \n * Use this service to access the network. It implementes all routes \n * for the weather data.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class WeatherAPIService {\n  private outdoorURL = environment.baseURL + 'weather-data/outdoor/latest';\n  private indoorURL = environment.baseURL + 'weather-data/indoor/latest';\n  private historyURL = environment.baseURL + 'weather-data/outdoor/history';\n  private forecastURL = environment.baseURL + 'weather-data/forecast/latest';\n  private allPollenTypesURL = environment.baseURL + 'pollen/all';\n\n  constructor(private httpClient: HttpClient) { }\n\n  /**\n   * @returns an observable with the loadad OutdoorWeatherData from the api or test data\n   */\n  public loadOutdoorWeather(): Observable {\n    if (environment.testData) {\n      return of(OUTDOORWEATHER);\n    }\n    let returnObservable = new Observable((observer) => {\n        this.httpClient.get(this.outdoorURL).subscribe(data => {\n          if(data.id === undefined) {\n            observer.next();\n            observer.complete();\n          } else {\n            let outdoorData = this.createOutdoorWeatherDataFromServerResponse(data);\n            observer.next(outdoorData);\n            observer.complete();\n          }\n        },\n        (error) => {\n          console.log(error);\n          observer.next();\n          observer.complete();\n        })\n      }\n    );\n    return returnObservable;\n  }\n\n  /**\n   * @returns an observable with the loadad WeatherForecastData from the api or test data\n   */\n  public loadForecast(): Observable {\n    if (environment.testData) {\n      return of(FORECAST);\n    }\n    let returnObservable = new Observable((observer) => {\n        this.httpClient.get(this.forecastURL).subscribe(data => {\n          let forecastData = this.createOutdoorForecastDataFromServerResponse(data);\n          observer.next(forecastData);\n          observer.complete();\n        },\n        (error) => {\n          console.log(error);\n          observer.next();\n          observer.complete();\n        })\n      }\n    );\n    return returnObservable;\n  }\n\n  /**\n   * @returns an observable with the loadad PollenData from the api or test data\n   */\n  public loadPollen(): Observable{\n    if (environment.testData) {\n      let pollen = of(POLLEN);\n      return pollen;\n    }\n    let returnObservable = new Observable((observer) => {\n      let response = this.httpClient.get(this.allPollenTypesURL);\n      response.subscribe(data => {\n        let pollenData = this.createPollenDataFromServerResponse(data);\n        observer.next(pollenData);\n        observer.complete();\n      },\n      (error) => {\n        console.log(error);\n        observer.next([]);\n        observer.complete();\n      })\n    });\n    return returnObservable;\n  }\n\n  /**\n   * @returns an observable with the loadad IndoorRoomData from the api or test data\n   */\n  public loadIndoorRoomData(): Observable {\n    if (environment.testData) {\n      let indoorData = of(INDOORAIRQUALITY);\n      return indoorData;\n    }\n    let returnObservable = new Observable((observer) => { // Wir brauchen hier ein Array, -> sollen ja mehrere Räume möglich sein (theoretisch...)\n        this.httpClient.get(this.indoorURL).subscribe(data => {\n          let indoorData = this.createIndoorRoomDataFromServerResponse(data);\n          observer.next([indoorData]);\n          observer.complete();\n        },\n        (error) => {\n          console.log(error);\n          observer.next([]);\n          observer.complete();\n        })\n      }\n    );\n    return returnObservable;\n  }\n\n  /**\n   * @returns an observable with the loadad WeatherHistoryData or test data\n   */\n  public loadHistoryDataSubject(endDate: Date, beginDate: Date): Observable {\n    if (environment.testData) {\n      let forecastData = of(WEATHERHISTORY);\n      return forecastData;\n    }\n    let returnObservable = new Observable((observer) => { \n        this.httpClient.post(this.historyURL,\n          {\n            'begin': this.createServerFriendlyDate(beginDate),\n            'end': this.createServerFriendlyDate(endDate)\n          })\n        .subscribe(data => {\n          let dataPoints: OutdoorWeatherData[] = data.map((element) => {\n            return this.createOutdoorWeatherDataFromServerResponse(element);\n          });\n          observer.next({'datapoints': dataPoints});\n          observer.complete();\n        },\n        (error) => {\n          console.log(error);\n          observer.next();\n          observer.complete();\n        })\n      }\n    );\n    return returnObservable;\n  }\n\n  /**\n   * Helper function to convert date to string\n   * @param date \n   * @returns a date as a string which is understandable for the server\n   */\n  private createServerFriendlyDate(date: Date): string {\n    let dateString = date.toISOString().slice(0, 10);\n    let timeString = date.toTimeString().slice(0, 8);\n    return dateString + ' ' + timeString;\n  }\n\n  /**\n   * Helper function to convert the response from the server to an OutdoorWeatherData object\n   * \n   * @param response\n   * @returns OutdoorWeatherData object\n   */\n  private createOutdoorWeatherDataFromServerResponse(response: OutdoorWeatherResponse): OutdoorWeatherData {\n    const date = response.timestamp;\n    const year = date.substr(0, 4);\n    const month = date.substr(5, 2);\n    const day = date.substr(8, 2);\n    const time = date.substr(11);\n\n    const validDate = new Date(month + '/' + day + '/' + year + ' ' + time);\n\n    return {\n            temperature: response.temperature,\n            maxTemperature: -99, // Not implemented yet\n            minTemperature: -99, // Not implemented yet\n            humidity: response.humidity,\n            timestamp: validDate,\n            weather: response.weather,\n            apparentTemperature: response.apparentTemperature,\n            location: response.location_name,\n            postCode: response.location\n          }\n  }\n\n  /**\n   * Helper function to convert the response from the server to an IndoorRoomData object\n   * \n   * @param response\n   * @returns IndoorRoomData object\n   */\n  private createIndoorRoomDataFromServerResponse(response: IndoorRoomResponse): IndoorRoomData {\n    return {\n            roomID: response.id + '',\n            roomName: response.roomName,\n            airQuality: response.gasVal, \n            temperature: response.temperature, \n            humidity: response.humidity, \n            timestamp: new Date(response.timestamp), \n            calibrationValue: response.gasValCalibrationValue,\n          }\n  }\n\n  /**\n   * Helper function to convert the response from the server to an PollenData[] object\n   * \n   * @param response\n   * @returns PollenData[] object\n   */\n  private createPollenDataFromServerResponse(response: PollenResponse[]): PollenData[] {\n    let pollen: PollenData[] = [];\n    response.forEach(item => {\n      pollen.push({\n        id: item.id,\n        pollenName: item.pollenName,\n        today: item.loadRating,\n        tomorrow: ''\n      })\n    })\n    return pollen\n  }\n\n  /**\n   * Helper function to convert the response from the server to an WeatherForecastData object\n   * \n   * @param response\n   * @returns WeatherForecastData object\n   */\n  private createOutdoorForecastDataFromServerResponse(response: ForecastResponse): WeatherForecastData {\n    return {\n      trend: response.trend,\n      weatherDescription: response.weatherDescription, \n      weatherIcon: response.weatherIcon\n    }\n  }\n}\n\n/**\n * Model of the pollen api response\n */\ninterface PollenResponse {\n  id: number,\n  pollenName: string,\n  loadRating: string,\n}\n\n/**\n * Model of the outdoor weather api response\n */\ninterface OutdoorWeatherResponse {\n  id: number,\n  humidity: number,\n  temperature: number,\n  pressure: number,\n  location: string,\n  location_name: string,\n  timestamp: string,\n  weather: string,\n  apparentTemperature: number\n}\n\n/**\n * Model of the indoor room api response\n */\ninterface IndoorRoomResponse {\n  id: number,\n  humidity: number,\n  temperature: number,\n  pressure: number,\n  gasVal: number,\n  location: string,\n  timestamp: string,\n  gasValCalibrationValue: number,\n  roomName: string,\n}\n\n/**\n * Model of the forecast api response\n */\ninterface ForecastResponse {\n  id: number,\n  trend: string,\n  weatherIcon: string,\n  weatherDescription: string,\n  seaPressure: number,\n  timestampd: string\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IndoorTileViewComponent.html":{"url":"components/IndoorTileViewComponent.html","title":"component - IndoorTileViewComponent","body":"\n                   \n\n\n\n\n\n  Components\n  IndoorTileViewComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/views/indoor-tile-view/indoor-tile-view.component.ts\n\n\n    \n        Description\n    \n    \n        Indoor tile view component\nThis component displays in form of a tile (widget) the indoor room \ninformation. It takes an object of the type IndoorRoomData as \ninformation source. Itself has no connection to any\nservice. It uses the card-view-element to define the layout.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-indoor-tile-view\n            \n\n            \n                styleUrls\n                ./indoor-tile-view.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./indoor-tile-view.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                _indoorRoom\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getMaxValue\n                            \n                            \n                                getOptimalValue\n                            \n                            \n                                getQualityString\n                            \n                            \n                                getQualityValue\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                hideSubtitle\n                            \n                            \n                                pressable\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    data\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/views/indoor-tile-view/indoor-tile-view.component.ts:24\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        data\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/views/indoor-tile-view/indoor-tile-view.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        hideSubtitle\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/views/indoor-tile-view/indoor-tile-view.component.ts:23\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        pressable\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/views/indoor-tile-view/indoor-tile-view.component.ts:22\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getMaxValue\n                        \n                        \n                    \n                \n            \n            \n                \ngetMaxValue()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/views/indoor-tile-view/indoor-tile-view.component.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        based on the calibration value the value when the\nair quality is bad\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getOptimalValue\n                        \n                        \n                    \n                \n            \n            \n                \ngetOptimalValue()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/views/indoor-tile-view/indoor-tile-view.component.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        the calibration value as optimal value\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getQualityString\n                        \n                        \n                    \n                \n            \n            \n                \ngetQualityString()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/views/indoor-tile-view/indoor-tile-view.component.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        the quality status as a string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getQualityValue\n                        \n                        \n                    \n                \n            \n            \n                \ngetQualityValue()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/views/indoor-tile-view/indoor-tile-view.component.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        the Quality value as percent. A value od 100% is considered bad to where  0% is good. \n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/views/indoor-tile-view/indoor-tile-view.component.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            _indoorRoom\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IndoorRoomData\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/views/indoor-tile-view/indoor-tile-view.component.ts:24\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        data\n                    \n                \n\n\n                \n                    \n                        setdata(data)\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/views/indoor-tile-view/indoor-tile-view.component.ts:19\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            data\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { IndoorRoomData, WeatherData } from 'src/app/model/weather';\n\n/**\n * Indoor tile view component\n * \n * This component displays in form of a tile (widget) the indoor room \n * information. It takes an object of the type IndoorRoomData as \n * information source. Itself has no connection to any\n * service. It uses the card-view-element to define the layout.\n */\n@Component({\n  selector: 'app-indoor-tile-view',\n  templateUrl: './indoor-tile-view.component.html',\n  styleUrls: ['./indoor-tile-view.component.scss']\n})\nexport class IndoorTileViewComponent implements OnInit {\n  @Input()\n  set data(data: WeatherData) {\n    this._indoorRoom = data as IndoorRoomData;\n  }\n  @Input() pressable: boolean = false;\n  @Input() hideSubtitle: boolean = false;\n  _indoorRoom?: IndoorRoomData\n\n  constructor() { }\n\n  ngOnInit(): void { }\n\n  /** \n   * @returns the Quality value as percent. A value od 100% is considered bad to where  0% is good. \n   */\n  getQualityValue(): number {\n    if(this._indoorRoom){\n      const calibrationValue = this._indoorRoom.calibrationValue\n      const airQualityValue = this._indoorRoom.airQuality\n      if(calibrationValue === -1) {\n        return 0\n      }\n      if(calibrationValue + 5  airQualityValue) {\n        return 1\n      }\n    } \n    return 50\n  }\n\n  /**\n   * @returns based on the calibration value the value when the\n   * air quality is bad\n   */\n  getMaxValue(): number {\n    if(this._indoorRoom){\n      const calibrationValue = this._indoorRoom.calibrationValue\n      return calibrationValue + 5;\n    }\n    return 100\n  }\n\n  /**\n   * @returns the calibration value as optimal value\n   */\n  getOptimalValue(): number {\n    if(this._indoorRoom){\n      const calibrationValue = this._indoorRoom.calibrationValue\n      return calibrationValue;\n    }\n    return 25;\n  }\n\n  /**\n   * @returns the quality status as a string\n   */\n  getQualityString(): string {\n    if(this._indoorRoom){\n      const calibrationValue = this._indoorRoom.calibrationValue\n      const airQualityValue = this._indoorRoom.airQuality\n      if(calibrationValue === -1) {\n        return \"\"\n      }\n      if(this.getMaxValue()  airQualityValue) {\n        return 'sehr gut'\n      }\n    } \n    return ''\n  }\n}\n\n\n\n    \n\n    \n        \n    \n        \n            {{_indoorRoom.airQuality}}\n            {{getQualityString()}}\n        \n        \n            \n                Temperatur: {{_indoorRoom.temperature}}°C\n            \n            \n                Luftfeuchtigkeit: {{_indoorRoom.humidity}}%\n            \n        \n    \n    \n    Bitte kalibriere deinen Sensor. \n        \n\n\n    \n\n    \n                \n                    ./indoor-tile-view.component.scss\n                \n                h1 {\n    margin: 0;\n    font-weight: bold;\n    font-size: 4.0em;\n}\n\n.data-container {\n    display: flex;\n    justify-content: space-between;\n}\n\n.temp-humidity-data {\n    display: flex;\n    justify-content: flex-end;\n}\n\n.rename-image{\n    \n}\n\n.flex-container {\n    display: flex;\n    align-items: baseline;\n}\n\n#airQuality {\n    padding-left: 10px;\n    font-size: 2.0em;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        {{_indoorRoom.airQuality}}            {{getQualityString()}}                                            Temperatur: {{_indoorRoom.temperature}}°C                                        Luftfeuchtigkeit: {{_indoorRoom.humidity}}%                                Bitte kalibriere deinen Sensor.         '\n    var COMPONENTS = [{'name': 'ApparentTemperatureTileViewComponent', 'selector': 'app-apparent-temperature-tile-view'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BackButtonElementComponent', 'selector': 'app-back-button-element'},{'name': 'CalibrationInfoDetailViewComponent', 'selector': 'app-calibration-info-detail-view'},{'name': 'CardElementComponent', 'selector': 'card-element'},{'name': 'CheckboxSwitcherElementComponent', 'selector': 'app-checkbox-switcher-element'},{'name': 'ConfigurationTilePopUpDialogView', 'selector': 'configuration-tile-popup-view'},{'name': 'ConfigurationTileViewComponent', 'selector': 'app-configuration-tile-view'},{'name': 'ConfigurationViewComponent', 'selector': 'app-configuration-view'},{'name': 'DashboardScreenComponent', 'selector': 'app-dashboard-screen'},{'name': 'DashboardViewComponent', 'selector': 'app-dashboard-view'},{'name': 'DetailScreenComponent', 'selector': 'app-detail-screen'},{'name': 'ForecastDetailViewComponent', 'selector': 'app-forecast-detail-view'},{'name': 'ForecastTileViewComponent', 'selector': 'app-forecast-tile-view'},{'name': 'HistoryDetailViewComponent', 'selector': 'app-history-detail-view'},{'name': 'HistoryTileViewComponent', 'selector': 'app-history-tile-view'},{'name': 'HumidityTileViewComponent', 'selector': 'app-humidity-tile-view'},{'name': 'IndoorDetailViewComponent', 'selector': 'app-indoor-detail-view'},{'name': 'IndoorTileViewComponent', 'selector': 'app-indoor-tile-view'},{'name': 'LoginViewComponent', 'selector': 'app-login-view'},{'name': 'MenuBarElementComponent', 'selector': 'app-menu-bar-element'},{'name': 'MenuButtonElementComponent', 'selector': 'app-menu-button-element'},{'name': 'MenuElementComponent', 'selector': 'app-menu-element'},{'name': 'NavBarElementComponent', 'selector': 'app-nav-bar-element'},{'name': 'OnboardingScreenComponent', 'selector': 'app-onboarding-screen'},{'name': 'OpenAPELoginTileViewComponent', 'selector': 'app-open-apelogin-tile-view'},{'name': 'OutdoorWeatherDetailViewComponent', 'selector': 'app-outdoor-weather-detail-view'},{'name': 'OutdoorWeatherViewComponent', 'selector': 'app-outdoor-weather-view'},{'name': 'PersonalizationSettingsViewComponent', 'selector': 'app-personalization-settings-view'},{'name': 'PersonalizationViewComponent', 'selector': 'app-personalization-view'},{'name': 'PollenflugDetailViewComponent', 'selector': 'app-pollenflug-detail-view'},{'name': 'PollenflugSmallTileComponent', 'selector': 'app-pollenflug-small-tile'},{'name': 'PollenflugTileViewComponent', 'selector': 'app-pollenflug-tile-view'},{'name': 'PollenListElementComponent', 'selector': 'app-pollen-list-element'},{'name': 'PollenTagElementComponent', 'selector': 'app-pollen-tag-element'},{'name': 'ProgressChartElementComponent', 'selector': 'app-progress-chart-element'},{'name': 'RegistrationViewComponent', 'selector': 'app-registration-view'},{'name': 'SettingsScreenComponent', 'selector': 'app-settings-screen'},{'name': 'SimpleTileViewComponent', 'selector': 'app-simple-tile-view'},{'name': 'SliderElementComponent', 'selector': 'app-slider-element'},{'name': 'TtsPlayerElementComponent', 'selector': 'app-tts-player-element'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'IndoorTileViewComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalStorageService.html":{"url":"injectables/LocalStorageService.html","title":"injectable - LocalStorageService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LocalStorageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/local-storage.service.ts\n        \n\n            \n                Description\n            \n            \n                Local storage service injectable\nUse this service to get access to the local storage of the browser.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                clear\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    userContext\n                                \n                                \n                                    userID\n                                \n                                \n                                    disableLogin\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/local-storage.service.ts:75\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            clear\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    clear()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/local-storage.service.ts:82\n                \n            \n\n\n            \n                \n                    Use this function to clear the local storage, e.g. if the use logs out.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        userContext\n                    \n                \n\n                \n                    \n                        getuserContext()\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/local-storage.service.ts:26\n                                \n                            \n                    \n                        \n                                Load user context from local storage\n\n\n                                \n                                    Returns :         UserContext\n\n                                \n                        \n                    \n\n                \n                    \n                        setuserContext(object)\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/local-storage.service.ts:18\n                                \n                            \n                    \n                        \n                                Save user context to local storage\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                        Description\n                                                \n                                            \n                                            \n                                                    \n                                                            object\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                            \n                                                                    UserContext object to save\n\n                                                            \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        userID\n                    \n                \n\n                \n                    \n                        getuserID()\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/local-storage.service.ts:48\n                                \n                            \n                    \n                        \n                                Load userID from local storage\n\n\n                                \n                                    Returns :         UserIdentifikation\n\n                                \n                        \n                    \n\n                \n                    \n                        setuserID(value)\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/local-storage.service.ts:40\n                                \n                            \n                    \n                        \n                                Save userID to local storage\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                        Description\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                            \n                                                                    Token string to save\n\n                                                            \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        disableLogin\n                    \n                \n\n                \n                    \n                        getdisableLogin()\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/local-storage.service.ts:60\n                                \n                            \n                    \n                        \n                                Load disable open ape value from local storage\n\n\n                                \n                                    Returns :         boolean\n\n                                \n                        \n                    \n\n                \n                    \n                        setdisableLogin(value: boolean)\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/local-storage.service.ts:73\n                                \n                            \n                    \n                        \n                                Save disable open ape value to local storage\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                        Description\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            boolean\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                            \n                                                                    Disable open ape value to save\n\n                                                            \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { INITIAL_USER_CONTEXT, INITIAL_USER_IDENTIFIKATION, UserContext, UserIdentifikation } from '../model/user-context';\n\n/**\n * Local storage service injectable\n * \n * Use this service to get access to the local storage of the browser.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class LocalStorageService {\n  /**\n  * Save user context to local storage\n  * \n  * @param {UserContext} object  UserContext object to save\n  */\n  set userContext(object: UserContext) {\n    const objectString = JSON.stringify(object)\n    this.setItem(USER_CONTEXT_IDENTIFIER, objectString);\n  }\n\n  /**\n  * Load user context from local storage\n  */\n  get userContext(): UserContext {\n    const objectString = this.getItem(USER_CONTEXT_IDENTIFIER);\n    if (objectString) {\n      const userContext = JSON.parse(objectString) as UserContext;\n      return userContext\n    } \n    return INITIAL_USER_CONTEXT\n  }\n\n  /**\n  * Save userID to local storage\n  * \n  * @param {UserIdentifikation} value  Token string to save\n  */\n  set userID(value: UserIdentifikation) {\n    const objectString = JSON.stringify(value)\n    this.setItem(USER_IDENTIFIKATION, objectString);\n  }\n\n  /**\n  * Load userID from local storage\n  */\n   get userID(): UserIdentifikation {\n    const objectString = this.getItem(USER_IDENTIFIKATION);\n    if (objectString) {\n      const userID = JSON.parse(objectString) as UserIdentifikation;\n      return userID\n    } \n    return INITIAL_USER_IDENTIFIKATION\n  }  \n\n  /**\n  * Load disable open ape value from local storage\n  */\n  get disableLogin(): boolean {\n    const disableOpenApeValue = this.getItem(DISABLE_LOGIN_IDENTIFIER);\n    if(disableOpenApeValue) {\n      return JSON.parse(disableOpenApeValue)\n    }\n    return false;\n  }\n\n  /**\n  * Save disable open ape value to local storage\n  * \n  * @param {boolean} value  Disable open ape value to save\n  */\n  set disableLogin(value: boolean) {\n    this.setItem(DISABLE_LOGIN_IDENTIFIER, value + '');\n  }\n\n  constructor() { }\n\n  /**\n   * Use this function to clear the local storage, e.g. if the use logs out.\n   */\n  public clear(): void {\n    localStorage.clear(); \n  }\n\n  /**\n   * Helper function to set item in local storage\n   */\n  private setItem(key: string, value: string) {\n    localStorage.setItem(key, value);\n  }\n\n  /**\n   * Helper function to get item in local storage\n   */ \n  private getItem(key: string): string | null{ \n    return localStorage.getItem(key)\n  }\n\n  /**\n   * Helper function to remove item in local storage\n   */\n  private removeItem(key:string): void {\n    localStorage.removeItem(key);\n  }\n}\n\n/**\n * Identifier key constants\n */\nconst USER_IDENTIFIKATION = 'wetterstation-user-identifikation';\nconst USER_CONTEXT_IDENTIFIER = 'wetterstation-user-context'\nconst DISABLE_LOGIN_IDENTIFIER = 'wetterstation-disable-login'\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LoginResponse.html":{"url":"interfaces/LoginResponse.html","title":"interface - LoginResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  LoginResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/api/user-context-api.service.ts\n        \n\n            \n                Description\n            \n            \n                Model of the login response\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        message\n                                \n                                \n                                        success\n                                \n                                \n                                        token\n                                \n                                \n                                        userContext\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        success\n                                    \n                                \n                                \n                                    \n                                        success:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        token\n                                    \n                                \n                                \n                                    \n                                        token:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userContext\n                                    \n                                \n                                \n                                    \n                                        userContext:         UserContextResponse\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         UserContextResponse\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { PollenType, Themes, UserContext, UserIdentifikation } from '../../model/user-context';\n\n/**\n * User context api service injectable\n * \n * Use this service to access the network. It implements all routes for \n * user context data\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserContextAPIService {\n  private loginURL = environment.baseURL + 'auth/login';\n  private registerURL = environment.baseURL + 'user/register';\n  private checkTokenURL = environment.baseURL + 'auth/checkToken';\n  private currentUserContextURL = environment.baseURL + 'user/currentUser';\n  private saveUserContextURL = environment.baseURL + 'user/save';\n  private allPollenTypesURL = environment.baseURL + 'pollen/all';\n  private deletePollenURL = environment.baseURL + 'allergies/delete';\n  private savePollenURL = environment.baseURL + 'allergies/save';\n  private openAPEURL = environment.baseURL + 'user/loadOpenAPESettingsAndSave';\n\n  constructor(private httpClient: HttpClient) { }\n\n  /**\n   * @returns an observable with the user identifikation and the user context\n   */\n  public postLogin(password: string, username: string): Observable {\n    let returnObservable = new Observable((observer) => {\n      let response = this.httpClient.post(this.loginURL, \n                                                        {username: username, password: password}, {observe: 'response'});\n      response.subscribe((response) => {\n        let body = response.body\n        if(body){\n          if(body.success) {\n            observer.next({\n              userID: {\n                token: body.token,\n                id: body.userContext.id\n              },\n              userContext: this.createUserContextFromServerResponse(body.userContext)\n            });\n          } else {\n            observer.error(body.message);\n          }\n        }\n      },\n      (error)=> {\n        observer.error(\"Ein Fehler ist aufgetreten. Bitte versuche es später erneut. \");\n        console.log(error);\n        observer.complete();\n      },() => {\n        observer.complete();\n      });\n    }\n  );\n  return returnObservable;\n  }\n\n  /**\n   * @returns an observable with an user context object\n   */\n  public postLoginOpenAPE(username: string, password: string, userID: UserIdentifikation): Observable {\n    let returnObservable = new Observable((observer) => {\n      let httpOptions = {\n        headers: new HttpHeaders({ 'Authorization': 'Bearer ' + userID.token }),\n      };\n      let response = this.httpClient.post(this.openAPEURL, \n                                                              {openApeUser: username, openApePassword: password}, httpOptions);\n      response.subscribe((response) => {\n        if(response){\n            observer.next(this.createUserContextFromServerResponse(response));\n        }\n      },\n      (error)=> {\n        observer.error(\"Ein Fehler ist aufgetreten. Bitte versuche es später erneut. \");\n        console.log(error);\n        observer.complete();\n      },() => {\n        observer.complete();\n      });\n    }\n  );\n  return returnObservable;\n  }\n\n  /**\n   * @returns an observable with a boolean if the register was successful or not\n   */\n  public postRegister(password: string, username: string): Observable {\n    let returnObservable = new Observable((observer) => {\n      let response = this.httpClient.post(this.registerURL, \n                                                              {username: username, password: password}, {observe: 'response'});\n      response.subscribe((response) => {\n        let body = response.body\n        if(body){\n          if(body.id) {\n            observer.next(true);\n          } else {\n            observer.error(\"Ein Fehler ist aufgetreten. Bitte versuche es später erneut\");\n          }\n        }\n      },\n      (error)=> {\n        observer.error(\"Ein Fehler ist aufgetreten. Bitte versuche es später erneut\");\n        console.log(error);\n        observer.complete();\n      },\n      () => {\n        observer.complete();\n      });\n    }\n  );\n  return returnObservable;\n  }\n\n  /**\n   * @returns an observable with a boolean if the saving user context was successful or not\n   */\n  public putSaveUserContext(userID: UserIdentifikation, userContext: UserContext): Observable{\n    let body = {\n      theme: Themes[userContext.theme],\n      fontSize: userContext.fontSize,\n      selfVoicingEnabled: userContext.selfVoicingEnabled,\n      doVentilationReminder: userContext.doVentilationReminder,\n      reduceMotion: userContext.reduceMotion\n    }\n    let httpOptions = {\n      headers: new HttpHeaders({ 'Authorization': 'Bearer ' + userID.token }),\n      params: new HttpParams().set('id', userID.id + ''),\n    };\n    let returnObservable = new Observable((observer) => {\n      let response = this.httpClient.put(this.saveUserContextURL, body, httpOptions);\n      response.subscribe((response) => {\n        let body = response\n        if(body && body.id) {\n          observer.next(true);\n        } else {\n          observer.error(\"POST - SAVE USER CONTEXT - Ein Fehler ist aufgetreten.\");\n        }\n      },\n      (error)=> {\n        observer.error(\"POST - SAVE USER CONTEXT - Ein Fehler ist aufgetreten.\");\n        console.log(error);\n        observer.complete();\n      }, \n      () => {\n        observer.complete();\n      });\n    });\n    return returnObservable;\n  }\n\n  /**\n   * @returns an observable with a boolean if the deletion user context was successful or not\n   */\n  public deletePolleFromUserContext(userID: UserIdentifikation, pollenID: number): Observable  {\n    let body = {\n      userID: userID.id,\n      pollenID: pollenID\n    }\n    let httpOptions = {\n      headers: new HttpHeaders({ 'Authorization': 'Bearer ' + userID.token }), body: body\n    };\n    let returnObservable = new Observable((observer) => {\n      let response = this.httpClient.delete(this.deletePollenURL, httpOptions);\n      response.subscribe(() => {\n        observer.next(true);\n      },\n      (error) => {\n        observer.error(\"DELETE - Polle\");\n        console.log(error);\n        observer.complete();\n      }, \n      () => {\n        observer.complete();\n      });\n\n    });\n    return returnObservable;\n  }\n\n  /**\n   * @returns an observable with a boolean if the insertion was successful or not\n   */\n  public postPolleToUserContext(userID: UserIdentifikation, pollenID: number): Observable {\n    let body = {\n      userID: userID.id,\n      pollenID: pollenID\n    }\n    let httpOptions = {\n      headers: new HttpHeaders({ 'Authorization': 'Bearer ' + userID.token }),\n    };\n    let returnObservable = new Observable((observer) => {\n      let response = this.httpClient.post(this.savePollenURL, body, httpOptions);\n      response.subscribe(() => {\n        observer.next(true);\n      },\n      (error)=> {\n        observer.error(\"DELETE - Polle\");\n        console.log(error);\n        observer.complete();\n      }, \n      () => {\n        observer.complete();\n      });\n    });\n    return returnObservable;\n  }\n  /**\n   * @returns an observable with a boolean if the token is valid or not\n   */\n  public postIsTokenValid(token: string): Observable {\n    let returnObservable = new Observable((observer) => {\n      let httpOptions = {\n        headers: new HttpHeaders({ 'Authorization': 'Bearer ' + token })\n      };\n      let response = this.httpClient.get(this.checkTokenURL, httpOptions);\n      response.subscribe(data => {\n        observer.next(data.success);\n        observer.complete();\n      }, \n      () => {\n        observer.next(false);\n        observer.complete();\n      })\n    });\n    return returnObservable;\n  }\n\n  /**\n   * @returns an observable with an user context object\n   */\n  public loadUserContext(token: string): Observable{\n    let returnObservable = new Observable((observer) => {\n      let httpOptions = {\n        headers: new HttpHeaders({ 'Authorization': 'Bearer ' + token })\n      };\n      let response = this.httpClient.get(this.currentUserContextURL, httpOptions);\n      response.subscribe(context => {\n        observer.next(this.createUserContextFromServerResponse(context));\n        observer.complete();\n      }, \n      () => {\n        observer.error(\"An error occured\")\n        observer.complete();\n      })\n    });\n    return returnObservable;\n  }\n\n  /**\n   * @returns an observable with pollen types array\n   */\n  public loadPollenTypes(): Observable{\n    let returnObservable = new Observable((observer) => {\n      let response = this.httpClient.get(this.allPollenTypesURL);\n      response.subscribe(data => {\n        observer.next(data);\n      });\n    });\n    return returnObservable\n  }\n\n  /**\n   * Helper function to create user context object from server response.\n   * @param userContext \n   * @returns an user context object\n   */\n  private createUserContextFromServerResponse(userContext: UserContextResponse): UserContext {\n    return {\n      theme: this.getThemeTypeFromServerResponse(userContext.theme),\n      fontSize: userContext.fontSize,\n      pollen: userContext.pollen, \n      doVentilationReminder: userContext.doVentilationReminder,\n      reduceMotion: userContext.reduceMotion,\n      selfVoicingEnabled: userContext.selfVoicingEnabled\n    }\n  }\n\n  /**\n   * Helper function to convert theme String to Theme type\n   * @return the converted Theme\n   */\n  private getThemeTypeFromServerResponse(theme: string): Themes {\n    switch(theme) {\n      case \"Dark\": return Themes.Dark;\n      case \"Light\": return Themes.Light;\n      case \"HighContrast\": return Themes.HighContrast;\n      default: return Themes.Automatic;\n    }\n  }\n}\n\n/**\n * Model of the login response\n */\ninterface LoginResponse {\n  success: boolean,\n  message: string,\n  userContext: UserContextResponse,\n  token: string,\n}\n\n/**\n * Model of the user context response\n */\ninterface UserContextResponse {\n  id: number,\n  username: string,\n  theme: string,\n  fontSize: number,\n  selfVoicingEnabled: boolean,\n  doVentilationReminder: boolean,\n  reduceMotion: boolean,\n  pollen: string[]\n}\n\n/**\n * Model of the check token response\n */\ninterface CheckTokenResponse {\n  success: boolean,\n  message: string,\n}\n\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginViewComponent.html":{"url":"components/LoginViewComponent.html","title":"component - LoginViewComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoginViewComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/views/login-view/login-view.component.ts\n\n\n    \n        Description\n    \n    \n        Login view component\nDisplay two form controls to enter the username and password\nto log the user in. For this it uses the user context service.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login-view\n            \n\n            \n                styleUrls\n                ./login-view.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./login-view.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                error\n                            \n                            \n                                loginForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onClickPersonalization\n                            \n                            \n                                onClickRegistration\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, userContextService: UserContextService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/views/login-view/login-view.component.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userContextService\n                                                  \n                                                        \n                                                                        UserContextService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/views/login-view/login-view.component.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onClickPersonalization\n                        \n                        \n                    \n                \n            \n            \n                \nonClickPersonalization()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/views/login-view/login-view.component.ts:63\n                \n            \n\n\n            \n                \n                    Redirects to the personalization screen\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onClickRegistration\n                        \n                        \n                    \n                \n            \n            \n                \nonClickRegistration()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/views/login-view/login-view.component.ts:55\n                \n            \n\n\n            \n                \n                    Redirects to the registration screen\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSubmit\n                        \n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/views/login-view/login-view.component.ts:35\n                \n            \n\n\n            \n                \n                    Triggers the login process. Calls the user context service\nto log the user in. If it fails it displays an error message.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            error\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/views/login-view/login-view.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loginForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.formBuilder.group({\n    username: new FormControl('', Validators.minLength(2)), // FIXME Validators funktionieren nicht \n    password: new FormControl('', Validators.minLength(2)),\n  })\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/views/login-view/login-view.component.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, Validators } from '@angular/forms'; \nimport { Router } from '@angular/router';\nimport { UserContextService } from 'src/app/services/user-context.service';\n\n/**\n * Login view component\n * \n * Display two form controls to enter the username and password\n * to log the user in. For this it uses the user context service.\n */\n@Component({\n  selector: 'app-login-view',\n  templateUrl: './login-view.component.html',\n  styleUrls: ['./login-view.component.scss']\n})\nexport class LoginViewComponent implements OnInit {\n  loginForm = this.formBuilder.group({\n    username: new FormControl('', Validators.minLength(2)), // FIXME Validators funktionieren nicht \n    password: new FormControl('', Validators.minLength(2)),\n  });\n  error?: string;\n\n  constructor(private formBuilder: FormBuilder,\n    private userContextService: UserContextService,\n    private router: Router) { }\n\n  ngOnInit(): void {\n  }\n\n  /**\n   * Triggers the login process. Calls the user context service\n   * to log the user in. If it fails it displays an error message.\n   */\n  onSubmit(): void {\n    const username = this.loginForm.get(\"username\")?.value;\n    const password = this.loginForm.get(\"password\")?.value;\n    this.error = undefined;\n\n    this.userContextService.login(username, password).then((data) => {\n      if(data.success) {\n        this.router.navigateByUrl('/dashboard');\n      } else {\n        this.error = data.error;\n      }\n    },\n    (error) => {\n      this.error = error;\n    });\n  }\n\n  /**\n   * Redirects to the registration screen\n   */\n  onClickRegistration() {\n    this.userContextService.logout();\n    this.router.navigateByUrl('/onboarding/registration');\n  }\n\n  /**\n   * Redirects to the personalization screen\n   */\n  onClickPersonalization() {\n    this.userContextService.disableLogin = true;\n    this.router.navigateByUrl('/onboarding/personalization');\n  }\n}\n\n    \n\n    \n        \n  \n    \n    \n      WeatherIO\n      Eine HdM Smarthome Innovation\n    \n  \n  \n    \n        \n          Nutzername\n        \n        \n      \n    \n      \n        \n          Passwort\n        \n        \n      \n      {{error}}\n\n\n    \n  \n  \n    Registrieren\n    Weiter ohne Login \n  \n\n\n\n  \n    \n\n    \n                \n                    ./login-view.component.scss\n                \n                .noon-gradient {\n    background: rgb(97,194,216);\n    background: -moz-linear-gradient(0deg, rgba(97,194,216,1) 0%, rgba(67,125,219,1) 100%);\n    background: -webkit-linear-gradient(0deg, rgba(97,194,216,1) 0%, rgba(67,125,219,1) 100%);\n    background: linear-gradient(0deg, rgba(97,194,216,1) 0%, rgba(67,125,219,1) 100%);\n    filter: progid:DXImageTransform.Microsoft.gradient(startColorstr=\"#61c2d8\",endColorstr=\"#437ddb\",GradientType=1);\n}\n\nh5 {\n    text-align: center;\n}\n\n.logo {\n    height: 10.0em;\n    margin-bottom: var(--padding);\n}\n\nform {\n    width: 100%;\n}\n\nbutton {\n    text-decoration: underline;\n    padding: var(--padding) 0 0 0;\n}\n\n.button-container {\n    width: 100%;\n    display: flex;\n    flex-direction: row;\n\n    justify-content: space-between;\n    align-content: space-between;\n\n}\n\nh5 {\n    padding: 0;\n    margin: 0;\n    text-align: left;\n}\n\n.logo-text {\n    padding-left: 10px;\n}\n\n.flex-container {\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n\n    padding: calc(var(--padding) * 4) 0 calc(var(--padding) * 3) 0;\n}\n\n.container {\n    display: flex;\n    align-items: center;\n    flex-direction: column;\n    justify-items: stretch;\n    // margin-left: calc(var(--border-padding-left) - var(--border-padding-right));\n}\n\n@media (min-width: 770px) {\n    .container {\n        border-left: 0.5px solid var(--background);\n    }\n}\n.container *:not(input, .error-message) {\n    color: var(--text);\n} \n\nh1 {\n    margin: 0;\n}\n\n.error-message {\n    color: var(--status-red);\n    padding-top: calc(var(--padding) / 2 );\n    text-align: center;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                WeatherIO      Eine HdM Smarthome Innovation                              Nutzername                                                  Passwort                            {{error}}            Registrieren    Weiter ohne Login     '\n    var COMPONENTS = [{'name': 'ApparentTemperatureTileViewComponent', 'selector': 'app-apparent-temperature-tile-view'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BackButtonElementComponent', 'selector': 'app-back-button-element'},{'name': 'CalibrationInfoDetailViewComponent', 'selector': 'app-calibration-info-detail-view'},{'name': 'CardElementComponent', 'selector': 'card-element'},{'name': 'CheckboxSwitcherElementComponent', 'selector': 'app-checkbox-switcher-element'},{'name': 'ConfigurationTilePopUpDialogView', 'selector': 'configuration-tile-popup-view'},{'name': 'ConfigurationTileViewComponent', 'selector': 'app-configuration-tile-view'},{'name': 'ConfigurationViewComponent', 'selector': 'app-configuration-view'},{'name': 'DashboardScreenComponent', 'selector': 'app-dashboard-screen'},{'name': 'DashboardViewComponent', 'selector': 'app-dashboard-view'},{'name': 'DetailScreenComponent', 'selector': 'app-detail-screen'},{'name': 'ForecastDetailViewComponent', 'selector': 'app-forecast-detail-view'},{'name': 'ForecastTileViewComponent', 'selector': 'app-forecast-tile-view'},{'name': 'HistoryDetailViewComponent', 'selector': 'app-history-detail-view'},{'name': 'HistoryTileViewComponent', 'selector': 'app-history-tile-view'},{'name': 'HumidityTileViewComponent', 'selector': 'app-humidity-tile-view'},{'name': 'IndoorDetailViewComponent', 'selector': 'app-indoor-detail-view'},{'name': 'IndoorTileViewComponent', 'selector': 'app-indoor-tile-view'},{'name': 'LoginViewComponent', 'selector': 'app-login-view'},{'name': 'MenuBarElementComponent', 'selector': 'app-menu-bar-element'},{'name': 'MenuButtonElementComponent', 'selector': 'app-menu-button-element'},{'name': 'MenuElementComponent', 'selector': 'app-menu-element'},{'name': 'NavBarElementComponent', 'selector': 'app-nav-bar-element'},{'name': 'OnboardingScreenComponent', 'selector': 'app-onboarding-screen'},{'name': 'OpenAPELoginTileViewComponent', 'selector': 'app-open-apelogin-tile-view'},{'name': 'OutdoorWeatherDetailViewComponent', 'selector': 'app-outdoor-weather-detail-view'},{'name': 'OutdoorWeatherViewComponent', 'selector': 'app-outdoor-weather-view'},{'name': 'PersonalizationSettingsViewComponent', 'selector': 'app-personalization-settings-view'},{'name': 'PersonalizationViewComponent', 'selector': 'app-personalization-view'},{'name': 'PollenflugDetailViewComponent', 'selector': 'app-pollenflug-detail-view'},{'name': 'PollenflugSmallTileComponent', 'selector': 'app-pollenflug-small-tile'},{'name': 'PollenflugTileViewComponent', 'selector': 'app-pollenflug-tile-view'},{'name': 'PollenListElementComponent', 'selector': 'app-pollen-list-element'},{'name': 'PollenTagElementComponent', 'selector': 'app-pollen-tag-element'},{'name': 'ProgressChartElementComponent', 'selector': 'app-progress-chart-element'},{'name': 'RegistrationViewComponent', 'selector': 'app-registration-view'},{'name': 'SettingsScreenComponent', 'selector': 'app-settings-screen'},{'name': 'SimpleTileViewComponent', 'selector': 'app-simple-tile-view'},{'name': 'SliderElementComponent', 'selector': 'app-slider-element'},{'name': 'TtsPlayerElementComponent', 'selector': 'app-tts-player-element'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginViewComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MenuBarElementComponent.html":{"url":"components/MenuBarElementComponent.html","title":"component - MenuBarElementComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MenuBarElementComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/ui-elements/menu-bar-element/menu-bar-element.component.ts\n\n\n    \n        Description\n    \n    \n        Menu bar element\nMenu bar navigation component which is displayed in the\ndashboard screen.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-menu-bar-element\n            \n\n            \n                styleUrls\n                ./menu-bar-element.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./menu-bar-element.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                locationLabel\n                            \n                            \n                                reduceMotion\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getLocation\n                            \n                            \n                                loadReduceMotionValue\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                reloadData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(weatherDataService: WeatherDataService, userContextService: UserContextService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/ui-elements/menu-bar-element/menu-bar-element.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        weatherDataService\n                                                  \n                                                        \n                                                                        WeatherDataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userContextService\n                                                  \n                                                        \n                                                                        UserContextService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getLocation\n                        \n                        \n                    \n                \n            \n            \n                \ngetLocation()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/ui-elements/menu-bar-element/menu-bar-element.component.ts:41\n                \n            \n\n\n            \n                \n                    Subscribes to outdoor weather subject to load the location stirng\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadReduceMotionValue\n                        \n                        \n                    \n                \n            \n            \n                \nloadReduceMotionValue()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/ui-elements/menu-bar-element/menu-bar-element.component.ts:31\n                \n            \n\n\n            \n                \n                    Subscribes to the reduce motion value\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/ui-elements/menu-bar-element/menu-bar-element.component.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            reloadData\n                        \n                        \n                    \n                \n            \n            \n                \nreloadData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/ui-elements/menu-bar-element/menu-bar-element.component.ts:52\n                \n            \n\n\n            \n                \n                    Calls the reload function of the weather data service.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            locationLabel\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/ui-elements/menu-bar-element/menu-bar-element.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            reduceMotion\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/ui-elements/menu-bar-element/menu-bar-element.component.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { UserContextService } from 'src/app/services/user-context.service';\nimport { WeatherDataService } from 'src/app/services/weather-data.service';\n\n/**\n * Menu bar element\n * \n * Menu bar navigation component which is displayed in the\n * dashboard screen.\n */\n@Component({\n  selector: 'app-menu-bar-element',\n  templateUrl: './menu-bar-element.component.html',\n  styleUrls: ['./menu-bar-element.component.scss']\n})\nexport class MenuBarElementComponent implements OnInit {\n  locationLabel?: string;\n  reduceMotion: boolean = false; // We need this value, because the menu bar changes the font color, based on it\n\n  constructor(private weatherDataService: WeatherDataService,\n              private userContextService: UserContextService) { }\n\n  ngOnInit(): void {\n    this.getLocation();\n    this.loadReduceMotionValue();\n  }\n\n  /**\n   * Subscribes to the reduce motion value\n   */\n  loadReduceMotionValue() {\n    this.userContextService.getUserContextSubject()\n                          .subscribe(data => {\n                              this.reduceMotion = data.reduceMotion;\n                            });\n  }\n\n  /**\n   * Subscribes to outdoor weather subject to load the location stirng\n   */\n  getLocation(): void {\n    this.weatherDataService.getOutdoorWeatherDataSubject()\n                        .subscribe(data => {\n                          if(data)\n                          this.locationLabel = data.location + ', ' + data.postCode;\n                        });\n  }\n  \n  /**\n   * Calls the reload function of the weather data service.\n   */\n  reloadData() {\n    this.weatherDataService.reloadData();\n  }\n}\n\n    \n\n    \n        \n\n\n    \n        \n        \n            \n        \n    \n    \n        {{locationLabel}}\n    \n\n    \n\n    \n                \n                    ./menu-bar-element.component.scss\n                \n                @import \"../../shared/styles\";\n\n.button-container {\n    display: flex;\n    flex-wrap: nowrap;\n    justify-content: space-between;\n    height: 2.6em;\n}\n\nbutton {\n    margin: 0;\n    padding: 0;\n    fill: var(--secondary);\n    svg {\n        height: 1.7em; \n    }\n} \n\n.container {\n    position: fixed;\n    top: 0;\n    left: 0;\n    right: 0;\n    padding: var(--border-padding-top) var(--border-padding-right) 0 var(--border-padding-left);\n    height: var(--navbar-height);\n    z-index: 100;\n}\n\n.blur {\n    backdrop-filter: blur(20px);\n    position: fixed;\n    top: 0;\n    left: 0;\n    right: 0;\n    height: calc(var(--navbar-height) + var(--border-padding-top));\n    z-index: 5;\n}\n\n// css for mobile \n@media(max-width: 770px) {\n    @media (prefers-reduced-motion: no-preference) {\n\n        @keyframes color {\n            from {\n                color: white;\n                fill: white;\n            }\n        \n            to {\n                color: var(--text);\n                fill: var(--secondary);\n            }\n        }\n\n        h1.motion-allowed, svg.motion-allowed{\n            animation-name: color;\n            @include linear-animation;\n        }\n    }\n}\n\n// css for desktop \n@media(min-width: 690px) {\n    .container {\n        backdrop-filter: blur(20px);\n        left: calc(var(--border-padding-left) - var(--border-padding-right));\n        padding: var(--border-padding-top) var(--border-padding-right) 0 var(--border-padding-right);\n    }\n\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                        {{locationLabel}}    '\n    var COMPONENTS = [{'name': 'ApparentTemperatureTileViewComponent', 'selector': 'app-apparent-temperature-tile-view'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BackButtonElementComponent', 'selector': 'app-back-button-element'},{'name': 'CalibrationInfoDetailViewComponent', 'selector': 'app-calibration-info-detail-view'},{'name': 'CardElementComponent', 'selector': 'card-element'},{'name': 'CheckboxSwitcherElementComponent', 'selector': 'app-checkbox-switcher-element'},{'name': 'ConfigurationTilePopUpDialogView', 'selector': 'configuration-tile-popup-view'},{'name': 'ConfigurationTileViewComponent', 'selector': 'app-configuration-tile-view'},{'name': 'ConfigurationViewComponent', 'selector': 'app-configuration-view'},{'name': 'DashboardScreenComponent', 'selector': 'app-dashboard-screen'},{'name': 'DashboardViewComponent', 'selector': 'app-dashboard-view'},{'name': 'DetailScreenComponent', 'selector': 'app-detail-screen'},{'name': 'ForecastDetailViewComponent', 'selector': 'app-forecast-detail-view'},{'name': 'ForecastTileViewComponent', 'selector': 'app-forecast-tile-view'},{'name': 'HistoryDetailViewComponent', 'selector': 'app-history-detail-view'},{'name': 'HistoryTileViewComponent', 'selector': 'app-history-tile-view'},{'name': 'HumidityTileViewComponent', 'selector': 'app-humidity-tile-view'},{'name': 'IndoorDetailViewComponent', 'selector': 'app-indoor-detail-view'},{'name': 'IndoorTileViewComponent', 'selector': 'app-indoor-tile-view'},{'name': 'LoginViewComponent', 'selector': 'app-login-view'},{'name': 'MenuBarElementComponent', 'selector': 'app-menu-bar-element'},{'name': 'MenuButtonElementComponent', 'selector': 'app-menu-button-element'},{'name': 'MenuElementComponent', 'selector': 'app-menu-element'},{'name': 'NavBarElementComponent', 'selector': 'app-nav-bar-element'},{'name': 'OnboardingScreenComponent', 'selector': 'app-onboarding-screen'},{'name': 'OpenAPELoginTileViewComponent', 'selector': 'app-open-apelogin-tile-view'},{'name': 'OutdoorWeatherDetailViewComponent', 'selector': 'app-outdoor-weather-detail-view'},{'name': 'OutdoorWeatherViewComponent', 'selector': 'app-outdoor-weather-view'},{'name': 'PersonalizationSettingsViewComponent', 'selector': 'app-personalization-settings-view'},{'name': 'PersonalizationViewComponent', 'selector': 'app-personalization-view'},{'name': 'PollenflugDetailViewComponent', 'selector': 'app-pollenflug-detail-view'},{'name': 'PollenflugSmallTileComponent', 'selector': 'app-pollenflug-small-tile'},{'name': 'PollenflugTileViewComponent', 'selector': 'app-pollenflug-tile-view'},{'name': 'PollenListElementComponent', 'selector': 'app-pollen-list-element'},{'name': 'PollenTagElementComponent', 'selector': 'app-pollen-tag-element'},{'name': 'ProgressChartElementComponent', 'selector': 'app-progress-chart-element'},{'name': 'RegistrationViewComponent', 'selector': 'app-registration-view'},{'name': 'SettingsScreenComponent', 'selector': 'app-settings-screen'},{'name': 'SimpleTileViewComponent', 'selector': 'app-simple-tile-view'},{'name': 'SliderElementComponent', 'selector': 'app-slider-element'},{'name': 'TtsPlayerElementComponent', 'selector': 'app-tts-player-element'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MenuBarElementComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MenuButtonElementComponent.html":{"url":"components/MenuButtonElementComponent.html","title":"component - MenuButtonElementComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MenuButtonElementComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/ui-elements/menu-button-element/menu-button-element.component.ts\n\n\n    \n        Description\n    \n    \n        Menu button element component\nThis component is the top left menu button in the dashboard \nscreen. It opens and closes the menu element.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-menu-button-element\n            \n\n            \n                styleUrls\n                ./menu-button-element.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./menu-button-element.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isMenuHidden\n                            \n                            \n                                reduceMotion\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closeMenu\n                            \n                            \n                                loadReduceMotionValue\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openMenu\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userContextService: UserContextService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/ui-elements/menu-button-element/menu-button-element.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userContextService\n                                                  \n                                                        \n                                                                        UserContextService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            closeMenu\n                        \n                        \n                    \n                \n            \n            \n                \ncloseMenu()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/ui-elements/menu-button-element/menu-button-element.component.ts:46\n                \n            \n\n\n            \n                \n                    Turns the background blur off\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadReduceMotionValue\n                        \n                        \n                    \n                \n            \n            \n                \nloadReduceMotionValue()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/ui-elements/menu-button-element/menu-button-element.component.ts:28\n                \n            \n\n\n            \n                \n                    Subscribes to the reduce motion value\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/ui-elements/menu-button-element/menu-button-element.component.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openMenu\n                        \n                        \n                    \n                \n            \n            \n                \nopenMenu()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/ui-elements/menu-button-element/menu-button-element.component.ts:39\n                \n            \n\n\n            \n                \n                    Turns the background blur on\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isMenuHidden\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/ui-elements/menu-button-element/menu-button-element.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            reduceMotion\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/ui-elements/menu-button-element/menu-button-element.component.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { UserContextService } from 'src/app/services/user-context.service';\n\n/**\n * Menu button element component\n * \n * This component is the top left menu button in the dashboard \n * screen. It opens and closes the menu element.\n */\n@Component({\n  selector: 'app-menu-button-element',\n  templateUrl: './menu-button-element.component.html',\n  styleUrls: ['./menu-button-element.component.scss']\n})\nexport class MenuButtonElementComponent implements OnInit {\n  reduceMotion: boolean = false; // We need this value, because the menu bar changes the font color, based on it\n  isMenuHidden: boolean = true;\n\n  constructor(private userContextService: UserContextService) { }\n\n  ngOnInit(): void {\n    this.loadReduceMotionValue();\n  }\n\n  /**\n   * Subscribes to the reduce motion value\n   */\n  loadReduceMotionValue() {\n    this.userContextService.getUserContextSubject()\n    .subscribe(data => {\n      let reduceMotionValue = data.reduceMotion;\n      this.reduceMotion = reduceMotionValue\n    });\n  }\n\n  /**\n   * Turns the background blur on\n   */\n  openMenu(): void {\n    this.isMenuHidden = false;\n  }\n\n  /**\n   * Turns the background blur off\n   */\n  closeMenu(): void {\n    this.isMenuHidden = true;\n  }\n}\n\n    \n\n    \n        \n    \n        \n        \n        \n    \n\n    \n        Menü\n    \n\n\n\n    \n\n    \n                \n                    ./menu-button-element.component.scss\n                \n                @import \"../../shared/styles\";\n\n.menu-button {\n    margin: 0;\n    padding-left: 0;\n    border: none;\n\n    display: flex;\n    align-items: center;\n\n\n}\n\nbutton {\n    font-size: 1.0em;\n}\n\n.menu-image {\n    fill: var(--secondary);\n    width: 2.5em;\n    height: 17px; \n} \n\n.menu-image {\n    padding-right: 10px;\n}\n\n.menu-label {\n    font-weight: 700;\n    letter-spacing: 0.05em;\n    color: var(--secondary);\n}\n\n// css for mobile \n@media(max-width: 770px) {\n    @media (prefers-reduced-motion: no-preference) {\n        .menu-image.motion-allowed {\n            fill: white;\n        } \n\n        .menu-label.motion-allowed {\n            color: white;\n        }\n\n        @keyframes buttonColor {\n            from {\n                color: white;\n                fill: white;\n            }\n        \n            to {\n                color: var(--secondary);\n                fill: var(--secondary);\n            }\n        }\n\n        .menu-label.motion-allowed, .menu-image.motion-allowed {\n            animation-name: buttonColor;\n            @include linear-animation;\n        }\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                            Menü    '\n    var COMPONENTS = [{'name': 'ApparentTemperatureTileViewComponent', 'selector': 'app-apparent-temperature-tile-view'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BackButtonElementComponent', 'selector': 'app-back-button-element'},{'name': 'CalibrationInfoDetailViewComponent', 'selector': 'app-calibration-info-detail-view'},{'name': 'CardElementComponent', 'selector': 'card-element'},{'name': 'CheckboxSwitcherElementComponent', 'selector': 'app-checkbox-switcher-element'},{'name': 'ConfigurationTilePopUpDialogView', 'selector': 'configuration-tile-popup-view'},{'name': 'ConfigurationTileViewComponent', 'selector': 'app-configuration-tile-view'},{'name': 'ConfigurationViewComponent', 'selector': 'app-configuration-view'},{'name': 'DashboardScreenComponent', 'selector': 'app-dashboard-screen'},{'name': 'DashboardViewComponent', 'selector': 'app-dashboard-view'},{'name': 'DetailScreenComponent', 'selector': 'app-detail-screen'},{'name': 'ForecastDetailViewComponent', 'selector': 'app-forecast-detail-view'},{'name': 'ForecastTileViewComponent', 'selector': 'app-forecast-tile-view'},{'name': 'HistoryDetailViewComponent', 'selector': 'app-history-detail-view'},{'name': 'HistoryTileViewComponent', 'selector': 'app-history-tile-view'},{'name': 'HumidityTileViewComponent', 'selector': 'app-humidity-tile-view'},{'name': 'IndoorDetailViewComponent', 'selector': 'app-indoor-detail-view'},{'name': 'IndoorTileViewComponent', 'selector': 'app-indoor-tile-view'},{'name': 'LoginViewComponent', 'selector': 'app-login-view'},{'name': 'MenuBarElementComponent', 'selector': 'app-menu-bar-element'},{'name': 'MenuButtonElementComponent', 'selector': 'app-menu-button-element'},{'name': 'MenuElementComponent', 'selector': 'app-menu-element'},{'name': 'NavBarElementComponent', 'selector': 'app-nav-bar-element'},{'name': 'OnboardingScreenComponent', 'selector': 'app-onboarding-screen'},{'name': 'OpenAPELoginTileViewComponent', 'selector': 'app-open-apelogin-tile-view'},{'name': 'OutdoorWeatherDetailViewComponent', 'selector': 'app-outdoor-weather-detail-view'},{'name': 'OutdoorWeatherViewComponent', 'selector': 'app-outdoor-weather-view'},{'name': 'PersonalizationSettingsViewComponent', 'selector': 'app-personalization-settings-view'},{'name': 'PersonalizationViewComponent', 'selector': 'app-personalization-view'},{'name': 'PollenflugDetailViewComponent', 'selector': 'app-pollenflug-detail-view'},{'name': 'PollenflugSmallTileComponent', 'selector': 'app-pollenflug-small-tile'},{'name': 'PollenflugTileViewComponent', 'selector': 'app-pollenflug-tile-view'},{'name': 'PollenListElementComponent', 'selector': 'app-pollen-list-element'},{'name': 'PollenTagElementComponent', 'selector': 'app-pollen-tag-element'},{'name': 'ProgressChartElementComponent', 'selector': 'app-progress-chart-element'},{'name': 'RegistrationViewComponent', 'selector': 'app-registration-view'},{'name': 'SettingsScreenComponent', 'selector': 'app-settings-screen'},{'name': 'SimpleTileViewComponent', 'selector': 'app-simple-tile-view'},{'name': 'SliderElementComponent', 'selector': 'app-slider-element'},{'name': 'TtsPlayerElementComponent', 'selector': 'app-tts-player-element'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MenuButtonElementComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MenuElementComponent.html":{"url":"components/MenuElementComponent.html","title":"component - MenuElementComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MenuElementComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/ui-elements/menu-element/menu-element.component.ts\n\n\n    \n        Description\n    \n    \n        Menu element component \nThis component displays three list entries. These are the \nmenu options. It is displayed when the users presses the \nmenu button\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-menu-element\n            \n\n            \n                styleUrls\n                ./menu-element.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./menu-element.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                configurationIcon\n                            \n                            \n                                    Public\n                                imageService\n                            \n                            \n                                    Public\n                                logoutIcon\n                            \n                            \n                                    Public\n                                settingsIcon\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closeMenu\n                            \n                            \n                                logout\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openConfigurationSettings\n                            \n                            \n                                openPersonalizationSettings\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                closeEvent\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    userLoggedIn\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, userContextService: UserContextService, imageService: ImageService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/ui-elements/menu-element/menu-element.component.ts:64\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userContextService\n                                                  \n                                                        \n                                                                        UserContextService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        imageService\n                                                  \n                                                        \n                                                                        ImageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        closeEvent\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/ui-elements/menu-element/menu-element.component.ts:45\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            closeMenu\n                        \n                        \n                    \n                \n            \n            \n                \ncloseMenu()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/ui-elements/menu-element/menu-element.component.ts:75\n                \n            \n\n\n            \n                \n                    Closes the menu \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            logout\n                        \n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/ui-elements/menu-element/menu-element.component.ts:96\n                \n            \n\n\n            \n                \n                    Uses the user context service to logs the user out.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/ui-elements/menu-element/menu-element.component.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openConfigurationSettings\n                        \n                        \n                    \n                \n            \n            \n                \nopenConfigurationSettings()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/ui-elements/menu-element/menu-element.component.ts:89\n                \n            \n\n\n            \n                \n                    Redirects to the configuration screen\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openPersonalizationSettings\n                        \n                        \n                    \n                \n            \n            \n                \nopenPersonalizationSettings()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/ui-elements/menu-element/menu-element.component.ts:82\n                \n            \n\n\n            \n                \n                    Redirects to the personalization screen\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            configurationIcon\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ImageModel\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    light: \"setting-button-light.png\",\n    dark: \"setting-button-dark.png\",\n    highContrast: \"setting-button-high.png\"\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/ui-elements/menu-element/menu-element.component.ts:46\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            imageService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ImageService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/ui-elements/menu-element/menu-element.component.ts:68\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            logoutIcon\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ImageModel\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    light: \"logout-button-light.png\",\n    dark: \"logout-button-dark.png\",\n    highContrast: \"logout-button-high.png\"\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/ui-elements/menu-element/menu-element.component.ts:56\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            settingsIcon\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ImageModel\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    light: \"pers-button-light.png\",\n    dark: \"pers-button-dark.png\",\n    highContrast: \"pers-button-high.png\"\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/ui-elements/menu-element/menu-element.component.ts:51\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        userLoggedIn\n                    \n                \n\n                \n                    \n                        getuserLoggedIn()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/ui-elements/menu-element/menu-element.component.ts:62\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit, EventEmitter, Output } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { trigger, style, animate, transition } from '@angular/animations';\nimport { UserContextService } from 'src/app/services/user-context.service';\nimport { ImageService } from 'src/app/services/image.service';\nimport { ImageModel } from 'src/app/model/image';\n\n/**\n * Menu element component \n * \n * This component displays three list entries. These are the \n * menu options. It is displayed when the users presses the \n * menu button\n */\n@Component({\n  selector: 'app-menu-element',\n  templateUrl: './menu-element.component.html',\n  styleUrls: ['./menu-element.component.scss'],\n  animations: [\n    trigger(\n      'animate', \n      [\n        transition(\n          ':enter', \n          [\n            style({ opacity: 0 }),\n            animate('0.3s ease-out', \n                    style({ opacity: 1 }))\n          ]\n        ),\n        transition(\n          ':leave', \n          [\n            style({ opacity: 1 }),\n            animate('0.3s ease-in', \n                    style({ opacity: 0 }))\n          ]\n        )\n      ]\n    )\n  ]\n})\n\nexport class MenuElementComponent implements OnInit {\n  @Output() closeEvent = new EventEmitter();\n  public configurationIcon: ImageModel = {\n    light: \"setting-button-light.png\",\n    dark: \"setting-button-dark.png\",\n    highContrast: \"setting-button-high.png\"\n  }\n  public settingsIcon: ImageModel = {\n    light: \"pers-button-light.png\",\n    dark: \"pers-button-dark.png\",\n    highContrast: \"pers-button-high.png\"\n  }\n  public logoutIcon: ImageModel = {\n    light: \"logout-button-light.png\",\n    dark: \"logout-button-dark.png\",\n    highContrast: \"logout-button-high.png\"\n  }\n\n  get userLoggedIn(): boolean {\n    return this.userContextService.userLoggedIn;\n  }\n\n  constructor(private router: Router,\n    private userContextService: UserContextService,\n    public imageService: ImageService) { }\n\n  ngOnInit(): void { }\n\n  /**\n   * Closes the menu \n   */\n  closeMenu(): void {\n    this.closeEvent.emit();\n  }\n\n  /**\n   * Redirects to the personalization screen\n   */\n  openPersonalizationSettings() {\n    this.router.navigateByUrl('/settings/personalization');\n  }\n\n  /**\n   * Redirects to the configuration screen\n   */\n  openConfigurationSettings() {\n    this.router.navigateByUrl('/settings/configuration');\n  }\n\n  /**\n   * Uses the user context service to logs the user out.\n   */\n  logout(): void {\n    this.userContextService.logout();\n  }\n}\n\n    \n\n    \n        \n\n\n\n    Fertig\n    \n        Personalisierung\n        \n    \n\n    \n        Konfiguration\n        \n    \n\n    \n        Ausloggen\n        \n    \n\n\n    \n        Einloggen\n        \n    \n\n    \n\n    \n                \n                    ./menu-element.component.scss\n                \n                .container {\n    position: fixed;\n    top: 0;\n    left: 0;\n    height: 100vh;\n    width: 100vw;\n    backdrop-filter: blur(20px);\n    z-index: 102;\n\n}\n\n.menu-container {\n    border-radius: var(--corner-radius);\n    position: fixed;\n    background-color: var(--surface);\n    padding: var(--padding);\n    z-index: 103;\n\n    display: flex;\n    justify-content: flex-end;\n    flex-direction: column;\n    align-items: flex-end;\n}\n\n.icon {\n    height: 2.2em;\n    padding-left: var(--padding);\n}\n\n.menu-button {\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: space-between;\n    width: 100%;\n    padding: calc(var(--padding) / 2) 0 calc(var(--padding) / 2) 0;\n    border-top: 0.2px solid var(--secondary);\n    cursor: pointer;\n    font-size: 1.0em;\n    hyphens: none;\n\n}\n\np {\n    font-weight: 700;\n    padding: 0 0 calc(var(--padding) / 2) 0;\n    hyphens: none;\n}\n\nspan {\n    hyphens: none;\n}\n\n.fertig {\n    cursor: pointer;\n    padding: 0;\n    padding-bottom: 0.5em;\n    font-size: 1.0em;\n}\n\n.done {\n    font-weight: 700;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Fertig            Personalisierung                        Konfiguration                        Ausloggen                        Einloggen            '\n    var COMPONENTS = [{'name': 'ApparentTemperatureTileViewComponent', 'selector': 'app-apparent-temperature-tile-view'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BackButtonElementComponent', 'selector': 'app-back-button-element'},{'name': 'CalibrationInfoDetailViewComponent', 'selector': 'app-calibration-info-detail-view'},{'name': 'CardElementComponent', 'selector': 'card-element'},{'name': 'CheckboxSwitcherElementComponent', 'selector': 'app-checkbox-switcher-element'},{'name': 'ConfigurationTilePopUpDialogView', 'selector': 'configuration-tile-popup-view'},{'name': 'ConfigurationTileViewComponent', 'selector': 'app-configuration-tile-view'},{'name': 'ConfigurationViewComponent', 'selector': 'app-configuration-view'},{'name': 'DashboardScreenComponent', 'selector': 'app-dashboard-screen'},{'name': 'DashboardViewComponent', 'selector': 'app-dashboard-view'},{'name': 'DetailScreenComponent', 'selector': 'app-detail-screen'},{'name': 'ForecastDetailViewComponent', 'selector': 'app-forecast-detail-view'},{'name': 'ForecastTileViewComponent', 'selector': 'app-forecast-tile-view'},{'name': 'HistoryDetailViewComponent', 'selector': 'app-history-detail-view'},{'name': 'HistoryTileViewComponent', 'selector': 'app-history-tile-view'},{'name': 'HumidityTileViewComponent', 'selector': 'app-humidity-tile-view'},{'name': 'IndoorDetailViewComponent', 'selector': 'app-indoor-detail-view'},{'name': 'IndoorTileViewComponent', 'selector': 'app-indoor-tile-view'},{'name': 'LoginViewComponent', 'selector': 'app-login-view'},{'name': 'MenuBarElementComponent', 'selector': 'app-menu-bar-element'},{'name': 'MenuButtonElementComponent', 'selector': 'app-menu-button-element'},{'name': 'MenuElementComponent', 'selector': 'app-menu-element'},{'name': 'NavBarElementComponent', 'selector': 'app-nav-bar-element'},{'name': 'OnboardingScreenComponent', 'selector': 'app-onboarding-screen'},{'name': 'OpenAPELoginTileViewComponent', 'selector': 'app-open-apelogin-tile-view'},{'name': 'OutdoorWeatherDetailViewComponent', 'selector': 'app-outdoor-weather-detail-view'},{'name': 'OutdoorWeatherViewComponent', 'selector': 'app-outdoor-weather-view'},{'name': 'PersonalizationSettingsViewComponent', 'selector': 'app-personalization-settings-view'},{'name': 'PersonalizationViewComponent', 'selector': 'app-personalization-view'},{'name': 'PollenflugDetailViewComponent', 'selector': 'app-pollenflug-detail-view'},{'name': 'PollenflugSmallTileComponent', 'selector': 'app-pollenflug-small-tile'},{'name': 'PollenflugTileViewComponent', 'selector': 'app-pollenflug-tile-view'},{'name': 'PollenListElementComponent', 'selector': 'app-pollen-list-element'},{'name': 'PollenTagElementComponent', 'selector': 'app-pollen-tag-element'},{'name': 'ProgressChartElementComponent', 'selector': 'app-progress-chart-element'},{'name': 'RegistrationViewComponent', 'selector': 'app-registration-view'},{'name': 'SettingsScreenComponent', 'selector': 'app-settings-screen'},{'name': 'SimpleTileViewComponent', 'selector': 'app-simple-tile-view'},{'name': 'SliderElementComponent', 'selector': 'app-slider-element'},{'name': 'TtsPlayerElementComponent', 'selector': 'app-tts-player-element'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MenuElementComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NavBarElementComponent.html":{"url":"components/NavBarElementComponent.html","title":"component - NavBarElementComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NavBarElementComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/ui-elements/nav-bar-element/nav-bar-element.component.ts\n\n\n    \n        Description\n    \n    \n        Nav bar element component\nConsists of heading and back label. It uses the \nback button element.  \n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-nav-bar-element\n            \n\n            \n                styleUrls\n                ./nav-bar-element.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./nav-bar-element.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                backLabel\n                            \n                            \n                                titleLabel\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/ui-elements/nav-bar-element/nav-bar-element.component.ts:16\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        backLabel\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/ui-elements/nav-bar-element/nav-bar-element.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        titleLabel\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/ui-elements/nav-bar-element/nav-bar-element.component.ts:15\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/ui-elements/nav-bar-element/nav-bar-element.component.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\n\n/**\n * Nav bar element component\n * \n * Consists of heading and back label. It uses the \n * back button element.  \n */\n@Component({\n  selector: 'app-nav-bar-element',\n  templateUrl: './nav-bar-element.component.html',\n  styleUrls: ['./nav-bar-element.component.scss']\n})\nexport class NavBarElementComponent implements OnInit {\n  @Input() titleLabel?: string;\n  @Input() backLabel?: string;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        \n\n    \n        \n    \n    \n        {{titleLabel}}\n    \n\n\n    \n\n    \n                \n                    ./nav-bar-element.component.scss\n                \n                .container {\n    height: var(--navbar-height);\n    position: fixed;\n    top: 0;\n    left: calc(var(--border-padding-left) - var(--border-padding-right));\n    right: 0;\n    padding: var(--border-padding-top) 0 0 var(--border-padding-right);\n    z-index: 100;\n    // background-color: var(--background);\n    backdrop-filter: blur(20px);\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                            {{titleLabel}}    '\n    var COMPONENTS = [{'name': 'ApparentTemperatureTileViewComponent', 'selector': 'app-apparent-temperature-tile-view'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BackButtonElementComponent', 'selector': 'app-back-button-element'},{'name': 'CalibrationInfoDetailViewComponent', 'selector': 'app-calibration-info-detail-view'},{'name': 'CardElementComponent', 'selector': 'card-element'},{'name': 'CheckboxSwitcherElementComponent', 'selector': 'app-checkbox-switcher-element'},{'name': 'ConfigurationTilePopUpDialogView', 'selector': 'configuration-tile-popup-view'},{'name': 'ConfigurationTileViewComponent', 'selector': 'app-configuration-tile-view'},{'name': 'ConfigurationViewComponent', 'selector': 'app-configuration-view'},{'name': 'DashboardScreenComponent', 'selector': 'app-dashboard-screen'},{'name': 'DashboardViewComponent', 'selector': 'app-dashboard-view'},{'name': 'DetailScreenComponent', 'selector': 'app-detail-screen'},{'name': 'ForecastDetailViewComponent', 'selector': 'app-forecast-detail-view'},{'name': 'ForecastTileViewComponent', 'selector': 'app-forecast-tile-view'},{'name': 'HistoryDetailViewComponent', 'selector': 'app-history-detail-view'},{'name': 'HistoryTileViewComponent', 'selector': 'app-history-tile-view'},{'name': 'HumidityTileViewComponent', 'selector': 'app-humidity-tile-view'},{'name': 'IndoorDetailViewComponent', 'selector': 'app-indoor-detail-view'},{'name': 'IndoorTileViewComponent', 'selector': 'app-indoor-tile-view'},{'name': 'LoginViewComponent', 'selector': 'app-login-view'},{'name': 'MenuBarElementComponent', 'selector': 'app-menu-bar-element'},{'name': 'MenuButtonElementComponent', 'selector': 'app-menu-button-element'},{'name': 'MenuElementComponent', 'selector': 'app-menu-element'},{'name': 'NavBarElementComponent', 'selector': 'app-nav-bar-element'},{'name': 'OnboardingScreenComponent', 'selector': 'app-onboarding-screen'},{'name': 'OpenAPELoginTileViewComponent', 'selector': 'app-open-apelogin-tile-view'},{'name': 'OutdoorWeatherDetailViewComponent', 'selector': 'app-outdoor-weather-detail-view'},{'name': 'OutdoorWeatherViewComponent', 'selector': 'app-outdoor-weather-view'},{'name': 'PersonalizationSettingsViewComponent', 'selector': 'app-personalization-settings-view'},{'name': 'PersonalizationViewComponent', 'selector': 'app-personalization-view'},{'name': 'PollenflugDetailViewComponent', 'selector': 'app-pollenflug-detail-view'},{'name': 'PollenflugSmallTileComponent', 'selector': 'app-pollenflug-small-tile'},{'name': 'PollenflugTileViewComponent', 'selector': 'app-pollenflug-tile-view'},{'name': 'PollenListElementComponent', 'selector': 'app-pollen-list-element'},{'name': 'PollenTagElementComponent', 'selector': 'app-pollen-tag-element'},{'name': 'ProgressChartElementComponent', 'selector': 'app-progress-chart-element'},{'name': 'RegistrationViewComponent', 'selector': 'app-registration-view'},{'name': 'SettingsScreenComponent', 'selector': 'app-settings-screen'},{'name': 'SimpleTileViewComponent', 'selector': 'app-simple-tile-view'},{'name': 'SliderElementComponent', 'selector': 'app-slider-element'},{'name': 'TtsPlayerElementComponent', 'selector': 'app-tts-player-element'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NavBarElementComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OnboardingScreenComponent.html":{"url":"components/OnboardingScreenComponent.html","title":"component - OnboardingScreenComponent","body":"\n                   \n\n\n\n\n\n  Components\n  OnboardingScreenComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/screens/onboarding-screen/onboarding-screen.component.ts\n\n\n    \n        Description\n    \n    \n        Onboarding screen component \nWrapper component to display the login view, register \nand personalization view components.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-onboarding-screen\n            \n\n            \n                styleUrls\n                ./onboarding-screen.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./onboarding-screen.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                desktop\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                prepareRoute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/screens/onboarding-screen/onboarding-screen.component.ts:18\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/screens/onboarding-screen/onboarding-screen.component.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            prepareRoute\n                        \n                        \n                    \n                \n            \n            \n                \nprepareRoute(outlet: RouterOutlet)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/screens/onboarding-screen/onboarding-screen.component.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    outlet\n                                    \n                                                RouterOutlet\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            desktop\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/screens/onboarding-screen/onboarding-screen.component.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { RouterOutlet } from '@angular/router';\nimport { routeTransitionAnimations } from '../../../route-transition-animation';\n\n/**\n * Onboarding screen component \n * \n * Wrapper component to display the login view, register \n * and personalization view components.\n */\n@Component({\n  selector: 'app-onboarding-screen',\n  templateUrl: './onboarding-screen.component.html',\n  styleUrls: ['./onboarding-screen.component.scss'],\n  animations: [routeTransitionAnimations],\n})\nexport class OnboardingScreenComponent implements OnInit {\n  public desktop: boolean = false;\n\n  constructor() { }\n\n  ngOnInit(): void {}\n\n\n  prepareRoute(outlet: RouterOutlet) {\n    return outlet && outlet.activatedRouteData && outlet.activatedRouteData['animationState'];\n  }\n\n}\n\n    \n\n    \n        \n    \n         \n    \n\n    \n\n    \n                \n                    ./onboarding-screen.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                 '\n    var COMPONENTS = [{'name': 'ApparentTemperatureTileViewComponent', 'selector': 'app-apparent-temperature-tile-view'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BackButtonElementComponent', 'selector': 'app-back-button-element'},{'name': 'CalibrationInfoDetailViewComponent', 'selector': 'app-calibration-info-detail-view'},{'name': 'CardElementComponent', 'selector': 'card-element'},{'name': 'CheckboxSwitcherElementComponent', 'selector': 'app-checkbox-switcher-element'},{'name': 'ConfigurationTilePopUpDialogView', 'selector': 'configuration-tile-popup-view'},{'name': 'ConfigurationTileViewComponent', 'selector': 'app-configuration-tile-view'},{'name': 'ConfigurationViewComponent', 'selector': 'app-configuration-view'},{'name': 'DashboardScreenComponent', 'selector': 'app-dashboard-screen'},{'name': 'DashboardViewComponent', 'selector': 'app-dashboard-view'},{'name': 'DetailScreenComponent', 'selector': 'app-detail-screen'},{'name': 'ForecastDetailViewComponent', 'selector': 'app-forecast-detail-view'},{'name': 'ForecastTileViewComponent', 'selector': 'app-forecast-tile-view'},{'name': 'HistoryDetailViewComponent', 'selector': 'app-history-detail-view'},{'name': 'HistoryTileViewComponent', 'selector': 'app-history-tile-view'},{'name': 'HumidityTileViewComponent', 'selector': 'app-humidity-tile-view'},{'name': 'IndoorDetailViewComponent', 'selector': 'app-indoor-detail-view'},{'name': 'IndoorTileViewComponent', 'selector': 'app-indoor-tile-view'},{'name': 'LoginViewComponent', 'selector': 'app-login-view'},{'name': 'MenuBarElementComponent', 'selector': 'app-menu-bar-element'},{'name': 'MenuButtonElementComponent', 'selector': 'app-menu-button-element'},{'name': 'MenuElementComponent', 'selector': 'app-menu-element'},{'name': 'NavBarElementComponent', 'selector': 'app-nav-bar-element'},{'name': 'OnboardingScreenComponent', 'selector': 'app-onboarding-screen'},{'name': 'OpenAPELoginTileViewComponent', 'selector': 'app-open-apelogin-tile-view'},{'name': 'OutdoorWeatherDetailViewComponent', 'selector': 'app-outdoor-weather-detail-view'},{'name': 'OutdoorWeatherViewComponent', 'selector': 'app-outdoor-weather-view'},{'name': 'PersonalizationSettingsViewComponent', 'selector': 'app-personalization-settings-view'},{'name': 'PersonalizationViewComponent', 'selector': 'app-personalization-view'},{'name': 'PollenflugDetailViewComponent', 'selector': 'app-pollenflug-detail-view'},{'name': 'PollenflugSmallTileComponent', 'selector': 'app-pollenflug-small-tile'},{'name': 'PollenflugTileViewComponent', 'selector': 'app-pollenflug-tile-view'},{'name': 'PollenListElementComponent', 'selector': 'app-pollen-list-element'},{'name': 'PollenTagElementComponent', 'selector': 'app-pollen-tag-element'},{'name': 'ProgressChartElementComponent', 'selector': 'app-progress-chart-element'},{'name': 'RegistrationViewComponent', 'selector': 'app-registration-view'},{'name': 'SettingsScreenComponent', 'selector': 'app-settings-screen'},{'name': 'SimpleTileViewComponent', 'selector': 'app-simple-tile-view'},{'name': 'SliderElementComponent', 'selector': 'app-slider-element'},{'name': 'TtsPlayerElementComponent', 'selector': 'app-tts-player-element'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'OnboardingScreenComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OpenAPELoginTileViewComponent.html":{"url":"components/OpenAPELoginTileViewComponent.html","title":"component - OpenAPELoginTileViewComponent","body":"\n                   \n\n\n\n\n\n  Components\n  OpenAPELoginTileViewComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/views/open-apelogin-tile-view/open-apelogin-tile-view.component.ts\n\n\n    \n        Description\n    \n    \n        Open APE login view component\nDisplay two form controls to enter the username and password of \nopen ape to load the user context from it.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-open-apelogin-tile-view\n            \n\n            \n                styleUrls\n                ./open-apelogin-tile-view.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./open-apelogin-tile-view.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                error\n                            \n                            \n                                loginForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                loginToOpenApe\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, userContextService: UserContextService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/views/open-apelogin-tile-view/open-apelogin-tile-view.component.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userContextService\n                                                  \n                                                        \n                                                                        UserContextService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loginToOpenApe\n                        \n                        \n                    \n                \n            \n            \n                \nloginToOpenApe(username: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/views/open-apelogin-tile-view/open-apelogin-tile-view.component.ts:48\n                \n            \n\n\n            \n                \n                    Uses the user context service to log the user to open\nape in \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/views/open-apelogin-tile-view/open-apelogin-tile-view.component.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSubmit\n                        \n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/views/open-apelogin-tile-view/open-apelogin-tile-view.component.ts:33\n                \n            \n\n\n            \n                \n                    Triggers the login process of open APE \n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            error\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/views/open-apelogin-tile-view/open-apelogin-tile-view.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loginForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.formBuilder.group({\n    username: new FormControl('', Validators.minLength(2)), // FIXME Validators funktionieren nicht \n    password: new FormControl('', Validators.minLength(2)),\n  })\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/views/open-apelogin-tile-view/open-apelogin-tile-view.component.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, Validators } from '@angular/forms'; \nimport { UserContextService } from 'src/app/services/user-context.service';\n\n/**\n * Open APE login view component\n * \n * Display two form controls to enter the username and password of \n * open ape to load the user context from it.\n */\n@Component({\n  selector: 'app-open-apelogin-tile-view',\n  templateUrl: './open-apelogin-tile-view.component.html',\n  styleUrls: ['./open-apelogin-tile-view.component.scss']\n})\nexport class OpenAPELoginTileViewComponent implements OnInit {\n  loginForm = this.formBuilder.group({\n    username: new FormControl('', Validators.minLength(2)), // FIXME Validators funktionieren nicht \n    password: new FormControl('', Validators.minLength(2)),\n  });\n  error?: string;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private userContextService: UserContextService) { }\n\n  ngOnInit(): void {\n  }\n\n  /**\n   * Triggers the login process of open APE \n   */\n  onSubmit(): void {\n    const username = this.loginForm.get(\"username\")?.value;\n    const password = this.loginForm.get(\"password\")?.value;\n    this.error = undefined;\n\n    this.loginToOpenApe(username, password);\n  }\n\n  /**\n   * Uses the user context service to log the user to open\n   * ape in \n   * \n   * @param username \n   * @param password \n   */\n  loginToOpenApe(username: string, password: string) {\n    this.error = undefined\n    this.userContextService.loginToOpenApe(username, password).then(result => {\n      if(!result.success) {\n        this.error = result.error\n      } \n    })\n  }\n}\n\n    \n\n    \n        \n    \n        \n            \n                \n                Nutzername\n                \n                \n            \n            \n            \n                \n                Passwort\n                \n                \n            \n            {{error}}\n\n\n            \n        \n    \n\n    \n\n    \n                \n                    ./open-apelogin-tile-view.component.scss\n                \n                .error-message {\n    color: var(--status-red);\n    padding-top: calc(var(--padding) / 2 );\n    text-align: center;\n}\n\ninput {\n    background-color: var(--background);\n}\n\n#ok {\n    border: 2px solid var(--accent);\n    color: var(--accent);\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                        Nutzername                                                                                                    Passwort                                                        {{error}}                        '\n    var COMPONENTS = [{'name': 'ApparentTemperatureTileViewComponent', 'selector': 'app-apparent-temperature-tile-view'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BackButtonElementComponent', 'selector': 'app-back-button-element'},{'name': 'CalibrationInfoDetailViewComponent', 'selector': 'app-calibration-info-detail-view'},{'name': 'CardElementComponent', 'selector': 'card-element'},{'name': 'CheckboxSwitcherElementComponent', 'selector': 'app-checkbox-switcher-element'},{'name': 'ConfigurationTilePopUpDialogView', 'selector': 'configuration-tile-popup-view'},{'name': 'ConfigurationTileViewComponent', 'selector': 'app-configuration-tile-view'},{'name': 'ConfigurationViewComponent', 'selector': 'app-configuration-view'},{'name': 'DashboardScreenComponent', 'selector': 'app-dashboard-screen'},{'name': 'DashboardViewComponent', 'selector': 'app-dashboard-view'},{'name': 'DetailScreenComponent', 'selector': 'app-detail-screen'},{'name': 'ForecastDetailViewComponent', 'selector': 'app-forecast-detail-view'},{'name': 'ForecastTileViewComponent', 'selector': 'app-forecast-tile-view'},{'name': 'HistoryDetailViewComponent', 'selector': 'app-history-detail-view'},{'name': 'HistoryTileViewComponent', 'selector': 'app-history-tile-view'},{'name': 'HumidityTileViewComponent', 'selector': 'app-humidity-tile-view'},{'name': 'IndoorDetailViewComponent', 'selector': 'app-indoor-detail-view'},{'name': 'IndoorTileViewComponent', 'selector': 'app-indoor-tile-view'},{'name': 'LoginViewComponent', 'selector': 'app-login-view'},{'name': 'MenuBarElementComponent', 'selector': 'app-menu-bar-element'},{'name': 'MenuButtonElementComponent', 'selector': 'app-menu-button-element'},{'name': 'MenuElementComponent', 'selector': 'app-menu-element'},{'name': 'NavBarElementComponent', 'selector': 'app-nav-bar-element'},{'name': 'OnboardingScreenComponent', 'selector': 'app-onboarding-screen'},{'name': 'OpenAPELoginTileViewComponent', 'selector': 'app-open-apelogin-tile-view'},{'name': 'OutdoorWeatherDetailViewComponent', 'selector': 'app-outdoor-weather-detail-view'},{'name': 'OutdoorWeatherViewComponent', 'selector': 'app-outdoor-weather-view'},{'name': 'PersonalizationSettingsViewComponent', 'selector': 'app-personalization-settings-view'},{'name': 'PersonalizationViewComponent', 'selector': 'app-personalization-view'},{'name': 'PollenflugDetailViewComponent', 'selector': 'app-pollenflug-detail-view'},{'name': 'PollenflugSmallTileComponent', 'selector': 'app-pollenflug-small-tile'},{'name': 'PollenflugTileViewComponent', 'selector': 'app-pollenflug-tile-view'},{'name': 'PollenListElementComponent', 'selector': 'app-pollen-list-element'},{'name': 'PollenTagElementComponent', 'selector': 'app-pollen-tag-element'},{'name': 'ProgressChartElementComponent', 'selector': 'app-progress-chart-element'},{'name': 'RegistrationViewComponent', 'selector': 'app-registration-view'},{'name': 'SettingsScreenComponent', 'selector': 'app-settings-screen'},{'name': 'SimpleTileViewComponent', 'selector': 'app-simple-tile-view'},{'name': 'SliderElementComponent', 'selector': 'app-slider-element'},{'name': 'TtsPlayerElementComponent', 'selector': 'app-tts-player-element'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'OpenAPELoginTileViewComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OutdoorWeatherData.html":{"url":"interfaces/OutdoorWeatherData.html","title":"interface - OutdoorWeatherData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  OutdoorWeatherData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/weather.ts\n        \n\n            \n                Description\n            \n            \n                Model of the outdoor weather data. It contains all information about the current \noutdoor weather including temperature, humidity and weather type. \n\n            \n\n            \n                Extends\n            \n            \n                        WeatherData\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        apparentTemperature\n                                \n                                \n                                        humidity\n                                \n                                \n                                        location\n                                \n                                \n                                        maxTemperature\n                                \n                                \n                                        minTemperature\n                                \n                                \n                                        postCode\n                                \n                                \n                                        temperature\n                                \n                                \n                                        timestamp\n                                \n                                \n                                        weather\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        apparentTemperature\n                                    \n                                \n                                \n                                    \n                                        apparentTemperature:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        humidity\n                                    \n                                \n                                \n                                    \n                                        humidity:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        location\n                                    \n                                \n                                \n                                    \n                                        location:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        maxTemperature\n                                    \n                                \n                                \n                                    \n                                        maxTemperature:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        minTemperature\n                                    \n                                \n                                \n                                    \n                                        minTemperature:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        postCode\n                                    \n                                \n                                \n                                    \n                                        postCode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        temperature\n                                    \n                                \n                                \n                                    \n                                        temperature:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timestamp\n                                    \n                                \n                                \n                                    \n                                        timestamp:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        weather\n                                    \n                                \n                                \n                                    \n                                        weather:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface WeatherData { }\n\n/**\n * Enum to identify the type of the tile. \n */\nexport enum TileType {\n    indoorRoom,\n    pollenSmall,\n    pollenList,\n    history,\n    forecast,\n    humidity,\n    apparentTemperature,\n}\n\n/**\n * This interface bundles the three tile arrays\n */\nexport interface TileArrays {\n    dashboard: Tile[],\n    pollen : Tile[],\n    indoorRooms: Tile[]\n}\n  \n/**\n * Enum to set the priority of a tile\n */\nexport enum TilePriority {\n    important, //Highest \n    high,\n    middle,\n    low,\n}\n\n/**\n * Tile model -\n * Every tile (widget) needs data and a prioriy. The priority is \n * used to determine the position of the tiles on the dashboard. The tiles themselves do not load the data.\n * The data is passed from the parent view of the tiles.\n */\nexport interface Tile {\n    type: TileType;\n    data: A;\n    id: string;\n    priority: TilePriority\n}\n\n/**\n * Model of the outdoor weather data. It contains all information about the current \n * outdoor weather including temperature, humidity and weather type. \n */\nexport interface OutdoorWeatherData extends WeatherData {\n    temperature: number // in °C\n    maxTemperature: number,\n    minTemperature: number, \n    humidity: number, // in %\n    timestamp: Date, \n    weather: string, \n    apparentTemperature: number, // in °C ---> die \"gefühlte\" Temperatur\n    location: string, // e.g. \"Stuttgart\" TODO: Make configurable in ESP Wlan-Board\n    postCode: string,\n}\n\n/**\n * Model of the weather forecast data. It contains all information about \n * the forecast including weather and trend. \n */\nexport interface WeatherForecastData extends WeatherData {\n    trend: string,\n    weatherDescription: string,\n    weatherIcon: string,\n  }\n\n/**\n * Model of the pollen data. It contains all information about \n * the current pollen count.\n */\nexport interface PollenData extends WeatherData {\n    pollenName: string, \n    id: number,\n    today: string, // -1  3\n    tomorrow: string, // -1  3\n}\n\n/**\n * Model of the indoor room data. It contains all information about \n * the temperature, humidity, roomname, airQuality of the current room. \n */\nexport interface IndoorRoomData extends WeatherData {\n    roomID: string,\n    roomName: string,\n    airQuality: number, // in %\n    temperature: number // in °C \n    humidity: number, // in %\n    timestamp: Date, \n    calibrationValue: number\n}\n\n/**\n * Model of the indoor room data. It contains all information about \n * the temperature, humidity, roomname, airQuality of the current room. \n */\nexport interface WeatherHistoryData extends WeatherData {\n    datapoints: OutdoorWeatherData[],\n}\n\n/**\n * Model of the indoor room data. It contains all information about \n * the temperature, humidity, roomname, airQuality of the current room. \n */\nexport interface GraphDataSet extends WeatherData {\n    temperatureDataPoints: number[];\n    humidityDataPoints: number[];\n    xAxisLabel: string[];\n    label: string;\n    temperatureAverage: number;\n    humidityAverage: number;\n}\n\nexport interface WeatherHistoryByDayData extends WeatherData  {\n    averageTemperature: number, // in °C\n    averageHumidity: number, // in %\n}\n\nexport enum Daytime {\n    noon,\n    night,\n    dawn,\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OutdoorWeatherDetailViewComponent.html":{"url":"components/OutdoorWeatherDetailViewComponent.html","title":"component - OutdoorWeatherDetailViewComponent","body":"\n                   \n\n\n\n\n\n  Components\n  OutdoorWeatherDetailViewComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/views/outdoor-weather-detail-view/outdoor-weather-detail-view.component.ts\n\n\n    \n        Description\n    \n    \n        Outdoor weather detail view component\nThis component display the outdoor weather view data\nand displays an information text. \n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-outdoor-weather-detail-view\n            \n\n            \n                styleUrls\n                ./outdoor-weather-detail-view.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./outdoor-weather-detail-view.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                desktop\n                            \n                            \n                                    Optional\n                                outdoorWeather\n                            \n                            \n                                ttsTextGeneratorFunction\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(breakpointObserver: BreakpointObserver, weahterDataService: WeatherDataService, textService: TextService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/views/outdoor-weather-detail-view/outdoor-weather-detail-view.component.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        breakpointObserver\n                                                  \n                                                        \n                                                                    BreakpointObserver\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        weahterDataService\n                                                  \n                                                        \n                                                                        WeatherDataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        textService\n                                                  \n                                                        \n                                                                        TextService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/views/outdoor-weather-detail-view/outdoor-weather-detail-view.component.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            desktop\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/views/outdoor-weather-detail-view/outdoor-weather-detail-view.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            outdoorWeather\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         OutdoorWeatherData\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/views/outdoor-weather-detail-view/outdoor-weather-detail-view.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ttsTextGeneratorFunction\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/views/outdoor-weather-detail-view/outdoor-weather-detail-view.component.ts:25\n                            \n                        \n\n                \n                    \n                        this function computes the to be read aloud text for the tts feature. \nThis function is passed to the tts player element\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { BreakpointObserver, BreakpointState} from '@angular/cdk/layout';\nimport { Component, OnInit } from '@angular/core';\nimport { OutdoorWeatherData } from 'src/app/model/weather';\nimport { TextService } from 'src/app/services/text.service';\nimport { WeatherDataService } from 'src/app/services/weather-data.service';\n\n/**\n * Outdoor weather detail view component\n * \n * This component display the outdoor weather view data\n * and displays an information text. \n */\n@Component({\n  selector: 'app-outdoor-weather-detail-view',\n  templateUrl: './outdoor-weather-detail-view.component.html',\n  styleUrls: ['./outdoor-weather-detail-view.component.scss']\n})\nexport class OutdoorWeatherDetailViewComponent implements OnInit {\n  desktop: boolean = false;\n  outdoorWeather?: OutdoorWeatherData;\n  /**\n   * this function computes the to be read aloud text for the tts feature. \n   * This function is passed to the tts player element\n   */\n  ttsTextGeneratorFunction = () => this.textService.createOutdoorText(this.outdoorWeather)\n\n  constructor(private breakpointObserver: BreakpointObserver,\n    private weahterDataService: WeatherDataService,\n    private textService: TextService) { }\n\n  ngOnInit(): void {\n    this.desktopBreakpointObserver();\n    this.loadOutdoorWeatherData();\n  }\n\n  /**\n   * Detects the display width. If it is a mobile device\n   * it will display the OutdoorWeatherViewComponent otherwise\n   * the component will be displayed by the app component. \n   */\n  private desktopBreakpointObserver() {\n    this.breakpointObserver\n    .observe(['(min-width: 770px)'])\n    .subscribe((state: BreakpointState) => {\n      if (state.matches) {\n        this.desktop = true;\n      } else {\n        this.desktop = false;\n      }\n    });\n  }\n\n  /**\n   * Subscribes to the outdoor weather data\n   */\n  private loadOutdoorWeatherData() {\n    this.weahterDataService.getOutdoorWeatherDataSubject().subscribe(data => this.outdoorWeather = data);\n  }\n\n}\n\n    \n\n    \n        \n\n\n\n\n    \n    \n    \n    \n\n\n \n    Woher kommen die Daten?\n    In Wettervorhersagen wird üblicherweise die tatsächliche Temperatur angegeben. Das Temperaturempfinden des Menschen entspricht der herrschenden Lufttemperatur aber nur, \n        wenn man sich mit der Temperatur angemessener Kleidung bei mittlerer Luftfeuchtigkeit und Windstille \n        langsam im Schatten bewegt. In der Sonne und bei hohem Wasserdampfgehalt der Luft empfindet man die \n        Temperatur als höher, bei Wind - besonders im Winter - als geringer. Bei der Beschreibung dieser gefühlten \n        Temperatur werden deshalb die Reaktionen des Menschen auf die Lufttemperatur, die Windgeschwindigkeit,\n         die Luftfeuchtigkeit, die Strahlungsintensität der Sonne sowie die Isolationsfähigkeit der Kleidung beschrieben. \n         Die Aussagen zu Behaglichkeit, Wärmebelastung und Kälteempfindung werden dann kombiniert. \n         Dadurch lässt sich eine Aussage zur gefühlten Temperatur und der Wärmebalance treffen. \n    \n\n\n\n\n    \n\n    \n                \n                    ./outdoor-weather-detail-view.component.scss\n                \n                .flex-container {\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: space-between;\n}\n\n@media (min-width: 1000px) {\n    .flex-container {\n        justify-content: flex-start;\n    }\n    .flex-container * {\n        padding-right: var(--padding);\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                     Woher kommen die Daten?    In Wettervorhersagen wird üblicherweise die tatsächliche Temperatur angegeben. Das Temperaturempfinden des Menschen entspricht der herrschenden Lufttemperatur aber nur,         wenn man sich mit der Temperatur angemessener Kleidung bei mittlerer Luftfeuchtigkeit und Windstille         langsam im Schatten bewegt. In der Sonne und bei hohem Wasserdampfgehalt der Luft empfindet man die         Temperatur als höher, bei Wind - besonders im Winter - als geringer. Bei der Beschreibung dieser gefühlten         Temperatur werden deshalb die Reaktionen des Menschen auf die Lufttemperatur, die Windgeschwindigkeit,         die Luftfeuchtigkeit, die Strahlungsintensität der Sonne sowie die Isolationsfähigkeit der Kleidung beschrieben.          Die Aussagen zu Behaglichkeit, Wärmebelastung und Kälteempfindung werden dann kombiniert.          Dadurch lässt sich eine Aussage zur gefühlten Temperatur und der Wärmebalance treffen.     '\n    var COMPONENTS = [{'name': 'ApparentTemperatureTileViewComponent', 'selector': 'app-apparent-temperature-tile-view'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BackButtonElementComponent', 'selector': 'app-back-button-element'},{'name': 'CalibrationInfoDetailViewComponent', 'selector': 'app-calibration-info-detail-view'},{'name': 'CardElementComponent', 'selector': 'card-element'},{'name': 'CheckboxSwitcherElementComponent', 'selector': 'app-checkbox-switcher-element'},{'name': 'ConfigurationTilePopUpDialogView', 'selector': 'configuration-tile-popup-view'},{'name': 'ConfigurationTileViewComponent', 'selector': 'app-configuration-tile-view'},{'name': 'ConfigurationViewComponent', 'selector': 'app-configuration-view'},{'name': 'DashboardScreenComponent', 'selector': 'app-dashboard-screen'},{'name': 'DashboardViewComponent', 'selector': 'app-dashboard-view'},{'name': 'DetailScreenComponent', 'selector': 'app-detail-screen'},{'name': 'ForecastDetailViewComponent', 'selector': 'app-forecast-detail-view'},{'name': 'ForecastTileViewComponent', 'selector': 'app-forecast-tile-view'},{'name': 'HistoryDetailViewComponent', 'selector': 'app-history-detail-view'},{'name': 'HistoryTileViewComponent', 'selector': 'app-history-tile-view'},{'name': 'HumidityTileViewComponent', 'selector': 'app-humidity-tile-view'},{'name': 'IndoorDetailViewComponent', 'selector': 'app-indoor-detail-view'},{'name': 'IndoorTileViewComponent', 'selector': 'app-indoor-tile-view'},{'name': 'LoginViewComponent', 'selector': 'app-login-view'},{'name': 'MenuBarElementComponent', 'selector': 'app-menu-bar-element'},{'name': 'MenuButtonElementComponent', 'selector': 'app-menu-button-element'},{'name': 'MenuElementComponent', 'selector': 'app-menu-element'},{'name': 'NavBarElementComponent', 'selector': 'app-nav-bar-element'},{'name': 'OnboardingScreenComponent', 'selector': 'app-onboarding-screen'},{'name': 'OpenAPELoginTileViewComponent', 'selector': 'app-open-apelogin-tile-view'},{'name': 'OutdoorWeatherDetailViewComponent', 'selector': 'app-outdoor-weather-detail-view'},{'name': 'OutdoorWeatherViewComponent', 'selector': 'app-outdoor-weather-view'},{'name': 'PersonalizationSettingsViewComponent', 'selector': 'app-personalization-settings-view'},{'name': 'PersonalizationViewComponent', 'selector': 'app-personalization-view'},{'name': 'PollenflugDetailViewComponent', 'selector': 'app-pollenflug-detail-view'},{'name': 'PollenflugSmallTileComponent', 'selector': 'app-pollenflug-small-tile'},{'name': 'PollenflugTileViewComponent', 'selector': 'app-pollenflug-tile-view'},{'name': 'PollenListElementComponent', 'selector': 'app-pollen-list-element'},{'name': 'PollenTagElementComponent', 'selector': 'app-pollen-tag-element'},{'name': 'ProgressChartElementComponent', 'selector': 'app-progress-chart-element'},{'name': 'RegistrationViewComponent', 'selector': 'app-registration-view'},{'name': 'SettingsScreenComponent', 'selector': 'app-settings-screen'},{'name': 'SimpleTileViewComponent', 'selector': 'app-simple-tile-view'},{'name': 'SliderElementComponent', 'selector': 'app-slider-element'},{'name': 'TtsPlayerElementComponent', 'selector': 'app-tts-player-element'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'OutdoorWeatherDetailViewComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OutdoorWeatherResponse.html":{"url":"interfaces/OutdoorWeatherResponse.html","title":"interface - OutdoorWeatherResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  OutdoorWeatherResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/api/weather-api.service.ts\n        \n\n            \n                Description\n            \n            \n                Model of the outdoor weather api response\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        apparentTemperature\n                                \n                                \n                                        humidity\n                                \n                                \n                                        id\n                                \n                                \n                                        location\n                                \n                                \n                                        location_name\n                                \n                                \n                                        pressure\n                                \n                                \n                                        temperature\n                                \n                                \n                                        timestamp\n                                \n                                \n                                        weather\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        apparentTemperature\n                                    \n                                \n                                \n                                    \n                                        apparentTemperature:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        humidity\n                                    \n                                \n                                \n                                    \n                                        humidity:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        location\n                                    \n                                \n                                \n                                    \n                                        location:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        location_name\n                                    \n                                \n                                \n                                    \n                                        location_name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pressure\n                                    \n                                \n                                \n                                    \n                                        pressure:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        temperature\n                                    \n                                \n                                \n                                    \n                                        temperature:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timestamp\n                                    \n                                \n                                \n                                    \n                                        timestamp:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        weather\n                                    \n                                \n                                \n                                    \n                                        weather:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { FORECAST, INDOORAIRQUALITY, OUTDOORWEATHER, POLLEN, WEATHERHISTORY } from '../../model/mock-data/weather.mock';\nimport { OutdoorWeatherData, PollenData, IndoorRoomData, WeatherForecastData, WeatherHistoryData } from '../../model/weather';\nimport { Observable, of } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\n\n/**\n * Weather api service injectable\n * \n * Use this service to access the network. It implementes all routes \n * for the weather data.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class WeatherAPIService {\n  private outdoorURL = environment.baseURL + 'weather-data/outdoor/latest';\n  private indoorURL = environment.baseURL + 'weather-data/indoor/latest';\n  private historyURL = environment.baseURL + 'weather-data/outdoor/history';\n  private forecastURL = environment.baseURL + 'weather-data/forecast/latest';\n  private allPollenTypesURL = environment.baseURL + 'pollen/all';\n\n  constructor(private httpClient: HttpClient) { }\n\n  /**\n   * @returns an observable with the loadad OutdoorWeatherData from the api or test data\n   */\n  public loadOutdoorWeather(): Observable {\n    if (environment.testData) {\n      return of(OUTDOORWEATHER);\n    }\n    let returnObservable = new Observable((observer) => {\n        this.httpClient.get(this.outdoorURL).subscribe(data => {\n          if(data.id === undefined) {\n            observer.next();\n            observer.complete();\n          } else {\n            let outdoorData = this.createOutdoorWeatherDataFromServerResponse(data);\n            observer.next(outdoorData);\n            observer.complete();\n          }\n        },\n        (error) => {\n          console.log(error);\n          observer.next();\n          observer.complete();\n        })\n      }\n    );\n    return returnObservable;\n  }\n\n  /**\n   * @returns an observable with the loadad WeatherForecastData from the api or test data\n   */\n  public loadForecast(): Observable {\n    if (environment.testData) {\n      return of(FORECAST);\n    }\n    let returnObservable = new Observable((observer) => {\n        this.httpClient.get(this.forecastURL).subscribe(data => {\n          let forecastData = this.createOutdoorForecastDataFromServerResponse(data);\n          observer.next(forecastData);\n          observer.complete();\n        },\n        (error) => {\n          console.log(error);\n          observer.next();\n          observer.complete();\n        })\n      }\n    );\n    return returnObservable;\n  }\n\n  /**\n   * @returns an observable with the loadad PollenData from the api or test data\n   */\n  public loadPollen(): Observable{\n    if (environment.testData) {\n      let pollen = of(POLLEN);\n      return pollen;\n    }\n    let returnObservable = new Observable((observer) => {\n      let response = this.httpClient.get(this.allPollenTypesURL);\n      response.subscribe(data => {\n        let pollenData = this.createPollenDataFromServerResponse(data);\n        observer.next(pollenData);\n        observer.complete();\n      },\n      (error) => {\n        console.log(error);\n        observer.next([]);\n        observer.complete();\n      })\n    });\n    return returnObservable;\n  }\n\n  /**\n   * @returns an observable with the loadad IndoorRoomData from the api or test data\n   */\n  public loadIndoorRoomData(): Observable {\n    if (environment.testData) {\n      let indoorData = of(INDOORAIRQUALITY);\n      return indoorData;\n    }\n    let returnObservable = new Observable((observer) => { // Wir brauchen hier ein Array, -> sollen ja mehrere Räume möglich sein (theoretisch...)\n        this.httpClient.get(this.indoorURL).subscribe(data => {\n          let indoorData = this.createIndoorRoomDataFromServerResponse(data);\n          observer.next([indoorData]);\n          observer.complete();\n        },\n        (error) => {\n          console.log(error);\n          observer.next([]);\n          observer.complete();\n        })\n      }\n    );\n    return returnObservable;\n  }\n\n  /**\n   * @returns an observable with the loadad WeatherHistoryData or test data\n   */\n  public loadHistoryDataSubject(endDate: Date, beginDate: Date): Observable {\n    if (environment.testData) {\n      let forecastData = of(WEATHERHISTORY);\n      return forecastData;\n    }\n    let returnObservable = new Observable((observer) => { \n        this.httpClient.post(this.historyURL,\n          {\n            'begin': this.createServerFriendlyDate(beginDate),\n            'end': this.createServerFriendlyDate(endDate)\n          })\n        .subscribe(data => {\n          let dataPoints: OutdoorWeatherData[] = data.map((element) => {\n            return this.createOutdoorWeatherDataFromServerResponse(element);\n          });\n          observer.next({'datapoints': dataPoints});\n          observer.complete();\n        },\n        (error) => {\n          console.log(error);\n          observer.next();\n          observer.complete();\n        })\n      }\n    );\n    return returnObservable;\n  }\n\n  /**\n   * Helper function to convert date to string\n   * @param date \n   * @returns a date as a string which is understandable for the server\n   */\n  private createServerFriendlyDate(date: Date): string {\n    let dateString = date.toISOString().slice(0, 10);\n    let timeString = date.toTimeString().slice(0, 8);\n    return dateString + ' ' + timeString;\n  }\n\n  /**\n   * Helper function to convert the response from the server to an OutdoorWeatherData object\n   * \n   * @param response\n   * @returns OutdoorWeatherData object\n   */\n  private createOutdoorWeatherDataFromServerResponse(response: OutdoorWeatherResponse): OutdoorWeatherData {\n    const date = response.timestamp;\n    const year = date.substr(0, 4);\n    const month = date.substr(5, 2);\n    const day = date.substr(8, 2);\n    const time = date.substr(11);\n\n    const validDate = new Date(month + '/' + day + '/' + year + ' ' + time);\n\n    return {\n            temperature: response.temperature,\n            maxTemperature: -99, // Not implemented yet\n            minTemperature: -99, // Not implemented yet\n            humidity: response.humidity,\n            timestamp: validDate,\n            weather: response.weather,\n            apparentTemperature: response.apparentTemperature,\n            location: response.location_name,\n            postCode: response.location\n          }\n  }\n\n  /**\n   * Helper function to convert the response from the server to an IndoorRoomData object\n   * \n   * @param response\n   * @returns IndoorRoomData object\n   */\n  private createIndoorRoomDataFromServerResponse(response: IndoorRoomResponse): IndoorRoomData {\n    return {\n            roomID: response.id + '',\n            roomName: response.roomName,\n            airQuality: response.gasVal, \n            temperature: response.temperature, \n            humidity: response.humidity, \n            timestamp: new Date(response.timestamp), \n            calibrationValue: response.gasValCalibrationValue,\n          }\n  }\n\n  /**\n   * Helper function to convert the response from the server to an PollenData[] object\n   * \n   * @param response\n   * @returns PollenData[] object\n   */\n  private createPollenDataFromServerResponse(response: PollenResponse[]): PollenData[] {\n    let pollen: PollenData[] = [];\n    response.forEach(item => {\n      pollen.push({\n        id: item.id,\n        pollenName: item.pollenName,\n        today: item.loadRating,\n        tomorrow: ''\n      })\n    })\n    return pollen\n  }\n\n  /**\n   * Helper function to convert the response from the server to an WeatherForecastData object\n   * \n   * @param response\n   * @returns WeatherForecastData object\n   */\n  private createOutdoorForecastDataFromServerResponse(response: ForecastResponse): WeatherForecastData {\n    return {\n      trend: response.trend,\n      weatherDescription: response.weatherDescription, \n      weatherIcon: response.weatherIcon\n    }\n  }\n}\n\n/**\n * Model of the pollen api response\n */\ninterface PollenResponse {\n  id: number,\n  pollenName: string,\n  loadRating: string,\n}\n\n/**\n * Model of the outdoor weather api response\n */\ninterface OutdoorWeatherResponse {\n  id: number,\n  humidity: number,\n  temperature: number,\n  pressure: number,\n  location: string,\n  location_name: string,\n  timestamp: string,\n  weather: string,\n  apparentTemperature: number\n}\n\n/**\n * Model of the indoor room api response\n */\ninterface IndoorRoomResponse {\n  id: number,\n  humidity: number,\n  temperature: number,\n  pressure: number,\n  gasVal: number,\n  location: string,\n  timestamp: string,\n  gasValCalibrationValue: number,\n  roomName: string,\n}\n\n/**\n * Model of the forecast api response\n */\ninterface ForecastResponse {\n  id: number,\n  trend: string,\n  weatherIcon: string,\n  weatherDescription: string,\n  seaPressure: number,\n  timestampd: string\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OutdoorWeatherViewComponent.html":{"url":"components/OutdoorWeatherViewComponent.html","title":"component - OutdoorWeatherViewComponent","body":"\n                   \n\n\n\n\n\n  Components\n  OutdoorWeatherViewComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/views/outdoor-weather-view/outdoor-weather-view.component.ts\n\n\n    \n        Description\n    \n    \n        Outdoor weather view component\nDisplays the most importatn information of the weather station.\nThese are the current temperature, the weather icon and the\nweather description as a short string.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-outdoor-weather-view\n            \n\n            \n                styleUrls\n                ./outdoor-weather-view.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./outdoor-weather-view.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                daytime\n                            \n                            \n                                daytimeType\n                            \n                            \n                                    Optional\n                                outdoorWeather\n                            \n                            \n                                showWeatherDescription\n                            \n                            \n                                theme\n                            \n                            \n                                themeType\n                            \n                            \n                                    Optional\n                                userContext\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getGradient\n                            \n                            \n                                getWeatherDescription\n                            \n                            \n                                getWeatherImage\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                reduceMotion\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userContextService: UserContextService, weatherDataService: WeatherDataService, imageService: ImageService, textService: TextService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/views/outdoor-weather-view/outdoor-weather-view.component.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userContextService\n                                                  \n                                                        \n                                                                        UserContextService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        weatherDataService\n                                                  \n                                                        \n                                                                        WeatherDataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        imageService\n                                                  \n                                                        \n                                                                        ImageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        textService\n                                                  \n                                                        \n                                                                        TextService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        reduceMotion\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/views/outdoor-weather-view/outdoor-weather-view.component.ts:22\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getGradient\n                        \n                        \n                    \n                \n            \n            \n                \ngetGradient()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/views/outdoor-weather-view/outdoor-weather-view.component.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :     literal type\n\n                    \n                    \n                        the current gradient, based on the current time. This information\ncomes from the image service.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getWeatherDescription\n                        \n                        \n                    \n                \n            \n            \n                \ngetWeatherDescription()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/views/outdoor-weather-view/outdoor-weather-view.component.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        the current weather description string.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getWeatherImage\n                        \n                        \n                    \n                \n            \n            \n                \ngetWeatherImage()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/views/outdoor-weather-view/outdoor-weather-view.component.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :     string | undefined\n\n                    \n                    \n                        the current weather image string.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/views/outdoor-weather-view/outdoor-weather-view.component.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            daytime\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Daytime\n\n                        \n                    \n                    \n                        \n                            Default value : Daytime.noon\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/views/outdoor-weather-view/outdoor-weather-view.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            daytimeType\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : Daytime\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/views/outdoor-weather-view/outdoor-weather-view.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            outdoorWeather\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         OutdoorWeatherData\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/views/outdoor-weather-view/outdoor-weather-view.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showWeatherDescription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/views/outdoor-weather-view/outdoor-weather-view.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            theme\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Themes\n\n                        \n                    \n                    \n                        \n                            Default value : Themes.Automatic\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/views/outdoor-weather-view/outdoor-weather-view.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            themeType\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : Themes\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/views/outdoor-weather-view/outdoor-weather-view.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            userContext\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserContext\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/views/outdoor-weather-view/outdoor-weather-view.component.ts:27\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { Daytime, OutdoorWeatherData } from 'src/app/model/weather';\nimport { UserContextService } from 'src/app/services/user-context.service';\nimport { WeatherDataService } from 'src/app/services/weather-data.service';\nimport { Themes, UserContext } from 'src/app/model/user-context';\nimport { ImageService } from 'src/app/services/image.service';\nimport { TextService } from 'src/app/services/text.service';\n\n/**\n * Outdoor weather view component\n * \n * Displays the most importatn information of the weather station.\n * These are the current temperature, the weather icon and the\n * weather description as a short string.\n */\n@Component({\n  selector: 'app-outdoor-weather-view',\n  templateUrl: './outdoor-weather-view.component.html',\n  styleUrls: ['./outdoor-weather-view.component.scss']\n})\nexport class OutdoorWeatherViewComponent implements OnInit {\n  @Input() reduceMotion: boolean = false; \n  outdoorWeather?: OutdoorWeatherData;\n  daytime: Daytime = Daytime.noon\n  daytimeType = Daytime;\n  showWeatherDescription: boolean = true;\n  userContext?: UserContext;\n  themeType = Themes;\n  theme: Themes = Themes.Automatic;\n\n  constructor(private userContextService: UserContextService,\n              private weatherDataService: WeatherDataService,\n              private imageService: ImageService,\n              private textService: TextService) { }\n\n  ngOnInit(): void {\n    this.loadOutdoorWeather();\n    this.listenToScrollEvent();\n    this.loadUserContext();\n  }\n\n  /**\n   * Subscribes to the user context subject\n   */\n  private loadUserContext() {\n    this.userContextService.getUserContextSubject()\n    .subscribe(data => {\n      this.userContext = data;\n      this.theme = data.theme;\n    });\n  }\n\n  /**\n   * Subscribes to the outdoor wather data subject.\n   */\n  private loadOutdoorWeather(): void {\n    this.weatherDataService.getOutdoorWeatherDataSubject()\n      .subscribe(outdoorWeather => { \n        this.outdoorWeather = outdoorWeather \n      });\n  }\n\n  /**\n   * @returns the current gradient, based on the current time. This information\n   * comes from the image service.\n   */\n  getGradient(): { background: string, filter: string } {\n    return this.imageService.getGradientStyleFor(this.outdoorWeather?.weather)\n  }\n\n  /**\n   * @returns the current weather image string.\n   */\n  getWeatherImage(): string | undefined {\n    return this.imageService.getWeatherIconString(this.outdoorWeather?.weather);\n  }\n\n  /**\n   * @returns the current weather description string.\n   */\n  getWeatherDescription(): string {\n    if(this.outdoorWeather) {\n      return this.textService.createWeatherText(this.outdoorWeather.weather);\n    } \n    return \"\";\n  }\n\n  /**\n   * Listens to the scroll event of the user by using the window\n   * eventlistener. During scrolling the css variable scroll\n   * changes the value, so in CSS code the animation can be applied.\n   */\n  private listenToScrollEvent() {\n    window.addEventListener('scroll', () => {\n      if(!this.reduceMotion) {\n        let scrollValue = (window.pageYOffset) / 240; \n        if(scrollValue  1) {\n          scrollValue = 1;\n        }\n        scrollValue > 0.2 ?\n          this.showWeatherDescription = false \n          :\n          this.showWeatherDescription = true;\n        document.body.style.setProperty('--scroll', \"\" + scrollValue );\n      } else {\n        document.body.style.setProperty('--scroll', \"\" + 0 );\n      }\n    }, false);\n  }\n}\n\n    \n\n    \n        \n    \n    \n        {{outdoorWeather.temperature}}°\n        \n            {{outdoorWeather.maxTemperature}}°\n            {{outdoorWeather.minTemperature}}°\n         -->\n    \n        {{getWeatherDescription()}}\n\n\n\n    \n\n    \n                \n                    ./outdoor-weather-view.component.scss\n                \n                @import \"../../shared/styles\";\n\n// css for mobile and desktop\n.weather-image {\n    height: var(--outdoor-weather-image-size);\n}\n\n.container {\n    padding: 0 var(--padding) 0 var(--padding);\n    border-radius: var(--corner-radius);\n    display: flex;\n    flex-direction: column;\n    flex-wrap: wrap;\n    align-items: center;\n    justify-content: space-evenly;\n\n    background-color: var(--accent);\n}\n\n.temperature {\n    font-size: 5.0em;\n    font-weight: bold;\n    margin: 0;\n}\n\n.weather-description {\n    letter-spacing: 0.03em;\n    padding: 0 0 var(--padding) 0;\n    text-align: center;\n}\n\n.temperature-container {\n    display: flex;\n    flex-wrap: nowrap;\n    justify-content: space-between;\n    align-content: space-between;\n    align-items: center;\n}\n\n.min-max-temperature-container {\n    padding-left: calc(var(--padding) / 2);\n}\n\n.min-max-temperature-container > p {\n    text-align: end;\n    font-weight: 200;\n}\n\n// Set the default font color \n.container * {\n    color: var(--inverted);\n}\n\n.shadow{\n    z-index: 1000;\n    @include drop-shadow;\n}\n\n\n\n// css for desktop \n@media(min-width: 769px) {\n    .container{\n        position: fixed;\n        top: var(--padding);\n        left: var(--padding);;\n        bottom: var(--padding);;\n        height: calc(100vh - var(--padding) - var(--padding));\n        width: calc(var(--border-padding-left) - var(--border-padding-right) - 3 * var(--padding));\n        justify-content: center;\n    }\n    .flex-item {\n        margin-top: var(--padding);\n    }\n}\n\n// css for mobile \n@media(max-width: 769px) {\n\n    // styles for mobile when reduced motion is prefered\n    .container{\n        padding: var(--padding);\n        margin-top: var(--padding);\n    }\n\n    @media(prefers-reduced-motion: no-preference) {\n        .container.motion-allowed {\n            padding: 120px var(--padding) 120px var(--padding);\n            position: fixed;\n            top: 0;\n            left: 0;\n            right: 0;\n            z-index: 10;\n            height: var(--dashboard-outdoor-weather-size);\n            border-radius: 0 0 var(--corner-radius) var(--corner-radius);\n            margin-top: 0;\n        }\n    \n        @keyframes container-shrink {\n            from {\n                height: var(--dashboard-outdoor-weather-size);\n                left: 0;\n                right: 0;\n                top: 0;\n                border-radius: 0 0 var(--corner-radius) var(--corner-radius);\n                padding: 120px var(--padding) var(--padding) var(--padding);\n            }\n        \n            to {\n                height: var(--shrinked-dashboard-outdoor-weather-size);\n                left: var(--border-padding-left);\n                right: var(--border-padding-right);\n                top: calc(var(--navbar-height) + var(--border-padding-top));\n                border-radius: var(--corner-radius);\n                padding: var(--padding);\n            }\n        }\n    \n        .container.motion-allowed {\n            position: fixed;\n            animation-name: container-shrink ;\n            @include linear-animation;\n        }\n    \n        @keyframes image-shrink {\n            from {\n                height: var(--outdoor-weather-image-size);\n            }\n        \n            to {\n                height: 60px;\n            }\n        }\n    \n        .weather-image.motion-allowed  {\n            animation-name: image-shrink ;\n            @include linear-animation;\n        }    \n    }\n}\n\n\n.noon-gradient {\n    background: rgb(97,194,216);\n    background: -moz-linear-gradient(0deg, rgba(97,194,216,1) 0%, rgba(67,125,219,1) 100%);\n    background: -webkit-linear-gradient(0deg, rgba(97,194,216,1) 0%, rgba(67,125,219,1) 100%);\n    background: linear-gradient(0deg, rgba(97,194,216,1) 0%, rgba(67,125,219,1) 100%);\n    filter: progid:DXImageTransform.Microsoft.gradient(startColorstr=\"#61c2d8\",endColorstr=\"#437ddb\",GradientType=1);\n}\n\n.dawn-gradient {\n    background: rgb(238,69,59);\n    background: -moz-linear-gradient(0deg, rgba(238,69,59,1) 0%, rgba(164,9,110,1) 100%);\n    background: -webkit-linear-gradient(0deg, rgba(238,69,59,1) 0%, rgba(164,9,110,1) 100%);\n    background: linear-gradient(0deg, rgba(238,69,59,1) 0%, rgba(164,9,110,1) 100%);\n    filter: progid:DXImageTransform.Microsoft.gradient(startColorstr=\"#ee453b\",endColorstr=\"#a4096e\",GradientType=1);\n}\n\n.night-gradient {\n    background: rgb(216,97,204);\n    background: -moz-linear-gradient(0deg, rgba(216,97,204,1) 0%, rgba(70,67,219,1) 100%);\n    background: -webkit-linear-gradient(0deg, rgba(216,97,204,1) 0%, rgba(70,67,219,1) 100%);\n    background: linear-gradient(0deg, rgba(216,97,204,1) 0%, rgba(70,67,219,1) 100%);\n    filter: progid:DXImageTransform.Microsoft.gradient(startColorstr=\"#d861cc\",endColorstr=\"#4643db\",GradientType=1);\n}\n\n.high-contrast {\n    background: black;\n    border: 1px solid var(--border);\n    filter: none;\n}\n\n.high-contrast * {\n    color: var(--text);\n}\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                {{outdoorWeather.temperature}}°                    {{outdoorWeather.maxTemperature}}°            {{outdoorWeather.minTemperature}}°         -->            {{getWeatherDescription()}}'\n    var COMPONENTS = [{'name': 'ApparentTemperatureTileViewComponent', 'selector': 'app-apparent-temperature-tile-view'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BackButtonElementComponent', 'selector': 'app-back-button-element'},{'name': 'CalibrationInfoDetailViewComponent', 'selector': 'app-calibration-info-detail-view'},{'name': 'CardElementComponent', 'selector': 'card-element'},{'name': 'CheckboxSwitcherElementComponent', 'selector': 'app-checkbox-switcher-element'},{'name': 'ConfigurationTilePopUpDialogView', 'selector': 'configuration-tile-popup-view'},{'name': 'ConfigurationTileViewComponent', 'selector': 'app-configuration-tile-view'},{'name': 'ConfigurationViewComponent', 'selector': 'app-configuration-view'},{'name': 'DashboardScreenComponent', 'selector': 'app-dashboard-screen'},{'name': 'DashboardViewComponent', 'selector': 'app-dashboard-view'},{'name': 'DetailScreenComponent', 'selector': 'app-detail-screen'},{'name': 'ForecastDetailViewComponent', 'selector': 'app-forecast-detail-view'},{'name': 'ForecastTileViewComponent', 'selector': 'app-forecast-tile-view'},{'name': 'HistoryDetailViewComponent', 'selector': 'app-history-detail-view'},{'name': 'HistoryTileViewComponent', 'selector': 'app-history-tile-view'},{'name': 'HumidityTileViewComponent', 'selector': 'app-humidity-tile-view'},{'name': 'IndoorDetailViewComponent', 'selector': 'app-indoor-detail-view'},{'name': 'IndoorTileViewComponent', 'selector': 'app-indoor-tile-view'},{'name': 'LoginViewComponent', 'selector': 'app-login-view'},{'name': 'MenuBarElementComponent', 'selector': 'app-menu-bar-element'},{'name': 'MenuButtonElementComponent', 'selector': 'app-menu-button-element'},{'name': 'MenuElementComponent', 'selector': 'app-menu-element'},{'name': 'NavBarElementComponent', 'selector': 'app-nav-bar-element'},{'name': 'OnboardingScreenComponent', 'selector': 'app-onboarding-screen'},{'name': 'OpenAPELoginTileViewComponent', 'selector': 'app-open-apelogin-tile-view'},{'name': 'OutdoorWeatherDetailViewComponent', 'selector': 'app-outdoor-weather-detail-view'},{'name': 'OutdoorWeatherViewComponent', 'selector': 'app-outdoor-weather-view'},{'name': 'PersonalizationSettingsViewComponent', 'selector': 'app-personalization-settings-view'},{'name': 'PersonalizationViewComponent', 'selector': 'app-personalization-view'},{'name': 'PollenflugDetailViewComponent', 'selector': 'app-pollenflug-detail-view'},{'name': 'PollenflugSmallTileComponent', 'selector': 'app-pollenflug-small-tile'},{'name': 'PollenflugTileViewComponent', 'selector': 'app-pollenflug-tile-view'},{'name': 'PollenListElementComponent', 'selector': 'app-pollen-list-element'},{'name': 'PollenTagElementComponent', 'selector': 'app-pollen-tag-element'},{'name': 'ProgressChartElementComponent', 'selector': 'app-progress-chart-element'},{'name': 'RegistrationViewComponent', 'selector': 'app-registration-view'},{'name': 'SettingsScreenComponent', 'selector': 'app-settings-screen'},{'name': 'SimpleTileViewComponent', 'selector': 'app-simple-tile-view'},{'name': 'SliderElementComponent', 'selector': 'app-slider-element'},{'name': 'TtsPlayerElementComponent', 'selector': 'app-tts-player-element'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'OutdoorWeatherViewComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PersonalizationSettingsViewComponent.html":{"url":"components/PersonalizationSettingsViewComponent.html","title":"component - PersonalizationSettingsViewComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PersonalizationSettingsViewComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/views/personalization-settings-view/personalization-settings-view.component.ts\n\n\n    \n        Description\n    \n    \n        Personalization settings view component\nThis component displays all setting option for the \npersonalization features of the web app.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-personalization-settings-view\n            \n\n            \n                styleUrls\n                ./personalization-settings-view.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./personalization-settings-view.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                desktop\n                            \n                            \n                                themesType\n                            \n                            \n                                    Optional\n                                userContextData\n                            \n                            \n                                    Public\n                                userContextService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getPollenStringAt\n                            \n                            \n                                getPollenValueAt\n                            \n                            \n                                getThemeStringAt\n                            \n                            \n                                getThemeTypeAt\n                            \n                            \n                                loginDisabled\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                numberOfPollen\n                            \n                            \n                                numberOfThemes\n                            \n                            \n                                setFontSize\n                            \n                            \n                                togglePollenValueAt\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userContextService: UserContextService, renderer: Renderer2, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/views/personalization-settings-view/personalization-settings-view.component.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userContextService\n                                                  \n                                                        \n                                                                        UserContextService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        renderer\n                                                  \n                                                        \n                                                                        Renderer2\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getPollenStringAt\n                        \n                        \n                    \n                \n            \n            \n                \ngetPollenStringAt(index: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/views/personalization-settings-view/personalization-settings-view.component.ts:105\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        of the pollen\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        the pollen string of the given index\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getPollenValueAt\n                        \n                        \n                    \n                \n            \n            \n                \ngetPollenValueAt(index: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/views/personalization-settings-view/personalization-settings-view.component.ts:97\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        of the polle\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        the value of the polle for the given index.\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getThemeStringAt\n                        \n                        \n                    \n                \n            \n            \n                \ngetThemeStringAt(index: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/views/personalization-settings-view/personalization-settings-view.component.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        of the theme\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        the theme String \n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getThemeTypeAt\n                        \n                        \n                    \n                \n            \n            \n                \ngetThemeTypeAt(index: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/views/personalization-settings-view/personalization-settings-view.component.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        of the theme\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Themes\n\n                    \n                    \n                        the theme of the asked index\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loginDisabled\n                        \n                        \n                    \n                \n            \n            \n                \nloginDisabled()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/views/personalization-settings-view/personalization-settings-view.component.ts:121\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        false if the login to open ape is possible\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/views/personalization-settings-view/personalization-settings-view.component.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            numberOfPollen\n                        \n                        \n                    \n                \n            \n            \n                \nnumberOfPollen()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/views/personalization-settings-view/personalization-settings-view.component.ts:88\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :     any[]\n\n                    \n                    \n                        the number of pollen \n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            numberOfThemes\n                        \n                        \n                    \n                \n            \n            \n                \nnumberOfThemes()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/views/personalization-settings-view/personalization-settings-view.component.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :     any[]\n\n                    \n                    \n                        the number of themes \n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setFontSize\n                        \n                        \n                    \n                \n            \n            \n                \nsetFontSize(value: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/views/personalization-settings-view/personalization-settings-view.component.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the new font size value\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            togglePollenValueAt\n                        \n                        \n                    \n                \n            \n            \n                \ntogglePollenValueAt(index: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/views/personalization-settings-view/personalization-settings-view.component.ts:114\n                \n            \n\n\n            \n                \n                    Toggles the pollen value at the given index.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        of the polle\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            desktop\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/views/personalization-settings-view/personalization-settings-view.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            themesType\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : Themes\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/views/personalization-settings-view/personalization-settings-view.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            userContextData\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserContext\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/views/personalization-settings-view/personalization-settings-view.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            userContextService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserContextService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/views/personalization-settings-view/personalization-settings-view.component.ts:23\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Renderer2 } from '@angular/core';\nimport { UserContextService } from 'src/app/services/user-context.service';\nimport { Themes, UserContext, PollenType } from 'src/app/model/user-context';\nimport { Router } from '@angular/router';\n\n/**\n * Personalization settings view component\n * \n * This component displays all setting option for the \n * personalization features of the web app.\n */\n@Component({\n  selector: 'app-personalization-settings-view',\n  templateUrl: './personalization-settings-view.component.html',\n  styleUrls: ['./personalization-settings-view.component.scss']\n})\nexport class PersonalizationSettingsViewComponent implements OnInit {\n  desktop: boolean = false;\n  userContextData?: UserContext;\n  themesType = Themes  \n\n  constructor(\n    public userContextService: UserContextService,\n    private renderer: Renderer2,\n    private router: Router) { }\n    \n  ngOnInit(): void {\n    this.loadUserContext();\n    this.userContextService.refreshUserContextIfNeeded().subscribe((data => {\n      if(!data) {\n        this.router.navigateByUrl('/onboarding/login');\n      }\n    }));;\n  }\n\n  /**\n   * Subscribes to the user context subject.\n   */\n  private loadUserContext() {\n    this.userContextService.getUserContextSubject()\n      .subscribe(data => this.userContextData = data)\n  }\n\n  /**\n   * @param value the new font size value\n   */\n  setFontSize(value: number) {\n    this.userContextService.fontSize = value;\n    if(this.userContextData) {\n      this.setDefaultFontSize(this.userContextData.fontSize);\n    }\n  }\n\n  /**\n   * @returns the number of themes \n   */\n  numberOfThemes(): any[] {\n    let count = Object.keys(Themes).length / 2;\n    return new Array(count);\n  }\n\n  /**\n   * @param index of the theme\n   * @returns the theme of the asked index\n   */\n  getThemeTypeAt(index: number): Themes {\n    let themesString = Themes[index];\n    switch (themesString) {\n      case \"Dark\": return Themes.Dark\n      case \"Light\": return Themes.Light\n      case \"Automatic\": return Themes.Automatic\n      case \"HighContrast\": return Themes.HighContrast\n      default: return Themes.Automatic\n    }\n  }\n\n  /**\n   * @param index of the theme\n   * @returns the theme String \n   */\n  getThemeStringAt(index: number): string {\n    return Themes[this.getThemeTypeAt(index)]\n  }\n\n  /**\n   * @returns the number of pollen \n   */\n  numberOfPollen(): any[] {\n    let count = this.userContextService.pollenTypes.length\n    return new Array(count);\n  }\n\n  /**\n   * @param index of the polle\n   * @returns the value of the polle for the given index.\n   */\n  getPollenValueAt(index: number): boolean {\n    return this.userContextService.getPollenValueAt(index);\n  }\n\n  /**\n   * @param index of the pollen\n   * @returns the pollen string of the given index\n   */\n  getPollenStringAt(index: number): string {\n    return this.userContextService.pollenTypes[index].pollenName\n  }\n\n  /**\n   * Toggles the pollen value at the given index.\n   * \n   * @param index of the polle\n   */\n  togglePollenValueAt(index: number) {\n    this.userContextService.tooglePollenValueAt(index);\n  }\n\n  /**\n   * @returns false if the login to open ape is possible\n   */\n  loginDisabled(): boolean {\n    return this.userContextService.disableLogin;\n  }\n\n  /**\n   * Sets the base font size of the document.\n   * \n   * @param fontSize\n   */\n  private setDefaultFontSize(fontSize: number) {\n    this.renderer.setStyle(document.body, \"font-size\", fontSize + \"%\");  \n  }\n\n}\n\n    \n\n    \n        \n    \n    \n    \n        \n        \n        \n        \n        \n        \n    \n\n    \n        \n            \n                \n                \n                    {{getPollenStringAt(index)}}\n                \n            \n        \n    \n\n    \n        \n            \n                \n                {{getThemeStringAt(index)}}\n            \n        \n     \n    \n    \n\n    \n\n    \n                \n                    ./personalization-settings-view.component.scss\n                \n                .switch-container {\n    display: flex;\n    justify-content: space-between;\n    flex-wrap: wrap;\n    width: calc((100vw - var(--border-padding-left) - var(--border-padding-right)));\n}\n\n.slider {\n    width: calc((100vw - var(--border-padding-left) - var(--border-padding-right)));\n}\n\n.flex-container {\n    display: flex;\n    flex-direction: row;\n    flex-wrap: wrap;\n}\n\n.pollen-item {\n    width: 11em;\n    margin: 0.5em;\n}\n\n.theme-item {\n    margin: 0.5em;\n}\n\nlabel {\n    font-size: 1.6em;\n}\n\n.container {\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: space-between;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                                            {{getPollenStringAt(index)}}                                                                                                {{getThemeStringAt(index)}}                                 '\n    var COMPONENTS = [{'name': 'ApparentTemperatureTileViewComponent', 'selector': 'app-apparent-temperature-tile-view'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BackButtonElementComponent', 'selector': 'app-back-button-element'},{'name': 'CalibrationInfoDetailViewComponent', 'selector': 'app-calibration-info-detail-view'},{'name': 'CardElementComponent', 'selector': 'card-element'},{'name': 'CheckboxSwitcherElementComponent', 'selector': 'app-checkbox-switcher-element'},{'name': 'ConfigurationTilePopUpDialogView', 'selector': 'configuration-tile-popup-view'},{'name': 'ConfigurationTileViewComponent', 'selector': 'app-configuration-tile-view'},{'name': 'ConfigurationViewComponent', 'selector': 'app-configuration-view'},{'name': 'DashboardScreenComponent', 'selector': 'app-dashboard-screen'},{'name': 'DashboardViewComponent', 'selector': 'app-dashboard-view'},{'name': 'DetailScreenComponent', 'selector': 'app-detail-screen'},{'name': 'ForecastDetailViewComponent', 'selector': 'app-forecast-detail-view'},{'name': 'ForecastTileViewComponent', 'selector': 'app-forecast-tile-view'},{'name': 'HistoryDetailViewComponent', 'selector': 'app-history-detail-view'},{'name': 'HistoryTileViewComponent', 'selector': 'app-history-tile-view'},{'name': 'HumidityTileViewComponent', 'selector': 'app-humidity-tile-view'},{'name': 'IndoorDetailViewComponent', 'selector': 'app-indoor-detail-view'},{'name': 'IndoorTileViewComponent', 'selector': 'app-indoor-tile-view'},{'name': 'LoginViewComponent', 'selector': 'app-login-view'},{'name': 'MenuBarElementComponent', 'selector': 'app-menu-bar-element'},{'name': 'MenuButtonElementComponent', 'selector': 'app-menu-button-element'},{'name': 'MenuElementComponent', 'selector': 'app-menu-element'},{'name': 'NavBarElementComponent', 'selector': 'app-nav-bar-element'},{'name': 'OnboardingScreenComponent', 'selector': 'app-onboarding-screen'},{'name': 'OpenAPELoginTileViewComponent', 'selector': 'app-open-apelogin-tile-view'},{'name': 'OutdoorWeatherDetailViewComponent', 'selector': 'app-outdoor-weather-detail-view'},{'name': 'OutdoorWeatherViewComponent', 'selector': 'app-outdoor-weather-view'},{'name': 'PersonalizationSettingsViewComponent', 'selector': 'app-personalization-settings-view'},{'name': 'PersonalizationViewComponent', 'selector': 'app-personalization-view'},{'name': 'PollenflugDetailViewComponent', 'selector': 'app-pollenflug-detail-view'},{'name': 'PollenflugSmallTileComponent', 'selector': 'app-pollenflug-small-tile'},{'name': 'PollenflugTileViewComponent', 'selector': 'app-pollenflug-tile-view'},{'name': 'PollenListElementComponent', 'selector': 'app-pollen-list-element'},{'name': 'PollenTagElementComponent', 'selector': 'app-pollen-tag-element'},{'name': 'ProgressChartElementComponent', 'selector': 'app-progress-chart-element'},{'name': 'RegistrationViewComponent', 'selector': 'app-registration-view'},{'name': 'SettingsScreenComponent', 'selector': 'app-settings-screen'},{'name': 'SimpleTileViewComponent', 'selector': 'app-simple-tile-view'},{'name': 'SliderElementComponent', 'selector': 'app-slider-element'},{'name': 'TtsPlayerElementComponent', 'selector': 'app-tts-player-element'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PersonalizationSettingsViewComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PersonalizationViewComponent.html":{"url":"components/PersonalizationViewComponent.html","title":"component - PersonalizationViewComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PersonalizationViewComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/views/personalization-view/personalization-view.component.ts\n\n\n    \n        Description\n    \n    \n        Personalization view component\nIs the wrapper for the personalization settings view component.\nIt displays the navigation bar with the correct title and back button.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-personalization-view\n            \n\n            \n                styleUrls\n                ./personalization-view.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./personalization-view.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onClickDone\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/views/personalization-view/personalization-view.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/views/personalization-view/personalization-view.component.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onClickDone\n                        \n                        \n                    \n                \n            \n            \n                \nonClickDone()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/views/personalization-view/personalization-view.component.ts:25\n                \n            \n\n\n            \n                \n                    Redirects to the Dashboard screen\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n/**\n * Personalization view component\n *\n * Is the wrapper for the personalization settings view component.\n * It displays the navigation bar with the correct title and back button.\n */\n@Component({\n  selector: 'app-personalization-view',\n  templateUrl: './personalization-view.component.html',\n  styleUrls: ['./personalization-view.component.scss']\n})\nexport class PersonalizationViewComponent implements OnInit {\n\n  constructor(private router: Router) { }\n\n  ngOnInit(): void {\n  }\n\n  /**\n   * Redirects to the Dashboard screen\n   */\n  onClickDone() {\n    this.router.navigateByUrl('/dashboard');\n  }\n\n}\n\n    \n\n    \n        \n    \n        \n        \n    \n    Fertig\n\n\n\n\n    \n\n    \n                \n                    ./personalization-view.component.scss\n                \n                .container {\n    padding-top: var(--navbar-height);\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                            Fertig'\n    var COMPONENTS = [{'name': 'ApparentTemperatureTileViewComponent', 'selector': 'app-apparent-temperature-tile-view'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BackButtonElementComponent', 'selector': 'app-back-button-element'},{'name': 'CalibrationInfoDetailViewComponent', 'selector': 'app-calibration-info-detail-view'},{'name': 'CardElementComponent', 'selector': 'card-element'},{'name': 'CheckboxSwitcherElementComponent', 'selector': 'app-checkbox-switcher-element'},{'name': 'ConfigurationTilePopUpDialogView', 'selector': 'configuration-tile-popup-view'},{'name': 'ConfigurationTileViewComponent', 'selector': 'app-configuration-tile-view'},{'name': 'ConfigurationViewComponent', 'selector': 'app-configuration-view'},{'name': 'DashboardScreenComponent', 'selector': 'app-dashboard-screen'},{'name': 'DashboardViewComponent', 'selector': 'app-dashboard-view'},{'name': 'DetailScreenComponent', 'selector': 'app-detail-screen'},{'name': 'ForecastDetailViewComponent', 'selector': 'app-forecast-detail-view'},{'name': 'ForecastTileViewComponent', 'selector': 'app-forecast-tile-view'},{'name': 'HistoryDetailViewComponent', 'selector': 'app-history-detail-view'},{'name': 'HistoryTileViewComponent', 'selector': 'app-history-tile-view'},{'name': 'HumidityTileViewComponent', 'selector': 'app-humidity-tile-view'},{'name': 'IndoorDetailViewComponent', 'selector': 'app-indoor-detail-view'},{'name': 'IndoorTileViewComponent', 'selector': 'app-indoor-tile-view'},{'name': 'LoginViewComponent', 'selector': 'app-login-view'},{'name': 'MenuBarElementComponent', 'selector': 'app-menu-bar-element'},{'name': 'MenuButtonElementComponent', 'selector': 'app-menu-button-element'},{'name': 'MenuElementComponent', 'selector': 'app-menu-element'},{'name': 'NavBarElementComponent', 'selector': 'app-nav-bar-element'},{'name': 'OnboardingScreenComponent', 'selector': 'app-onboarding-screen'},{'name': 'OpenAPELoginTileViewComponent', 'selector': 'app-open-apelogin-tile-view'},{'name': 'OutdoorWeatherDetailViewComponent', 'selector': 'app-outdoor-weather-detail-view'},{'name': 'OutdoorWeatherViewComponent', 'selector': 'app-outdoor-weather-view'},{'name': 'PersonalizationSettingsViewComponent', 'selector': 'app-personalization-settings-view'},{'name': 'PersonalizationViewComponent', 'selector': 'app-personalization-view'},{'name': 'PollenflugDetailViewComponent', 'selector': 'app-pollenflug-detail-view'},{'name': 'PollenflugSmallTileComponent', 'selector': 'app-pollenflug-small-tile'},{'name': 'PollenflugTileViewComponent', 'selector': 'app-pollenflug-tile-view'},{'name': 'PollenListElementComponent', 'selector': 'app-pollen-list-element'},{'name': 'PollenTagElementComponent', 'selector': 'app-pollen-tag-element'},{'name': 'ProgressChartElementComponent', 'selector': 'app-progress-chart-element'},{'name': 'RegistrationViewComponent', 'selector': 'app-registration-view'},{'name': 'SettingsScreenComponent', 'selector': 'app-settings-screen'},{'name': 'SimpleTileViewComponent', 'selector': 'app-simple-tile-view'},{'name': 'SliderElementComponent', 'selector': 'app-slider-element'},{'name': 'TtsPlayerElementComponent', 'selector': 'app-tts-player-element'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PersonalizationViewComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PollenData.html":{"url":"interfaces/PollenData.html","title":"interface - PollenData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PollenData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/weather.ts\n        \n\n            \n                Description\n            \n            \n                Model of the pollen data. It contains all information about \nthe current pollen count.\n\n            \n\n            \n                Extends\n            \n            \n                        WeatherData\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        id\n                                \n                                \n                                        pollenName\n                                \n                                \n                                        today\n                                \n                                \n                                        tomorrow\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pollenName\n                                    \n                                \n                                \n                                    \n                                        pollenName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        today\n                                    \n                                \n                                \n                                    \n                                        today:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tomorrow\n                                    \n                                \n                                \n                                    \n                                        tomorrow:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface WeatherData { }\n\n/**\n * Enum to identify the type of the tile. \n */\nexport enum TileType {\n    indoorRoom,\n    pollenSmall,\n    pollenList,\n    history,\n    forecast,\n    humidity,\n    apparentTemperature,\n}\n\n/**\n * This interface bundles the three tile arrays\n */\nexport interface TileArrays {\n    dashboard: Tile[],\n    pollen : Tile[],\n    indoorRooms: Tile[]\n}\n  \n/**\n * Enum to set the priority of a tile\n */\nexport enum TilePriority {\n    important, //Highest \n    high,\n    middle,\n    low,\n}\n\n/**\n * Tile model -\n * Every tile (widget) needs data and a prioriy. The priority is \n * used to determine the position of the tiles on the dashboard. The tiles themselves do not load the data.\n * The data is passed from the parent view of the tiles.\n */\nexport interface Tile {\n    type: TileType;\n    data: A;\n    id: string;\n    priority: TilePriority\n}\n\n/**\n * Model of the outdoor weather data. It contains all information about the current \n * outdoor weather including temperature, humidity and weather type. \n */\nexport interface OutdoorWeatherData extends WeatherData {\n    temperature: number // in °C\n    maxTemperature: number,\n    minTemperature: number, \n    humidity: number, // in %\n    timestamp: Date, \n    weather: string, \n    apparentTemperature: number, // in °C ---> die \"gefühlte\" Temperatur\n    location: string, // e.g. \"Stuttgart\" TODO: Make configurable in ESP Wlan-Board\n    postCode: string,\n}\n\n/**\n * Model of the weather forecast data. It contains all information about \n * the forecast including weather and trend. \n */\nexport interface WeatherForecastData extends WeatherData {\n    trend: string,\n    weatherDescription: string,\n    weatherIcon: string,\n  }\n\n/**\n * Model of the pollen data. It contains all information about \n * the current pollen count.\n */\nexport interface PollenData extends WeatherData {\n    pollenName: string, \n    id: number,\n    today: string, // -1  3\n    tomorrow: string, // -1  3\n}\n\n/**\n * Model of the indoor room data. It contains all information about \n * the temperature, humidity, roomname, airQuality of the current room. \n */\nexport interface IndoorRoomData extends WeatherData {\n    roomID: string,\n    roomName: string,\n    airQuality: number, // in %\n    temperature: number // in °C \n    humidity: number, // in %\n    timestamp: Date, \n    calibrationValue: number\n}\n\n/**\n * Model of the indoor room data. It contains all information about \n * the temperature, humidity, roomname, airQuality of the current room. \n */\nexport interface WeatherHistoryData extends WeatherData {\n    datapoints: OutdoorWeatherData[],\n}\n\n/**\n * Model of the indoor room data. It contains all information about \n * the temperature, humidity, roomname, airQuality of the current room. \n */\nexport interface GraphDataSet extends WeatherData {\n    temperatureDataPoints: number[];\n    humidityDataPoints: number[];\n    xAxisLabel: string[];\n    label: string;\n    temperatureAverage: number;\n    humidityAverage: number;\n}\n\nexport interface WeatherHistoryByDayData extends WeatherData  {\n    averageTemperature: number, // in °C\n    averageHumidity: number, // in %\n}\n\nexport enum Daytime {\n    noon,\n    night,\n    dawn,\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PollenListElementComponent.html":{"url":"components/PollenListElementComponent.html","title":"component - PollenListElementComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PollenListElementComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/ui-elements/pollen-list-element/pollen-list-element.component.ts\n\n\n    \n        Description\n    \n    \n        Pollen list element component\nThis component is a list entry which uses the pollen tag element.\nIn addition to the pollen tag element it also displays a name label.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-pollen-list-element\n            \n\n            \n                styleUrls\n                ./pollen-list-element.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./pollen-list-element.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/ui-elements/pollen-list-element/pollen-list-element.component.ts:16\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        title\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/ui-elements/pollen-list-element/pollen-list-element.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/ui-elements/pollen-list-element/pollen-list-element.component.ts:16\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/ui-elements/pollen-list-element/pollen-list-element.component.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\n\n/**\n * Pollen list element component\n * \n * This component is a list entry which uses the pollen tag element.\n * In addition to the pollen tag element it also displays a name label.\n */\n@Component({\n  selector: 'app-pollen-list-element',\n  templateUrl: './pollen-list-element.component.html',\n  styleUrls: ['./pollen-list-element.component.scss']\n})\nexport class PollenListElementComponent implements OnInit {\n  @Input() title?: string;\n  @Input() value?: string;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        \n    {{title}} \n    \n        \n    \n\n    \n                \n                    ./pollen-list-element.component.scss\n                \n                .container {\n    display: flex;\n    justify-content: space-between;\n    align-content: center;\n    align-items: center;\n    padding: calc(var(--padding)/2) 0  calc(var(--padding)/2) 0 ;\n    border-bottom: 0.5pt solid var(--secondary);\n}\n\n.title {\n    width: 5em;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{title}}             '\n    var COMPONENTS = [{'name': 'ApparentTemperatureTileViewComponent', 'selector': 'app-apparent-temperature-tile-view'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BackButtonElementComponent', 'selector': 'app-back-button-element'},{'name': 'CalibrationInfoDetailViewComponent', 'selector': 'app-calibration-info-detail-view'},{'name': 'CardElementComponent', 'selector': 'card-element'},{'name': 'CheckboxSwitcherElementComponent', 'selector': 'app-checkbox-switcher-element'},{'name': 'ConfigurationTilePopUpDialogView', 'selector': 'configuration-tile-popup-view'},{'name': 'ConfigurationTileViewComponent', 'selector': 'app-configuration-tile-view'},{'name': 'ConfigurationViewComponent', 'selector': 'app-configuration-view'},{'name': 'DashboardScreenComponent', 'selector': 'app-dashboard-screen'},{'name': 'DashboardViewComponent', 'selector': 'app-dashboard-view'},{'name': 'DetailScreenComponent', 'selector': 'app-detail-screen'},{'name': 'ForecastDetailViewComponent', 'selector': 'app-forecast-detail-view'},{'name': 'ForecastTileViewComponent', 'selector': 'app-forecast-tile-view'},{'name': 'HistoryDetailViewComponent', 'selector': 'app-history-detail-view'},{'name': 'HistoryTileViewComponent', 'selector': 'app-history-tile-view'},{'name': 'HumidityTileViewComponent', 'selector': 'app-humidity-tile-view'},{'name': 'IndoorDetailViewComponent', 'selector': 'app-indoor-detail-view'},{'name': 'IndoorTileViewComponent', 'selector': 'app-indoor-tile-view'},{'name': 'LoginViewComponent', 'selector': 'app-login-view'},{'name': 'MenuBarElementComponent', 'selector': 'app-menu-bar-element'},{'name': 'MenuButtonElementComponent', 'selector': 'app-menu-button-element'},{'name': 'MenuElementComponent', 'selector': 'app-menu-element'},{'name': 'NavBarElementComponent', 'selector': 'app-nav-bar-element'},{'name': 'OnboardingScreenComponent', 'selector': 'app-onboarding-screen'},{'name': 'OpenAPELoginTileViewComponent', 'selector': 'app-open-apelogin-tile-view'},{'name': 'OutdoorWeatherDetailViewComponent', 'selector': 'app-outdoor-weather-detail-view'},{'name': 'OutdoorWeatherViewComponent', 'selector': 'app-outdoor-weather-view'},{'name': 'PersonalizationSettingsViewComponent', 'selector': 'app-personalization-settings-view'},{'name': 'PersonalizationViewComponent', 'selector': 'app-personalization-view'},{'name': 'PollenflugDetailViewComponent', 'selector': 'app-pollenflug-detail-view'},{'name': 'PollenflugSmallTileComponent', 'selector': 'app-pollenflug-small-tile'},{'name': 'PollenflugTileViewComponent', 'selector': 'app-pollenflug-tile-view'},{'name': 'PollenListElementComponent', 'selector': 'app-pollen-list-element'},{'name': 'PollenTagElementComponent', 'selector': 'app-pollen-tag-element'},{'name': 'ProgressChartElementComponent', 'selector': 'app-progress-chart-element'},{'name': 'RegistrationViewComponent', 'selector': 'app-registration-view'},{'name': 'SettingsScreenComponent', 'selector': 'app-settings-screen'},{'name': 'SimpleTileViewComponent', 'selector': 'app-simple-tile-view'},{'name': 'SliderElementComponent', 'selector': 'app-slider-element'},{'name': 'TtsPlayerElementComponent', 'selector': 'app-tts-player-element'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PollenListElementComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PollenResponse.html":{"url":"interfaces/PollenResponse.html","title":"interface - PollenResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PollenResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/api/weather-api.service.ts\n        \n\n            \n                Description\n            \n            \n                Model of the pollen api response\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        id\n                                \n                                \n                                        loadRating\n                                \n                                \n                                        pollenName\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loadRating\n                                    \n                                \n                                \n                                    \n                                        loadRating:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pollenName\n                                    \n                                \n                                \n                                    \n                                        pollenName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { FORECAST, INDOORAIRQUALITY, OUTDOORWEATHER, POLLEN, WEATHERHISTORY } from '../../model/mock-data/weather.mock';\nimport { OutdoorWeatherData, PollenData, IndoorRoomData, WeatherForecastData, WeatherHistoryData } from '../../model/weather';\nimport { Observable, of } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\n\n/**\n * Weather api service injectable\n * \n * Use this service to access the network. It implementes all routes \n * for the weather data.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class WeatherAPIService {\n  private outdoorURL = environment.baseURL + 'weather-data/outdoor/latest';\n  private indoorURL = environment.baseURL + 'weather-data/indoor/latest';\n  private historyURL = environment.baseURL + 'weather-data/outdoor/history';\n  private forecastURL = environment.baseURL + 'weather-data/forecast/latest';\n  private allPollenTypesURL = environment.baseURL + 'pollen/all';\n\n  constructor(private httpClient: HttpClient) { }\n\n  /**\n   * @returns an observable with the loadad OutdoorWeatherData from the api or test data\n   */\n  public loadOutdoorWeather(): Observable {\n    if (environment.testData) {\n      return of(OUTDOORWEATHER);\n    }\n    let returnObservable = new Observable((observer) => {\n        this.httpClient.get(this.outdoorURL).subscribe(data => {\n          if(data.id === undefined) {\n            observer.next();\n            observer.complete();\n          } else {\n            let outdoorData = this.createOutdoorWeatherDataFromServerResponse(data);\n            observer.next(outdoorData);\n            observer.complete();\n          }\n        },\n        (error) => {\n          console.log(error);\n          observer.next();\n          observer.complete();\n        })\n      }\n    );\n    return returnObservable;\n  }\n\n  /**\n   * @returns an observable with the loadad WeatherForecastData from the api or test data\n   */\n  public loadForecast(): Observable {\n    if (environment.testData) {\n      return of(FORECAST);\n    }\n    let returnObservable = new Observable((observer) => {\n        this.httpClient.get(this.forecastURL).subscribe(data => {\n          let forecastData = this.createOutdoorForecastDataFromServerResponse(data);\n          observer.next(forecastData);\n          observer.complete();\n        },\n        (error) => {\n          console.log(error);\n          observer.next();\n          observer.complete();\n        })\n      }\n    );\n    return returnObservable;\n  }\n\n  /**\n   * @returns an observable with the loadad PollenData from the api or test data\n   */\n  public loadPollen(): Observable{\n    if (environment.testData) {\n      let pollen = of(POLLEN);\n      return pollen;\n    }\n    let returnObservable = new Observable((observer) => {\n      let response = this.httpClient.get(this.allPollenTypesURL);\n      response.subscribe(data => {\n        let pollenData = this.createPollenDataFromServerResponse(data);\n        observer.next(pollenData);\n        observer.complete();\n      },\n      (error) => {\n        console.log(error);\n        observer.next([]);\n        observer.complete();\n      })\n    });\n    return returnObservable;\n  }\n\n  /**\n   * @returns an observable with the loadad IndoorRoomData from the api or test data\n   */\n  public loadIndoorRoomData(): Observable {\n    if (environment.testData) {\n      let indoorData = of(INDOORAIRQUALITY);\n      return indoorData;\n    }\n    let returnObservable = new Observable((observer) => { // Wir brauchen hier ein Array, -> sollen ja mehrere Räume möglich sein (theoretisch...)\n        this.httpClient.get(this.indoorURL).subscribe(data => {\n          let indoorData = this.createIndoorRoomDataFromServerResponse(data);\n          observer.next([indoorData]);\n          observer.complete();\n        },\n        (error) => {\n          console.log(error);\n          observer.next([]);\n          observer.complete();\n        })\n      }\n    );\n    return returnObservable;\n  }\n\n  /**\n   * @returns an observable with the loadad WeatherHistoryData or test data\n   */\n  public loadHistoryDataSubject(endDate: Date, beginDate: Date): Observable {\n    if (environment.testData) {\n      let forecastData = of(WEATHERHISTORY);\n      return forecastData;\n    }\n    let returnObservable = new Observable((observer) => { \n        this.httpClient.post(this.historyURL,\n          {\n            'begin': this.createServerFriendlyDate(beginDate),\n            'end': this.createServerFriendlyDate(endDate)\n          })\n        .subscribe(data => {\n          let dataPoints: OutdoorWeatherData[] = data.map((element) => {\n            return this.createOutdoorWeatherDataFromServerResponse(element);\n          });\n          observer.next({'datapoints': dataPoints});\n          observer.complete();\n        },\n        (error) => {\n          console.log(error);\n          observer.next();\n          observer.complete();\n        })\n      }\n    );\n    return returnObservable;\n  }\n\n  /**\n   * Helper function to convert date to string\n   * @param date \n   * @returns a date as a string which is understandable for the server\n   */\n  private createServerFriendlyDate(date: Date): string {\n    let dateString = date.toISOString().slice(0, 10);\n    let timeString = date.toTimeString().slice(0, 8);\n    return dateString + ' ' + timeString;\n  }\n\n  /**\n   * Helper function to convert the response from the server to an OutdoorWeatherData object\n   * \n   * @param response\n   * @returns OutdoorWeatherData object\n   */\n  private createOutdoorWeatherDataFromServerResponse(response: OutdoorWeatherResponse): OutdoorWeatherData {\n    const date = response.timestamp;\n    const year = date.substr(0, 4);\n    const month = date.substr(5, 2);\n    const day = date.substr(8, 2);\n    const time = date.substr(11);\n\n    const validDate = new Date(month + '/' + day + '/' + year + ' ' + time);\n\n    return {\n            temperature: response.temperature,\n            maxTemperature: -99, // Not implemented yet\n            minTemperature: -99, // Not implemented yet\n            humidity: response.humidity,\n            timestamp: validDate,\n            weather: response.weather,\n            apparentTemperature: response.apparentTemperature,\n            location: response.location_name,\n            postCode: response.location\n          }\n  }\n\n  /**\n   * Helper function to convert the response from the server to an IndoorRoomData object\n   * \n   * @param response\n   * @returns IndoorRoomData object\n   */\n  private createIndoorRoomDataFromServerResponse(response: IndoorRoomResponse): IndoorRoomData {\n    return {\n            roomID: response.id + '',\n            roomName: response.roomName,\n            airQuality: response.gasVal, \n            temperature: response.temperature, \n            humidity: response.humidity, \n            timestamp: new Date(response.timestamp), \n            calibrationValue: response.gasValCalibrationValue,\n          }\n  }\n\n  /**\n   * Helper function to convert the response from the server to an PollenData[] object\n   * \n   * @param response\n   * @returns PollenData[] object\n   */\n  private createPollenDataFromServerResponse(response: PollenResponse[]): PollenData[] {\n    let pollen: PollenData[] = [];\n    response.forEach(item => {\n      pollen.push({\n        id: item.id,\n        pollenName: item.pollenName,\n        today: item.loadRating,\n        tomorrow: ''\n      })\n    })\n    return pollen\n  }\n\n  /**\n   * Helper function to convert the response from the server to an WeatherForecastData object\n   * \n   * @param response\n   * @returns WeatherForecastData object\n   */\n  private createOutdoorForecastDataFromServerResponse(response: ForecastResponse): WeatherForecastData {\n    return {\n      trend: response.trend,\n      weatherDescription: response.weatherDescription, \n      weatherIcon: response.weatherIcon\n    }\n  }\n}\n\n/**\n * Model of the pollen api response\n */\ninterface PollenResponse {\n  id: number,\n  pollenName: string,\n  loadRating: string,\n}\n\n/**\n * Model of the outdoor weather api response\n */\ninterface OutdoorWeatherResponse {\n  id: number,\n  humidity: number,\n  temperature: number,\n  pressure: number,\n  location: string,\n  location_name: string,\n  timestamp: string,\n  weather: string,\n  apparentTemperature: number\n}\n\n/**\n * Model of the indoor room api response\n */\ninterface IndoorRoomResponse {\n  id: number,\n  humidity: number,\n  temperature: number,\n  pressure: number,\n  gasVal: number,\n  location: string,\n  timestamp: string,\n  gasValCalibrationValue: number,\n  roomName: string,\n}\n\n/**\n * Model of the forecast api response\n */\ninterface ForecastResponse {\n  id: number,\n  trend: string,\n  weatherIcon: string,\n  weatherDescription: string,\n  seaPressure: number,\n  timestampd: string\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PollenTagElementComponent.html":{"url":"components/PollenTagElementComponent.html","title":"component - PollenTagElementComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PollenTagElementComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/ui-elements/pollen-tag-element/pollen-tag-element.component.ts\n\n\n    \n        Description\n    \n    \n        Pollen tag element component\nTakes the value of the pollen and converts the value\ninto a readable information. \n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-pollen-tag-element\n            \n\n            \n                styleUrls\n                ./pollen-tag-element.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./pollen-tag-element.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                colorValue\n                            \n                            \n                                    Public\n                                    Optional\n                                emojiName\n                            \n                            \n                                    Public\n                                    Optional\n                                textValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    value\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/ui-elements/pollen-tag-element/pollen-tag-element.component.ts:51\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/ui-elements/pollen-tag-element/pollen-tag-element.component.ts:16\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/ui-elements/pollen-tag-element/pollen-tag-element.component.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            colorValue\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/ui-elements/pollen-tag-element/pollen-tag-element.component.ts:51\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            emojiName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/ui-elements/pollen-tag-element/pollen-tag-element.component.ts:49\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            textValue\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/ui-elements/pollen-tag-element/pollen-tag-element.component.ts:50\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n\n\n                \n                    \n                        setvalue(value: string)\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/ui-elements/pollen-tag-element/pollen-tag-element.component.ts:19\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\n\n/**\n * Pollen tag element component\n * \n * Takes the value of the pollen and converts the value\n * into a readable information. \n */\n@Component({\n  selector: 'app-pollen-tag-element',\n  templateUrl: './pollen-tag-element.component.html',\n  styleUrls: ['./pollen-tag-element.component.scss']\n})\nexport class PollenTagElementComponent implements OnInit {\n  @Input()\n  get value(): string{\n    return this._value\n  }\n  set value(value: string) {\n    this._value = value;\n    switch(value) {\n      case '1':\n      case '1-2':\n        this.textValue = \"gering\";\n        this.emojiName = \"almostDeath\";\n        this.colorValue = \"yellow\";\n        break;\n      case '2':\n      case '2-3':\n        this.textValue = \"mittel\";\n        this.emojiName = \"yield\";\n        this.colorValue = \"orange\";\n        break;\n      case '3': \n      case '3-4': \n      case '4': \n      case '5': \n        this.textValue = \"hoch\";\n        this.emojiName = \"death\";\n        this.colorValue = \"red\";\n        break;\n      default:\n        this.textValue = \"keine\"; \n        this.emojiName = \"angel\";\n        this.colorValue = \"green\";\n    }\n  }\n  private _value: string = '0';\n  public emojiName?: string;\n  public textValue?: string;\n  public colorValue?: string;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        \n    \n        \n    \n    {{textValue}}    \n\n    \n\n    \n                \n                    ./pollen-tag-element.component.scss\n                \n                .emoji {\n    height: 2.2em;\n    padding: calc(var(--padding) / 4);\n\n}\n\n.emoji-container {\n    background-color: var(--surface);\n    border-radius: 1.7em;\n    margin: calc(var(--padding) / 4);\n    height: 3.2em;\n    width: 3.2em;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n\n}\n\n.tag-container {\n    border-radius: 2em;\n    display: flex;\n    flex-wrap: nowrap;\n    align-items: center;\n}\n\n.textValue{\n    padding: 0 1em 0 0.5em;\n    text-align: center;\n}\n\n.yellow {\n    background-color: var(--status-yellow);\n    p {\n        color: black\n    }\n}\n.red {\n    background-color: var(--status-red);\n    p {\n        color: white\n    }\n}\n.green {\n    background-color: var(--status-green);\n    p {\n        color: white\n    }\n}\n.orange {\n    background-color: var(--status-orange);\n    p {\n        color: black\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    {{textValue}}    '\n    var COMPONENTS = [{'name': 'ApparentTemperatureTileViewComponent', 'selector': 'app-apparent-temperature-tile-view'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BackButtonElementComponent', 'selector': 'app-back-button-element'},{'name': 'CalibrationInfoDetailViewComponent', 'selector': 'app-calibration-info-detail-view'},{'name': 'CardElementComponent', 'selector': 'card-element'},{'name': 'CheckboxSwitcherElementComponent', 'selector': 'app-checkbox-switcher-element'},{'name': 'ConfigurationTilePopUpDialogView', 'selector': 'configuration-tile-popup-view'},{'name': 'ConfigurationTileViewComponent', 'selector': 'app-configuration-tile-view'},{'name': 'ConfigurationViewComponent', 'selector': 'app-configuration-view'},{'name': 'DashboardScreenComponent', 'selector': 'app-dashboard-screen'},{'name': 'DashboardViewComponent', 'selector': 'app-dashboard-view'},{'name': 'DetailScreenComponent', 'selector': 'app-detail-screen'},{'name': 'ForecastDetailViewComponent', 'selector': 'app-forecast-detail-view'},{'name': 'ForecastTileViewComponent', 'selector': 'app-forecast-tile-view'},{'name': 'HistoryDetailViewComponent', 'selector': 'app-history-detail-view'},{'name': 'HistoryTileViewComponent', 'selector': 'app-history-tile-view'},{'name': 'HumidityTileViewComponent', 'selector': 'app-humidity-tile-view'},{'name': 'IndoorDetailViewComponent', 'selector': 'app-indoor-detail-view'},{'name': 'IndoorTileViewComponent', 'selector': 'app-indoor-tile-view'},{'name': 'LoginViewComponent', 'selector': 'app-login-view'},{'name': 'MenuBarElementComponent', 'selector': 'app-menu-bar-element'},{'name': 'MenuButtonElementComponent', 'selector': 'app-menu-button-element'},{'name': 'MenuElementComponent', 'selector': 'app-menu-element'},{'name': 'NavBarElementComponent', 'selector': 'app-nav-bar-element'},{'name': 'OnboardingScreenComponent', 'selector': 'app-onboarding-screen'},{'name': 'OpenAPELoginTileViewComponent', 'selector': 'app-open-apelogin-tile-view'},{'name': 'OutdoorWeatherDetailViewComponent', 'selector': 'app-outdoor-weather-detail-view'},{'name': 'OutdoorWeatherViewComponent', 'selector': 'app-outdoor-weather-view'},{'name': 'PersonalizationSettingsViewComponent', 'selector': 'app-personalization-settings-view'},{'name': 'PersonalizationViewComponent', 'selector': 'app-personalization-view'},{'name': 'PollenflugDetailViewComponent', 'selector': 'app-pollenflug-detail-view'},{'name': 'PollenflugSmallTileComponent', 'selector': 'app-pollenflug-small-tile'},{'name': 'PollenflugTileViewComponent', 'selector': 'app-pollenflug-tile-view'},{'name': 'PollenListElementComponent', 'selector': 'app-pollen-list-element'},{'name': 'PollenTagElementComponent', 'selector': 'app-pollen-tag-element'},{'name': 'ProgressChartElementComponent', 'selector': 'app-progress-chart-element'},{'name': 'RegistrationViewComponent', 'selector': 'app-registration-view'},{'name': 'SettingsScreenComponent', 'selector': 'app-settings-screen'},{'name': 'SimpleTileViewComponent', 'selector': 'app-simple-tile-view'},{'name': 'SliderElementComponent', 'selector': 'app-slider-element'},{'name': 'TtsPlayerElementComponent', 'selector': 'app-tts-player-element'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PollenTagElementComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PollenType.html":{"url":"interfaces/PollenType.html","title":"interface - PollenType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PollenType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/user-context.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        id\n                                \n                                \n                                        pollenName\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pollenName\n                                    \n                                \n                                \n                                    \n                                        pollenName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface UserContext {\n    theme: Themes,\n    fontSize: number, // in %\n    pollen: string[], // Um die Mockdaten einfacher zu erstellen in Array konvertiert. Kann auch wieder in Map gewandelt werden.\n    selfVoicingEnabled: boolean,\n    doVentilationReminder: boolean, // TODO: What if multiple users have concurring settings here?\n    reduceMotion: boolean, // New element: For people with vestibular disorders is animation triggerd by scrolling not good.\n};\n\n/**\n * Model of the User Identifikation. It contains the token \n * and user id. These are needed for the identification of the user \n * by the backend. \n */\nexport interface UserIdentifikation {\n    token: string,\n    id: number,\n}\n\nexport enum Themes {\n    Light,\n    Dark,\n    Automatic,\n    HighContrast\n};\n\nexport interface PollenType {\n    id: number,\n    pollenName: string\n};\n\nexport enum Language {\n    'de-DE',\n    'en-EN'\n};\n\n/** Empty user context */\nexport const INITIAL_USER_CONTEXT: UserContext = {\n    theme: Themes.Automatic,\n    fontSize: 62.5,\n    pollen: [],\n    selfVoicingEnabled: false,\n    doVentilationReminder: false,\n    reduceMotion: false,\n};\n\n/** Empty user identifikation */\nexport const INITIAL_USER_IDENTIFIKATION: UserIdentifikation = {\n    token: '',\n    id: -99,\n};\n\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PollenflugDetailViewComponent.html":{"url":"components/PollenflugDetailViewComponent.html","title":"component - PollenflugDetailViewComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PollenflugDetailViewComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/views/pollenflug-detail-view/pollenflug-detail-view.component.ts\n\n\n    \n        Description\n    \n    \n        Pollenflug detail view component \nThis component shows the pollen data. It displays the \ninformation by using the pollen tile view and pollen small tile view.\nThe pollen small tile view is dynamically choosen if the user has \nan allergy to the particular pollen.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-pollenflug-detail-view\n            \n\n            \n                styleUrls\n                ./pollenflug-detail-view.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./pollenflug-detail-view.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                pollenTiles\n                            \n                            \n                                tileType\n                            \n                            \n                                ttsTextGeneratorFunction\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(weatherDataService: WeatherDataService, textService: TextService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/views/pollenflug-detail-view/pollenflug-detail-view.component.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        weatherDataService\n                                                  \n                                                        \n                                                                        WeatherDataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        textService\n                                                  \n                                                        \n                                                                        TextService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/views/pollenflug-detail-view/pollenflug-detail-view.component.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            pollenTiles\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Tile[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/views/pollenflug-detail-view/pollenflug-detail-view.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tileType\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : TileType\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/views/pollenflug-detail-view/pollenflug-detail-view.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ttsTextGeneratorFunction\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/views/pollenflug-detail-view/pollenflug-detail-view.component.ts:27\n                            \n                        \n\n                \n                    \n                        this function computes the to be read aloud text for the tts feature. \nThis function is passed to the tts player element\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { WeatherData } from 'src/app/model/weather';\nimport { TextService } from 'src/app/services/text.service';\nimport { WeatherDataService } from 'src/app/services/weather-data.service';\nimport { Tile, TileType } from '../../../model/weather';\n\n/**\n * Pollenflug detail view component \n * \n * This component shows the pollen data. It displays the \n * information by using the pollen tile view and pollen small tile view.\n * The pollen small tile view is dynamically choosen if the user has \n * an allergy to the particular pollen.\n */\n@Component({\n  selector: 'app-pollenflug-detail-view',\n  templateUrl: './pollenflug-detail-view.component.html',\n  styleUrls: ['./pollenflug-detail-view.component.scss']\n})\nexport class PollenflugDetailViewComponent implements OnInit {\n  pollenTiles?: Tile[]\n  tileType = TileType;\n  /**\n   * this function computes the to be read aloud text for the tts feature. \n   * This function is passed to the tts player element\n   */\n  ttsTextGeneratorFunction = () => this.textService.createTextFromTilesArray(this.pollenTiles)\n\n  constructor(private weatherDataService: WeatherDataService,\n    private textService: TextService) { }\n\n  ngOnInit(): void {\n    this.loadPollenTiles();\n  }\n\n  /**\n   * Subscribes to the pollen tiles array. \n   */\n  private loadPollenTiles(): void {\n    this.weatherDataService.getPollenTilesSubject().subscribe(data => this.pollenTiles = data);\n  }\n\n}\n\n    \n\n    \n        \n\n\n    \n        \n        \n        \n        \n        \n            {{tileType[item.type]}} is not implemented yet\n        \n    \n\n\n \nWas ist Pollenflug?\n    Mehr als 15% der Bevölkerung in Deutschland sind Pollenallergiker und die Tendenz ist weiter zunehmend. Symptome wie Fließschnupfen, Bindehautentzündung bis hin zu Asthma sind damit verbunden. Hinzu kommen oftmals Kreuzreaktionen mit Nahrungsmitteln. Auch wenn die Intensität der allergischen Reaktionen individuell sehr unterschiedlich ist, so gibt es nach Aussagen von Allergologen dennoch einen engen Zusammenhang zwischen der Stärke der Symptomatik und der Pollenkonzentration in der Atemluft. Damit lässt sich aus dem Pollenflug direkt die Belastung des Pollenallergikers ableiten.\n    Da der Pollenflug aufgrund regional unterschiedlicher Pflanzenentwicklung sowie aufgrund des Wetters in Raum und Zeit stark schwanken kann, ist es für eine gezielte und vorausschauende Prophylaxe sinnvoll, täglich aktualisierte Informationen über die erwartete Pollenbelastung zur Verfügung zu stellen.\n\n\n\n\n    \n\n    \n                \n                    ./pollenflug-detail-view.component.scss\n                \n                .flex-container {\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: space-between;\n    padding: 0;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                        {{tileType[item.type]}} is not implemented yet             Was ist Pollenflug?    Mehr als 15% der Bevölkerung in Deutschland sind Pollenallergiker und die Tendenz ist weiter zunehmend. Symptome wie Fließschnupfen, Bindehautentzündung bis hin zu Asthma sind damit verbunden. Hinzu kommen oftmals Kreuzreaktionen mit Nahrungsmitteln. Auch wenn die Intensität der allergischen Reaktionen individuell sehr unterschiedlich ist, so gibt es nach Aussagen von Allergologen dennoch einen engen Zusammenhang zwischen der Stärke der Symptomatik und der Pollenkonzentration in der Atemluft. Damit lässt sich aus dem Pollenflug direkt die Belastung des Pollenallergikers ableiten.    Da der Pollenflug aufgrund regional unterschiedlicher Pflanzenentwicklung sowie aufgrund des Wetters in Raum und Zeit stark schwanken kann, ist es für eine gezielte und vorausschauende Prophylaxe sinnvoll, täglich aktualisierte Informationen über die erwartete Pollenbelastung zur Verfügung zu stellen.'\n    var COMPONENTS = [{'name': 'ApparentTemperatureTileViewComponent', 'selector': 'app-apparent-temperature-tile-view'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BackButtonElementComponent', 'selector': 'app-back-button-element'},{'name': 'CalibrationInfoDetailViewComponent', 'selector': 'app-calibration-info-detail-view'},{'name': 'CardElementComponent', 'selector': 'card-element'},{'name': 'CheckboxSwitcherElementComponent', 'selector': 'app-checkbox-switcher-element'},{'name': 'ConfigurationTilePopUpDialogView', 'selector': 'configuration-tile-popup-view'},{'name': 'ConfigurationTileViewComponent', 'selector': 'app-configuration-tile-view'},{'name': 'ConfigurationViewComponent', 'selector': 'app-configuration-view'},{'name': 'DashboardScreenComponent', 'selector': 'app-dashboard-screen'},{'name': 'DashboardViewComponent', 'selector': 'app-dashboard-view'},{'name': 'DetailScreenComponent', 'selector': 'app-detail-screen'},{'name': 'ForecastDetailViewComponent', 'selector': 'app-forecast-detail-view'},{'name': 'ForecastTileViewComponent', 'selector': 'app-forecast-tile-view'},{'name': 'HistoryDetailViewComponent', 'selector': 'app-history-detail-view'},{'name': 'HistoryTileViewComponent', 'selector': 'app-history-tile-view'},{'name': 'HumidityTileViewComponent', 'selector': 'app-humidity-tile-view'},{'name': 'IndoorDetailViewComponent', 'selector': 'app-indoor-detail-view'},{'name': 'IndoorTileViewComponent', 'selector': 'app-indoor-tile-view'},{'name': 'LoginViewComponent', 'selector': 'app-login-view'},{'name': 'MenuBarElementComponent', 'selector': 'app-menu-bar-element'},{'name': 'MenuButtonElementComponent', 'selector': 'app-menu-button-element'},{'name': 'MenuElementComponent', 'selector': 'app-menu-element'},{'name': 'NavBarElementComponent', 'selector': 'app-nav-bar-element'},{'name': 'OnboardingScreenComponent', 'selector': 'app-onboarding-screen'},{'name': 'OpenAPELoginTileViewComponent', 'selector': 'app-open-apelogin-tile-view'},{'name': 'OutdoorWeatherDetailViewComponent', 'selector': 'app-outdoor-weather-detail-view'},{'name': 'OutdoorWeatherViewComponent', 'selector': 'app-outdoor-weather-view'},{'name': 'PersonalizationSettingsViewComponent', 'selector': 'app-personalization-settings-view'},{'name': 'PersonalizationViewComponent', 'selector': 'app-personalization-view'},{'name': 'PollenflugDetailViewComponent', 'selector': 'app-pollenflug-detail-view'},{'name': 'PollenflugSmallTileComponent', 'selector': 'app-pollenflug-small-tile'},{'name': 'PollenflugTileViewComponent', 'selector': 'app-pollenflug-tile-view'},{'name': 'PollenListElementComponent', 'selector': 'app-pollen-list-element'},{'name': 'PollenTagElementComponent', 'selector': 'app-pollen-tag-element'},{'name': 'ProgressChartElementComponent', 'selector': 'app-progress-chart-element'},{'name': 'RegistrationViewComponent', 'selector': 'app-registration-view'},{'name': 'SettingsScreenComponent', 'selector': 'app-settings-screen'},{'name': 'SimpleTileViewComponent', 'selector': 'app-simple-tile-view'},{'name': 'SliderElementComponent', 'selector': 'app-slider-element'},{'name': 'TtsPlayerElementComponent', 'selector': 'app-tts-player-element'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PollenflugDetailViewComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PollenflugSmallTileComponent.html":{"url":"components/PollenflugSmallTileComponent.html","title":"component - PollenflugSmallTileComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PollenflugSmallTileComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/views/pollenflug-small-tile/pollenflug-small-tile.component.ts\n\n\n    \n        Description\n    \n    \n        Pollenflug small tile component \nDisplays one Pollentype. This component is used \nto highlight a particular pollen if a user has chosen to be allergic to it.\nThis component has no data connection and the data \nis passed by the parent component. \n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-pollenflug-small-tile\n            \n\n            \n                styleUrls\n                ./pollenflug-small-tile.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./pollenflug-small-tile.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                _pollen\n                            \n                            \n                                cardSizeType\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                hideSubtitle\n                            \n                            \n                                pressable\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    data\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/views/pollenflug-small-tile/pollenflug-small-tile.component.ts:26\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        data\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/views/pollenflug-small-tile/pollenflug-small-tile.component.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        hideSubtitle\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/views/pollenflug-small-tile/pollenflug-small-tile.component.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        pressable\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/views/pollenflug-small-tile/pollenflug-small-tile.component.ts:19\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/views/pollenflug-small-tile/pollenflug-small-tile.component.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            _pollen\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         PollenData\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/views/pollenflug-small-tile/pollenflug-small-tile.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cardSizeType\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : CardSize\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/views/pollenflug-small-tile/pollenflug-small-tile.component.ts:26\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        data\n                    \n                \n\n\n                \n                    \n                        setdata(data)\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/views/pollenflug-small-tile/pollenflug-small-tile.component.ts:22\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            data\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { PollenData, WeatherData } from 'src/app/model/weather';\nimport { CardSize } from '../../ui-elements/card-element/card-element.component';\n\n/**\n * Pollenflug small tile component \n * \n * Displays one Pollentype. This component is used \n * to highlight a particular pollen if a user has chosen to be allergic to it.\n * This component has no data connection and the data \n * is passed by the parent component. \n */\n@Component({\n  selector: 'app-pollenflug-small-tile',\n  templateUrl: './pollenflug-small-tile.component.html',\n  styleUrls: ['./pollenflug-small-tile.component.scss']\n})\nexport class PollenflugSmallTileComponent implements OnInit {\n  @Input() pressable: boolean = false;\n  @Input() hideSubtitle: boolean = false;\n  @Input()\n  set data(data: WeatherData) {\n    this._pollen = data as PollenData;\n  }\n  _pollen?: PollenData;\n  cardSizeType = CardSize;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        \n    \n        \n                \n        \n    \n\n    \n\n    \n                \n                    ./pollenflug-small-tile.component.scss\n                \n                .emoji {\n    height: 2.2em;\n}\n\n.textValue{\n    padding: 0 1em 0 1em;\n    width: 3em;\n    text-align: center;\n    border-radius: 1.5em;\n}\n\n.blue {\n    background-color: var(--accent);\n}\n.red {\n    background-color: red;\n\n}\n.green {\n    background-color: green;\n}\n.orange {\n    background-color: orange;\n    color: black;\n}\n\n.flex-container {\n    display: flex;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        '\n    var COMPONENTS = [{'name': 'ApparentTemperatureTileViewComponent', 'selector': 'app-apparent-temperature-tile-view'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BackButtonElementComponent', 'selector': 'app-back-button-element'},{'name': 'CalibrationInfoDetailViewComponent', 'selector': 'app-calibration-info-detail-view'},{'name': 'CardElementComponent', 'selector': 'card-element'},{'name': 'CheckboxSwitcherElementComponent', 'selector': 'app-checkbox-switcher-element'},{'name': 'ConfigurationTilePopUpDialogView', 'selector': 'configuration-tile-popup-view'},{'name': 'ConfigurationTileViewComponent', 'selector': 'app-configuration-tile-view'},{'name': 'ConfigurationViewComponent', 'selector': 'app-configuration-view'},{'name': 'DashboardScreenComponent', 'selector': 'app-dashboard-screen'},{'name': 'DashboardViewComponent', 'selector': 'app-dashboard-view'},{'name': 'DetailScreenComponent', 'selector': 'app-detail-screen'},{'name': 'ForecastDetailViewComponent', 'selector': 'app-forecast-detail-view'},{'name': 'ForecastTileViewComponent', 'selector': 'app-forecast-tile-view'},{'name': 'HistoryDetailViewComponent', 'selector': 'app-history-detail-view'},{'name': 'HistoryTileViewComponent', 'selector': 'app-history-tile-view'},{'name': 'HumidityTileViewComponent', 'selector': 'app-humidity-tile-view'},{'name': 'IndoorDetailViewComponent', 'selector': 'app-indoor-detail-view'},{'name': 'IndoorTileViewComponent', 'selector': 'app-indoor-tile-view'},{'name': 'LoginViewComponent', 'selector': 'app-login-view'},{'name': 'MenuBarElementComponent', 'selector': 'app-menu-bar-element'},{'name': 'MenuButtonElementComponent', 'selector': 'app-menu-button-element'},{'name': 'MenuElementComponent', 'selector': 'app-menu-element'},{'name': 'NavBarElementComponent', 'selector': 'app-nav-bar-element'},{'name': 'OnboardingScreenComponent', 'selector': 'app-onboarding-screen'},{'name': 'OpenAPELoginTileViewComponent', 'selector': 'app-open-apelogin-tile-view'},{'name': 'OutdoorWeatherDetailViewComponent', 'selector': 'app-outdoor-weather-detail-view'},{'name': 'OutdoorWeatherViewComponent', 'selector': 'app-outdoor-weather-view'},{'name': 'PersonalizationSettingsViewComponent', 'selector': 'app-personalization-settings-view'},{'name': 'PersonalizationViewComponent', 'selector': 'app-personalization-view'},{'name': 'PollenflugDetailViewComponent', 'selector': 'app-pollenflug-detail-view'},{'name': 'PollenflugSmallTileComponent', 'selector': 'app-pollenflug-small-tile'},{'name': 'PollenflugTileViewComponent', 'selector': 'app-pollenflug-tile-view'},{'name': 'PollenListElementComponent', 'selector': 'app-pollen-list-element'},{'name': 'PollenTagElementComponent', 'selector': 'app-pollen-tag-element'},{'name': 'ProgressChartElementComponent', 'selector': 'app-progress-chart-element'},{'name': 'RegistrationViewComponent', 'selector': 'app-registration-view'},{'name': 'SettingsScreenComponent', 'selector': 'app-settings-screen'},{'name': 'SimpleTileViewComponent', 'selector': 'app-simple-tile-view'},{'name': 'SliderElementComponent', 'selector': 'app-slider-element'},{'name': 'TtsPlayerElementComponent', 'selector': 'app-tts-player-element'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PollenflugSmallTileComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PollenflugTileViewComponent.html":{"url":"components/PollenflugTileViewComponent.html","title":"component - PollenflugTileViewComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PollenflugTileViewComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/views/pollenflug-tile-view/pollenflug-tile-view.component.ts\n\n\n    \n        Description\n    \n    \n        Pollenflug tile view component \nDisplays a list of the given pollen and its value. \nThis component is used for all pollen the user is \nnot allergic to it.\nThis component has no data connection. The displayed\ndata is passed by the parent component. \n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-pollenflug-tile-view\n            \n\n            \n                styleUrls\n                ./pollenflug-tile-view.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./pollenflug-tile-view.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                _pollen\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                hideSubtitle\n                            \n                            \n                                pressable\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    data\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/views/pollenflug-tile-view/pollenflug-tile-view.component.ts:25\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        data\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/views/pollenflug-tile-view/pollenflug-tile-view.component.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        hideSubtitle\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/views/pollenflug-tile-view/pollenflug-tile-view.component.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        pressable\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/views/pollenflug-tile-view/pollenflug-tile-view.component.ts:19\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/views/pollenflug-tile-view/pollenflug-tile-view.component.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            _pollen\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         PollenData[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/views/pollenflug-tile-view/pollenflug-tile-view.component.ts:25\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        data\n                    \n                \n\n\n                \n                    \n                        setdata(data)\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/views/pollenflug-tile-view/pollenflug-tile-view.component.ts:22\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            data\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { PollenData, WeatherData } from 'src/app/model/weather';\n\n/**\n * Pollenflug tile view component \n * \n * Displays a list of the given pollen and its value. \n * This component is used for all pollen the user is \n * not allergic to it.\n * This component has no data connection. The displayed\n * data is passed by the parent component. \n */\n@Component({\n  selector: 'app-pollenflug-tile-view',\n  templateUrl: './pollenflug-tile-view.component.html',\n  styleUrls: ['./pollenflug-tile-view.component.scss']\n})\nexport class PollenflugTileViewComponent implements OnInit {\n  @Input() pressable: boolean = false;\n  @Input() hideSubtitle: boolean = false;\n  @Input()\n  set data(data: WeatherData) {\n    this._pollen = data as PollenData[];\n  }\n  _pollen?: PollenData[];\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n}\n\n    \n\n    \n        \n    \n        \n    \n\n\n\n    \n\n    \n                \n                    ./pollenflug-tile-view.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                '\n    var COMPONENTS = [{'name': 'ApparentTemperatureTileViewComponent', 'selector': 'app-apparent-temperature-tile-view'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BackButtonElementComponent', 'selector': 'app-back-button-element'},{'name': 'CalibrationInfoDetailViewComponent', 'selector': 'app-calibration-info-detail-view'},{'name': 'CardElementComponent', 'selector': 'card-element'},{'name': 'CheckboxSwitcherElementComponent', 'selector': 'app-checkbox-switcher-element'},{'name': 'ConfigurationTilePopUpDialogView', 'selector': 'configuration-tile-popup-view'},{'name': 'ConfigurationTileViewComponent', 'selector': 'app-configuration-tile-view'},{'name': 'ConfigurationViewComponent', 'selector': 'app-configuration-view'},{'name': 'DashboardScreenComponent', 'selector': 'app-dashboard-screen'},{'name': 'DashboardViewComponent', 'selector': 'app-dashboard-view'},{'name': 'DetailScreenComponent', 'selector': 'app-detail-screen'},{'name': 'ForecastDetailViewComponent', 'selector': 'app-forecast-detail-view'},{'name': 'ForecastTileViewComponent', 'selector': 'app-forecast-tile-view'},{'name': 'HistoryDetailViewComponent', 'selector': 'app-history-detail-view'},{'name': 'HistoryTileViewComponent', 'selector': 'app-history-tile-view'},{'name': 'HumidityTileViewComponent', 'selector': 'app-humidity-tile-view'},{'name': 'IndoorDetailViewComponent', 'selector': 'app-indoor-detail-view'},{'name': 'IndoorTileViewComponent', 'selector': 'app-indoor-tile-view'},{'name': 'LoginViewComponent', 'selector': 'app-login-view'},{'name': 'MenuBarElementComponent', 'selector': 'app-menu-bar-element'},{'name': 'MenuButtonElementComponent', 'selector': 'app-menu-button-element'},{'name': 'MenuElementComponent', 'selector': 'app-menu-element'},{'name': 'NavBarElementComponent', 'selector': 'app-nav-bar-element'},{'name': 'OnboardingScreenComponent', 'selector': 'app-onboarding-screen'},{'name': 'OpenAPELoginTileViewComponent', 'selector': 'app-open-apelogin-tile-view'},{'name': 'OutdoorWeatherDetailViewComponent', 'selector': 'app-outdoor-weather-detail-view'},{'name': 'OutdoorWeatherViewComponent', 'selector': 'app-outdoor-weather-view'},{'name': 'PersonalizationSettingsViewComponent', 'selector': 'app-personalization-settings-view'},{'name': 'PersonalizationViewComponent', 'selector': 'app-personalization-view'},{'name': 'PollenflugDetailViewComponent', 'selector': 'app-pollenflug-detail-view'},{'name': 'PollenflugSmallTileComponent', 'selector': 'app-pollenflug-small-tile'},{'name': 'PollenflugTileViewComponent', 'selector': 'app-pollenflug-tile-view'},{'name': 'PollenListElementComponent', 'selector': 'app-pollen-list-element'},{'name': 'PollenTagElementComponent', 'selector': 'app-pollen-tag-element'},{'name': 'ProgressChartElementComponent', 'selector': 'app-progress-chart-element'},{'name': 'RegistrationViewComponent', 'selector': 'app-registration-view'},{'name': 'SettingsScreenComponent', 'selector': 'app-settings-screen'},{'name': 'SimpleTileViewComponent', 'selector': 'app-simple-tile-view'},{'name': 'SliderElementComponent', 'selector': 'app-slider-element'},{'name': 'TtsPlayerElementComponent', 'selector': 'app-tts-player-element'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PollenflugTileViewComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProgressChartElementComponent.html":{"url":"components/ProgressChartElementComponent.html","title":"component - ProgressChartElementComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ProgressChartElementComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/ui-elements/progress-chart-element/progress-chart-element.component.ts\n\n\n    \n        Description\n    \n    \n        Progress chart element component\nDisplays the current value relative to the max and optimal value.\nIndicates if the value is good or bad. \n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-progress-chart-element\n            \n\n            \n                styleUrls\n                ./progress-chart-element.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./progress-chart-element.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                maxValue\n                            \n                            \n                                optimalValue\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/ui-elements/progress-chart-element/progress-chart-element.component.ts:17\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        maxValue\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 100\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/ui-elements/progress-chart-element/progress-chart-element.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        optimalValue\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 25\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/ui-elements/progress-chart-element/progress-chart-element.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 50\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/ui-elements/progress-chart-element/progress-chart-element.component.ts:15\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/ui-elements/progress-chart-element/progress-chart-element.component.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\n\n/**\n * Progress chart element component\n * \n * Displays the current value relative to the max and optimal value.\n * Indicates if the value is good or bad. \n */\n@Component({\n  selector: 'app-progress-chart-element',\n  templateUrl: './progress-chart-element.component.html',\n  styleUrls: ['./progress-chart-element.component.scss']\n})\nexport class ProgressChartElementComponent implements OnInit {\n  @Input() value: number = 50;\n  @Input() maxValue: number = 100;\n  @Input() optimalValue: number = 25;\n\n  constructor() { }\n\n  ngOnInit(): void { }\n}\n\n    \n\n    \n        \n\n     \n    {{maxValue}}\n\n    \n\n    \n                \n                    ./progress-chart-element.component.scss\n                \n                .legend {\n    display: flex;\n    justify-content: space-between;\n    p {\n        color: var(--secondary);\n        padding: 0 5px 0 5px;\n    }\n}\n\n\n// disable user interaction!\ninput {\n    pointer-events: none;\n}\n\n@mixin gradient {\n    background: rgb(33,153,74);\n    background: -moz-linear-gradient(90deg, rgba(33,153,74,1) 0%, rgba(255,230,0,0.9883801424050633) 62%, rgba(255,0,0,1) 100%);\n    background: -webkit-linear-gradient(90deg, rgba(33,153,74,1) 0%, rgba(255,230,0,0.9883801424050633) 62%, rgba(255,0,0,1) 100%);\n    background: linear-gradient(90deg, rgba(33,153,74,1) 0%, rgba(255,230,0,0.9883801424050633) 62%, rgba(255,0,0,1) 100%);\n    filter: progid:DXImageTransform.Microsoft.gradient(startColorstr=\"#21994a\",endColorstr=\"#ff0000\",GradientType=1);\n}\n\n@mixin thumb {\n    border: 8px solid var(--text);\n    height: 32px;\n    width: 32px;\n    border-radius: 16px;\n    background: transparent;\n    margin-top: -8px;\n}\n\n@mixin height {\n    height: 16px;\n}\n\n\n\ninput[type=range] {\n    -webkit-appearance: none;\n    margin: 10px 0;\n    width: 100%;\n    background-color: transparent;\n\n  }\n  input[type=range]:focus {\n    outline: none;\n  }\n  input[type=range]::-webkit-slider-runnable-track {\n    width: 100%;\n    @include height;\n    cursor: pointer;\n    box-shadow: 0px 0px 0px #000000, 0px 0px 0px #0d0d0d;\n    @include gradient();\n    border-radius: 25px;\n    border: 0px solid #000101;\n  }\n  input[type=range]::-webkit-slider-thumb {\n    @include thumb;\n    box-shadow: 0px 0px 0px #000000, 0px 0px 0px #0d0d0d;\n    cursor: pointer;\n    -webkit-appearance: none;\n\n  }\n  input[type=range]:focus::-webkit-slider-runnable-track {\n    @include gradient();\n  }\n  input[type=range]::-moz-range-track {\n    width: 100%;\n    @include height;\n    cursor: pointer;\n    animate: 0.2s;\n    box-shadow: 0px 0px 0px #000000, 0px 0px 0px #0d0d0d;\n    @include gradient();\n    border-radius: 25px;\n    border: 0px solid #000101;\n  }\n  input[type=range]::-moz-range-thumb {\n    box-shadow: 0px 0px 0px #000000, 0px 0px 0px #0d0d0d;\n    @include thumb;\n    height: 16px;\n    width: 16px;\n    cursor: pointer;\n  }\n  input[type=range]::-ms-track {\n    width: 100%;\n    @include height;\n    cursor: pointer;\n    animate: 0.2s;\n    background: transparent;\n    border-color: transparent;\n    border-width: 39px 0;\n    color: transparent;\n  }\n  input[type=range]::-ms-fill-lower {\n    @include gradient();\n    border: 0px solid #000101;\n    border-radius: 50px;\n    box-shadow: 0px 0px 0px #000000, 0px 0px 0px #0d0d0d;\n  }\n  input[type=range]::-ms-fill-upper {\n    @include gradient();\n    border: 0px solid #000101;\n    border-radius: 50px;\n    box-shadow: 0px 0px 0px #000000, 0px 0px 0px #0d0d0d;\n  }\n  input[type=range]::-ms-thumb {\n    box-shadow: 0px 0px 0px #000000, 0px 0px 0px #0d0d0d;\n    @include thumb;\n    height: 16px;\n    width: 16px;\n    cursor: pointer;\n  }\n  input[type=range]:focus::-ms-fill-lower {\n    @include gradient();\n\n  }\n  input[type=range]:focus::-ms-fill-upper {\n    @include gradient();\n\n  }\n  \n  body {\n    padding: 30px;\n  }\n  \n  \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '         {{maxValue}}'\n    var COMPONENTS = [{'name': 'ApparentTemperatureTileViewComponent', 'selector': 'app-apparent-temperature-tile-view'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BackButtonElementComponent', 'selector': 'app-back-button-element'},{'name': 'CalibrationInfoDetailViewComponent', 'selector': 'app-calibration-info-detail-view'},{'name': 'CardElementComponent', 'selector': 'card-element'},{'name': 'CheckboxSwitcherElementComponent', 'selector': 'app-checkbox-switcher-element'},{'name': 'ConfigurationTilePopUpDialogView', 'selector': 'configuration-tile-popup-view'},{'name': 'ConfigurationTileViewComponent', 'selector': 'app-configuration-tile-view'},{'name': 'ConfigurationViewComponent', 'selector': 'app-configuration-view'},{'name': 'DashboardScreenComponent', 'selector': 'app-dashboard-screen'},{'name': 'DashboardViewComponent', 'selector': 'app-dashboard-view'},{'name': 'DetailScreenComponent', 'selector': 'app-detail-screen'},{'name': 'ForecastDetailViewComponent', 'selector': 'app-forecast-detail-view'},{'name': 'ForecastTileViewComponent', 'selector': 'app-forecast-tile-view'},{'name': 'HistoryDetailViewComponent', 'selector': 'app-history-detail-view'},{'name': 'HistoryTileViewComponent', 'selector': 'app-history-tile-view'},{'name': 'HumidityTileViewComponent', 'selector': 'app-humidity-tile-view'},{'name': 'IndoorDetailViewComponent', 'selector': 'app-indoor-detail-view'},{'name': 'IndoorTileViewComponent', 'selector': 'app-indoor-tile-view'},{'name': 'LoginViewComponent', 'selector': 'app-login-view'},{'name': 'MenuBarElementComponent', 'selector': 'app-menu-bar-element'},{'name': 'MenuButtonElementComponent', 'selector': 'app-menu-button-element'},{'name': 'MenuElementComponent', 'selector': 'app-menu-element'},{'name': 'NavBarElementComponent', 'selector': 'app-nav-bar-element'},{'name': 'OnboardingScreenComponent', 'selector': 'app-onboarding-screen'},{'name': 'OpenAPELoginTileViewComponent', 'selector': 'app-open-apelogin-tile-view'},{'name': 'OutdoorWeatherDetailViewComponent', 'selector': 'app-outdoor-weather-detail-view'},{'name': 'OutdoorWeatherViewComponent', 'selector': 'app-outdoor-weather-view'},{'name': 'PersonalizationSettingsViewComponent', 'selector': 'app-personalization-settings-view'},{'name': 'PersonalizationViewComponent', 'selector': 'app-personalization-view'},{'name': 'PollenflugDetailViewComponent', 'selector': 'app-pollenflug-detail-view'},{'name': 'PollenflugSmallTileComponent', 'selector': 'app-pollenflug-small-tile'},{'name': 'PollenflugTileViewComponent', 'selector': 'app-pollenflug-tile-view'},{'name': 'PollenListElementComponent', 'selector': 'app-pollen-list-element'},{'name': 'PollenTagElementComponent', 'selector': 'app-pollen-tag-element'},{'name': 'ProgressChartElementComponent', 'selector': 'app-progress-chart-element'},{'name': 'RegistrationViewComponent', 'selector': 'app-registration-view'},{'name': 'SettingsScreenComponent', 'selector': 'app-settings-screen'},{'name': 'SimpleTileViewComponent', 'selector': 'app-simple-tile-view'},{'name': 'SliderElementComponent', 'selector': 'app-slider-element'},{'name': 'TtsPlayerElementComponent', 'selector': 'app-tts-player-element'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ProgressChartElementComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RegistrationViewComponent.html":{"url":"components/RegistrationViewComponent.html","title":"component - RegistrationViewComponent","body":"\n                   \n\n\n\n\n\n  Components\n  RegistrationViewComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/views/registration-view/registration-view.component.ts\n\n\n    \n        Description\n    \n    \n        Registration view component\nDisplay three form controls to enter the username and password\nto register an user. For this it uses the user context service.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-registration-view\n            \n\n            \n                styleUrls\n                ./registration-view.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./registration-view.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                error\n                            \n                            \n                                registrationForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, userContextService: UserContextService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/views/registration-view/registration-view.component.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userContextService\n                                                  \n                                                        \n                                                                        UserContextService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/views/registration-view/registration-view.component.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSubmit\n                        \n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/views/registration-view/registration-view.component.ts:35\n                \n            \n\n\n            \n                \n                    Triggers the registration process. If the process fails an \nerror message will be displayed.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            error\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/views/registration-view/registration-view.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            registrationForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.formBuilder.group({\n    password: new FormControl('', Validators.minLength(2)),\n    repeatedPassword: new FormControl('', Validators.minLength(2)),\n    username: new FormControl('', Validators.minLength(2)),\n  })\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/views/registration-view/registration-view.component.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, Validators } from '@angular/forms'; \nimport { Router } from '@angular/router';\nimport { UserContextService } from 'src/app/services/user-context.service';\n\n/**\n * Registration view component\n * \n * Display three form controls to enter the username and password\n * to register an user. For this it uses the user context service.\n */\n@Component({\n  selector: 'app-registration-view',\n  templateUrl: './registration-view.component.html',\n  styleUrls: ['./registration-view.component.scss']\n})\nexport class RegistrationViewComponent implements OnInit {\n  registrationForm = this.formBuilder.group({\n    password: new FormControl('', Validators.minLength(2)),\n    repeatedPassword: new FormControl('', Validators.minLength(2)),\n    username: new FormControl('', Validators.minLength(2)),\n  });\n  error?: string;\n\n  constructor(private formBuilder: FormBuilder,\n    private userContextService: UserContextService,\n    private router: Router) { }\n\n  ngOnInit(): void { }\n\n  /**\n   * Triggers the registration process. If the process fails an \n   * error message will be displayed.\n   */\n  onSubmit() {\n    const username = this.registrationForm.get(\"username\")?.value;\n    const password = this.registrationForm.get(\"password\")?.value;\n    const repeatedpassword = this.registrationForm.get(\"repeatedPassword\")?.value;\n\n    if(password !== repeatedpassword) {\n      this.error = \"Das Passwort stimmt nicht überein\"\n      return\n    }\n    \n    this.error = undefined;\n    this.userContextService.register(username, password).then((data) => {\n      if(data.success) {\n        this.router.navigateByUrl('/onboarding/personalization');\n      } else {\n        this.error = data.error\n      }\n    });\n  }\n}\n\n    \n\n    \n        \n    \n    \n        \n            \n                \n                    Nutzername\n                \n                \n            \n\n            \n                \n                    Passwort\n                \n                \n            \n\n            \n                \n                    Passwort wiederholen\n                \n                \n            \n\n            {{error}}\n\n            \n        \n        \n    \n\n    \n\n    \n                \n                    ./registration-view.component.scss\n                \n                form {\n    width: 100%;\n}\n\n.container {\n    display: flex;\n    align-items: center;\n    flex-direction: column;\n    justify-items: stretch;\n    padding-top: var(--navbar-height);\n}\n\n.error-message {\n    color: var(--status-red);\n    padding-top: calc(var(--padding) / 2 );\n    text-align: center;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                Nutzername                                                                                            Passwort                                                                                            Passwort wiederholen                                                        {{error}}                                '\n    var COMPONENTS = [{'name': 'ApparentTemperatureTileViewComponent', 'selector': 'app-apparent-temperature-tile-view'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BackButtonElementComponent', 'selector': 'app-back-button-element'},{'name': 'CalibrationInfoDetailViewComponent', 'selector': 'app-calibration-info-detail-view'},{'name': 'CardElementComponent', 'selector': 'card-element'},{'name': 'CheckboxSwitcherElementComponent', 'selector': 'app-checkbox-switcher-element'},{'name': 'ConfigurationTilePopUpDialogView', 'selector': 'configuration-tile-popup-view'},{'name': 'ConfigurationTileViewComponent', 'selector': 'app-configuration-tile-view'},{'name': 'ConfigurationViewComponent', 'selector': 'app-configuration-view'},{'name': 'DashboardScreenComponent', 'selector': 'app-dashboard-screen'},{'name': 'DashboardViewComponent', 'selector': 'app-dashboard-view'},{'name': 'DetailScreenComponent', 'selector': 'app-detail-screen'},{'name': 'ForecastDetailViewComponent', 'selector': 'app-forecast-detail-view'},{'name': 'ForecastTileViewComponent', 'selector': 'app-forecast-tile-view'},{'name': 'HistoryDetailViewComponent', 'selector': 'app-history-detail-view'},{'name': 'HistoryTileViewComponent', 'selector': 'app-history-tile-view'},{'name': 'HumidityTileViewComponent', 'selector': 'app-humidity-tile-view'},{'name': 'IndoorDetailViewComponent', 'selector': 'app-indoor-detail-view'},{'name': 'IndoorTileViewComponent', 'selector': 'app-indoor-tile-view'},{'name': 'LoginViewComponent', 'selector': 'app-login-view'},{'name': 'MenuBarElementComponent', 'selector': 'app-menu-bar-element'},{'name': 'MenuButtonElementComponent', 'selector': 'app-menu-button-element'},{'name': 'MenuElementComponent', 'selector': 'app-menu-element'},{'name': 'NavBarElementComponent', 'selector': 'app-nav-bar-element'},{'name': 'OnboardingScreenComponent', 'selector': 'app-onboarding-screen'},{'name': 'OpenAPELoginTileViewComponent', 'selector': 'app-open-apelogin-tile-view'},{'name': 'OutdoorWeatherDetailViewComponent', 'selector': 'app-outdoor-weather-detail-view'},{'name': 'OutdoorWeatherViewComponent', 'selector': 'app-outdoor-weather-view'},{'name': 'PersonalizationSettingsViewComponent', 'selector': 'app-personalization-settings-view'},{'name': 'PersonalizationViewComponent', 'selector': 'app-personalization-view'},{'name': 'PollenflugDetailViewComponent', 'selector': 'app-pollenflug-detail-view'},{'name': 'PollenflugSmallTileComponent', 'selector': 'app-pollenflug-small-tile'},{'name': 'PollenflugTileViewComponent', 'selector': 'app-pollenflug-tile-view'},{'name': 'PollenListElementComponent', 'selector': 'app-pollen-list-element'},{'name': 'PollenTagElementComponent', 'selector': 'app-pollen-tag-element'},{'name': 'ProgressChartElementComponent', 'selector': 'app-progress-chart-element'},{'name': 'RegistrationViewComponent', 'selector': 'app-registration-view'},{'name': 'SettingsScreenComponent', 'selector': 'app-settings-screen'},{'name': 'SimpleTileViewComponent', 'selector': 'app-simple-tile-view'},{'name': 'SliderElementComponent', 'selector': 'app-slider-element'},{'name': 'TtsPlayerElementComponent', 'selector': 'app-tts-player-element'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RegistrationViewComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ScreensModule.html":{"url":"modules/ScreensModule.html","title":"module - ScreensModule","body":"\n                   \n\n\n\n\n    Modules\n    ScreensModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ScreensModule\n\n\n\ncluster_ScreensModule_declarations\n\n\n\ncluster_ScreensModule_imports\n\n\n\n\nDashboardScreenComponent\n\nDashboardScreenComponent\n\n\n\nScreensModule\n\nScreensModule\n\nScreensModule -->\n\nDashboardScreenComponent->ScreensModule\n\n\n\n\n\nDetailScreenComponent\n\nDetailScreenComponent\n\nScreensModule -->\n\nDetailScreenComponent->ScreensModule\n\n\n\n\n\nOnboardingScreenComponent\n\nOnboardingScreenComponent\n\nScreensModule -->\n\nOnboardingScreenComponent->ScreensModule\n\n\n\n\n\nSettingsScreenComponent\n\nSettingsScreenComponent\n\nScreensModule -->\n\nSettingsScreenComponent->ScreensModule\n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nScreensModule -->\n\nAppRoutingModule->ScreensModule\n\n\n\n\n\nUiElementsModule\n\nUiElementsModule\n\nScreensModule -->\n\nUiElementsModule->ScreensModule\n\n\n\n\n\nViewsModule\n\nViewsModule\n\nScreensModule -->\n\nViewsModule->ScreensModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/screens/screens.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            DashboardScreenComponent\n                        \n                        \n                            DetailScreenComponent\n                        \n                        \n                            OnboardingScreenComponent\n                        \n                        \n                            SettingsScreenComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                            UiElementsModule\n                        \n                        \n                            ViewsModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DashboardScreenComponent } from './dashboard-screen/dashboard-screen.component';\nimport { DetailScreenComponent } from './detail-screen/detail-screen.component';\nimport { OnboardingScreenComponent } from './onboarding-screen/onboarding-screen.component';\nimport { UiElementsModule } from '../ui-elements/ui-elements.module';\nimport { ViewsModule } from '../views/views.module'\nimport { RouterModule } from '@angular/router';\nimport { LayoutModule } from '@angular/cdk/layout';\nimport { AppRoutingModule } from 'src/app/app-routing.module';\nimport { SettingsScreenComponent } from './settings-screen/settings-screen.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NgxSpinnerModule } from \"ngx-spinner\";\n\n\n\n\n@NgModule({\n  declarations: [\n    DashboardScreenComponent,\n    DetailScreenComponent,\n    SettingsScreenComponent,\n    OnboardingScreenComponent,\n  ],\n  imports: [\n    CommonModule,\n    AppRoutingModule,\n    RouterModule,\n    UiElementsModule,\n    ViewsModule,\n    LayoutModule,\n    BrowserAnimationsModule,\n    NgxSpinnerModule,\n  ]\n})\n\nexport class ScreensModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SettingsScreenComponent.html":{"url":"components/SettingsScreenComponent.html","title":"component - SettingsScreenComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SettingsScreenComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/screens/settings-screen/settings-screen.component.ts\n\n\n    \n        Description\n    \n    \n        Settings screen component \nWrapper component to display all settings view components.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-settings-screen\n            \n\n            \n                styleUrls\n                ./settings-screen.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./settings-screen.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                desktop\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                prepareRoute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/screens/settings-screen/settings-screen.component.ts:17\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/screens/settings-screen/settings-screen.component.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            prepareRoute\n                        \n                        \n                    \n                \n            \n            \n                \nprepareRoute(outlet: RouterOutlet)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/screens/settings-screen/settings-screen.component.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    outlet\n                                    \n                                                RouterOutlet\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            desktop\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/screens/settings-screen/settings-screen.component.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { RouterOutlet } from '@angular/router';\nimport { routeTransitionAnimations } from '../../../route-transition-animation';\n\n/**\n * Settings screen component \n * \n * Wrapper component to display all settings view components.\n */\n@Component({\n  selector: 'app-settings-screen',\n  templateUrl: './settings-screen.component.html',\n  styleUrls: ['./settings-screen.component.scss'],\n  animations: [routeTransitionAnimations],\n})\nexport class SettingsScreenComponent implements OnInit {\n  desktop: boolean = false;\n\n  constructor() { }\n\n  ngOnInit(): void { \n  }\n\n  prepareRoute(outlet: RouterOutlet) {\n    return outlet && outlet.activatedRouteData && outlet.activatedRouteData['animationState'];\n  }\n}\n\n    \n\n    \n        \n    \n        \n    \n\n\n    \n\n    \n                \n                    ./settings-screen.component.scss\n                \n                .layout {\n    min-height: calc(100vh);\n}\n\n.background {\n    background-color: var(--background);\n}\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                '\n    var COMPONENTS = [{'name': 'ApparentTemperatureTileViewComponent', 'selector': 'app-apparent-temperature-tile-view'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BackButtonElementComponent', 'selector': 'app-back-button-element'},{'name': 'CalibrationInfoDetailViewComponent', 'selector': 'app-calibration-info-detail-view'},{'name': 'CardElementComponent', 'selector': 'card-element'},{'name': 'CheckboxSwitcherElementComponent', 'selector': 'app-checkbox-switcher-element'},{'name': 'ConfigurationTilePopUpDialogView', 'selector': 'configuration-tile-popup-view'},{'name': 'ConfigurationTileViewComponent', 'selector': 'app-configuration-tile-view'},{'name': 'ConfigurationViewComponent', 'selector': 'app-configuration-view'},{'name': 'DashboardScreenComponent', 'selector': 'app-dashboard-screen'},{'name': 'DashboardViewComponent', 'selector': 'app-dashboard-view'},{'name': 'DetailScreenComponent', 'selector': 'app-detail-screen'},{'name': 'ForecastDetailViewComponent', 'selector': 'app-forecast-detail-view'},{'name': 'ForecastTileViewComponent', 'selector': 'app-forecast-tile-view'},{'name': 'HistoryDetailViewComponent', 'selector': 'app-history-detail-view'},{'name': 'HistoryTileViewComponent', 'selector': 'app-history-tile-view'},{'name': 'HumidityTileViewComponent', 'selector': 'app-humidity-tile-view'},{'name': 'IndoorDetailViewComponent', 'selector': 'app-indoor-detail-view'},{'name': 'IndoorTileViewComponent', 'selector': 'app-indoor-tile-view'},{'name': 'LoginViewComponent', 'selector': 'app-login-view'},{'name': 'MenuBarElementComponent', 'selector': 'app-menu-bar-element'},{'name': 'MenuButtonElementComponent', 'selector': 'app-menu-button-element'},{'name': 'MenuElementComponent', 'selector': 'app-menu-element'},{'name': 'NavBarElementComponent', 'selector': 'app-nav-bar-element'},{'name': 'OnboardingScreenComponent', 'selector': 'app-onboarding-screen'},{'name': 'OpenAPELoginTileViewComponent', 'selector': 'app-open-apelogin-tile-view'},{'name': 'OutdoorWeatherDetailViewComponent', 'selector': 'app-outdoor-weather-detail-view'},{'name': 'OutdoorWeatherViewComponent', 'selector': 'app-outdoor-weather-view'},{'name': 'PersonalizationSettingsViewComponent', 'selector': 'app-personalization-settings-view'},{'name': 'PersonalizationViewComponent', 'selector': 'app-personalization-view'},{'name': 'PollenflugDetailViewComponent', 'selector': 'app-pollenflug-detail-view'},{'name': 'PollenflugSmallTileComponent', 'selector': 'app-pollenflug-small-tile'},{'name': 'PollenflugTileViewComponent', 'selector': 'app-pollenflug-tile-view'},{'name': 'PollenListElementComponent', 'selector': 'app-pollen-list-element'},{'name': 'PollenTagElementComponent', 'selector': 'app-pollen-tag-element'},{'name': 'ProgressChartElementComponent', 'selector': 'app-progress-chart-element'},{'name': 'RegistrationViewComponent', 'selector': 'app-registration-view'},{'name': 'SettingsScreenComponent', 'selector': 'app-settings-screen'},{'name': 'SimpleTileViewComponent', 'selector': 'app-simple-tile-view'},{'name': 'SliderElementComponent', 'selector': 'app-slider-element'},{'name': 'TtsPlayerElementComponent', 'selector': 'app-tts-player-element'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SettingsScreenComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SimpleTileViewComponent.html":{"url":"components/SimpleTileViewComponent.html","title":"component - SimpleTileViewComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SimpleTileViewComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/views/simple-tile-view/simple-tile-view.component.ts\n\n\n    \n        Description\n    \n    \n        Simple tile view \nThis is a simple component which can be used to display a simple\nvalue in form of a tile (widget).\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-simple-tile-view\n            \n\n            \n                styleUrls\n                ./simple-tile-view.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./simple-tile-view.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cardSizeType\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                subtitle\n                            \n                            \n                                title\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/views/simple-tile-view/simple-tile-view.component.ts:20\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        subtitle\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/views/simple-tile-view/simple-tile-view.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        title\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/views/simple-tile-view/simple-tile-view.component.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/views/simple-tile-view/simple-tile-view.component.ts:17\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/views/simple-tile-view/simple-tile-view.component.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cardSizeType\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : CardSize\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/views/simple-tile-view/simple-tile-view.component.ts:20\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { WeatherData } from 'src/app/model/weather';\nimport { CardSize } from '../../ui-elements/card-element/card-element.component';\n\n/**\n * Simple tile view \n * \n * This is a simple component which can be used to display a simple\n * value in form of a tile (widget).\n */\n@Component({\n  selector: 'app-simple-tile-view',\n  templateUrl: './simple-tile-view.component.html',\n  styleUrls: ['./simple-tile-view.component.scss']\n})\nexport class SimpleTileViewComponent implements OnInit {\n  @Input() value: string = \"\";\n  @Input() title: string = \"\";\n  @Input() subtitle: string = \"\";\n  cardSizeType = CardSize;\n\n  constructor() { }\n\n  ngOnInit(): void { }\n}\n\n    \n\n    \n        \n    \n        {{value}}  \n    \n\n    \n\n    \n                \n                    ./simple-tile-view.component.scss\n                \n                h1 {\n    margin: 0;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{value}}      '\n    var COMPONENTS = [{'name': 'ApparentTemperatureTileViewComponent', 'selector': 'app-apparent-temperature-tile-view'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BackButtonElementComponent', 'selector': 'app-back-button-element'},{'name': 'CalibrationInfoDetailViewComponent', 'selector': 'app-calibration-info-detail-view'},{'name': 'CardElementComponent', 'selector': 'card-element'},{'name': 'CheckboxSwitcherElementComponent', 'selector': 'app-checkbox-switcher-element'},{'name': 'ConfigurationTilePopUpDialogView', 'selector': 'configuration-tile-popup-view'},{'name': 'ConfigurationTileViewComponent', 'selector': 'app-configuration-tile-view'},{'name': 'ConfigurationViewComponent', 'selector': 'app-configuration-view'},{'name': 'DashboardScreenComponent', 'selector': 'app-dashboard-screen'},{'name': 'DashboardViewComponent', 'selector': 'app-dashboard-view'},{'name': 'DetailScreenComponent', 'selector': 'app-detail-screen'},{'name': 'ForecastDetailViewComponent', 'selector': 'app-forecast-detail-view'},{'name': 'ForecastTileViewComponent', 'selector': 'app-forecast-tile-view'},{'name': 'HistoryDetailViewComponent', 'selector': 'app-history-detail-view'},{'name': 'HistoryTileViewComponent', 'selector': 'app-history-tile-view'},{'name': 'HumidityTileViewComponent', 'selector': 'app-humidity-tile-view'},{'name': 'IndoorDetailViewComponent', 'selector': 'app-indoor-detail-view'},{'name': 'IndoorTileViewComponent', 'selector': 'app-indoor-tile-view'},{'name': 'LoginViewComponent', 'selector': 'app-login-view'},{'name': 'MenuBarElementComponent', 'selector': 'app-menu-bar-element'},{'name': 'MenuButtonElementComponent', 'selector': 'app-menu-button-element'},{'name': 'MenuElementComponent', 'selector': 'app-menu-element'},{'name': 'NavBarElementComponent', 'selector': 'app-nav-bar-element'},{'name': 'OnboardingScreenComponent', 'selector': 'app-onboarding-screen'},{'name': 'OpenAPELoginTileViewComponent', 'selector': 'app-open-apelogin-tile-view'},{'name': 'OutdoorWeatherDetailViewComponent', 'selector': 'app-outdoor-weather-detail-view'},{'name': 'OutdoorWeatherViewComponent', 'selector': 'app-outdoor-weather-view'},{'name': 'PersonalizationSettingsViewComponent', 'selector': 'app-personalization-settings-view'},{'name': 'PersonalizationViewComponent', 'selector': 'app-personalization-view'},{'name': 'PollenflugDetailViewComponent', 'selector': 'app-pollenflug-detail-view'},{'name': 'PollenflugSmallTileComponent', 'selector': 'app-pollenflug-small-tile'},{'name': 'PollenflugTileViewComponent', 'selector': 'app-pollenflug-tile-view'},{'name': 'PollenListElementComponent', 'selector': 'app-pollen-list-element'},{'name': 'PollenTagElementComponent', 'selector': 'app-pollen-tag-element'},{'name': 'ProgressChartElementComponent', 'selector': 'app-progress-chart-element'},{'name': 'RegistrationViewComponent', 'selector': 'app-registration-view'},{'name': 'SettingsScreenComponent', 'selector': 'app-settings-screen'},{'name': 'SimpleTileViewComponent', 'selector': 'app-simple-tile-view'},{'name': 'SliderElementComponent', 'selector': 'app-slider-element'},{'name': 'TtsPlayerElementComponent', 'selector': 'app-tts-player-element'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SimpleTileViewComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SliderElementComponent.html":{"url":"components/SliderElementComponent.html","title":"component - SliderElementComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SliderElementComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/ui-elements/slider-element/slider-element.component.ts\n\n\n    \n        Description\n    \n    \n        Slider element component\nControl element in form of a slider. \n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-slider-element\n            \n\n            \n                styleUrls\n                ./slider-element.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./slider-element.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                model\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeValue\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                label\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                valueChanged\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/ui-elements/slider-element/slider-element.component.ts:19\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/ui-elements/slider-element/slider-element.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/ui-elements/slider-element/slider-element.component.ts:14\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        valueChanged\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/ui-elements/slider-element/slider-element.component.ts:19\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            changeValue\n                        \n                        \n                    \n                \n            \n            \n                \nchangeValue(event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/ui-elements/slider-element/slider-element.component.ts:30\n                \n            \n\n\n            \n                \n                    Emits the output event to inform the parent component\nthat the value has changed.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/ui-elements/slider-element/slider-element.component.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            model\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 78\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/ui-elements/slider-element/slider-element.component.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\n/**\n * Slider element component\n * \n * Control element in form of a slider. \n */\n@Component({\n  selector: 'app-slider-element',\n  templateUrl: './slider-element.component.html',\n  styleUrls: ['./slider-element.component.scss']\n})\nexport class SliderElementComponent implements OnInit {\n  @Input() value?: number; \n  @Input() label?: string;\n\n  model: number = 78;\n\n  @Output() valueChanged = new EventEmitter();\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  /**\n   * Emits the output event to inform the parent component\n   * that the value has changed.\n   */\n  changeValue(event: any) {\n    this.valueChanged.emit(event.target.value);\n  }\n}\n\n    \n\n    \n        \n    {{label}}\n    \n\n    \n\n    \n                \n                    ./slider-element.component.scss\n                \n                @mixin background {\n    background: var(--accent);\n}\n\n@mixin thumb {\n    border: 8px solid var(--text);\n    height: 32px;\n    width: 32px;\n    border-radius: 16px;\n    background: transparent;\n    margin-top: -8px;\n}\n\n@mixin height {\n    height: 16px;\n}\n\n.container {\n    margin: var(--padding) 0 0 0;\n}\n\ninput[type=range] {\n    -webkit-appearance: none;\n    margin: 10px 0;\n    width: 100%;\n    background-color: transparent;\n\n  }\n  input[type=range]:focus {\n    outline: none;\n  }\n  input[type=range]::-webkit-slider-runnable-track {\n    width: 100%;\n    @include height;\n    cursor: pointer;\n    box-shadow: 0px 0px 0px #000000, 0px 0px 0px #0d0d0d;\n    @include background();\n    border-radius: 25px;\n    border: 0px solid #000101;\n  }\n  input[type=range]::-webkit-slider-thumb {\n    @include thumb;\n    box-shadow: 0px 0px 0px #000000, 0px 0px 0px #0d0d0d;\n    cursor: pointer;\n    -webkit-appearance: none;\n\n  }\n  input[type=range]:focus::-webkit-slider-runnable-track {\n    @include background();\n  }\n  input[type=range]::-moz-range-track {\n    width: 100%;\n    @include height;\n    cursor: pointer;\n    animate: 0.2s;\n    box-shadow: 0px 0px 0px #000000, 0px 0px 0px #0d0d0d;\n    @include background();\n    border-radius: 25px;\n    border: 0px solid #000101;\n  }\n  input[type=range]::-moz-range-thumb {\n    box-shadow: 0px 0px 0px #000000, 0px 0px 0px #0d0d0d;\n    @include thumb;\n    height: 16px;\n    width: 16px;\n    cursor: pointer;\n  }\n  input[type=range]::-ms-track {\n    width: 100%;\n    @include height;\n    cursor: pointer;\n    animate: 0.2s;\n    background: transparent;\n    border-color: transparent;\n    border-width: 39px 0;\n    color: transparent;\n  }\n  input[type=range]::-ms-fill-lower {\n    @include background();\n    border: 0px solid #000101;\n    border-radius: 50px;\n    box-shadow: 0px 0px 0px #000000, 0px 0px 0px #0d0d0d;\n  }\n  input[type=range]::-ms-fill-upper {\n    @include background();\n    border: 0px solid #000101;\n    border-radius: 50px;\n    box-shadow: 0px 0px 0px #000000, 0px 0px 0px #0d0d0d;\n  }\n  input[type=range]::-ms-thumb {\n    box-shadow: 0px 0px 0px #000000, 0px 0px 0px #0d0d0d;\n    @include thumb;\n    height: 16px;\n    width: 16px;\n    cursor: pointer;\n  }\n  input[type=range]:focus::-ms-fill-lower {\n    @include background();\n\n  }\n  input[type=range]:focus::-ms-fill-upper {\n    @include background();\n\n  }\n  \n  body {\n    padding: 30px;\n  }\n  \n  \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{label}}    '\n    var COMPONENTS = [{'name': 'ApparentTemperatureTileViewComponent', 'selector': 'app-apparent-temperature-tile-view'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BackButtonElementComponent', 'selector': 'app-back-button-element'},{'name': 'CalibrationInfoDetailViewComponent', 'selector': 'app-calibration-info-detail-view'},{'name': 'CardElementComponent', 'selector': 'card-element'},{'name': 'CheckboxSwitcherElementComponent', 'selector': 'app-checkbox-switcher-element'},{'name': 'ConfigurationTilePopUpDialogView', 'selector': 'configuration-tile-popup-view'},{'name': 'ConfigurationTileViewComponent', 'selector': 'app-configuration-tile-view'},{'name': 'ConfigurationViewComponent', 'selector': 'app-configuration-view'},{'name': 'DashboardScreenComponent', 'selector': 'app-dashboard-screen'},{'name': 'DashboardViewComponent', 'selector': 'app-dashboard-view'},{'name': 'DetailScreenComponent', 'selector': 'app-detail-screen'},{'name': 'ForecastDetailViewComponent', 'selector': 'app-forecast-detail-view'},{'name': 'ForecastTileViewComponent', 'selector': 'app-forecast-tile-view'},{'name': 'HistoryDetailViewComponent', 'selector': 'app-history-detail-view'},{'name': 'HistoryTileViewComponent', 'selector': 'app-history-tile-view'},{'name': 'HumidityTileViewComponent', 'selector': 'app-humidity-tile-view'},{'name': 'IndoorDetailViewComponent', 'selector': 'app-indoor-detail-view'},{'name': 'IndoorTileViewComponent', 'selector': 'app-indoor-tile-view'},{'name': 'LoginViewComponent', 'selector': 'app-login-view'},{'name': 'MenuBarElementComponent', 'selector': 'app-menu-bar-element'},{'name': 'MenuButtonElementComponent', 'selector': 'app-menu-button-element'},{'name': 'MenuElementComponent', 'selector': 'app-menu-element'},{'name': 'NavBarElementComponent', 'selector': 'app-nav-bar-element'},{'name': 'OnboardingScreenComponent', 'selector': 'app-onboarding-screen'},{'name': 'OpenAPELoginTileViewComponent', 'selector': 'app-open-apelogin-tile-view'},{'name': 'OutdoorWeatherDetailViewComponent', 'selector': 'app-outdoor-weather-detail-view'},{'name': 'OutdoorWeatherViewComponent', 'selector': 'app-outdoor-weather-view'},{'name': 'PersonalizationSettingsViewComponent', 'selector': 'app-personalization-settings-view'},{'name': 'PersonalizationViewComponent', 'selector': 'app-personalization-view'},{'name': 'PollenflugDetailViewComponent', 'selector': 'app-pollenflug-detail-view'},{'name': 'PollenflugSmallTileComponent', 'selector': 'app-pollenflug-small-tile'},{'name': 'PollenflugTileViewComponent', 'selector': 'app-pollenflug-tile-view'},{'name': 'PollenListElementComponent', 'selector': 'app-pollen-list-element'},{'name': 'PollenTagElementComponent', 'selector': 'app-pollen-tag-element'},{'name': 'ProgressChartElementComponent', 'selector': 'app-progress-chart-element'},{'name': 'RegistrationViewComponent', 'selector': 'app-registration-view'},{'name': 'SettingsScreenComponent', 'selector': 'app-settings-screen'},{'name': 'SimpleTileViewComponent', 'selector': 'app-simple-tile-view'},{'name': 'SliderElementComponent', 'selector': 'app-slider-element'},{'name': 'TtsPlayerElementComponent', 'selector': 'app-tts-player-element'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SliderElementComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SpeechService.html":{"url":"injectables/SpeechService.html","title":"injectable - SpeechService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SpeechService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/speech.service.ts\n        \n\n            \n                Description\n            \n            \n                Speech service injectable\nUse this service to read aloud a text from the browser speech synthesiser\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                isOutputRunning\n                            \n                            \n                                    Public\n                                startOutput\n                            \n                            \n                                    Public\n                                stopOutput\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/speech.service.ts:13\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            isOutputRunning\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isOutputRunning()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/speech.service.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        True if the speech output is stll running\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            startOutput\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    startOutput(text: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/speech.service.ts:22\n                \n            \n\n\n            \n                \n                    Start the speech output.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    text\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The text which should be read aloud\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            stopOutput\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    stopOutput()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/speech.service.ts:36\n                \n            \n\n\n            \n                \n                    Stop the speech output.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n/**\n * Speech service injectable\n * \n * Use this service to read aloud a text from the browser speech synthesiser\n */\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class SpeechService {\n  private synth = window.speechSynthesis;\n\n  constructor() {}\n\n  /**\n  * Start the speech output.\n  * \n  * @param {UserContstringext} text  The text which should be read aloud\n  */\n  public startOutput(text: string): void {\n    let utterThis = new SpeechSynthesisUtterance(text);\n    utterThis.lang = 'de-DE'\n    utterThis.pitch = 1;\n    utterThis.rate = 1;\n\n    this.synth.cancel();\n    this.synth.speak(utterThis);\n    this.synth.resume();\n  }\n\n  /**\n  * Stop the speech output.\n  */\n   public stopOutput(): void {\n    this.synth.cancel();\n  }\n\n  /**\n  * @returns True if the speech output is stll running\n  */\n  public isOutputRunning(): boolean{\n    return this.synth.speaking;\n  }\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TextService.html":{"url":"injectables/TextService.html","title":"injectable - TextService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TextService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/text.service.ts\n        \n\n            \n                Description\n            \n            \n                Text service injectable\nUse this service to create text from WeatherData objects, e.g. create text to read it aloud\nwith the speech service. \n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                createForecastText\n                            \n                            \n                                    Public\n                                createForecastTitle\n                            \n                            \n                                    Public\n                                createIndoorRoomText\n                            \n                            \n                                    Public\n                                createOutdoorText\n                            \n                            \n                                    Public\n                                createPollenText\n                            \n                            \n                                    Public\n                                createTextFromTilesArray\n                            \n                            \n                                    Public\n                                createWeatherText\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/text.service.ts:14\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            createForecastText\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createForecastText(data: WeatherForecastData | undefined)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/text.service.ts:61\n                \n            \n\n\n            \n                \n                    Create a readable text from WeatherForecastData object\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                WeatherForecastData | undefined\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        A readable text version from the input data. \n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            createForecastTitle\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createForecastTitle(data: WeatherForecastData | undefined)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/text.service.ts:105\n                \n            \n\n\n            \n                \n                    Create a readable title from WeatherForecastData object\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                WeatherForecastData | undefined\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        A readable title version from the input data. \n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            createIndoorRoomText\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createIndoorRoomText(data: IndoorRoomData | undefined)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/text.service.ts:137\n                \n            \n\n\n            \n                \n                    Create a readable text from IndoorRoomData object\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                IndoorRoomData | undefined\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        A readable text version from the input data. \n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            createOutdoorText\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createOutdoorText(data: OutdoorWeatherData | undefined)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/text.service.ts:187\n                \n            \n\n\n            \n                \n                    Create a readable text from OutdoorWeatherData object\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            OutdoorWeatherData | undefined\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        A readable text version from the input data. \n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            createPollenText\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createPollenText(data: PollenData | undefined)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/text.service.ts:156\n                \n            \n\n\n            \n                \n                    Create a readable text from PollenData object\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                PollenData | undefined\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        A readable text version from the input data. \n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            createTextFromTilesArray\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createTextFromTilesArray(array: Tile[] | undefined)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/text.service.ts:24\n                \n            \n\n\n            \n                \n                    Create a readable text from tiles array object of WeatherData\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    array\n                                    \n                                            Tile[] | undefined\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The data array\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        A readable text version from the input array. \n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            createWeatherText\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createWeatherText(data: string | undefined)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/text.service.ts:215\n                \n            \n\n\n            \n                \n                    Create a readable text from weather string\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            string | undefined\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        A readable text version from the input data. \n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { IndoorRoomData, OutdoorWeatherData, PollenData, Tile, TileType, WeatherForecastData } from '../model/weather';\nimport { WeatherData } from '../model/weather';\n\n/**\n * Text service injectable\n * \n * Use this service to create text from WeatherData objects, e.g. create text to read it aloud\n * with the speech service. \n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class TextService {\n\n  constructor() { }\n  \n  /**\n  * Create a readable text from tiles array object of WeatherData\n  * \n  * @param {Tile[]} array  The data array\n  * @returns A readable text version from the input array. \n  */\n  public createTextFromTilesArray(array: Tile[] | undefined): string {\n    let readAloud = ''\n    if(array) {\n      array.forEach(element => {\n        switch(element.type){\n          case TileType.pollenList: \n            let pollenDataArray = element.data as PollenData[];\n            pollenDataArray.forEach(element => {\n              readAloud = readAloud + this.createPollenText(element);\n            });\n            break;\n          case TileType.indoorRoom: \n            let indoorArray = element.data as IndoorRoomData;\n            readAloud = readAloud + this.createIndoorRoomText(indoorArray);\n            break;\n          case TileType.forecast: \n            let forecastData = element.data as WeatherForecastData;\n            readAloud = readAloud + this.createForecastText(forecastData);\n            break;\n          case TileType.pollenSmall: \n            let pollenData = element.data as PollenData;\n            readAloud = readAloud + this.createPollenText(pollenData);\n            break\n          default: 'Not implemented'\n        }\n      });\n    }\n    console.log(readAloud);\n    return readAloud;\n  }\n\n  /**\n  * Create a readable text from WeatherForecastData object\n  * \n  * @param {WeatherForecastData | undefined} data \n  * @returns A readable text version from the input data. \n  */\n  public createForecastText(data: WeatherForecastData | undefined): string {\n    let readAloud = ''\n    if(data) {\n      let forecast = data.weatherDescription\n      switch (forecast) {\n        case 'Clear': \n          readAloud = \"Im Verlaufe des Tages wird es wolkenlos. \"\n          break;\n        case 'Sunny and moderately cloudy.': \n          readAloud = \"Im Verlaufe des Tages wird es sonnig mit ein paar Wolken. \"\n          break;\n        case 'Rather cloudy': \n          readAloud = \"Im Verlaufe des Tages wird es bedeckt mit vereinzelten Sonnenstrahlen werden. \"\n          break;\n        case 'Rainy': \n          readAloud = \"Im Verlaufe des Tages wird es regnen. \"\n          break;\n        case 'Worsening': \n          readAloud = \"Im Verlaufe des Tages wird es schlechter werden. \"\n          break;\n      }\n\n      let trend = data.trend\n      switch (trend) {\n        case 'rising': \n          readAloud = readAloud + \"Tendenz steigend. \"\n          break;\n        case 'falling': \n          readAloud = readAloud + \"Tendenz fallend. \"\n          break;\n        case 'steady': \n          readAloud = readAloud + \"Tendenz konsistent. \"\n          break;\n      }\n    }\n    return readAloud\n  }\n\n  /**\n  * Create a readable title from WeatherForecastData object\n  * \n  * @param {WeatherForecastData | undefined} data \n  * @returns A readable title version from the input data. \n  */\n    public createForecastTitle(data: WeatherForecastData | undefined): string {\n      let title = ''\n      if(data) {\n        let forecast = data.weatherDescription\n        switch (forecast) {\n          case 'Clear': \n            title = 'Wolkenlos';\n            break;\n          case 'Sunny and moderately cloudy.': \n            title = 'Sonnig und leicht bedeckt';\n            break;\n          case 'Rather cloudy': \n            title = 'Bewölkt';\n            break;\n          case 'Rainy': \n            title = 'Regen';\n            break;\n          case 'Worsening': \n            title = 'Schlecht';\n            break;\n        }\n      }\n      return title\n    }\n\n\n  /**\n  * Create a readable text from IndoorRoomData object\n  * \n  * @param {IndoorRoomData | undefined} data \n  * @returns A readable text version from the input data. \n  */\n  public createIndoorRoomText(data: IndoorRoomData | undefined): string {\n    let readAloud = ''\n    if(data) {\n      let room = data.roomName\n      let quality = data.airQuality\n      let temperature = data.temperature\n\n      readAloud = 'Im ' + room + ' hat es ' + temperature + ' Grad Celsius und die Luftqualität liegt bei ' + quality + '. ';\n    }\n    return readAloud\n\n  }\n\n  /**\n  * Create a readable text from PollenData object\n  * \n  * @param {PollenData | undefined} data \n  * @returns A readable text version from the input data. \n  */\n  public createPollenText(data: PollenData | undefined): string {\n    let readAloud = ''\n    if(data) {\n      let name = data.pollenName\n      let value = data.today\n      switch (value) {\n        case '1':\n        case '1-2':\n          readAloud = name + 'Pollen haben heute eine niedrige Belastung. ';\n          break;\n        case '2':\n        case '2-3':\n          readAloud = name + 'Pollen haben heute eine mittlere Belastung. ';\n          break;\n        case '3': \n        case '3-4': \n        case '4': \n        case '5': \n        readAloud = name + 'Pollen haben heute eine hohe Belastung. ';\n          break;\n      }\n    }\n    return readAloud\n  }\n\n /**\n  * Create a readable text from OutdoorWeatherData object\n  * \n  * @param {OutdoorWeatherData | undefined} data \n  * @returns A readable text version from the input data. \n  */\n  public createOutdoorText(data: OutdoorWeatherData | undefined): string {\n    let readAloud = ''\n    if(data) {\n      // adjust number pronounciation\n      let location = data.location\n      let temperature = data.temperature\n      let apparentTemperature = data.apparentTemperature\n      let maxTemperature = data.maxTemperature\n      let minTemperature = data.minTemperature\n      let humidity = data.humidity\n      let weather = data.weather\n\n      readAloud = \"In \" + location + \" hat es aktuell \" + temperature + \" Grad Celsius. \" \n      // + \"Diese fühlen sich an wie  \" + apparentTemperature \n      // + \". Die heutigen Extremwerte liegen bei \" + maxTemperature + \" und \" + minTemperature + \"Grad Celsius. \"\n      + this.createWeatherText(weather) + \" \"\n      + \"Die Luftfeuchtigkeit beträgt aktuell \" + humidity + \"%. \";\n      ;\n    }\n    return readAloud\n  }\n\n  /**\n  * Create a readable text from weather string\n  * \n  * @param {string | undefined} data \n  * @returns A readable text version from the input data. \n  */\n    public createWeatherText(data: string | undefined): string {\n      let readAloud = ''\n      if(data) {\n        let weather = data;\n        switch(weather) {\n          case 'cloudy': \n            readAloud = 'Aktuell ist es bewölkt.'\n            break;\n          case 'rain':\n            readAloud = 'Im Moment regnet es.'\n            break;\n          case 'wind':\n            readAloud = 'Zur Zeit ist es windig.'\n            break;\n          case 'sleet':\n            readAloud = 'Es graupelt gerade.'\n            break;\n          case 'fog':\n            readAloud = 'Achtung, es ist neblig.'\n            break;\n          case 'clear-day':\n            readAloud = 'Die Sonne scheint, es hat eine klare Sicht.'\n            break;\n          case 'clear-night':\n            readAloud = 'Der Mond scheint, es hat eine klare Sicht.'\n            break;\n          case 'partly-cloudy-day':\n            readAloud = 'Es ist leicht bewölkt, vereinzelt sonnig.'\n            break;\n          case 'partly-cloudy-night':\n            readAloud = 'Es ist leicht bewölkt.'\n            break;\n          case 'snow':\n            readAloud = 'Aktuell schneit es.'\n            break;\n          case 'hail':\n            readAloud = 'Achtung, es hagelt.'\n            break;\n          case 'thunderstorm':\n            readAloud = 'Achtung, ein Gewitter tobt gerade.'\n            break;\n        }\n      }\n      return readAloud\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Tile.html":{"url":"interfaces/Tile.html","title":"interface - Tile","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Tile\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/weather.ts\n        \n\n            \n                Description\n            \n            \n                Tile model -\nEvery tile (widget) needs data and a prioriy. The priority is \nused to determine the position of the tiles on the dashboard. The tiles themselves do not load the data.\nThe data is passed from the parent view of the tiles.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        data\n                                \n                                \n                                        id\n                                \n                                \n                                        priority\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                    \n                                \n                                \n                                    \n                                        data:     A\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     A\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        priority\n                                    \n                                \n                                \n                                    \n                                        priority:         TilePriority\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TilePriority\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:         TileType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TileType\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface WeatherData { }\n\n/**\n * Enum to identify the type of the tile. \n */\nexport enum TileType {\n    indoorRoom,\n    pollenSmall,\n    pollenList,\n    history,\n    forecast,\n    humidity,\n    apparentTemperature,\n}\n\n/**\n * This interface bundles the three tile arrays\n */\nexport interface TileArrays {\n    dashboard: Tile[],\n    pollen : Tile[],\n    indoorRooms: Tile[]\n}\n  \n/**\n * Enum to set the priority of a tile\n */\nexport enum TilePriority {\n    important, //Highest \n    high,\n    middle,\n    low,\n}\n\n/**\n * Tile model -\n * Every tile (widget) needs data and a prioriy. The priority is \n * used to determine the position of the tiles on the dashboard. The tiles themselves do not load the data.\n * The data is passed from the parent view of the tiles.\n */\nexport interface Tile {\n    type: TileType;\n    data: A;\n    id: string;\n    priority: TilePriority\n}\n\n/**\n * Model of the outdoor weather data. It contains all information about the current \n * outdoor weather including temperature, humidity and weather type. \n */\nexport interface OutdoorWeatherData extends WeatherData {\n    temperature: number // in °C\n    maxTemperature: number,\n    minTemperature: number, \n    humidity: number, // in %\n    timestamp: Date, \n    weather: string, \n    apparentTemperature: number, // in °C ---> die \"gefühlte\" Temperatur\n    location: string, // e.g. \"Stuttgart\" TODO: Make configurable in ESP Wlan-Board\n    postCode: string,\n}\n\n/**\n * Model of the weather forecast data. It contains all information about \n * the forecast including weather and trend. \n */\nexport interface WeatherForecastData extends WeatherData {\n    trend: string,\n    weatherDescription: string,\n    weatherIcon: string,\n  }\n\n/**\n * Model of the pollen data. It contains all information about \n * the current pollen count.\n */\nexport interface PollenData extends WeatherData {\n    pollenName: string, \n    id: number,\n    today: string, // -1  3\n    tomorrow: string, // -1  3\n}\n\n/**\n * Model of the indoor room data. It contains all information about \n * the temperature, humidity, roomname, airQuality of the current room. \n */\nexport interface IndoorRoomData extends WeatherData {\n    roomID: string,\n    roomName: string,\n    airQuality: number, // in %\n    temperature: number // in °C \n    humidity: number, // in %\n    timestamp: Date, \n    calibrationValue: number\n}\n\n/**\n * Model of the indoor room data. It contains all information about \n * the temperature, humidity, roomname, airQuality of the current room. \n */\nexport interface WeatherHistoryData extends WeatherData {\n    datapoints: OutdoorWeatherData[],\n}\n\n/**\n * Model of the indoor room data. It contains all information about \n * the temperature, humidity, roomname, airQuality of the current room. \n */\nexport interface GraphDataSet extends WeatherData {\n    temperatureDataPoints: number[];\n    humidityDataPoints: number[];\n    xAxisLabel: string[];\n    label: string;\n    temperatureAverage: number;\n    humidityAverage: number;\n}\n\nexport interface WeatherHistoryByDayData extends WeatherData  {\n    averageTemperature: number, // in °C\n    averageHumidity: number, // in %\n}\n\nexport enum Daytime {\n    noon,\n    night,\n    dawn,\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TileArrays.html":{"url":"interfaces/TileArrays.html","title":"interface - TileArrays","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TileArrays\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/weather.ts\n        \n\n            \n                Description\n            \n            \n                This interface bundles the three tile arrays\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        dashboard\n                                \n                                \n                                        indoorRooms\n                                \n                                \n                                        pollen\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        dashboard\n                                    \n                                \n                                \n                                    \n                                        dashboard:     Tile[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Tile[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        indoorRooms\n                                    \n                                \n                                \n                                    \n                                        indoorRooms:     Tile[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Tile[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pollen\n                                    \n                                \n                                \n                                    \n                                        pollen:     Tile[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Tile[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface WeatherData { }\n\n/**\n * Enum to identify the type of the tile. \n */\nexport enum TileType {\n    indoorRoom,\n    pollenSmall,\n    pollenList,\n    history,\n    forecast,\n    humidity,\n    apparentTemperature,\n}\n\n/**\n * This interface bundles the three tile arrays\n */\nexport interface TileArrays {\n    dashboard: Tile[],\n    pollen : Tile[],\n    indoorRooms: Tile[]\n}\n  \n/**\n * Enum to set the priority of a tile\n */\nexport enum TilePriority {\n    important, //Highest \n    high,\n    middle,\n    low,\n}\n\n/**\n * Tile model -\n * Every tile (widget) needs data and a prioriy. The priority is \n * used to determine the position of the tiles on the dashboard. The tiles themselves do not load the data.\n * The data is passed from the parent view of the tiles.\n */\nexport interface Tile {\n    type: TileType;\n    data: A;\n    id: string;\n    priority: TilePriority\n}\n\n/**\n * Model of the outdoor weather data. It contains all information about the current \n * outdoor weather including temperature, humidity and weather type. \n */\nexport interface OutdoorWeatherData extends WeatherData {\n    temperature: number // in °C\n    maxTemperature: number,\n    minTemperature: number, \n    humidity: number, // in %\n    timestamp: Date, \n    weather: string, \n    apparentTemperature: number, // in °C ---> die \"gefühlte\" Temperatur\n    location: string, // e.g. \"Stuttgart\" TODO: Make configurable in ESP Wlan-Board\n    postCode: string,\n}\n\n/**\n * Model of the weather forecast data. It contains all information about \n * the forecast including weather and trend. \n */\nexport interface WeatherForecastData extends WeatherData {\n    trend: string,\n    weatherDescription: string,\n    weatherIcon: string,\n  }\n\n/**\n * Model of the pollen data. It contains all information about \n * the current pollen count.\n */\nexport interface PollenData extends WeatherData {\n    pollenName: string, \n    id: number,\n    today: string, // -1  3\n    tomorrow: string, // -1  3\n}\n\n/**\n * Model of the indoor room data. It contains all information about \n * the temperature, humidity, roomname, airQuality of the current room. \n */\nexport interface IndoorRoomData extends WeatherData {\n    roomID: string,\n    roomName: string,\n    airQuality: number, // in %\n    temperature: number // in °C \n    humidity: number, // in %\n    timestamp: Date, \n    calibrationValue: number\n}\n\n/**\n * Model of the indoor room data. It contains all information about \n * the temperature, humidity, roomname, airQuality of the current room. \n */\nexport interface WeatherHistoryData extends WeatherData {\n    datapoints: OutdoorWeatherData[],\n}\n\n/**\n * Model of the indoor room data. It contains all information about \n * the temperature, humidity, roomname, airQuality of the current room. \n */\nexport interface GraphDataSet extends WeatherData {\n    temperatureDataPoints: number[];\n    humidityDataPoints: number[];\n    xAxisLabel: string[];\n    label: string;\n    temperatureAverage: number;\n    humidityAverage: number;\n}\n\nexport interface WeatherHistoryByDayData extends WeatherData  {\n    averageTemperature: number, // in °C\n    averageHumidity: number, // in %\n}\n\nexport enum Daytime {\n    noon,\n    night,\n    dawn,\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TileService.html":{"url":"injectables/TileService.html","title":"injectable - TileService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TileService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/tile.service.ts\n        \n\n            \n                Description\n            \n            \n                Tile service injectable\nUse this service to create the tile arrays which are used in the dashboard screen component\nand the pollen detail component and the indoor room detail component to show the tiles in \nan order way based on the user context. \n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createTiles\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userContextService: UserContextService, historyTileService: HistoryTileService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/tile.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userContextService\n                                                  \n                                                        \n                                                                        UserContextService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        historyTileService\n                                                  \n                                                        \n                                                                        HistoryTileService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createTiles\n                        \n                        \n                    \n                \n            \n            \n                \ncreateTiles(outdoorWeather: OutdoorWeatherData | undefined, pollen: PollenData[], forecast: WeatherForecastData | undefined, history: WeatherHistoryData | undefined, indoorRoom: IndoorRoomData[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/tile.service.ts:31\n                \n            \n\n\n            \n                \n                    Use this function to get an ordered tiles array based on the current user context.\nIn this way you can easily show the different tiles orderd by relevance. \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    outdoorWeather\n                                    \n                                            OutdoorWeatherData | undefined\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pollen\n                                    \n                                                PollenData[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    forecast\n                                    \n                                                WeatherForecastData | undefined\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    history\n                                    \n                                                WeatherHistoryData | undefined\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    indoorRoom\n                                    \n                                                IndoorRoomData[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         TileArrays\n\n                    \n                    \n                        A TilesArrays object which contains the three tiles array for dashboard screen, pollen detail and indoor room detail components. \n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { UserContextService } from './user-context.service';\nimport { WeatherData, Tile, PollenData, TileType, IndoorRoomData, WeatherForecastData, TilePriority, WeatherHistoryData, GraphDataSet, OutdoorWeatherData, TileArrays } from '../model/weather';\nimport { HistoryTileService } from './history-tile.service';\n\n/**\n * Tile service injectable\n * \n * Use this service to create the tile arrays which are used in the dashboard screen component\n * and the pollen detail component and the indoor room detail component to show the tiles in \n * an order way based on the user context. \n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class TileService  {\n  constructor(private userContextService: UserContextService,\n              private historyTileService: HistoryTileService) { }\n\n  /**\n   * Use this function to get an ordered tiles array based on the current user context.\n   * In this way you can easily show the different tiles orderd by relevance. \n   * \n   * @param {OutdoorWeatherData} outdoorWeather\n   * @param {PollenData[]} pollen\n   * @param {WeatherForecastData} forecast\n   * @param {WeatherHistoryData} history\n   * @param {IndoorRoomData[]} indoorRoom\n   * @returns A TilesArrays object which contains the three tiles array for dashboard screen, pollen detail and indoor room detail components. \n   */\n  createTiles(outdoorWeather: OutdoorWeatherData | undefined, \n              pollen: PollenData[], \n              forecast: WeatherForecastData | undefined, \n              history: WeatherHistoryData | undefined, \n              indoorRoom: IndoorRoomData[]): TileArrays {\n      let dashboardTiles: Tile[] = []\n      let pollenTiles: Tile[] = []\n      let indoorRoomTiles: Tile[] = []\n\n      if(outdoorWeather)\n      this.createOutdoorWeatherTiles(outdoorWeather, dashboardTiles);\n      if(forecast)\n      this.createForecastTile(forecast, dashboardTiles)\n      if(history)\n      this.createHistoryTile(history, dashboardTiles)\n      this.createIndoorRoomTiles(indoorRoom, dashboardTiles, indoorRoomTiles)\n      this.createPollenTiles(pollen, dashboardTiles, pollenTiles)\n      return {\n        dashboard: dashboardTiles,\n        pollen: pollenTiles,\n        indoorRooms: indoorRoomTiles\n      }\n  }\n\n  /**\n   * Create outdoor weather tiles and add them to the dashboard tiles array  \n   * \n   * @param {OutdoorWeatherData} data\n   * @param {Tile[]} dashboard\n   */\n  private createOutdoorWeatherTiles(data: OutdoorWeatherData, dashboard: Tile[]): void {\n    let humidityTile: Tile = {\n      type: TileType.humidity,\n      data: data,\n      id: 'humidity',\n      priority: this.getPrioritiyOf(data, TileType.humidity),\n    }\n\n    let apparentTemperatureTile: Tile = {\n      type: TileType.apparentTemperature,\n      data: data,\n      id: 'apparentTemperature',\n      priority: this.getPrioritiyOf(data, TileType.apparentTemperature),\n    }\n\n    this.addTileTo(dashboard, humidityTile);\n    this.addTileTo(dashboard, apparentTemperatureTile);\n  }\n  \n  /**\n   * Create pollen tiles and add them to the dashboard tiles array and pollen tiles array\n   * \n   * @param {PollenData[]} data\n   * @param {Tile[]} dashboard  The dashboard tiles array \n   * @param {Tile[]} pollen  The pollen tiles array \n   */\n  private createPollenTiles(data: PollenData[], dashboard: Tile[], pollen: Tile[]): void {\n    let preferredPollen: string[] = this.userContextService.pollen\n    let pollenData = data\n\n    if(preferredPollen.length > 0) {\n      preferredPollen.forEach(item => {\n        let pollenItem = pollenData.find(dataItem => dataItem.pollenName == item)\n        if (pollenItem) {\n          let smallTile: Tile = {\n            type: TileType.pollenSmall,\n            data: pollenItem,\n            id: pollenItem.pollenName,\n            priority: this.getPrioritiyOf(pollenItem, TileType.pollenSmall),\n          }\n          this.addTileTo(dashboard, smallTile);\n          this.addTileTo(pollen, smallTile);\n          pollenData = pollenData.filter((item) => pollenItem != item);\n        }\n      });\n    }\n    \n    let listTile: Tile = {\n      type: TileType.pollenList,\n      data: pollenData,\n      id: 'pollenlist',\n      priority: this.getPrioritiyOf(pollenData, TileType.pollenList),\n    }\n    this.addTileTo(pollen, listTile);\n\n    if(preferredPollen.length == 0) {\n      this.addTileTo(dashboard, listTile);\n    }\n  }\n\n  /**\n   * Create forecast tile and add them to the dashboard tiles array  \n   * \n   * @param {WeatherForecastData} data \n   * @param {Tile[]} dashboard  The dashboard tiles array \n   */\n  private createForecastTile(data: WeatherForecastData, dashboard: Tile[]): void {\n    let tile: Tile = {\n      type: TileType.forecast,\n      data: data,\n      id: 'forecast',\n      priority: this.getPrioritiyOf(data, TileType.forecast),\n    }\n    this.addTileTo(dashboard, tile);\n  }\n\n  /**\n   * Create weather history tile and add them to the dashboard tiles array  \n   * \n   * @param {WeatherHistoryData} data\n   * @param {Tile[]} dashboard  The dashboard tiles array \n   */\n  private createHistoryTile(data: WeatherHistoryData, dashboard: Tile[]): void {\n    let dataHoursPerDay = this.historyTileService.getHistoryDataSetHoursPerDayFrom(data);\n    let tile: Tile = {\n      type: TileType.history,\n      data: dataHoursPerDay[0], // FIXME: not sage here \n      id: 'history',\n      priority: this.getPrioritiyOf(data, TileType.history),\n    }\n    this.addTileTo(dashboard, tile);\n  }\n\n  /**\n   * Create indoor room tiles and add them to the dashboard tiles array and indoor room tiles array\n   * \n   * @param {PollenData[]} data\n   * @param {Tile[]} dashboard  The dashboard tiles array \n   * @param {Tile[]} indoorRoom  The indoor room tiles array \n   */\n  private createIndoorRoomTiles(data: IndoorRoomData[], dashboard: Tile[], indoorRoom: Tile[]): void {\n    for (let item of data) {\n      let tile: Tile = {\n        type: TileType.indoorRoom,\n        data: item,\n        id: item.roomID,\n        priority: this.getPrioritiyOf(item, TileType.indoorRoom),\n      }\n      this.addTileTo(dashboard, tile);\n      this.addTileTo(indoorRoom, tile);\n    }\n  }\n\n  /**\n   * Private function to calculate the current prioritiy of a tile. This prioritiy is used after\n   * to caculate the order of the tiles. The higher the priority the lower should be the index of the \n   * tile in the tiles array.\n   * \n   * @param {WeatherData} data  The parent interface of all weather data interfaces.  \n   * @param {TileType} type  The parent interface of all weather data interfaces.  \n   */\n  private getPrioritiyOf(data: WeatherData, type: TileType): TilePriority {\n    switch (type) {\n      case TileType.indoorRoom: {\n        let room = data as IndoorRoomData\n        if (room.airQuality - 5 > room.calibrationValue) {\n          return TilePriority.important \n        }\n        if (room.airQuality > room.calibrationValue - 5) {\n          return TilePriority.middle \n        }\n        return TilePriority.low\n      }\n      case TileType.pollenList: {\n        return TilePriority.low\n      }\n      case TileType.pollenSmall: {\n        let pollen = data as PollenData\n        if (pollen.today === '0' || pollen.today === '-1') {\n          return TilePriority.low\n        }\n        if (pollen.today === '2-3' || pollen.today === '3' || pollen.today === '3-4') {\n          return TilePriority.important\n        }\n        return TilePriority.middle\n      }\n      case TileType.forecast: {\n        return TilePriority.middle\n      }\n      case TileType.history: {\n        return TilePriority.low\n      }\n    }\n    return TilePriority.low\n  }\n\n  /**\n   * Helper function \n   */\n  private addTileTo(tilesArray: Tile[], tile: Tile) {\n    tilesArray.push(tile);\n    this.orderItemsIn(tilesArray);\n  }\n\n  /**\n   * Helper function \n   */\n  private addOrReplaceTileTo(tilesArray: Tile[], tile: Tile) {\n    let indexInTilesArray = this.getIndexOfTileIn(tilesArray, tile.id);\n\n    if(indexInTilesArray > -1) {\n      tilesArray[indexInTilesArray] = tile;\n      return\n    }\n    tilesArray.push(tile);\n    this.orderItemsIn(tilesArray);\n  }\n\n  /**\n   * Helper function \n   */\n  private getIndexOfTileIn(tilesArray: Tile[], id: string): number {\n    return tilesArray.findIndex(element => element.id === id);\n  }\n\n  /**\n   * Helper function \n   */\n  private orderItemsIn(tilesArray: Tile[]): void {\n    tilesArray.sort((a, b) => a.priority - b.priority);\n  }\n}\n\n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TtsPlayerElementComponent.html":{"url":"components/TtsPlayerElementComponent.html","title":"component - TtsPlayerElementComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TtsPlayerElementComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/ui-elements/tts-player-element/tts-player-element.component.ts\n\n\n    \n        Description\n    \n    \n        TTS player element\nThis component displays the controls for the tts feature of the \nweb app. This feature is activated if the user prefers the self-voicing-\nfeature. This component uses the speech service to start the tts function. \n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-tts-player-element\n            \n\n            \n                styleUrls\n                ./tts-player-element.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./tts-player-element.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                play\n                            \n                            \n                                    Optional\n                                userContext\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                listenForStop\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onPause\n                            \n                            \n                                onPlay\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                ttsTextGeneratorFunction\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userContextService: UserContextService, speechService: SpeechService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/ui-elements/tts-player-element/tts-player-element.component.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userContextService\n                                                  \n                                                        \n                                                                        UserContextService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        speechService\n                                                  \n                                                        \n                                                                        SpeechService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        ttsTextGeneratorFunction\n                    \n                \n                \n                    \n                        Type :         function\n\n                    \n                \n                \n                    \n                        Default value : () => \"\"\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/ui-elements/tts-player-element/tts-player-element.component.ts:26\n                            \n                        \n                \n                    \n                        Very important function which is passed by the parent \ncomponent. The parent components have to define the function\nso that the text is generated when the user presses play. \n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            listenForStop\n                        \n                        \n                    \n                \n            \n            \n                \nlistenForStop(speechService: SpeechService)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/ui-elements/tts-player-element/tts-player-element.component.ts:58\n                \n            \n\n\n            \n                \n                    Listens for the stop of the speech output.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    speechService\n                                    \n                                                SpeechService\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/ui-elements/tts-player-element/tts-player-element.component.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onPause\n                        \n                        \n                    \n                \n            \n            \n                \nonPause()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/ui-elements/tts-player-element/tts-player-element.component.ts:40\n                \n            \n\n\n            \n                \n                    Stops the tts feature\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onPlay\n                        \n                        \n                    \n                \n            \n            \n                \nonPlay()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/ui-elements/tts-player-element/tts-player-element.component.ts:48\n                \n            \n\n\n            \n                \n                    Starts the tts feature.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            play\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/ui-elements/tts-player-element/tts-player-element.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            userContext\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserContext\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/ui-elements/tts-player-element/tts-player-element.component.ts:20\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { UserContext } from 'src/app/model/user-context';\nimport { SpeechService } from 'src/app/services/speech.service';\nimport { UserContextService } from 'src/app/services/user-context.service';\n\n/**\n * TTS player element\n * \n * This component displays the controls for the tts feature of the \n * web app. This feature is activated if the user prefers the self-voicing-\n * feature. This component uses the speech service to start the tts function. \n */\n@Component({\n  selector: 'app-tts-player-element',\n  templateUrl: './tts-player-element.component.html',\n  styleUrls: ['./tts-player-element.component.scss']\n})\nexport class TtsPlayerElementComponent implements OnInit {\n  play: boolean = false;\n  userContext?: UserContext\n  /**\n   * Very important function which is passed by the parent \n   * component. The parent components have to define the function\n   * so that the text is generated when the user presses play. \n   */\n  @Input() ttsTextGeneratorFunction: () => string = () => \"\";\n\n  constructor(private userContextService: UserContextService,\n              private speechService: SpeechService) { }\n\n  ngOnInit(): void {\n    this.userContextService.getUserContextSubject().subscribe(data => {\n      this.userContext = data;\n    })\n  }\n\n  /**\n   * Stops the tts feature\n   */\n  onPause() {\n    this.play = false;\n    this.speechService.stopOutput();\n  }\n\n  /**\n   * Starts the tts feature.\n   */\n  onPlay() {\n    this.play = true;\n    let text = this.ttsTextGeneratorFunction();\n    this.speechService.startOutput(text);\n    this.listenForStop(this.speechService);\n  }\n\n  /**\n   * Listens for the stop of the speech output.\n   */\n  listenForStop(speechService: SpeechService) {\n    let service = speechService\n    if(service.isOutputRunning()) {\n      setTimeout(() => this.listenForStop(service), 1000);\n    } else {\n      this.play = false;\n    }\n  }\n}\n\n    \n\n    \n        \n    \n        \n            Path\n            \n                \n                    \n                \n            \n        \n    \n    \n        \n            Group\n            \n                \n                    \n                        \n                        \n                    \n                \n            \n        \n    \n\n\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n  \n    \n\n    \n                \n                    ./tts-player-element.component.scss\n                \n                @import \"../../shared/styles\";\n\n.action-button {\n    height: 1.5em;\n}\n\n.action-button-icon {\n    height: 1.4em;\n}\n\n.action-button-icon * {\n    fill: var(--text);\n}\n\n.container {\n    position: fixed;\n    left: 0;\n    bottom: 0;\n    display: flex;\n    flex-direction: row;\n    flex-wrap: nowrap;\n    width: 190px;\n\n    background-color: var(--surface);\n    padding: var(--padding);\n    margin: 0 var(--border-padding-right) var(--border-padding-right) var(--border-padding-left);\n    border-radius: var(--corner-radius);\n    border: 1px solid var(--border);\n\n    @include drop-shadow;\n}\n\n.bars {\n    height: 1.5em;\n    left: calc(var(--border-padding-right) + 55px);\n    margin: -30px 0 0 -20px;\n    position: absolute;\n    top: 100%;\n    width: 40px;\n\n    .bar {\n        background: var(--secondary);\n        bottom: 1px;\n        height: 3px;\n        position: absolute;\n        width: 5px;      \n    }\n    \n    @keyframes sound {\n        0% {\n            opacity: .35;\n            height: 3px; \n        }\n        100% {\n            opacity: 1;       \n            height: 28px;        \n        }\n    }\n    \n    .bar:nth-child(1)  { \n        left: 1px; \n        animation-duration: 474ms; \n    }\n    .bar:nth-child(2)  { \n        left: 8px; \n        animation-duration: 433ms; \n    }\n    .bar:nth-child(3)  { \n        left: 15px; \n        animation-duration: 407ms; \n    }\n    .bar:nth-child(4)  { \n        left: 22px; \n        animation-duration: 458ms; \n    }\n    .bar:nth-child(5)  { \n        left: 29px; \n        animation-duration: 400ms; \n    }\n    .bar:nth-child(6)  { \n        left: 36px; \n        animation-duration: 427ms; \n    }\n    .bar:nth-child(7)  { \n        left: 43px; \n        animation-duration: 441ms; \n    }\n    .bar:nth-child(8)  { \n        left: 50px; \n        animation-duration: 419ms; \n    }\n    .bar:nth-child(9)  { \n        left: 57px; \n        animation-duration: 487ms; \n    }\n    .bar:nth-child(10) { \n        left: 64px; \n        animation-duration: 442ms; \n    }​\n    .bar:nth-child(11)  { \n        left: 71px; \n        animation-duration: 474ms; \n    }\n    .bar:nth-child(12)  { \n        left: 78px; \n        animation-duration: 433ms; \n    }\n    .bar:nth-child(13)  { \n        left: 85px; \n        animation-duration: 407ms; \n    }\n    .bar:nth-child(14)  { \n        left: 92px; \n        animation-duration: 458ms; \n    }\n    .bar:nth-child(15)  { \n        left: 99px; \n        animation-duration: 400ms; \n    }\n    .bar:nth-child(16)  { \n        left: 106px; \n        animation-duration: 427ms; \n    }\n    .bar:nth-child(17)  { \n        left: 113px; \n        animation-duration: 441ms; \n    }\n    .bar:nth-child(18)  { \n        left: 120px; \n        animation-duration: 419ms; \n    }\n    .bar:nth-child(19)  { \n        left: 127px; \n        animation-duration: 487ms; \n    }\n    .bar:nth-child(20) { \n        left: 134px; \n        animation-duration: 442ms; \n    }​\n    \n    {}\n}\n\n.bars-play {\n    .bar {\n        animation: sound 0ms -800ms linear infinite alternate;\n    }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        Path                                                                                                                Group                                                                                                                                                                                                                                                  '\n    var COMPONENTS = [{'name': 'ApparentTemperatureTileViewComponent', 'selector': 'app-apparent-temperature-tile-view'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BackButtonElementComponent', 'selector': 'app-back-button-element'},{'name': 'CalibrationInfoDetailViewComponent', 'selector': 'app-calibration-info-detail-view'},{'name': 'CardElementComponent', 'selector': 'card-element'},{'name': 'CheckboxSwitcherElementComponent', 'selector': 'app-checkbox-switcher-element'},{'name': 'ConfigurationTilePopUpDialogView', 'selector': 'configuration-tile-popup-view'},{'name': 'ConfigurationTileViewComponent', 'selector': 'app-configuration-tile-view'},{'name': 'ConfigurationViewComponent', 'selector': 'app-configuration-view'},{'name': 'DashboardScreenComponent', 'selector': 'app-dashboard-screen'},{'name': 'DashboardViewComponent', 'selector': 'app-dashboard-view'},{'name': 'DetailScreenComponent', 'selector': 'app-detail-screen'},{'name': 'ForecastDetailViewComponent', 'selector': 'app-forecast-detail-view'},{'name': 'ForecastTileViewComponent', 'selector': 'app-forecast-tile-view'},{'name': 'HistoryDetailViewComponent', 'selector': 'app-history-detail-view'},{'name': 'HistoryTileViewComponent', 'selector': 'app-history-tile-view'},{'name': 'HumidityTileViewComponent', 'selector': 'app-humidity-tile-view'},{'name': 'IndoorDetailViewComponent', 'selector': 'app-indoor-detail-view'},{'name': 'IndoorTileViewComponent', 'selector': 'app-indoor-tile-view'},{'name': 'LoginViewComponent', 'selector': 'app-login-view'},{'name': 'MenuBarElementComponent', 'selector': 'app-menu-bar-element'},{'name': 'MenuButtonElementComponent', 'selector': 'app-menu-button-element'},{'name': 'MenuElementComponent', 'selector': 'app-menu-element'},{'name': 'NavBarElementComponent', 'selector': 'app-nav-bar-element'},{'name': 'OnboardingScreenComponent', 'selector': 'app-onboarding-screen'},{'name': 'OpenAPELoginTileViewComponent', 'selector': 'app-open-apelogin-tile-view'},{'name': 'OutdoorWeatherDetailViewComponent', 'selector': 'app-outdoor-weather-detail-view'},{'name': 'OutdoorWeatherViewComponent', 'selector': 'app-outdoor-weather-view'},{'name': 'PersonalizationSettingsViewComponent', 'selector': 'app-personalization-settings-view'},{'name': 'PersonalizationViewComponent', 'selector': 'app-personalization-view'},{'name': 'PollenflugDetailViewComponent', 'selector': 'app-pollenflug-detail-view'},{'name': 'PollenflugSmallTileComponent', 'selector': 'app-pollenflug-small-tile'},{'name': 'PollenflugTileViewComponent', 'selector': 'app-pollenflug-tile-view'},{'name': 'PollenListElementComponent', 'selector': 'app-pollen-list-element'},{'name': 'PollenTagElementComponent', 'selector': 'app-pollen-tag-element'},{'name': 'ProgressChartElementComponent', 'selector': 'app-progress-chart-element'},{'name': 'RegistrationViewComponent', 'selector': 'app-registration-view'},{'name': 'SettingsScreenComponent', 'selector': 'app-settings-screen'},{'name': 'SimpleTileViewComponent', 'selector': 'app-simple-tile-view'},{'name': 'SliderElementComponent', 'selector': 'app-slider-element'},{'name': 'TtsPlayerElementComponent', 'selector': 'app-tts-player-element'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TtsPlayerElementComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UiElementsModule.html":{"url":"modules/UiElementsModule.html","title":"module - UiElementsModule","body":"\n                   \n\n\n\n\n    Modules\n    UiElementsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UiElementsModule\n\n\n\ncluster_UiElementsModule_declarations\n\n\n\ncluster_UiElementsModule_exports\n\n\n\n\nBackButtonElementComponent\n\nBackButtonElementComponent\n\n\n\nUiElementsModule\n\nUiElementsModule\n\nUiElementsModule -->\n\nBackButtonElementComponent->UiElementsModule\n\n\n\n\n\nCardElementComponent\n\nCardElementComponent\n\nUiElementsModule -->\n\nCardElementComponent->UiElementsModule\n\n\n\n\n\nCheckboxSwitcherElementComponent\n\nCheckboxSwitcherElementComponent\n\nUiElementsModule -->\n\nCheckboxSwitcherElementComponent->UiElementsModule\n\n\n\n\n\nMenuBarElementComponent\n\nMenuBarElementComponent\n\nUiElementsModule -->\n\nMenuBarElementComponent->UiElementsModule\n\n\n\n\n\nMenuButtonElementComponent\n\nMenuButtonElementComponent\n\nUiElementsModule -->\n\nMenuButtonElementComponent->UiElementsModule\n\n\n\n\n\nMenuElementComponent\n\nMenuElementComponent\n\nUiElementsModule -->\n\nMenuElementComponent->UiElementsModule\n\n\n\n\n\nNavBarElementComponent\n\nNavBarElementComponent\n\nUiElementsModule -->\n\nNavBarElementComponent->UiElementsModule\n\n\n\n\n\nPollenListElementComponent\n\nPollenListElementComponent\n\nUiElementsModule -->\n\nPollenListElementComponent->UiElementsModule\n\n\n\n\n\nPollenTagElementComponent\n\nPollenTagElementComponent\n\nUiElementsModule -->\n\nPollenTagElementComponent->UiElementsModule\n\n\n\n\n\nProgressChartElementComponent\n\nProgressChartElementComponent\n\nUiElementsModule -->\n\nProgressChartElementComponent->UiElementsModule\n\n\n\n\n\nSliderElementComponent\n\nSliderElementComponent\n\nUiElementsModule -->\n\nSliderElementComponent->UiElementsModule\n\n\n\n\n\nTtsPlayerElementComponent\n\nTtsPlayerElementComponent\n\nUiElementsModule -->\n\nTtsPlayerElementComponent->UiElementsModule\n\n\n\n\n\nBackButtonElementComponent \n\nBackButtonElementComponent \n\nBackButtonElementComponent  -->\n\nUiElementsModule->BackButtonElementComponent \n\n\n\n\n\nCardElementComponent \n\nCardElementComponent \n\nCardElementComponent  -->\n\nUiElementsModule->CardElementComponent \n\n\n\n\n\nCheckboxSwitcherElementComponent \n\nCheckboxSwitcherElementComponent \n\nCheckboxSwitcherElementComponent  -->\n\nUiElementsModule->CheckboxSwitcherElementComponent \n\n\n\n\n\nMenuBarElementComponent \n\nMenuBarElementComponent \n\nMenuBarElementComponent  -->\n\nUiElementsModule->MenuBarElementComponent \n\n\n\n\n\nMenuButtonElementComponent \n\nMenuButtonElementComponent \n\nMenuButtonElementComponent  -->\n\nUiElementsModule->MenuButtonElementComponent \n\n\n\n\n\nMenuElementComponent \n\nMenuElementComponent \n\nMenuElementComponent  -->\n\nUiElementsModule->MenuElementComponent \n\n\n\n\n\nNavBarElementComponent \n\nNavBarElementComponent \n\nNavBarElementComponent  -->\n\nUiElementsModule->NavBarElementComponent \n\n\n\n\n\nPollenListElementComponent \n\nPollenListElementComponent \n\nPollenListElementComponent  -->\n\nUiElementsModule->PollenListElementComponent \n\n\n\n\n\nPollenTagElementComponent \n\nPollenTagElementComponent \n\nPollenTagElementComponent  -->\n\nUiElementsModule->PollenTagElementComponent \n\n\n\n\n\nProgressChartElementComponent \n\nProgressChartElementComponent \n\nProgressChartElementComponent  -->\n\nUiElementsModule->ProgressChartElementComponent \n\n\n\n\n\nSliderElementComponent \n\nSliderElementComponent \n\nSliderElementComponent  -->\n\nUiElementsModule->SliderElementComponent \n\n\n\n\n\nTtsPlayerElementComponent \n\nTtsPlayerElementComponent \n\nTtsPlayerElementComponent  -->\n\nUiElementsModule->TtsPlayerElementComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/ui-elements/ui-elements.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            BackButtonElementComponent\n                        \n                        \n                            CardElementComponent\n                        \n                        \n                            CheckboxSwitcherElementComponent\n                        \n                        \n                            MenuBarElementComponent\n                        \n                        \n                            MenuButtonElementComponent\n                        \n                        \n                            MenuElementComponent\n                        \n                        \n                            NavBarElementComponent\n                        \n                        \n                            PollenListElementComponent\n                        \n                        \n                            PollenTagElementComponent\n                        \n                        \n                            ProgressChartElementComponent\n                        \n                        \n                            SliderElementComponent\n                        \n                        \n                            TtsPlayerElementComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            BackButtonElementComponent\n                        \n                        \n                            CardElementComponent\n                        \n                        \n                            CheckboxSwitcherElementComponent\n                        \n                        \n                            MenuBarElementComponent\n                        \n                        \n                            MenuButtonElementComponent\n                        \n                        \n                            MenuElementComponent\n                        \n                        \n                            NavBarElementComponent\n                        \n                        \n                            PollenListElementComponent\n                        \n                        \n                            PollenTagElementComponent\n                        \n                        \n                            ProgressChartElementComponent\n                        \n                        \n                            SliderElementComponent\n                        \n                        \n                            TtsPlayerElementComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BackButtonElementComponent } from './back-button-element/back-button-element.component';\nimport { NavBarElementComponent } from './nav-bar-element/nav-bar-element.component';\nimport { CardElementComponent } from './card-element/card-element.component';\nimport { MenuBarElementComponent } from './menu-bar-element/menu-bar-element.component';\nimport { MenuButtonElementComponent } from './menu-button-element/menu-button-element.component';\nimport { ProgressChartElementComponent } from './progress-chart-element/progress-chart-element.component';\nimport { CheckboxSwitcherElementComponent } from './checkbox-switcher-element/checkbox-switcher-element.component';\nimport { MenuElementComponent } from './menu-element/menu-element.component';\nimport { SliderElementComponent } from './slider-element/slider-element.component';\nimport { FormsModule } from '@angular/forms';\nimport { PollenListElementComponent } from './pollen-list-element/pollen-list-element.component';\nimport { PollenTagElementComponent } from './pollen-tag-element/pollen-tag-element.component';\nimport { TtsPlayerElementComponent } from './tts-player-element/tts-player-element.component';\n\n\n\n\n@NgModule({\n  declarations: [\n    BackButtonElementComponent,\n    NavBarElementComponent,\n    CardElementComponent,\n    MenuBarElementComponent,\n    MenuButtonElementComponent,\n    ProgressChartElementComponent,\n    CheckboxSwitcherElementComponent,\n    MenuElementComponent,\n    SliderElementComponent,\n    PollenListElementComponent,\n    PollenTagElementComponent,\n    TtsPlayerElementComponent,\n  ],\n  imports: [\n    CommonModule,\n    FormsModule\n  ],\n  exports: [\n    BackButtonElementComponent,\n    NavBarElementComponent,\n    CardElementComponent,\n    MenuBarElementComponent,\n    MenuButtonElementComponent,\n    ProgressChartElementComponent,\n    CheckboxSwitcherElementComponent,\n    MenuElementComponent,\n    SliderElementComponent,\n    PollenListElementComponent,\n    PollenTagElementComponent,\n    TtsPlayerElementComponent,\n  ]\n})\nexport class UiElementsModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserContext.html":{"url":"interfaces/UserContext.html","title":"interface - UserContext","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  UserContext\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/user-context.ts\n        \n\n            \n                Description\n            \n            \n                Model of the user context.\nIt cotains all information which are needed for the personalization\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        doVentilationReminder\n                                \n                                \n                                        fontSize\n                                \n                                \n                                        pollen\n                                \n                                \n                                        reduceMotion\n                                \n                                \n                                        selfVoicingEnabled\n                                \n                                \n                                        theme\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        doVentilationReminder\n                                    \n                                \n                                \n                                    \n                                        doVentilationReminder:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fontSize\n                                    \n                                \n                                \n                                    \n                                        fontSize:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pollen\n                                    \n                                \n                                \n                                    \n                                        pollen:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        reduceMotion\n                                    \n                                \n                                \n                                    \n                                        reduceMotion:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selfVoicingEnabled\n                                    \n                                \n                                \n                                    \n                                        selfVoicingEnabled:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        theme\n                                    \n                                \n                                \n                                    \n                                        theme:         Themes\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Themes\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface UserContext {\n    theme: Themes,\n    fontSize: number, // in %\n    pollen: string[], // Um die Mockdaten einfacher zu erstellen in Array konvertiert. Kann auch wieder in Map gewandelt werden.\n    selfVoicingEnabled: boolean,\n    doVentilationReminder: boolean, // TODO: What if multiple users have concurring settings here?\n    reduceMotion: boolean, // New element: For people with vestibular disorders is animation triggerd by scrolling not good.\n};\n\n/**\n * Model of the User Identifikation. It contains the token \n * and user id. These are needed for the identification of the user \n * by the backend. \n */\nexport interface UserIdentifikation {\n    token: string,\n    id: number,\n}\n\nexport enum Themes {\n    Light,\n    Dark,\n    Automatic,\n    HighContrast\n};\n\nexport interface PollenType {\n    id: number,\n    pollenName: string\n};\n\nexport enum Language {\n    'de-DE',\n    'en-EN'\n};\n\n/** Empty user context */\nexport const INITIAL_USER_CONTEXT: UserContext = {\n    theme: Themes.Automatic,\n    fontSize: 62.5,\n    pollen: [],\n    selfVoicingEnabled: false,\n    doVentilationReminder: false,\n    reduceMotion: false,\n};\n\n/** Empty user identifikation */\nexport const INITIAL_USER_IDENTIFIKATION: UserIdentifikation = {\n    token: '',\n    id: -99,\n};\n\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserContextAPIService.html":{"url":"injectables/UserContextAPIService.html","title":"injectable - UserContextAPIService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserContextAPIService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/api/user-context-api.service.ts\n        \n\n            \n                Description\n            \n            \n                User context api service injectable\nUse this service to access the network. It implements all routes for \nuser context data\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                deletePolleFromUserContext\n                            \n                            \n                                    Public\n                                loadPollenTypes\n                            \n                            \n                                    Public\n                                loadUserContext\n                            \n                            \n                                    Public\n                                postIsTokenValid\n                            \n                            \n                                    Public\n                                postLogin\n                            \n                            \n                                    Public\n                                postLoginOpenAPE\n                            \n                            \n                                    Public\n                                postPolleToUserContext\n                            \n                            \n                                    Public\n                                postRegister\n                            \n                            \n                                    Public\n                                putSaveUserContext\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/api/user-context-api.service.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            deletePolleFromUserContext\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deletePolleFromUserContext(userID: UserIdentifikation, pollenID: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/api/user-context-api.service.ts:161\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userID\n                                    \n                                                UserIdentifikation\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pollenID\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        an observable with a boolean if the deletion user context was successful or not\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            loadPollenTypes\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    loadPollenTypes()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/api/user-context-api.service.ts:259\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        an observable with pollen types array\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            loadUserContext\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    loadUserContext(token: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/api/user-context-api.service.ts:238\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        an observable with an user context object\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            postIsTokenValid\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    postIsTokenValid(token: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/api/user-context-api.service.ts:217\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        an observable with a boolean if the token is valid or not\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            postLogin\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    postLogin(password: string, username: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/api/user-context-api.service.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        an observable with the user identifikation and the user context\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            postLoginOpenAPE\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    postLoginOpenAPE(username: string, password: string, userID: UserIdentifikation)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/api/user-context-api.service.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userID\n                                    \n                                                UserIdentifikation\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        an observable with an user context object\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            postPolleToUserContext\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    postPolleToUserContext(userID: UserIdentifikation, pollenID: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/api/user-context-api.service.ts:190\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userID\n                                    \n                                                UserIdentifikation\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pollenID\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        an observable with a boolean if the insertion was successful or not\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            postRegister\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    postRegister(password: string, username: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/api/user-context-api.service.ts:94\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        an observable with a boolean if the register was successful or not\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            putSaveUserContext\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    putSaveUserContext(userID: UserIdentifikation, userContext: UserContext)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/api/user-context-api.service.ts:124\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userID\n                                    \n                                                UserIdentifikation\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userContext\n                                    \n                                                UserContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        an observable with a boolean if the saving user context was successful or not\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { PollenType, Themes, UserContext, UserIdentifikation } from '../../model/user-context';\n\n/**\n * User context api service injectable\n * \n * Use this service to access the network. It implements all routes for \n * user context data\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserContextAPIService {\n  private loginURL = environment.baseURL + 'auth/login';\n  private registerURL = environment.baseURL + 'user/register';\n  private checkTokenURL = environment.baseURL + 'auth/checkToken';\n  private currentUserContextURL = environment.baseURL + 'user/currentUser';\n  private saveUserContextURL = environment.baseURL + 'user/save';\n  private allPollenTypesURL = environment.baseURL + 'pollen/all';\n  private deletePollenURL = environment.baseURL + 'allergies/delete';\n  private savePollenURL = environment.baseURL + 'allergies/save';\n  private openAPEURL = environment.baseURL + 'user/loadOpenAPESettingsAndSave';\n\n  constructor(private httpClient: HttpClient) { }\n\n  /**\n   * @returns an observable with the user identifikation and the user context\n   */\n  public postLogin(password: string, username: string): Observable {\n    let returnObservable = new Observable((observer) => {\n      let response = this.httpClient.post(this.loginURL, \n                                                        {username: username, password: password}, {observe: 'response'});\n      response.subscribe((response) => {\n        let body = response.body\n        if(body){\n          if(body.success) {\n            observer.next({\n              userID: {\n                token: body.token,\n                id: body.userContext.id\n              },\n              userContext: this.createUserContextFromServerResponse(body.userContext)\n            });\n          } else {\n            observer.error(body.message);\n          }\n        }\n      },\n      (error)=> {\n        observer.error(\"Ein Fehler ist aufgetreten. Bitte versuche es später erneut. \");\n        console.log(error);\n        observer.complete();\n      },() => {\n        observer.complete();\n      });\n    }\n  );\n  return returnObservable;\n  }\n\n  /**\n   * @returns an observable with an user context object\n   */\n  public postLoginOpenAPE(username: string, password: string, userID: UserIdentifikation): Observable {\n    let returnObservable = new Observable((observer) => {\n      let httpOptions = {\n        headers: new HttpHeaders({ 'Authorization': 'Bearer ' + userID.token }),\n      };\n      let response = this.httpClient.post(this.openAPEURL, \n                                                              {openApeUser: username, openApePassword: password}, httpOptions);\n      response.subscribe((response) => {\n        if(response){\n            observer.next(this.createUserContextFromServerResponse(response));\n        }\n      },\n      (error)=> {\n        observer.error(\"Ein Fehler ist aufgetreten. Bitte versuche es später erneut. \");\n        console.log(error);\n        observer.complete();\n      },() => {\n        observer.complete();\n      });\n    }\n  );\n  return returnObservable;\n  }\n\n  /**\n   * @returns an observable with a boolean if the register was successful or not\n   */\n  public postRegister(password: string, username: string): Observable {\n    let returnObservable = new Observable((observer) => {\n      let response = this.httpClient.post(this.registerURL, \n                                                              {username: username, password: password}, {observe: 'response'});\n      response.subscribe((response) => {\n        let body = response.body\n        if(body){\n          if(body.id) {\n            observer.next(true);\n          } else {\n            observer.error(\"Ein Fehler ist aufgetreten. Bitte versuche es später erneut\");\n          }\n        }\n      },\n      (error)=> {\n        observer.error(\"Ein Fehler ist aufgetreten. Bitte versuche es später erneut\");\n        console.log(error);\n        observer.complete();\n      },\n      () => {\n        observer.complete();\n      });\n    }\n  );\n  return returnObservable;\n  }\n\n  /**\n   * @returns an observable with a boolean if the saving user context was successful or not\n   */\n  public putSaveUserContext(userID: UserIdentifikation, userContext: UserContext): Observable{\n    let body = {\n      theme: Themes[userContext.theme],\n      fontSize: userContext.fontSize,\n      selfVoicingEnabled: userContext.selfVoicingEnabled,\n      doVentilationReminder: userContext.doVentilationReminder,\n      reduceMotion: userContext.reduceMotion\n    }\n    let httpOptions = {\n      headers: new HttpHeaders({ 'Authorization': 'Bearer ' + userID.token }),\n      params: new HttpParams().set('id', userID.id + ''),\n    };\n    let returnObservable = new Observable((observer) => {\n      let response = this.httpClient.put(this.saveUserContextURL, body, httpOptions);\n      response.subscribe((response) => {\n        let body = response\n        if(body && body.id) {\n          observer.next(true);\n        } else {\n          observer.error(\"POST - SAVE USER CONTEXT - Ein Fehler ist aufgetreten.\");\n        }\n      },\n      (error)=> {\n        observer.error(\"POST - SAVE USER CONTEXT - Ein Fehler ist aufgetreten.\");\n        console.log(error);\n        observer.complete();\n      }, \n      () => {\n        observer.complete();\n      });\n    });\n    return returnObservable;\n  }\n\n  /**\n   * @returns an observable with a boolean if the deletion user context was successful or not\n   */\n  public deletePolleFromUserContext(userID: UserIdentifikation, pollenID: number): Observable  {\n    let body = {\n      userID: userID.id,\n      pollenID: pollenID\n    }\n    let httpOptions = {\n      headers: new HttpHeaders({ 'Authorization': 'Bearer ' + userID.token }), body: body\n    };\n    let returnObservable = new Observable((observer) => {\n      let response = this.httpClient.delete(this.deletePollenURL, httpOptions);\n      response.subscribe(() => {\n        observer.next(true);\n      },\n      (error) => {\n        observer.error(\"DELETE - Polle\");\n        console.log(error);\n        observer.complete();\n      }, \n      () => {\n        observer.complete();\n      });\n\n    });\n    return returnObservable;\n  }\n\n  /**\n   * @returns an observable with a boolean if the insertion was successful or not\n   */\n  public postPolleToUserContext(userID: UserIdentifikation, pollenID: number): Observable {\n    let body = {\n      userID: userID.id,\n      pollenID: pollenID\n    }\n    let httpOptions = {\n      headers: new HttpHeaders({ 'Authorization': 'Bearer ' + userID.token }),\n    };\n    let returnObservable = new Observable((observer) => {\n      let response = this.httpClient.post(this.savePollenURL, body, httpOptions);\n      response.subscribe(() => {\n        observer.next(true);\n      },\n      (error)=> {\n        observer.error(\"DELETE - Polle\");\n        console.log(error);\n        observer.complete();\n      }, \n      () => {\n        observer.complete();\n      });\n    });\n    return returnObservable;\n  }\n  /**\n   * @returns an observable with a boolean if the token is valid or not\n   */\n  public postIsTokenValid(token: string): Observable {\n    let returnObservable = new Observable((observer) => {\n      let httpOptions = {\n        headers: new HttpHeaders({ 'Authorization': 'Bearer ' + token })\n      };\n      let response = this.httpClient.get(this.checkTokenURL, httpOptions);\n      response.subscribe(data => {\n        observer.next(data.success);\n        observer.complete();\n      }, \n      () => {\n        observer.next(false);\n        observer.complete();\n      })\n    });\n    return returnObservable;\n  }\n\n  /**\n   * @returns an observable with an user context object\n   */\n  public loadUserContext(token: string): Observable{\n    let returnObservable = new Observable((observer) => {\n      let httpOptions = {\n        headers: new HttpHeaders({ 'Authorization': 'Bearer ' + token })\n      };\n      let response = this.httpClient.get(this.currentUserContextURL, httpOptions);\n      response.subscribe(context => {\n        observer.next(this.createUserContextFromServerResponse(context));\n        observer.complete();\n      }, \n      () => {\n        observer.error(\"An error occured\")\n        observer.complete();\n      })\n    });\n    return returnObservable;\n  }\n\n  /**\n   * @returns an observable with pollen types array\n   */\n  public loadPollenTypes(): Observable{\n    let returnObservable = new Observable((observer) => {\n      let response = this.httpClient.get(this.allPollenTypesURL);\n      response.subscribe(data => {\n        observer.next(data);\n      });\n    });\n    return returnObservable\n  }\n\n  /**\n   * Helper function to create user context object from server response.\n   * @param userContext \n   * @returns an user context object\n   */\n  private createUserContextFromServerResponse(userContext: UserContextResponse): UserContext {\n    return {\n      theme: this.getThemeTypeFromServerResponse(userContext.theme),\n      fontSize: userContext.fontSize,\n      pollen: userContext.pollen, \n      doVentilationReminder: userContext.doVentilationReminder,\n      reduceMotion: userContext.reduceMotion,\n      selfVoicingEnabled: userContext.selfVoicingEnabled\n    }\n  }\n\n  /**\n   * Helper function to convert theme String to Theme type\n   * @return the converted Theme\n   */\n  private getThemeTypeFromServerResponse(theme: string): Themes {\n    switch(theme) {\n      case \"Dark\": return Themes.Dark;\n      case \"Light\": return Themes.Light;\n      case \"HighContrast\": return Themes.HighContrast;\n      default: return Themes.Automatic;\n    }\n  }\n}\n\n/**\n * Model of the login response\n */\ninterface LoginResponse {\n  success: boolean,\n  message: string,\n  userContext: UserContextResponse,\n  token: string,\n}\n\n/**\n * Model of the user context response\n */\ninterface UserContextResponse {\n  id: number,\n  username: string,\n  theme: string,\n  fontSize: number,\n  selfVoicingEnabled: boolean,\n  doVentilationReminder: boolean,\n  reduceMotion: boolean,\n  pollen: string[]\n}\n\n/**\n * Model of the check token response\n */\ninterface CheckTokenResponse {\n  success: boolean,\n  message: string,\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserContextResponse.html":{"url":"interfaces/UserContextResponse.html","title":"interface - UserContextResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  UserContextResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/api/user-context-api.service.ts\n        \n\n            \n                Description\n            \n            \n                Model of the user context response\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        doVentilationReminder\n                                \n                                \n                                        fontSize\n                                \n                                \n                                        id\n                                \n                                \n                                        pollen\n                                \n                                \n                                        reduceMotion\n                                \n                                \n                                        selfVoicingEnabled\n                                \n                                \n                                        theme\n                                \n                                \n                                        username\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        doVentilationReminder\n                                    \n                                \n                                \n                                    \n                                        doVentilationReminder:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fontSize\n                                    \n                                \n                                \n                                    \n                                        fontSize:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pollen\n                                    \n                                \n                                \n                                    \n                                        pollen:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        reduceMotion\n                                    \n                                \n                                \n                                    \n                                        reduceMotion:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selfVoicingEnabled\n                                    \n                                \n                                \n                                    \n                                        selfVoicingEnabled:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        theme\n                                    \n                                \n                                \n                                    \n                                        theme:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { PollenType, Themes, UserContext, UserIdentifikation } from '../../model/user-context';\n\n/**\n * User context api service injectable\n * \n * Use this service to access the network. It implements all routes for \n * user context data\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserContextAPIService {\n  private loginURL = environment.baseURL + 'auth/login';\n  private registerURL = environment.baseURL + 'user/register';\n  private checkTokenURL = environment.baseURL + 'auth/checkToken';\n  private currentUserContextURL = environment.baseURL + 'user/currentUser';\n  private saveUserContextURL = environment.baseURL + 'user/save';\n  private allPollenTypesURL = environment.baseURL + 'pollen/all';\n  private deletePollenURL = environment.baseURL + 'allergies/delete';\n  private savePollenURL = environment.baseURL + 'allergies/save';\n  private openAPEURL = environment.baseURL + 'user/loadOpenAPESettingsAndSave';\n\n  constructor(private httpClient: HttpClient) { }\n\n  /**\n   * @returns an observable with the user identifikation and the user context\n   */\n  public postLogin(password: string, username: string): Observable {\n    let returnObservable = new Observable((observer) => {\n      let response = this.httpClient.post(this.loginURL, \n                                                        {username: username, password: password}, {observe: 'response'});\n      response.subscribe((response) => {\n        let body = response.body\n        if(body){\n          if(body.success) {\n            observer.next({\n              userID: {\n                token: body.token,\n                id: body.userContext.id\n              },\n              userContext: this.createUserContextFromServerResponse(body.userContext)\n            });\n          } else {\n            observer.error(body.message);\n          }\n        }\n      },\n      (error)=> {\n        observer.error(\"Ein Fehler ist aufgetreten. Bitte versuche es später erneut. \");\n        console.log(error);\n        observer.complete();\n      },() => {\n        observer.complete();\n      });\n    }\n  );\n  return returnObservable;\n  }\n\n  /**\n   * @returns an observable with an user context object\n   */\n  public postLoginOpenAPE(username: string, password: string, userID: UserIdentifikation): Observable {\n    let returnObservable = new Observable((observer) => {\n      let httpOptions = {\n        headers: new HttpHeaders({ 'Authorization': 'Bearer ' + userID.token }),\n      };\n      let response = this.httpClient.post(this.openAPEURL, \n                                                              {openApeUser: username, openApePassword: password}, httpOptions);\n      response.subscribe((response) => {\n        if(response){\n            observer.next(this.createUserContextFromServerResponse(response));\n        }\n      },\n      (error)=> {\n        observer.error(\"Ein Fehler ist aufgetreten. Bitte versuche es später erneut. \");\n        console.log(error);\n        observer.complete();\n      },() => {\n        observer.complete();\n      });\n    }\n  );\n  return returnObservable;\n  }\n\n  /**\n   * @returns an observable with a boolean if the register was successful or not\n   */\n  public postRegister(password: string, username: string): Observable {\n    let returnObservable = new Observable((observer) => {\n      let response = this.httpClient.post(this.registerURL, \n                                                              {username: username, password: password}, {observe: 'response'});\n      response.subscribe((response) => {\n        let body = response.body\n        if(body){\n          if(body.id) {\n            observer.next(true);\n          } else {\n            observer.error(\"Ein Fehler ist aufgetreten. Bitte versuche es später erneut\");\n          }\n        }\n      },\n      (error)=> {\n        observer.error(\"Ein Fehler ist aufgetreten. Bitte versuche es später erneut\");\n        console.log(error);\n        observer.complete();\n      },\n      () => {\n        observer.complete();\n      });\n    }\n  );\n  return returnObservable;\n  }\n\n  /**\n   * @returns an observable with a boolean if the saving user context was successful or not\n   */\n  public putSaveUserContext(userID: UserIdentifikation, userContext: UserContext): Observable{\n    let body = {\n      theme: Themes[userContext.theme],\n      fontSize: userContext.fontSize,\n      selfVoicingEnabled: userContext.selfVoicingEnabled,\n      doVentilationReminder: userContext.doVentilationReminder,\n      reduceMotion: userContext.reduceMotion\n    }\n    let httpOptions = {\n      headers: new HttpHeaders({ 'Authorization': 'Bearer ' + userID.token }),\n      params: new HttpParams().set('id', userID.id + ''),\n    };\n    let returnObservable = new Observable((observer) => {\n      let response = this.httpClient.put(this.saveUserContextURL, body, httpOptions);\n      response.subscribe((response) => {\n        let body = response\n        if(body && body.id) {\n          observer.next(true);\n        } else {\n          observer.error(\"POST - SAVE USER CONTEXT - Ein Fehler ist aufgetreten.\");\n        }\n      },\n      (error)=> {\n        observer.error(\"POST - SAVE USER CONTEXT - Ein Fehler ist aufgetreten.\");\n        console.log(error);\n        observer.complete();\n      }, \n      () => {\n        observer.complete();\n      });\n    });\n    return returnObservable;\n  }\n\n  /**\n   * @returns an observable with a boolean if the deletion user context was successful or not\n   */\n  public deletePolleFromUserContext(userID: UserIdentifikation, pollenID: number): Observable  {\n    let body = {\n      userID: userID.id,\n      pollenID: pollenID\n    }\n    let httpOptions = {\n      headers: new HttpHeaders({ 'Authorization': 'Bearer ' + userID.token }), body: body\n    };\n    let returnObservable = new Observable((observer) => {\n      let response = this.httpClient.delete(this.deletePollenURL, httpOptions);\n      response.subscribe(() => {\n        observer.next(true);\n      },\n      (error) => {\n        observer.error(\"DELETE - Polle\");\n        console.log(error);\n        observer.complete();\n      }, \n      () => {\n        observer.complete();\n      });\n\n    });\n    return returnObservable;\n  }\n\n  /**\n   * @returns an observable with a boolean if the insertion was successful or not\n   */\n  public postPolleToUserContext(userID: UserIdentifikation, pollenID: number): Observable {\n    let body = {\n      userID: userID.id,\n      pollenID: pollenID\n    }\n    let httpOptions = {\n      headers: new HttpHeaders({ 'Authorization': 'Bearer ' + userID.token }),\n    };\n    let returnObservable = new Observable((observer) => {\n      let response = this.httpClient.post(this.savePollenURL, body, httpOptions);\n      response.subscribe(() => {\n        observer.next(true);\n      },\n      (error)=> {\n        observer.error(\"DELETE - Polle\");\n        console.log(error);\n        observer.complete();\n      }, \n      () => {\n        observer.complete();\n      });\n    });\n    return returnObservable;\n  }\n  /**\n   * @returns an observable with a boolean if the token is valid or not\n   */\n  public postIsTokenValid(token: string): Observable {\n    let returnObservable = new Observable((observer) => {\n      let httpOptions = {\n        headers: new HttpHeaders({ 'Authorization': 'Bearer ' + token })\n      };\n      let response = this.httpClient.get(this.checkTokenURL, httpOptions);\n      response.subscribe(data => {\n        observer.next(data.success);\n        observer.complete();\n      }, \n      () => {\n        observer.next(false);\n        observer.complete();\n      })\n    });\n    return returnObservable;\n  }\n\n  /**\n   * @returns an observable with an user context object\n   */\n  public loadUserContext(token: string): Observable{\n    let returnObservable = new Observable((observer) => {\n      let httpOptions = {\n        headers: new HttpHeaders({ 'Authorization': 'Bearer ' + token })\n      };\n      let response = this.httpClient.get(this.currentUserContextURL, httpOptions);\n      response.subscribe(context => {\n        observer.next(this.createUserContextFromServerResponse(context));\n        observer.complete();\n      }, \n      () => {\n        observer.error(\"An error occured\")\n        observer.complete();\n      })\n    });\n    return returnObservable;\n  }\n\n  /**\n   * @returns an observable with pollen types array\n   */\n  public loadPollenTypes(): Observable{\n    let returnObservable = new Observable((observer) => {\n      let response = this.httpClient.get(this.allPollenTypesURL);\n      response.subscribe(data => {\n        observer.next(data);\n      });\n    });\n    return returnObservable\n  }\n\n  /**\n   * Helper function to create user context object from server response.\n   * @param userContext \n   * @returns an user context object\n   */\n  private createUserContextFromServerResponse(userContext: UserContextResponse): UserContext {\n    return {\n      theme: this.getThemeTypeFromServerResponse(userContext.theme),\n      fontSize: userContext.fontSize,\n      pollen: userContext.pollen, \n      doVentilationReminder: userContext.doVentilationReminder,\n      reduceMotion: userContext.reduceMotion,\n      selfVoicingEnabled: userContext.selfVoicingEnabled\n    }\n  }\n\n  /**\n   * Helper function to convert theme String to Theme type\n   * @return the converted Theme\n   */\n  private getThemeTypeFromServerResponse(theme: string): Themes {\n    switch(theme) {\n      case \"Dark\": return Themes.Dark;\n      case \"Light\": return Themes.Light;\n      case \"HighContrast\": return Themes.HighContrast;\n      default: return Themes.Automatic;\n    }\n  }\n}\n\n/**\n * Model of the login response\n */\ninterface LoginResponse {\n  success: boolean,\n  message: string,\n  userContext: UserContextResponse,\n  token: string,\n}\n\n/**\n * Model of the user context response\n */\ninterface UserContextResponse {\n  id: number,\n  username: string,\n  theme: string,\n  fontSize: number,\n  selfVoicingEnabled: boolean,\n  doVentilationReminder: boolean,\n  reduceMotion: boolean,\n  pollen: string[]\n}\n\n/**\n * Model of the check token response\n */\ninterface CheckTokenResponse {\n  success: boolean,\n  message: string,\n}\n\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserIdentifikation.html":{"url":"interfaces/UserIdentifikation.html","title":"interface - UserIdentifikation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  UserIdentifikation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/user-context.ts\n        \n\n            \n                Description\n            \n            \n                Model of the User Identifikation. It contains the token \nand user id. These are needed for the identification of the user \nby the backend. \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        id\n                                \n                                \n                                        token\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        token\n                                    \n                                \n                                \n                                    \n                                        token:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface UserContext {\n    theme: Themes,\n    fontSize: number, // in %\n    pollen: string[], // Um die Mockdaten einfacher zu erstellen in Array konvertiert. Kann auch wieder in Map gewandelt werden.\n    selfVoicingEnabled: boolean,\n    doVentilationReminder: boolean, // TODO: What if multiple users have concurring settings here?\n    reduceMotion: boolean, // New element: For people with vestibular disorders is animation triggerd by scrolling not good.\n};\n\n/**\n * Model of the User Identifikation. It contains the token \n * and user id. These are needed for the identification of the user \n * by the backend. \n */\nexport interface UserIdentifikation {\n    token: string,\n    id: number,\n}\n\nexport enum Themes {\n    Light,\n    Dark,\n    Automatic,\n    HighContrast\n};\n\nexport interface PollenType {\n    id: number,\n    pollenName: string\n};\n\nexport enum Language {\n    'de-DE',\n    'en-EN'\n};\n\n/** Empty user context */\nexport const INITIAL_USER_CONTEXT: UserContext = {\n    theme: Themes.Automatic,\n    fontSize: 62.5,\n    pollen: [],\n    selfVoicingEnabled: false,\n    doVentilationReminder: false,\n    reduceMotion: false,\n};\n\n/** Empty user identifikation */\nexport const INITIAL_USER_IDENTIFIKATION: UserIdentifikation = {\n    token: '',\n    id: -99,\n};\n\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ViewsModule.html":{"url":"modules/ViewsModule.html","title":"module - ViewsModule","body":"\n                   \n\n\n\n\n    Modules\n    ViewsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ViewsModule\n\n\n\ncluster_ViewsModule_exports\n\n\n\ncluster_ViewsModule_declarations\n\n\n\ncluster_ViewsModule_imports\n\n\n\n\nApparentTemperatureTileViewComponent\n\nApparentTemperatureTileViewComponent\n\n\n\nViewsModule\n\nViewsModule\n\nViewsModule -->\n\nApparentTemperatureTileViewComponent->ViewsModule\n\n\n\n\n\nCalibrationInfoDetailViewComponent\n\nCalibrationInfoDetailViewComponent\n\nViewsModule -->\n\nCalibrationInfoDetailViewComponent->ViewsModule\n\n\n\n\n\nConfigurationTilePopUpDialogView\n\nConfigurationTilePopUpDialogView\n\nViewsModule -->\n\nConfigurationTilePopUpDialogView->ViewsModule\n\n\n\n\n\nConfigurationTileViewComponent\n\nConfigurationTileViewComponent\n\nViewsModule -->\n\nConfigurationTileViewComponent->ViewsModule\n\n\n\n\n\nConfigurationViewComponent\n\nConfigurationViewComponent\n\nViewsModule -->\n\nConfigurationViewComponent->ViewsModule\n\n\n\n\n\nDashboardViewComponent\n\nDashboardViewComponent\n\nViewsModule -->\n\nDashboardViewComponent->ViewsModule\n\n\n\n\n\nForecastDetailViewComponent\n\nForecastDetailViewComponent\n\nViewsModule -->\n\nForecastDetailViewComponent->ViewsModule\n\n\n\n\n\nForecastTileViewComponent\n\nForecastTileViewComponent\n\nViewsModule -->\n\nForecastTileViewComponent->ViewsModule\n\n\n\n\n\nHistoryDetailViewComponent\n\nHistoryDetailViewComponent\n\nViewsModule -->\n\nHistoryDetailViewComponent->ViewsModule\n\n\n\n\n\nHistoryTileViewComponent\n\nHistoryTileViewComponent\n\nViewsModule -->\n\nHistoryTileViewComponent->ViewsModule\n\n\n\n\n\nHumidityTileViewComponent\n\nHumidityTileViewComponent\n\nViewsModule -->\n\nHumidityTileViewComponent->ViewsModule\n\n\n\n\n\nIndoorDetailViewComponent\n\nIndoorDetailViewComponent\n\nViewsModule -->\n\nIndoorDetailViewComponent->ViewsModule\n\n\n\n\n\nIndoorTileViewComponent\n\nIndoorTileViewComponent\n\nViewsModule -->\n\nIndoorTileViewComponent->ViewsModule\n\n\n\n\n\nLoginViewComponent\n\nLoginViewComponent\n\nViewsModule -->\n\nLoginViewComponent->ViewsModule\n\n\n\n\n\nOpenAPELoginTileViewComponent\n\nOpenAPELoginTileViewComponent\n\nViewsModule -->\n\nOpenAPELoginTileViewComponent->ViewsModule\n\n\n\n\n\nOutdoorWeatherDetailViewComponent\n\nOutdoorWeatherDetailViewComponent\n\nViewsModule -->\n\nOutdoorWeatherDetailViewComponent->ViewsModule\n\n\n\n\n\nOutdoorWeatherViewComponent\n\nOutdoorWeatherViewComponent\n\nViewsModule -->\n\nOutdoorWeatherViewComponent->ViewsModule\n\n\n\n\n\nPersonalizationSettingsViewComponent\n\nPersonalizationSettingsViewComponent\n\nViewsModule -->\n\nPersonalizationSettingsViewComponent->ViewsModule\n\n\n\n\n\nPersonalizationViewComponent\n\nPersonalizationViewComponent\n\nViewsModule -->\n\nPersonalizationViewComponent->ViewsModule\n\n\n\n\n\nPollenflugDetailViewComponent\n\nPollenflugDetailViewComponent\n\nViewsModule -->\n\nPollenflugDetailViewComponent->ViewsModule\n\n\n\n\n\nPollenflugSmallTileComponent\n\nPollenflugSmallTileComponent\n\nViewsModule -->\n\nPollenflugSmallTileComponent->ViewsModule\n\n\n\n\n\nPollenflugTileViewComponent\n\nPollenflugTileViewComponent\n\nViewsModule -->\n\nPollenflugTileViewComponent->ViewsModule\n\n\n\n\n\nRegistrationViewComponent\n\nRegistrationViewComponent\n\nViewsModule -->\n\nRegistrationViewComponent->ViewsModule\n\n\n\n\n\nSimpleTileViewComponent\n\nSimpleTileViewComponent\n\nViewsModule -->\n\nSimpleTileViewComponent->ViewsModule\n\n\n\n\n\nCalibrationInfoDetailViewComponent \n\nCalibrationInfoDetailViewComponent \n\nCalibrationInfoDetailViewComponent  -->\n\nViewsModule->CalibrationInfoDetailViewComponent \n\n\n\n\n\nDashboardViewComponent \n\nDashboardViewComponent \n\nDashboardViewComponent  -->\n\nViewsModule->DashboardViewComponent \n\n\n\n\n\nForecastDetailViewComponent \n\nForecastDetailViewComponent \n\nForecastDetailViewComponent  -->\n\nViewsModule->ForecastDetailViewComponent \n\n\n\n\n\nHistoryDetailViewComponent \n\nHistoryDetailViewComponent \n\nHistoryDetailViewComponent  -->\n\nViewsModule->HistoryDetailViewComponent \n\n\n\n\n\nIndoorDetailViewComponent \n\nIndoorDetailViewComponent \n\nIndoorDetailViewComponent  -->\n\nViewsModule->IndoorDetailViewComponent \n\n\n\n\n\nLoginViewComponent \n\nLoginViewComponent \n\nLoginViewComponent  -->\n\nViewsModule->LoginViewComponent \n\n\n\n\n\nOutdoorWeatherDetailViewComponent \n\nOutdoorWeatherDetailViewComponent \n\nOutdoorWeatherDetailViewComponent  -->\n\nViewsModule->OutdoorWeatherDetailViewComponent \n\n\n\n\n\nOutdoorWeatherViewComponent \n\nOutdoorWeatherViewComponent \n\nOutdoorWeatherViewComponent  -->\n\nViewsModule->OutdoorWeatherViewComponent \n\n\n\n\n\nPersonalizationSettingsViewComponent \n\nPersonalizationSettingsViewComponent \n\nPersonalizationSettingsViewComponent  -->\n\nViewsModule->PersonalizationSettingsViewComponent \n\n\n\n\n\nPollenflugDetailViewComponent \n\nPollenflugDetailViewComponent \n\nPollenflugDetailViewComponent  -->\n\nViewsModule->PollenflugDetailViewComponent \n\n\n\n\n\nPollenflugSmallTileComponent \n\nPollenflugSmallTileComponent \n\nPollenflugSmallTileComponent  -->\n\nViewsModule->PollenflugSmallTileComponent \n\n\n\n\n\nRegistrationViewComponent \n\nRegistrationViewComponent \n\nRegistrationViewComponent  -->\n\nViewsModule->RegistrationViewComponent \n\n\n\n\n\nUiElementsModule\n\nUiElementsModule\n\nViewsModule -->\n\nUiElementsModule->ViewsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/views/views.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ApparentTemperatureTileViewComponent\n                        \n                        \n                            CalibrationInfoDetailViewComponent\n                        \n                        \n                            ConfigurationTilePopUpDialogView\n                        \n                        \n                            ConfigurationTileViewComponent\n                        \n                        \n                            ConfigurationViewComponent\n                        \n                        \n                            DashboardViewComponent\n                        \n                        \n                            ForecastDetailViewComponent\n                        \n                        \n                            ForecastTileViewComponent\n                        \n                        \n                            HistoryDetailViewComponent\n                        \n                        \n                            HistoryTileViewComponent\n                        \n                        \n                            HumidityTileViewComponent\n                        \n                        \n                            IndoorDetailViewComponent\n                        \n                        \n                            IndoorTileViewComponent\n                        \n                        \n                            LoginViewComponent\n                        \n                        \n                            OpenAPELoginTileViewComponent\n                        \n                        \n                            OutdoorWeatherDetailViewComponent\n                        \n                        \n                            OutdoorWeatherViewComponent\n                        \n                        \n                            PersonalizationSettingsViewComponent\n                        \n                        \n                            PersonalizationViewComponent\n                        \n                        \n                            PollenflugDetailViewComponent\n                        \n                        \n                            PollenflugSmallTileComponent\n                        \n                        \n                            PollenflugTileViewComponent\n                        \n                        \n                            RegistrationViewComponent\n                        \n                        \n                            SimpleTileViewComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UiElementsModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CalibrationInfoDetailViewComponent\n                        \n                        \n                            DashboardViewComponent\n                        \n                        \n                            ForecastDetailViewComponent\n                        \n                        \n                            HistoryDetailViewComponent\n                        \n                        \n                            IndoorDetailViewComponent\n                        \n                        \n                            LoginViewComponent\n                        \n                        \n                            OutdoorWeatherDetailViewComponent\n                        \n                        \n                            OutdoorWeatherViewComponent\n                        \n                        \n                            PersonalizationSettingsViewComponent\n                        \n                        \n                            PollenflugDetailViewComponent\n                        \n                        \n                            PollenflugSmallTileComponent\n                        \n                        \n                            RegistrationViewComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { PollenflugTileViewComponent } from './pollenflug-tile-view/pollenflug-tile-view.component';\nimport { UiElementsModule } from '../ui-elements/ui-elements.module';\nimport { RouterModule } from '@angular/router';\nimport { OutdoorWeatherViewComponent } from './outdoor-weather-view/outdoor-weather-view.component';\nimport { HistoryTileViewComponent } from './history-tile-view/history-tile-view.component';\nimport { IndoorTileViewComponent } from './indoor-tile-view/indoor-tile-view.component';\nimport { IndoorDetailViewComponent } from './indoor-detail-view/indoor-detail-view.component';\nimport { PollenflugDetailViewComponent } from './pollenflug-detail-view/pollenflug-detail-view.component';\nimport { HistoryDetailViewComponent } from './history-detail-view/history-detail-view.component';\nimport { ForecastDetailViewComponent } from './forecast-detail-view/forecast-detail-view.component';\nimport { ForecastTileViewComponent } from './forecast-tile-view/forecast-tile-view.component';\nimport { PollenflugSmallTileComponent } from './pollenflug-small-tile/pollenflug-small-tile.component';\nimport { PersonalizationSettingsViewComponent } from './personalization-settings-view/personalization-settings-view.component';\nimport { LoginViewComponent } from './login-view/login-view.component';\nimport { RegistrationViewComponent } from './registration-view/registration-view.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { PersonalizationViewComponent } from './personalization-view/personalization-view.component';\nimport { OutdoorWeatherDetailViewComponent } from './outdoor-weather-detail-view/outdoor-weather-detail-view.component';\nimport { HumidityTileViewComponent } from './humidity-tile-view/humidity-tile-view.component';\nimport { ApparentTemperatureTileViewComponent } from './apparent-temperature-tile-view/apparent-temperature-tile-view.component';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { SimpleTileViewComponent } from './simple-tile-view/simple-tile-view.component';\nimport { ChartsModule } from \"@rinminase/ng-charts\";\nimport { ConfigurationViewComponent } from './configuration-view/configuration-view.component';\nimport { ConfigurationTileViewComponent, ConfigurationTilePopUpDialogView } from './configuration-tile-view/configuration-tile-view.component';\nimport { NgxSpinnerModule } from \"ngx-spinner\";\nimport { OpenAPELoginTileViewComponent } from './open-apelogin-tile-view/open-apelogin-tile-view.component';\nimport { DashboardViewComponent } from './dashboard-view/dashboard-view.component';\nimport { CalibrationInfoDetailViewComponent } from './calibration-info-detail-view/calibration-info-detail-view.component';\n\n\n\n@NgModule({\n  declarations: [\n    PollenflugTileViewComponent,\n    OutdoorWeatherViewComponent,\n    HistoryTileViewComponent,\n    IndoorTileViewComponent,\n    IndoorDetailViewComponent,\n    PollenflugDetailViewComponent,\n    HistoryDetailViewComponent,\n    ForecastDetailViewComponent,\n    ForecastTileViewComponent,\n    PollenflugSmallTileComponent,\n    PersonalizationSettingsViewComponent,\n    LoginViewComponent,\n    RegistrationViewComponent,\n    PersonalizationViewComponent,\n    OutdoorWeatherDetailViewComponent,\n    HumidityTileViewComponent,\n    ApparentTemperatureTileViewComponent,\n    ConfigurationTilePopUpDialogView,\n    SimpleTileViewComponent,\n    ConfigurationViewComponent,\n    ConfigurationTileViewComponent,\n    OpenAPELoginTileViewComponent,\n    DashboardViewComponent,\n    CalibrationInfoDetailViewComponent\n  ],\n  imports: [\n    CommonModule,\n    RouterModule,\n    UiElementsModule,\n    FormsModule, \n    ReactiveFormsModule,\n    MatDialogModule,\n    ChartsModule,\n    NgxSpinnerModule,\n  ],\n  exports: [\n    OutdoorWeatherViewComponent,\n    IndoorDetailViewComponent,\n    PollenflugDetailViewComponent,\n    HistoryDetailViewComponent,\n    ForecastDetailViewComponent,\n    PollenflugSmallTileComponent,\n    PersonalizationSettingsViewComponent,\n    LoginViewComponent,\n    RegistrationViewComponent,\n    OutdoorWeatherDetailViewComponent,\n    DashboardViewComponent,\n    CalibrationInfoDetailViewComponent\n  ]\n})\nexport class ViewsModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/WeatherAPIService.html":{"url":"injectables/WeatherAPIService.html","title":"injectable - WeatherAPIService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  WeatherAPIService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/api/weather-api.service.ts\n        \n\n            \n                Description\n            \n            \n                Weather api service injectable\nUse this service to access the network. It implementes all routes \nfor the weather data.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                loadForecast\n                            \n                            \n                                    Public\n                                loadHistoryDataSubject\n                            \n                            \n                                    Public\n                                loadIndoorRoomData\n                            \n                            \n                                    Public\n                                loadOutdoorWeather\n                            \n                            \n                                    Public\n                                loadPollen\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/api/weather-api.service.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            loadForecast\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    loadForecast()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/api/weather-api.service.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        an observable with the loadad WeatherForecastData from the api or test data\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            loadHistoryDataSubject\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    loadHistoryDataSubject(endDate: Date, beginDate: Date)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/api/weather-api.service.ts:128\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    endDate\n                                    \n                                                Date\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    beginDate\n                                    \n                                                Date\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        an observable with the loadad WeatherHistoryData or test data\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            loadIndoorRoomData\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    loadIndoorRoomData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/api/weather-api.service.ts:104\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        an observable with the loadad IndoorRoomData from the api or test data\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            loadOutdoorWeather\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    loadOutdoorWeather()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/api/weather-api.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        an observable with the loadad OutdoorWeatherData from the api or test data\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            loadPollen\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    loadPollen()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/api/weather-api.service.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        an observable with the loadad PollenData from the api or test data\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { FORECAST, INDOORAIRQUALITY, OUTDOORWEATHER, POLLEN, WEATHERHISTORY } from '../../model/mock-data/weather.mock';\nimport { OutdoorWeatherData, PollenData, IndoorRoomData, WeatherForecastData, WeatherHistoryData } from '../../model/weather';\nimport { Observable, of } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\n\n/**\n * Weather api service injectable\n * \n * Use this service to access the network. It implementes all routes \n * for the weather data.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class WeatherAPIService {\n  private outdoorURL = environment.baseURL + 'weather-data/outdoor/latest';\n  private indoorURL = environment.baseURL + 'weather-data/indoor/latest';\n  private historyURL = environment.baseURL + 'weather-data/outdoor/history';\n  private forecastURL = environment.baseURL + 'weather-data/forecast/latest';\n  private allPollenTypesURL = environment.baseURL + 'pollen/all';\n\n  constructor(private httpClient: HttpClient) { }\n\n  /**\n   * @returns an observable with the loadad OutdoorWeatherData from the api or test data\n   */\n  public loadOutdoorWeather(): Observable {\n    if (environment.testData) {\n      return of(OUTDOORWEATHER);\n    }\n    let returnObservable = new Observable((observer) => {\n        this.httpClient.get(this.outdoorURL).subscribe(data => {\n          if(data.id === undefined) {\n            observer.next();\n            observer.complete();\n          } else {\n            let outdoorData = this.createOutdoorWeatherDataFromServerResponse(data);\n            observer.next(outdoorData);\n            observer.complete();\n          }\n        },\n        (error) => {\n          console.log(error);\n          observer.next();\n          observer.complete();\n        })\n      }\n    );\n    return returnObservable;\n  }\n\n  /**\n   * @returns an observable with the loadad WeatherForecastData from the api or test data\n   */\n  public loadForecast(): Observable {\n    if (environment.testData) {\n      return of(FORECAST);\n    }\n    let returnObservable = new Observable((observer) => {\n        this.httpClient.get(this.forecastURL).subscribe(data => {\n          let forecastData = this.createOutdoorForecastDataFromServerResponse(data);\n          observer.next(forecastData);\n          observer.complete();\n        },\n        (error) => {\n          console.log(error);\n          observer.next();\n          observer.complete();\n        })\n      }\n    );\n    return returnObservable;\n  }\n\n  /**\n   * @returns an observable with the loadad PollenData from the api or test data\n   */\n  public loadPollen(): Observable{\n    if (environment.testData) {\n      let pollen = of(POLLEN);\n      return pollen;\n    }\n    let returnObservable = new Observable((observer) => {\n      let response = this.httpClient.get(this.allPollenTypesURL);\n      response.subscribe(data => {\n        let pollenData = this.createPollenDataFromServerResponse(data);\n        observer.next(pollenData);\n        observer.complete();\n      },\n      (error) => {\n        console.log(error);\n        observer.next([]);\n        observer.complete();\n      })\n    });\n    return returnObservable;\n  }\n\n  /**\n   * @returns an observable with the loadad IndoorRoomData from the api or test data\n   */\n  public loadIndoorRoomData(): Observable {\n    if (environment.testData) {\n      let indoorData = of(INDOORAIRQUALITY);\n      return indoorData;\n    }\n    let returnObservable = new Observable((observer) => { // Wir brauchen hier ein Array, -> sollen ja mehrere Räume möglich sein (theoretisch...)\n        this.httpClient.get(this.indoorURL).subscribe(data => {\n          let indoorData = this.createIndoorRoomDataFromServerResponse(data);\n          observer.next([indoorData]);\n          observer.complete();\n        },\n        (error) => {\n          console.log(error);\n          observer.next([]);\n          observer.complete();\n        })\n      }\n    );\n    return returnObservable;\n  }\n\n  /**\n   * @returns an observable with the loadad WeatherHistoryData or test data\n   */\n  public loadHistoryDataSubject(endDate: Date, beginDate: Date): Observable {\n    if (environment.testData) {\n      let forecastData = of(WEATHERHISTORY);\n      return forecastData;\n    }\n    let returnObservable = new Observable((observer) => { \n        this.httpClient.post(this.historyURL,\n          {\n            'begin': this.createServerFriendlyDate(beginDate),\n            'end': this.createServerFriendlyDate(endDate)\n          })\n        .subscribe(data => {\n          let dataPoints: OutdoorWeatherData[] = data.map((element) => {\n            return this.createOutdoorWeatherDataFromServerResponse(element);\n          });\n          observer.next({'datapoints': dataPoints});\n          observer.complete();\n        },\n        (error) => {\n          console.log(error);\n          observer.next();\n          observer.complete();\n        })\n      }\n    );\n    return returnObservable;\n  }\n\n  /**\n   * Helper function to convert date to string\n   * @param date \n   * @returns a date as a string which is understandable for the server\n   */\n  private createServerFriendlyDate(date: Date): string {\n    let dateString = date.toISOString().slice(0, 10);\n    let timeString = date.toTimeString().slice(0, 8);\n    return dateString + ' ' + timeString;\n  }\n\n  /**\n   * Helper function to convert the response from the server to an OutdoorWeatherData object\n   * \n   * @param response\n   * @returns OutdoorWeatherData object\n   */\n  private createOutdoorWeatherDataFromServerResponse(response: OutdoorWeatherResponse): OutdoorWeatherData {\n    const date = response.timestamp;\n    const year = date.substr(0, 4);\n    const month = date.substr(5, 2);\n    const day = date.substr(8, 2);\n    const time = date.substr(11);\n\n    const validDate = new Date(month + '/' + day + '/' + year + ' ' + time);\n\n    return {\n            temperature: response.temperature,\n            maxTemperature: -99, // Not implemented yet\n            minTemperature: -99, // Not implemented yet\n            humidity: response.humidity,\n            timestamp: validDate,\n            weather: response.weather,\n            apparentTemperature: response.apparentTemperature,\n            location: response.location_name,\n            postCode: response.location\n          }\n  }\n\n  /**\n   * Helper function to convert the response from the server to an IndoorRoomData object\n   * \n   * @param response\n   * @returns IndoorRoomData object\n   */\n  private createIndoorRoomDataFromServerResponse(response: IndoorRoomResponse): IndoorRoomData {\n    return {\n            roomID: response.id + '',\n            roomName: response.roomName,\n            airQuality: response.gasVal, \n            temperature: response.temperature, \n            humidity: response.humidity, \n            timestamp: new Date(response.timestamp), \n            calibrationValue: response.gasValCalibrationValue,\n          }\n  }\n\n  /**\n   * Helper function to convert the response from the server to an PollenData[] object\n   * \n   * @param response\n   * @returns PollenData[] object\n   */\n  private createPollenDataFromServerResponse(response: PollenResponse[]): PollenData[] {\n    let pollen: PollenData[] = [];\n    response.forEach(item => {\n      pollen.push({\n        id: item.id,\n        pollenName: item.pollenName,\n        today: item.loadRating,\n        tomorrow: ''\n      })\n    })\n    return pollen\n  }\n\n  /**\n   * Helper function to convert the response from the server to an WeatherForecastData object\n   * \n   * @param response\n   * @returns WeatherForecastData object\n   */\n  private createOutdoorForecastDataFromServerResponse(response: ForecastResponse): WeatherForecastData {\n    return {\n      trend: response.trend,\n      weatherDescription: response.weatherDescription, \n      weatherIcon: response.weatherIcon\n    }\n  }\n}\n\n/**\n * Model of the pollen api response\n */\ninterface PollenResponse {\n  id: number,\n  pollenName: string,\n  loadRating: string,\n}\n\n/**\n * Model of the outdoor weather api response\n */\ninterface OutdoorWeatherResponse {\n  id: number,\n  humidity: number,\n  temperature: number,\n  pressure: number,\n  location: string,\n  location_name: string,\n  timestamp: string,\n  weather: string,\n  apparentTemperature: number\n}\n\n/**\n * Model of the indoor room api response\n */\ninterface IndoorRoomResponse {\n  id: number,\n  humidity: number,\n  temperature: number,\n  pressure: number,\n  gasVal: number,\n  location: string,\n  timestamp: string,\n  gasValCalibrationValue: number,\n  roomName: string,\n}\n\n/**\n * Model of the forecast api response\n */\ninterface ForecastResponse {\n  id: number,\n  trend: string,\n  weatherIcon: string,\n  weatherDescription: string,\n  seaPressure: number,\n  timestampd: string\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/WeatherData.html":{"url":"interfaces/WeatherData.html","title":"interface - WeatherData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  WeatherData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/weather.ts\n        \n\n            \n                Description\n            \n            \n                Marker interface. Marks all Weather data. In this way they all can be stored \nin a tiles array [].\n\n            \n\n\n\n\n\n    \n\n\n    \n        export interface WeatherData { }\n\n/**\n * Enum to identify the type of the tile. \n */\nexport enum TileType {\n    indoorRoom,\n    pollenSmall,\n    pollenList,\n    history,\n    forecast,\n    humidity,\n    apparentTemperature,\n}\n\n/**\n * This interface bundles the three tile arrays\n */\nexport interface TileArrays {\n    dashboard: Tile[],\n    pollen : Tile[],\n    indoorRooms: Tile[]\n}\n  \n/**\n * Enum to set the priority of a tile\n */\nexport enum TilePriority {\n    important, //Highest \n    high,\n    middle,\n    low,\n}\n\n/**\n * Tile model -\n * Every tile (widget) needs data and a prioriy. The priority is \n * used to determine the position of the tiles on the dashboard. The tiles themselves do not load the data.\n * The data is passed from the parent view of the tiles.\n */\nexport interface Tile {\n    type: TileType;\n    data: A;\n    id: string;\n    priority: TilePriority\n}\n\n/**\n * Model of the outdoor weather data. It contains all information about the current \n * outdoor weather including temperature, humidity and weather type. \n */\nexport interface OutdoorWeatherData extends WeatherData {\n    temperature: number // in °C\n    maxTemperature: number,\n    minTemperature: number, \n    humidity: number, // in %\n    timestamp: Date, \n    weather: string, \n    apparentTemperature: number, // in °C ---> die \"gefühlte\" Temperatur\n    location: string, // e.g. \"Stuttgart\" TODO: Make configurable in ESP Wlan-Board\n    postCode: string,\n}\n\n/**\n * Model of the weather forecast data. It contains all information about \n * the forecast including weather and trend. \n */\nexport interface WeatherForecastData extends WeatherData {\n    trend: string,\n    weatherDescription: string,\n    weatherIcon: string,\n  }\n\n/**\n * Model of the pollen data. It contains all information about \n * the current pollen count.\n */\nexport interface PollenData extends WeatherData {\n    pollenName: string, \n    id: number,\n    today: string, // -1  3\n    tomorrow: string, // -1  3\n}\n\n/**\n * Model of the indoor room data. It contains all information about \n * the temperature, humidity, roomname, airQuality of the current room. \n */\nexport interface IndoorRoomData extends WeatherData {\n    roomID: string,\n    roomName: string,\n    airQuality: number, // in %\n    temperature: number // in °C \n    humidity: number, // in %\n    timestamp: Date, \n    calibrationValue: number\n}\n\n/**\n * Model of the indoor room data. It contains all information about \n * the temperature, humidity, roomname, airQuality of the current room. \n */\nexport interface WeatherHistoryData extends WeatherData {\n    datapoints: OutdoorWeatherData[],\n}\n\n/**\n * Model of the indoor room data. It contains all information about \n * the temperature, humidity, roomname, airQuality of the current room. \n */\nexport interface GraphDataSet extends WeatherData {\n    temperatureDataPoints: number[];\n    humidityDataPoints: number[];\n    xAxisLabel: string[];\n    label: string;\n    temperatureAverage: number;\n    humidityAverage: number;\n}\n\nexport interface WeatherHistoryByDayData extends WeatherData  {\n    averageTemperature: number, // in °C\n    averageHumidity: number, // in %\n}\n\nexport enum Daytime {\n    noon,\n    night,\n    dawn,\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/WeatherDataService.html":{"url":"injectables/WeatherDataService.html","title":"injectable - WeatherDataService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  WeatherDataService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/weather-data.service.ts\n        \n\n            \n                Description\n            \n            \n                Weather data service injectable\nUse this service to access all weather data from the backend\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getDashboardTilesSubject\n                            \n                            \n                                    Public\n                                getForecastDataSubject\n                            \n                            \n                                    Public\n                                getHistoryDataSubject\n                            \n                            \n                                    Public\n                                getIndoorTilesSubject\n                            \n                            \n                                    Public\n                                getOutdoorWeatherDataSubject\n                            \n                            \n                                    Public\n                                getPollenTilesSubject\n                            \n                            \n                                    Public\n                                loadMoreHistoryData\n                            \n                            \n                                    Public\n                                reloadData\n                            \n                            \n                                    Public\n                                reloadTiles\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(tileService: TileService, weatherAPIService: WeatherAPIService, userContextService: UserContextService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/weather-data.service.ts:106\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        tileService\n                                                  \n                                                        \n                                                                        TileService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        weatherAPIService\n                                                  \n                                                        \n                                                                        WeatherAPIService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userContextService\n                                                  \n                                                        \n                                                                        UserContextService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getDashboardTilesSubject\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getDashboardTilesSubject()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/weather-data.service.ts:217\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :         BehaviorSubject\n\n                    \n                    \n                        the behavior subject of the dashboard tiles \n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getForecastDataSubject\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getForecastDataSubject()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/weather-data.service.ts:238\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :         BehaviorSubject\n\n                    \n                    \n                        the behavior subject of the forecast data\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getHistoryDataSubject\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getHistoryDataSubject()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/weather-data.service.ts:231\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :         BehaviorSubject\n\n                    \n                    \n                        the behavior subject of the hsitory data\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getIndoorTilesSubject\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getIndoorTilesSubject()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/weather-data.service.ts:245\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :         BehaviorSubject\n\n                    \n                    \n                        the behavior subject of the indoor tiles\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getOutdoorWeatherDataSubject\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getOutdoorWeatherDataSubject()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/weather-data.service.ts:224\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :     BehaviorSubject\n\n                    \n                    \n                        the behavior subject of the outdoor weahter\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getPollenTilesSubject\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getPollenTilesSubject()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/weather-data.service.ts:252\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :         BehaviorSubject\n\n                    \n                    \n                        the behavior subject of the pollen tiles array\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            loadMoreHistoryData\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    loadMoreHistoryData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/weather-data.service.ts:183\n                \n            \n\n\n            \n                \n                    Public function to lazy load more history data. It uses the stored oldestHistoryDate \nto load one more month before this date.\n\n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            reloadData\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    reloadData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/weather-data.service.ts:175\n                \n            \n\n\n            \n                \n                    Public function to load new data from the network\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            reloadTiles\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    reloadTiles()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/weather-data.service.ts:155\n                \n            \n\n\n            \n                \n                    This function creates the important tile arrays which are shown on the dashboard.\nEvery time this function is called, the createTiles() function of the tiles service is\ncalled and afterward it will trigger the behaviour subjects to reload.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject, forkJoin, Observable, of, Subject} from 'rxjs';\nimport { Daytime, IndoorRoomData, OutdoorWeatherData, PollenData, Tile, WeatherData, WeatherForecastData, WeatherHistoryData } from '../model/weather';\nimport { TileService } from './tile.service';\nimport { UserContextService } from './user-context.service';\nimport { WeatherAPIService } from './api/weather-api.service';\n\n/**\n * Weather data service injectable\n * \n * Use this service to access all weather data from the backend\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class WeatherDataService {\n\n  /**\n  * Source of truth of all dashboard tiles data. Including setter for this service.\n  * The BehaviorSubject is accessible through the getDashboardTilesSubject() function.\n  */\n  private _dashboardTiles: BehaviorSubject[]> = new BehaviorSubject[]>([]);\n  private set dashboardTiles(tiles: Tile[]) {\n    this._dashboardTiles.next(tiles);\n  }\n \n  /**\n  * Source of truth of pollen tiles data. Including setter for this service.\n  * The BehaviorSubject is accessible through the getPollenTilesSubject() function.\n  */\n  private _pollenTiles: BehaviorSubject[]> =  new BehaviorSubject[]>([]);\n  private set pollenTiles(tiles: Tile[]) {\n    this._pollenTiles.next(tiles);\n  }\n\n  /**\n  * Source of truth of indoor room tiles data. Including setter for this service.\n  * The BehaviorSubject is accessible through the getIndoorRoomTilesSubject() function.\n  */\n  private _indoorRoomTiles: BehaviorSubject[]> =  new BehaviorSubject[]>([]);\n  private set indoorRoomTiles(tiles: Tile[]) {\n    this._indoorRoomTiles.next(tiles);\n  }\n  \n \n  /**\n  * Source of truth of pollen data. Including setter and getter for this service.\n  */\n  private _pollenData: BehaviorSubject = new BehaviorSubject([]);\n  private get pollenData(): PollenData[] {\n    return this._pollenData.getValue();\n  }\n  private set pollenData(value: PollenData[]) {\n    this._pollenData.next(value);\n  }\n\n  /**\n  * Source of truth of indoor room data. Including setter and getter for this service.\n  */\n  private _indoorRoomsData: BehaviorSubject = new BehaviorSubject([]);\n  private get indoorRoomsData(): IndoorRoomData[] {\n    return this._indoorRoomsData.getValue();\n  }\n  private set indoorRoomsData(value: IndoorRoomData[]) {\n    this._indoorRoomsData.next(value);\n  }\n \n\n  /**\n  * Source of truth of forecast data. Including setter and getter for this service.\n  */\n  private _forecastData: BehaviorSubject = new BehaviorSubject(undefined);\n  private get forecastData(): WeatherForecastData | undefined {\n    return this._forecastData.getValue();\n  }\n  private set forecastData(value: WeatherForecastData | undefined) {\n    this._forecastData.next(value);\n  }\n\n  /**\n  * Source of truth of history data. Including setter and getter for this service.\n  */\n  private _historyData: BehaviorSubject = new BehaviorSubject(undefined);\n  private get historyData(): WeatherHistoryData | undefined {\n    return this._historyData.getValue();\n  }\n  private set historyData(value: WeatherHistoryData | undefined) {\n    this._historyData.next(value);\n  }\n\n  /**\n  * Source of truth of outdoor weather data. Including setter and getter for this service.\n  */  \n  private _outdoorWeatherData: BehaviorSubject = new BehaviorSubject(undefined);\n  private get outdoorWeatherData(): OutdoorWeatherData | undefined {\n    return this._outdoorWeatherData.getValue();\n  }\n  private set outdoorWeatherData(value: OutdoorWeatherData | undefined) {\n    this._outdoorWeatherData.next(value);\n  }\n\n  /**\n  * This date is important to enable lazy loading history data. Initially one month\n  * is loaded. If more history data is needed, one month more will be downloaded.\n  */  \n  private oldestHistoryDate = Date.now();\n\n  constructor(private tileService: TileService,\n              private weatherAPIService: WeatherAPIService,\n              private userContextService: UserContextService) { \n      this.loadWeatherData();\n      this.registerForUserContextChange()\n    }\n\n  /**\n  * This function is called to load all weather data from the server. The function \n  * waits until every data is loaded and calls afterwards the reloadTiles() function\n  * of this service. \n  */  \n  private loadWeatherData(): void {\n    this.oldestHistoryDate = Date.now();\n    \n    let outDoorWeather = this.weatherAPIService.loadOutdoorWeather()\n    let pollen = this.weatherAPIService.loadPollen()\n    let forecast = this.weatherAPIService.loadForecast()\n    let history = this.loadMonthFromHistory(new Date(this.oldestHistoryDate));\n    let indoorRoom = this.weatherAPIService.loadIndoorRoomData()\n\n    forkJoin([outDoorWeather, pollen, forecast, history, indoorRoom]).subscribe(results => {\n      this.outdoorWeatherData = results[0];\n      this.pollenData = results[1];\n      this.forecastData = results[2];\n      this.historyData = results[3];\n      this.indoorRoomsData = results[4];\n\n      this.reloadTiles();\n    });\n  }\n\n  /**\n  * For the adaptive order of the dashboard tiles, it is needed to listen for\n  * user context changes. E.g. if the user selects another pollen, then \n  */  \n  private registerForUserContextChange(): void {\n    this.userContextService.getUserContextSubject().subscribe(() => {\n      this.reloadTiles()\n    })\n  }\n\n  /**\n  * This function creates the important tile arrays which are shown on the dashboard.\n  * Every time this function is called, the createTiles() function of the tiles service is\n  * called and afterward it will trigger the behaviour subjects to reload.\n  */  \n  public reloadTiles(): void {\n    let outdoorWeatherData = this.outdoorWeatherData;\n    let pollenData = this.pollenData;\n    let forecastData = this.forecastData;\n    let historyData = this.historyData\n    let indoorRoomData = this.indoorRoomsData;\n\n    let result = this.tileService.createTiles(outdoorWeatherData, \n                                              pollenData, \n                                              forecastData, \n                                              historyData, \n                                              indoorRoomData)\n    this.dashboardTiles = result.dashboard;\n    this.pollenTiles = result.pollen;\n    this.indoorRoomTiles = result.indoorRooms;\n  }\n\n  /**\n  * Public function to load new data from the network\n  */  \n  public reloadData(): void {\n    this.loadWeatherData();\n  }\n\n  /**\n  * Public function to lazy load more history data. It uses the stored oldestHistoryDate \n  * to load one more month before this date.\n  */  \n  public loadMoreHistoryData(): Observable {\n    let observable = this.loadMonthFromHistory(new Date(this.oldestHistoryDate));\n    observable.subscribe(data => {\n      let historyData = this.historyData\n      if(historyData) {\n        this.historyData = {\n          datapoints: historyData.datapoints.concat(data.datapoints)\n        };\n      }\n    });\n    return observable\n  }\n\n  /**\n  * Helper function to load one more month of history data \n  * \n  * @returns history data from the server\n  */  \n  private loadMonthFromHistory(oldestHistoryDate: Date): Observable {\n    let fromDate = new Date(oldestHistoryDate);\n    let toDate: Date;\n    if(oldestHistoryDate.getMonth() []>{\n    return this._dashboardTiles;\n  }  \n\n  /**\n  * @returns the behavior subject of the outdoor weahter\n  */  \n  public getOutdoorWeatherDataSubject(): BehaviorSubject {\n    return this._outdoorWeatherData\n  }\n\n  /**\n  * @returns the behavior subject of the hsitory data\n  */  \n  public getHistoryDataSubject(): BehaviorSubject {\n    return this._historyData;\n  }\n\n  /**\n  * @returns the behavior subject of the forecast data\n  */  \n  public getForecastDataSubject(): BehaviorSubject {\n    return this._forecastData;\n  }\n\n  /**\n  * @returns the behavior subject of the indoor tiles\n  */  \n  public getIndoorTilesSubject() : BehaviorSubject[]>{\n    return this._indoorRoomTiles\n  }\n\n  /**\n  * @returns the behavior subject of the pollen tiles array\n  */  \n  public getPollenTilesSubject(): BehaviorSubject[]>{\n    return this._pollenTiles\n  } \n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/WeatherForecastData.html":{"url":"interfaces/WeatherForecastData.html","title":"interface - WeatherForecastData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  WeatherForecastData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/weather.ts\n        \n\n            \n                Description\n            \n            \n                Model of the weather forecast data. It contains all information about \nthe forecast including weather and trend. \n\n            \n\n            \n                Extends\n            \n            \n                        WeatherData\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        trend\n                                \n                                \n                                        weatherDescription\n                                \n                                \n                                        weatherIcon\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        trend\n                                    \n                                \n                                \n                                    \n                                        trend:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        weatherDescription\n                                    \n                                \n                                \n                                    \n                                        weatherDescription:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        weatherIcon\n                                    \n                                \n                                \n                                    \n                                        weatherIcon:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface WeatherData { }\n\n/**\n * Enum to identify the type of the tile. \n */\nexport enum TileType {\n    indoorRoom,\n    pollenSmall,\n    pollenList,\n    history,\n    forecast,\n    humidity,\n    apparentTemperature,\n}\n\n/**\n * This interface bundles the three tile arrays\n */\nexport interface TileArrays {\n    dashboard: Tile[],\n    pollen : Tile[],\n    indoorRooms: Tile[]\n}\n  \n/**\n * Enum to set the priority of a tile\n */\nexport enum TilePriority {\n    important, //Highest \n    high,\n    middle,\n    low,\n}\n\n/**\n * Tile model -\n * Every tile (widget) needs data and a prioriy. The priority is \n * used to determine the position of the tiles on the dashboard. The tiles themselves do not load the data.\n * The data is passed from the parent view of the tiles.\n */\nexport interface Tile {\n    type: TileType;\n    data: A;\n    id: string;\n    priority: TilePriority\n}\n\n/**\n * Model of the outdoor weather data. It contains all information about the current \n * outdoor weather including temperature, humidity and weather type. \n */\nexport interface OutdoorWeatherData extends WeatherData {\n    temperature: number // in °C\n    maxTemperature: number,\n    minTemperature: number, \n    humidity: number, // in %\n    timestamp: Date, \n    weather: string, \n    apparentTemperature: number, // in °C ---> die \"gefühlte\" Temperatur\n    location: string, // e.g. \"Stuttgart\" TODO: Make configurable in ESP Wlan-Board\n    postCode: string,\n}\n\n/**\n * Model of the weather forecast data. It contains all information about \n * the forecast including weather and trend. \n */\nexport interface WeatherForecastData extends WeatherData {\n    trend: string,\n    weatherDescription: string,\n    weatherIcon: string,\n  }\n\n/**\n * Model of the pollen data. It contains all information about \n * the current pollen count.\n */\nexport interface PollenData extends WeatherData {\n    pollenName: string, \n    id: number,\n    today: string, // -1  3\n    tomorrow: string, // -1  3\n}\n\n/**\n * Model of the indoor room data. It contains all information about \n * the temperature, humidity, roomname, airQuality of the current room. \n */\nexport interface IndoorRoomData extends WeatherData {\n    roomID: string,\n    roomName: string,\n    airQuality: number, // in %\n    temperature: number // in °C \n    humidity: number, // in %\n    timestamp: Date, \n    calibrationValue: number\n}\n\n/**\n * Model of the indoor room data. It contains all information about \n * the temperature, humidity, roomname, airQuality of the current room. \n */\nexport interface WeatherHistoryData extends WeatherData {\n    datapoints: OutdoorWeatherData[],\n}\n\n/**\n * Model of the indoor room data. It contains all information about \n * the temperature, humidity, roomname, airQuality of the current room. \n */\nexport interface GraphDataSet extends WeatherData {\n    temperatureDataPoints: number[];\n    humidityDataPoints: number[];\n    xAxisLabel: string[];\n    label: string;\n    temperatureAverage: number;\n    humidityAverage: number;\n}\n\nexport interface WeatherHistoryByDayData extends WeatherData  {\n    averageTemperature: number, // in °C\n    averageHumidity: number, // in %\n}\n\nexport enum Daytime {\n    noon,\n    night,\n    dawn,\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/WeatherHistoryByDayData.html":{"url":"interfaces/WeatherHistoryByDayData.html","title":"interface - WeatherHistoryByDayData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  WeatherHistoryByDayData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/weather.ts\n        \n\n\n            \n                Extends\n            \n            \n                        WeatherData\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        averageHumidity\n                                \n                                \n                                        averageTemperature\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        averageHumidity\n                                    \n                                \n                                \n                                    \n                                        averageHumidity:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        averageTemperature\n                                    \n                                \n                                \n                                    \n                                        averageTemperature:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface WeatherData { }\n\n/**\n * Enum to identify the type of the tile. \n */\nexport enum TileType {\n    indoorRoom,\n    pollenSmall,\n    pollenList,\n    history,\n    forecast,\n    humidity,\n    apparentTemperature,\n}\n\n/**\n * This interface bundles the three tile arrays\n */\nexport interface TileArrays {\n    dashboard: Tile[],\n    pollen : Tile[],\n    indoorRooms: Tile[]\n}\n  \n/**\n * Enum to set the priority of a tile\n */\nexport enum TilePriority {\n    important, //Highest \n    high,\n    middle,\n    low,\n}\n\n/**\n * Tile model -\n * Every tile (widget) needs data and a prioriy. The priority is \n * used to determine the position of the tiles on the dashboard. The tiles themselves do not load the data.\n * The data is passed from the parent view of the tiles.\n */\nexport interface Tile {\n    type: TileType;\n    data: A;\n    id: string;\n    priority: TilePriority\n}\n\n/**\n * Model of the outdoor weather data. It contains all information about the current \n * outdoor weather including temperature, humidity and weather type. \n */\nexport interface OutdoorWeatherData extends WeatherData {\n    temperature: number // in °C\n    maxTemperature: number,\n    minTemperature: number, \n    humidity: number, // in %\n    timestamp: Date, \n    weather: string, \n    apparentTemperature: number, // in °C ---> die \"gefühlte\" Temperatur\n    location: string, // e.g. \"Stuttgart\" TODO: Make configurable in ESP Wlan-Board\n    postCode: string,\n}\n\n/**\n * Model of the weather forecast data. It contains all information about \n * the forecast including weather and trend. \n */\nexport interface WeatherForecastData extends WeatherData {\n    trend: string,\n    weatherDescription: string,\n    weatherIcon: string,\n  }\n\n/**\n * Model of the pollen data. It contains all information about \n * the current pollen count.\n */\nexport interface PollenData extends WeatherData {\n    pollenName: string, \n    id: number,\n    today: string, // -1  3\n    tomorrow: string, // -1  3\n}\n\n/**\n * Model of the indoor room data. It contains all information about \n * the temperature, humidity, roomname, airQuality of the current room. \n */\nexport interface IndoorRoomData extends WeatherData {\n    roomID: string,\n    roomName: string,\n    airQuality: number, // in %\n    temperature: number // in °C \n    humidity: number, // in %\n    timestamp: Date, \n    calibrationValue: number\n}\n\n/**\n * Model of the indoor room data. It contains all information about \n * the temperature, humidity, roomname, airQuality of the current room. \n */\nexport interface WeatherHistoryData extends WeatherData {\n    datapoints: OutdoorWeatherData[],\n}\n\n/**\n * Model of the indoor room data. It contains all information about \n * the temperature, humidity, roomname, airQuality of the current room. \n */\nexport interface GraphDataSet extends WeatherData {\n    temperatureDataPoints: number[];\n    humidityDataPoints: number[];\n    xAxisLabel: string[];\n    label: string;\n    temperatureAverage: number;\n    humidityAverage: number;\n}\n\nexport interface WeatherHistoryByDayData extends WeatherData  {\n    averageTemperature: number, // in °C\n    averageHumidity: number, // in %\n}\n\nexport enum Daytime {\n    noon,\n    night,\n    dawn,\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/WeatherHistoryData.html":{"url":"interfaces/WeatherHistoryData.html","title":"interface - WeatherHistoryData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  WeatherHistoryData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/weather.ts\n        \n\n            \n                Description\n            \n            \n                Model of the indoor room data. It contains all information about \nthe temperature, humidity, roomname, airQuality of the current room. \n\n            \n\n            \n                Extends\n            \n            \n                        WeatherData\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        datapoints\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        datapoints\n                                    \n                                \n                                \n                                    \n                                        datapoints:     OutdoorWeatherData[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     OutdoorWeatherData[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface WeatherData { }\n\n/**\n * Enum to identify the type of the tile. \n */\nexport enum TileType {\n    indoorRoom,\n    pollenSmall,\n    pollenList,\n    history,\n    forecast,\n    humidity,\n    apparentTemperature,\n}\n\n/**\n * This interface bundles the three tile arrays\n */\nexport interface TileArrays {\n    dashboard: Tile[],\n    pollen : Tile[],\n    indoorRooms: Tile[]\n}\n  \n/**\n * Enum to set the priority of a tile\n */\nexport enum TilePriority {\n    important, //Highest \n    high,\n    middle,\n    low,\n}\n\n/**\n * Tile model -\n * Every tile (widget) needs data and a prioriy. The priority is \n * used to determine the position of the tiles on the dashboard. The tiles themselves do not load the data.\n * The data is passed from the parent view of the tiles.\n */\nexport interface Tile {\n    type: TileType;\n    data: A;\n    id: string;\n    priority: TilePriority\n}\n\n/**\n * Model of the outdoor weather data. It contains all information about the current \n * outdoor weather including temperature, humidity and weather type. \n */\nexport interface OutdoorWeatherData extends WeatherData {\n    temperature: number // in °C\n    maxTemperature: number,\n    minTemperature: number, \n    humidity: number, // in %\n    timestamp: Date, \n    weather: string, \n    apparentTemperature: number, // in °C ---> die \"gefühlte\" Temperatur\n    location: string, // e.g. \"Stuttgart\" TODO: Make configurable in ESP Wlan-Board\n    postCode: string,\n}\n\n/**\n * Model of the weather forecast data. It contains all information about \n * the forecast including weather and trend. \n */\nexport interface WeatherForecastData extends WeatherData {\n    trend: string,\n    weatherDescription: string,\n    weatherIcon: string,\n  }\n\n/**\n * Model of the pollen data. It contains all information about \n * the current pollen count.\n */\nexport interface PollenData extends WeatherData {\n    pollenName: string, \n    id: number,\n    today: string, // -1  3\n    tomorrow: string, // -1  3\n}\n\n/**\n * Model of the indoor room data. It contains all information about \n * the temperature, humidity, roomname, airQuality of the current room. \n */\nexport interface IndoorRoomData extends WeatherData {\n    roomID: string,\n    roomName: string,\n    airQuality: number, // in %\n    temperature: number // in °C \n    humidity: number, // in %\n    timestamp: Date, \n    calibrationValue: number\n}\n\n/**\n * Model of the indoor room data. It contains all information about \n * the temperature, humidity, roomname, airQuality of the current room. \n */\nexport interface WeatherHistoryData extends WeatherData {\n    datapoints: OutdoorWeatherData[],\n}\n\n/**\n * Model of the indoor room data. It contains all information about \n * the temperature, humidity, roomname, airQuality of the current room. \n */\nexport interface GraphDataSet extends WeatherData {\n    temperatureDataPoints: number[];\n    humidityDataPoints: number[];\n    xAxisLabel: string[];\n    label: string;\n    temperatureAverage: number;\n    humidityAverage: number;\n}\n\nexport interface WeatherHistoryByDayData extends WeatherData  {\n    averageTemperature: number, // in °C\n    averageHumidity: number, // in %\n}\n\nexport enum Daytime {\n    noon,\n    night,\n    dawn,\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/components/screens/dashboard-screen/dashboard-screen.component.ts\n            \n            component\n            DashboardScreenComponent\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/components/screens/detail-screen/detail-screen.component.ts\n            \n            component\n            DetailScreenComponent\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/app/components/screens/onboarding-screen/onboarding-screen.component.ts\n            \n            component\n            OnboardingScreenComponent\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                src/app/components/screens/settings-screen/settings-screen.component.ts\n            \n            component\n            SettingsScreenComponent\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                src/app/components/ui-elements/back-button-element/back-button-element.component.ts\n            \n            component\n            BackButtonElementComponent\n            \n                28 %\n                (2/7)\n            \n        \n        \n            \n                \n                src/app/components/ui-elements/card-element/card-element.component.ts\n            \n            component\n            CardElementComponent\n            \n                11 %\n                (1/9)\n            \n        \n        \n            \n                \n                src/app/components/ui-elements/checkbox-switcher-element/checkbox-switcher-element.component.ts\n            \n            component\n            CheckboxSwitcherElementComponent\n            \n                16 %\n                (2/12)\n            \n        \n        \n            \n                \n                src/app/components/ui-elements/menu-bar-element/menu-bar-element.component.ts\n            \n            component\n            MenuBarElementComponent\n            \n                50 %\n                (4/8)\n            \n        \n        \n            \n                \n                src/app/components/ui-elements/menu-button-element/menu-button-element.component.ts\n            \n            component\n            MenuButtonElementComponent\n            \n                50 %\n                (4/8)\n            \n        \n        \n            \n                \n                src/app/components/ui-elements/menu-element/menu-element.component.ts\n            \n            component\n            MenuElementComponent\n            \n                41 %\n                (5/12)\n            \n        \n        \n            \n                \n                src/app/components/ui-elements/nav-bar-element/nav-bar-element.component.ts\n            \n            component\n            NavBarElementComponent\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                src/app/components/ui-elements/pollen-list-element/pollen-list-element.component.ts\n            \n            component\n            PollenListElementComponent\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                src/app/components/ui-elements/pollen-tag-element/pollen-tag-element.component.ts\n            \n            component\n            PollenTagElementComponent\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                src/app/components/ui-elements/progress-chart-element/progress-chart-element.component.ts\n            \n            component\n            ProgressChartElementComponent\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                src/app/components/ui-elements/slider-element/slider-element.component.ts\n            \n            component\n            SliderElementComponent\n            \n                25 %\n                (2/8)\n            \n        \n        \n            \n                \n                src/app/components/ui-elements/tts-player-element/tts-player-element.component.ts\n            \n            component\n            TtsPlayerElementComponent\n            \n                55 %\n                (5/9)\n            \n        \n        \n            \n                \n                src/app/components/views/apparent-temperature-tile-view/apparent-temperature-tile-view.component.ts\n            \n            component\n            ApparentTemperatureTileViewComponent\n            \n                12 %\n                (1/8)\n            \n        \n        \n            \n                \n                src/app/components/views/calibration-info-detail-view/calibration-info-detail-view.component.ts\n            \n            component\n            CalibrationInfoDetailViewComponent\n            \n                50 %\n                (2/4)\n            \n        \n        \n            \n                \n                src/app/components/views/configuration-tile-view/configuration-tile-view.component.ts\n            \n            component\n            ConfigurationTilePopUpDialogView\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                src/app/components/views/configuration-tile-view/configuration-tile-view.component.ts\n            \n            component\n            ConfigurationTileViewComponent\n            \n                50 %\n                (4/8)\n            \n        \n        \n            \n                \n                src/app/components/views/configuration-view/configuration-view.component.ts\n            \n            component\n            ConfigurationViewComponent\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/app/components/views/dashboard-view/dashboard-view.component.ts\n            \n            component\n            DashboardViewComponent\n            \n                22 %\n                (2/9)\n            \n        \n        \n            \n                \n                src/app/components/views/forecast-detail-view/forecast-detail-view.component.ts\n            \n            component\n            ForecastDetailViewComponent\n            \n                40 %\n                (2/5)\n            \n        \n        \n            \n                \n                src/app/components/views/forecast-tile-view/forecast-tile-view.component.ts\n            \n            component\n            ForecastTileViewComponent\n            \n                10 %\n                (1/10)\n            \n        \n        \n            \n                \n                src/app/components/views/history-detail-view/history-detail-view.component.ts\n            \n            component\n            HistoryDetailViewComponent\n            \n                26 %\n                (4/15)\n            \n        \n        \n            \n                \n                src/app/components/views/history-tile-view/history-tile-view.component.ts\n            \n            component\n            HistoryTileViewComponent\n            \n                12 %\n                (2/16)\n            \n        \n        \n            \n                \n                src/app/components/views/humidity-tile-view/humidity-tile-view.component.ts\n            \n            component\n            HumidityTileViewComponent\n            \n                12 %\n                (1/8)\n            \n        \n        \n            \n                \n                src/app/components/views/indoor-detail-view/indoor-detail-view.component.ts\n            \n            component\n            IndoorDetailViewComponent\n            \n                40 %\n                (2/5)\n            \n        \n        \n            \n                \n                src/app/components/views/indoor-tile-view/indoor-tile-view.component.ts\n            \n            component\n            IndoorTileViewComponent\n            \n                9 %\n                (1/11)\n            \n        \n        \n            \n                \n                src/app/components/views/login-view/login-view.component.ts\n            \n            component\n            LoginViewComponent\n            \n                50 %\n                (4/8)\n            \n        \n        \n            \n                \n                src/app/components/views/open-apelogin-tile-view/open-apelogin-tile-view.component.ts\n            \n            component\n            OpenAPELoginTileViewComponent\n            \n                42 %\n                (3/7)\n            \n        \n        \n            \n                \n                src/app/components/views/outdoor-weather-detail-view/outdoor-weather-detail-view.component.ts\n            \n            component\n            OutdoorWeatherDetailViewComponent\n            \n                33 %\n                (2/6)\n            \n        \n        \n            \n                \n                src/app/components/views/outdoor-weather-view/outdoor-weather-view.component.ts\n            \n            component\n            OutdoorWeatherViewComponent\n            \n                7 %\n                (1/14)\n            \n        \n        \n            \n                \n                src/app/components/views/personalization-settings-view/personalization-settings-view.component.ts\n            \n            component\n            PersonalizationSettingsViewComponent\n            \n                12 %\n                (2/16)\n            \n        \n        \n            \n                \n                src/app/components/views/personalization-view/personalization-view.component.ts\n            \n            component\n            PersonalizationViewComponent\n            \n                50 %\n                (2/4)\n            \n        \n        \n            \n                \n                src/app/components/views/pollenflug-detail-view/pollenflug-detail-view.component.ts\n            \n            component\n            PollenflugDetailViewComponent\n            \n                33 %\n                (2/6)\n            \n        \n        \n            \n                \n                src/app/components/views/pollenflug-small-tile/pollenflug-small-tile.component.ts\n            \n            component\n            PollenflugSmallTileComponent\n            \n                12 %\n                (1/8)\n            \n        \n        \n            \n                \n                src/app/components/views/pollenflug-tile-view/pollenflug-tile-view.component.ts\n            \n            component\n            PollenflugTileViewComponent\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                src/app/components/views/registration-view/registration-view.component.ts\n            \n            component\n            RegistrationViewComponent\n            \n                33 %\n                (2/6)\n            \n        \n        \n            \n                \n                src/app/components/views/simple-tile-view/simple-tile-view.component.ts\n            \n            component\n            SimpleTileViewComponent\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                src/app/model/image.ts\n            \n            interface\n            ImageModel\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/app/model/mock-data/weather.mock.ts\n            \n            variable\n            AMBROSIA\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/model/mock-data/weather.mock.ts\n            \n            variable\n            BIRKE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/model/mock-data/weather.mock.ts\n            \n            variable\n            DASHBOARDTILES\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/model/mock-data/weather.mock.ts\n            \n            variable\n            ESCHE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/model/mock-data/weather.mock.ts\n            \n            variable\n            FORECAST\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/model/mock-data/weather.mock.ts\n            \n            variable\n            FORECASTTILE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/model/mock-data/weather.mock.ts\n            \n            variable\n            HASEL\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/model/mock-data/weather.mock.ts\n            \n            variable\n            INDOORAIRQUALITY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/model/mock-data/weather.mock.ts\n            \n            variable\n            INDOORAIRQUALITY2\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/model/mock-data/weather.mock.ts\n            \n            variable\n            INDOORROOM1\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/model/mock-data/weather.mock.ts\n            \n            variable\n            INDOORROOM2\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/model/mock-data/weather.mock.ts\n            \n            variable\n            OUTDOORWEA3THE3R114\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/model/mock-data/weather.mock.ts\n            \n            variable\n            OUTDOORWEATHE3R114\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/model/mock-data/weather.mock.ts\n            \n            variable\n            OUTDOORWEATHER\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/model/mock-data/weather.mock.ts\n            \n            variable\n            OUTDOORWEATHER10\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/model/mock-data/weather.mock.ts\n            \n            variable\n            OUTDOORWEATHER11\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/model/mock-data/weather.mock.ts\n            \n            variable\n            OUTDOORWEATHER110\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/model/mock-data/weather.mock.ts\n            \n            variable\n            OUTDOORWEATHER112\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/model/mock-data/weather.mock.ts\n            \n            variable\n            OUTDOORWEATHER113\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/model/mock-data/weather.mock.ts\n            \n            variable\n            OUTDOORWEATHER114\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/model/mock-data/weather.mock.ts\n            \n            variable\n            OUTDOORWEATHER12\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/model/mock-data/weather.mock.ts\n            \n            variable\n            OUTDOORWEATHER13\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/model/mock-data/weather.mock.ts\n            \n            variable\n            OUTDOORWEATHER14\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/model/mock-data/weather.mock.ts\n            \n            variable\n            OUTDOORWEATHER2\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/model/mock-data/weather.mock.ts\n            \n            variable\n            OUTDOORWEATHER3\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/model/mock-data/weather.mock.ts\n            \n            variable\n            OUTDOORWEATHER321\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/model/mock-data/weather.mock.ts\n            \n            variable\n            OUTDOORWEATHER4\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/model/mock-data/weather.mock.ts\n            \n            variable\n            OUTDOORWEATHER41\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/model/mock-data/weather.mock.ts\n            \n            variable\n            POLLEN\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/model/mock-data/weather.mock.ts\n            \n            variable\n            POLLENLIST\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/model/mock-data/weather.mock.ts\n            \n            variable\n            POLLENSMALL\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/model/mock-data/weather.mock.ts\n            \n            variable\n            POLLENSMALL2\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/model/mock-data/weather.mock.ts\n            \n            variable\n            ROGGEN\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/model/mock-data/weather.mock.ts\n            \n            variable\n            SCHLAFZIMMER\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/model/mock-data/weather.mock.ts\n            \n            variable\n            SCHLAFZIMMER2\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/model/mock-data/weather.mock.ts\n            \n            variable\n            SENSOR1\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/model/mock-data/weather.mock.ts\n            \n            variable\n            SENSOR2\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/model/mock-data/weather.mock.ts\n            \n            variable\n            WEATHERHISTORY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/model/mock-data/weather.mock.ts\n            \n            variable\n            WEATHERHISTORYBYDAY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/model/mock-data/weather.mock.ts\n            \n            variable\n            WOHNZIMMER\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/model/mock-data/weather.mock.ts\n            \n            variable\n            WOHNZIMMER2\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/model/user-context.ts\n            \n            interface\n            PollenType\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/model/user-context.ts\n            \n            interface\n            UserContext\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                src/app/model/user-context.ts\n            \n            interface\n            UserIdentifikation\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/model/user-context.ts\n            \n            variable\n            INITIAL_USER_CONTEXT\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/model/user-context.ts\n            \n            variable\n            INITIAL_USER_IDENTIFIKATION\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/model/weather.ts\n            \n            interface\n            GraphDataSet\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                src/app/model/weather.ts\n            \n            interface\n            IndoorRoomData\n            \n                12 %\n                (1/8)\n            \n        \n        \n            \n                \n                src/app/model/weather.ts\n            \n            interface\n            OutdoorWeatherData\n            \n                10 %\n                (1/10)\n            \n        \n        \n            \n                \n                src/app/model/weather.ts\n            \n            interface\n            PollenData\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                src/app/model/weather.ts\n            \n            interface\n            Tile\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                src/app/model/weather.ts\n            \n            interface\n            TileArrays\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/app/model/weather.ts\n            \n            interface\n            WeatherData\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/model/weather.ts\n            \n            interface\n            WeatherForecastData\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/app/model/weather.ts\n            \n            interface\n            WeatherHistoryByDayData\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/model/weather.ts\n            \n            interface\n            WeatherHistoryData\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/app/route-transition-animation.ts\n            \n            variable\n            routeTransitionAnimations\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/api/esp-configuration-api.service.ts\n            \n            injectable\n            ESPConfigurationAPIService\n            \n                40 %\n                (2/5)\n            \n        \n        \n            \n                \n                src/app/services/api/esp-configuration-api.service.ts\n            \n            interface\n            ESPConfiguration\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                src/app/services/api/user-context-api.service.ts\n            \n            injectable\n            UserContextAPIService\n            \n                9 %\n                (1/11)\n            \n        \n        \n            \n                \n                src/app/services/api/user-context-api.service.ts\n            \n            interface\n            CheckTokenResponse\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/services/api/user-context-api.service.ts\n            \n            interface\n            LoginResponse\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                src/app/services/api/user-context-api.service.ts\n            \n            interface\n            UserContextResponse\n            \n                11 %\n                (1/9)\n            \n        \n        \n            \n                \n                src/app/services/api/weather-api.service.ts\n            \n            injectable\n            WeatherAPIService\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                src/app/services/api/weather-api.service.ts\n            \n            interface\n            ForecastResponse\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                src/app/services/api/weather-api.service.ts\n            \n            interface\n            IndoorRoomResponse\n            \n                10 %\n                (1/10)\n            \n        \n        \n            \n                \n                src/app/services/api/weather-api.service.ts\n            \n            interface\n            OutdoorWeatherResponse\n            \n                10 %\n                (1/10)\n            \n        \n        \n            \n                \n                src/app/services/api/weather-api.service.ts\n            \n            interface\n            PollenResponse\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/app/services/history-tile.service.ts\n            \n            injectable\n            HistoryTileService\n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                src/app/services/history-tile.service.ts\n            \n            variable\n            DAYS\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/services/history-tile.service.ts\n            \n            variable\n            MONTHS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/image.service.ts\n            \n            injectable\n            ImageService\n            \n                80 %\n                (4/5)\n            \n        \n        \n            \n                \n                src/app/services/image.service.ts\n            \n            variable\n            Gradients\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/local-storage.service.ts\n            \n            injectable\n            LocalStorageService\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/app/services/local-storage.service.ts\n            \n            variable\n            DISABLE_LOGIN_IDENTIFIER\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/local-storage.service.ts\n            \n            variable\n            USER_CONTEXT_IDENTIFIER\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/local-storage.service.ts\n            \n            variable\n            USER_IDENTIFIKATION\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/services/speech.service.ts\n            \n            injectable\n            SpeechService\n            \n                60 %\n                (3/5)\n            \n        \n        \n            \n                \n                src/app/services/text.service.ts\n            \n            injectable\n            TextService\n            \n                88 %\n                (8/9)\n            \n        \n        \n            \n                \n                src/app/services/tile.service.ts\n            \n            injectable\n            TileService\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/app/services/user-context.service.ts\n            \n            injectable\n            UserContextService\n            \n                80 %\n                (8/10)\n            \n        \n        \n            \n                \n                src/app/services/weather-data.service.ts\n            \n            injectable\n            WeatherDataService\n            \n                36 %\n                (4/11)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~11.2.10\n        \n            @angular/cdk : ^11.2.11\n        \n            @angular/common : ~11.2.10\n        \n            @angular/compiler : ~11.2.10\n        \n            @angular/core : ~11.2.10\n        \n            @angular/forms : ~11.2.10\n        \n            @angular/material : ^11.2.11\n        \n            @angular/platform-browser : ~11.2.10\n        \n            @angular/platform-browser-dynamic : ~11.2.10\n        \n            @angular/router : ~11.2.10\n        \n            @angular/service-worker : ~11.2.10\n        \n            @rinminase/ng-charts : ^3.3.0\n        \n            ngx-spinner : ^11.0.1\n        \n            rxjs : ~6.6.0\n        \n            tslib : ^2.0.0\n        \n            zone.js : ~0.11.3\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            CardSize   (src/.../card-element.component.ts)\n                        \n                        \n                            Daytime   (src/.../weather.ts)\n                        \n                        \n                            HistoryGraphType   (src/.../history-tile-view.component.ts)\n                        \n                        \n                            Language   (src/.../user-context.ts)\n                        \n                        \n                            Themes   (src/.../user-context.ts)\n                        \n                        \n                            TilePriority   (src/.../weather.ts)\n                        \n                        \n                            TileType   (src/.../weather.ts)\n                        \n                        \n                            TimeInterval   (src/.../history-detail-view.component.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/components/ui-elements/card-element/card-element.component.ts\n    \n        \n            \n                \n                    \n                        \n                        CardSize\n                    \n                \n                    \n                        \n                            The size of the widget can be changed through using this\nenum values. \n\n                        \n                    \n                        \n                            \n                                 small\n                            \n                        \n                        \n                            \n                                 auto\n                            \n                        \n            \n        \n\n    src/app/model/weather.ts\n    \n        \n            \n                \n                    \n                        \n                        Daytime\n                    \n                \n                        \n                            \n                                 noon\n                            \n                        \n                        \n                            \n                                 night\n                            \n                        \n                        \n                            \n                                 dawn\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        TilePriority\n                    \n                \n                    \n                        \n                            Enum to set the priority of a tile\n\n                        \n                    \n                        \n                            \n                                 important\n                            \n                        \n                        \n                            \n                                 high\n                            \n                        \n                        \n                            \n                                 middle\n                            \n                        \n                        \n                            \n                                 low\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        TileType\n                    \n                \n                    \n                        \n                            Enum to identify the type of the tile. \n\n                        \n                    \n                        \n                            \n                                 indoorRoom\n                            \n                        \n                        \n                            \n                                 pollenSmall\n                            \n                        \n                        \n                            \n                                 pollenList\n                            \n                        \n                        \n                            \n                                 history\n                            \n                        \n                        \n                            \n                                 forecast\n                            \n                        \n                        \n                            \n                                 humidity\n                            \n                        \n                        \n                            \n                                 apparentTemperature\n                            \n                        \n            \n        \n\n    src/app/components/views/history-tile-view/history-tile-view.component.ts\n    \n        \n            \n                \n                    \n                        \n                        HistoryGraphType\n                    \n                \n                        \n                            \n                                 temperature\n                            \n                        \n                        \n                            \n                                 humidity\n                            \n                        \n            \n        \n\n    src/app/model/user-context.ts\n    \n        \n            \n                \n                    \n                        \n                        Language\n                    \n                \n                        \n                            \n                                 de-DE\n                            \n                        \n                        \n                            \n                                 en-EN\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        Themes\n                    \n                \n                        \n                            \n                                 Light\n                            \n                        \n                        \n                            \n                                 Dark\n                            \n                        \n                        \n                            \n                                 Automatic\n                            \n                        \n                        \n                            \n                                 HighContrast\n                            \n                        \n            \n        \n\n    src/app/components/views/history-detail-view/history-detail-view.component.ts\n    \n        \n            \n                \n                    \n                        \n                        TimeInterval\n                    \n                \n                        \n                            \n                                 day\n                            \n                        \n                        \n                            \n                                 week\n                            \n                        \n                        \n                            \n                                 month\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nWeather IO\nEine Smarthome Innovation\nThis project was generated with Angular CLI version 11.2.9.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ScreensModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UiElementsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ViewsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_ScreensModule\n\n\n\ncluster_ScreensModule_declarations\n\n\n\ncluster_UiElementsModule\n\n\n\ncluster_UiElementsModule_declarations\n\n\n\ncluster_UiElementsModule_exports\n\n\n\ncluster_ViewsModule\n\n\n\ncluster_ViewsModule_declarations\n\n\n\ncluster_ViewsModule_exports\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nScreensModule\n\nScreensModule\n\nScreensModule -->\n\nAppRoutingModule->ScreensModule\n\n\n\nAppModule -->\n\nScreensModule->AppModule\n\n\n\n\n\nUiElementsModule\n\nUiElementsModule\n\nAppModule -->\n\nUiElementsModule->AppModule\n\n\n\nScreensModule -->\n\nUiElementsModule->ScreensModule\n\n\n\n\n\nViewsModule\n\nViewsModule\n\nViewsModule -->\n\nUiElementsModule->ViewsModule\n\n\n\n\n\nBackButtonElementComponent \n\nBackButtonElementComponent \n\nBackButtonElementComponent  -->\n\nUiElementsModule->BackButtonElementComponent \n\n\n\n\n\nCardElementComponent \n\nCardElementComponent \n\nCardElementComponent  -->\n\nUiElementsModule->CardElementComponent \n\n\n\n\n\nCheckboxSwitcherElementComponent \n\nCheckboxSwitcherElementComponent \n\nCheckboxSwitcherElementComponent  -->\n\nUiElementsModule->CheckboxSwitcherElementComponent \n\n\n\n\n\nMenuBarElementComponent \n\nMenuBarElementComponent \n\nMenuBarElementComponent  -->\n\nUiElementsModule->MenuBarElementComponent \n\n\n\n\n\nMenuButtonElementComponent \n\nMenuButtonElementComponent \n\nMenuButtonElementComponent  -->\n\nUiElementsModule->MenuButtonElementComponent \n\n\n\n\n\nMenuElementComponent \n\nMenuElementComponent \n\nMenuElementComponent  -->\n\nUiElementsModule->MenuElementComponent \n\n\n\n\n\nNavBarElementComponent \n\nNavBarElementComponent \n\nNavBarElementComponent  -->\n\nUiElementsModule->NavBarElementComponent \n\n\n\n\n\nPollenListElementComponent \n\nPollenListElementComponent \n\nPollenListElementComponent  -->\n\nUiElementsModule->PollenListElementComponent \n\n\n\n\n\nPollenTagElementComponent \n\nPollenTagElementComponent \n\nPollenTagElementComponent  -->\n\nUiElementsModule->PollenTagElementComponent \n\n\n\n\n\nProgressChartElementComponent \n\nProgressChartElementComponent \n\nProgressChartElementComponent  -->\n\nUiElementsModule->ProgressChartElementComponent \n\n\n\n\n\nSliderElementComponent \n\nSliderElementComponent \n\nSliderElementComponent  -->\n\nUiElementsModule->SliderElementComponent \n\n\n\n\n\nTtsPlayerElementComponent \n\nTtsPlayerElementComponent \n\nTtsPlayerElementComponent  -->\n\nUiElementsModule->TtsPlayerElementComponent \n\n\n\nAppModule -->\n\nViewsModule->AppModule\n\n\n\nScreensModule -->\n\nViewsModule->ScreensModule\n\n\n\n\n\nCalibrationInfoDetailViewComponent \n\nCalibrationInfoDetailViewComponent \n\nCalibrationInfoDetailViewComponent  -->\n\nViewsModule->CalibrationInfoDetailViewComponent \n\n\n\n\n\nDashboardViewComponent \n\nDashboardViewComponent \n\nDashboardViewComponent  -->\n\nViewsModule->DashboardViewComponent \n\n\n\n\n\nForecastDetailViewComponent \n\nForecastDetailViewComponent \n\nForecastDetailViewComponent  -->\n\nViewsModule->ForecastDetailViewComponent \n\n\n\n\n\nHistoryDetailViewComponent \n\nHistoryDetailViewComponent \n\nHistoryDetailViewComponent  -->\n\nViewsModule->HistoryDetailViewComponent \n\n\n\n\n\nIndoorDetailViewComponent \n\nIndoorDetailViewComponent \n\nIndoorDetailViewComponent  -->\n\nViewsModule->IndoorDetailViewComponent \n\n\n\n\n\nLoginViewComponent \n\nLoginViewComponent \n\nLoginViewComponent  -->\n\nViewsModule->LoginViewComponent \n\n\n\n\n\nOutdoorWeatherDetailViewComponent \n\nOutdoorWeatherDetailViewComponent \n\nOutdoorWeatherDetailViewComponent  -->\n\nViewsModule->OutdoorWeatherDetailViewComponent \n\n\n\n\n\nOutdoorWeatherViewComponent \n\nOutdoorWeatherViewComponent \n\nOutdoorWeatherViewComponent  -->\n\nViewsModule->OutdoorWeatherViewComponent \n\n\n\n\n\nPersonalizationSettingsViewComponent \n\nPersonalizationSettingsViewComponent \n\nPersonalizationSettingsViewComponent  -->\n\nViewsModule->PersonalizationSettingsViewComponent \n\n\n\n\n\nPollenflugDetailViewComponent \n\nPollenflugDetailViewComponent \n\nPollenflugDetailViewComponent  -->\n\nViewsModule->PollenflugDetailViewComponent \n\n\n\n\n\nPollenflugSmallTileComponent \n\nPollenflugSmallTileComponent \n\nPollenflugSmallTileComponent  -->\n\nViewsModule->PollenflugSmallTileComponent \n\n\n\n\n\nRegistrationViewComponent \n\nRegistrationViewComponent \n\nRegistrationViewComponent  -->\n\nViewsModule->RegistrationViewComponent \n\n\n\n\n\nDashboardScreenComponent\n\nDashboardScreenComponent\n\nScreensModule -->\n\nDashboardScreenComponent->ScreensModule\n\n\n\n\n\nDetailScreenComponent\n\nDetailScreenComponent\n\nScreensModule -->\n\nDetailScreenComponent->ScreensModule\n\n\n\n\n\nOnboardingScreenComponent\n\nOnboardingScreenComponent\n\nScreensModule -->\n\nOnboardingScreenComponent->ScreensModule\n\n\n\n\n\nSettingsScreenComponent\n\nSettingsScreenComponent\n\nScreensModule -->\n\nSettingsScreenComponent->ScreensModule\n\n\n\n\n\nBackButtonElementComponent\n\nBackButtonElementComponent\n\nUiElementsModule -->\n\nBackButtonElementComponent->UiElementsModule\n\n\n\n\n\nCardElementComponent\n\nCardElementComponent\n\nUiElementsModule -->\n\nCardElementComponent->UiElementsModule\n\n\n\n\n\nCheckboxSwitcherElementComponent\n\nCheckboxSwitcherElementComponent\n\nUiElementsModule -->\n\nCheckboxSwitcherElementComponent->UiElementsModule\n\n\n\n\n\nMenuBarElementComponent\n\nMenuBarElementComponent\n\nUiElementsModule -->\n\nMenuBarElementComponent->UiElementsModule\n\n\n\n\n\nMenuButtonElementComponent\n\nMenuButtonElementComponent\n\nUiElementsModule -->\n\nMenuButtonElementComponent->UiElementsModule\n\n\n\n\n\nMenuElementComponent\n\nMenuElementComponent\n\nUiElementsModule -->\n\nMenuElementComponent->UiElementsModule\n\n\n\n\n\nNavBarElementComponent\n\nNavBarElementComponent\n\nUiElementsModule -->\n\nNavBarElementComponent->UiElementsModule\n\n\n\n\n\nPollenListElementComponent\n\nPollenListElementComponent\n\nUiElementsModule -->\n\nPollenListElementComponent->UiElementsModule\n\n\n\n\n\nPollenTagElementComponent\n\nPollenTagElementComponent\n\nUiElementsModule -->\n\nPollenTagElementComponent->UiElementsModule\n\n\n\n\n\nProgressChartElementComponent\n\nProgressChartElementComponent\n\nUiElementsModule -->\n\nProgressChartElementComponent->UiElementsModule\n\n\n\n\n\nSliderElementComponent\n\nSliderElementComponent\n\nUiElementsModule -->\n\nSliderElementComponent->UiElementsModule\n\n\n\n\n\nTtsPlayerElementComponent\n\nTtsPlayerElementComponent\n\nUiElementsModule -->\n\nTtsPlayerElementComponent->UiElementsModule\n\n\n\n\n\nApparentTemperatureTileViewComponent\n\nApparentTemperatureTileViewComponent\n\nViewsModule -->\n\nApparentTemperatureTileViewComponent->ViewsModule\n\n\n\n\n\nCalibrationInfoDetailViewComponent\n\nCalibrationInfoDetailViewComponent\n\nViewsModule -->\n\nCalibrationInfoDetailViewComponent->ViewsModule\n\n\n\n\n\nConfigurationTilePopUpDialogView\n\nConfigurationTilePopUpDialogView\n\nViewsModule -->\n\nConfigurationTilePopUpDialogView->ViewsModule\n\n\n\n\n\nConfigurationTileViewComponent\n\nConfigurationTileViewComponent\n\nViewsModule -->\n\nConfigurationTileViewComponent->ViewsModule\n\n\n\n\n\nConfigurationViewComponent\n\nConfigurationViewComponent\n\nViewsModule -->\n\nConfigurationViewComponent->ViewsModule\n\n\n\n\n\nDashboardViewComponent\n\nDashboardViewComponent\n\nViewsModule -->\n\nDashboardViewComponent->ViewsModule\n\n\n\n\n\nForecastDetailViewComponent\n\nForecastDetailViewComponent\n\nViewsModule -->\n\nForecastDetailViewComponent->ViewsModule\n\n\n\n\n\nForecastTileViewComponent\n\nForecastTileViewComponent\n\nViewsModule -->\n\nForecastTileViewComponent->ViewsModule\n\n\n\n\n\nHistoryDetailViewComponent\n\nHistoryDetailViewComponent\n\nViewsModule -->\n\nHistoryDetailViewComponent->ViewsModule\n\n\n\n\n\nHistoryTileViewComponent\n\nHistoryTileViewComponent\n\nViewsModule -->\n\nHistoryTileViewComponent->ViewsModule\n\n\n\n\n\nHumidityTileViewComponent\n\nHumidityTileViewComponent\n\nViewsModule -->\n\nHumidityTileViewComponent->ViewsModule\n\n\n\n\n\nIndoorDetailViewComponent\n\nIndoorDetailViewComponent\n\nViewsModule -->\n\nIndoorDetailViewComponent->ViewsModule\n\n\n\n\n\nIndoorTileViewComponent\n\nIndoorTileViewComponent\n\nViewsModule -->\n\nIndoorTileViewComponent->ViewsModule\n\n\n\n\n\nLoginViewComponent\n\nLoginViewComponent\n\nViewsModule -->\n\nLoginViewComponent->ViewsModule\n\n\n\n\n\nOpenAPELoginTileViewComponent\n\nOpenAPELoginTileViewComponent\n\nViewsModule -->\n\nOpenAPELoginTileViewComponent->ViewsModule\n\n\n\n\n\nOutdoorWeatherDetailViewComponent\n\nOutdoorWeatherDetailViewComponent\n\nViewsModule -->\n\nOutdoorWeatherDetailViewComponent->ViewsModule\n\n\n\n\n\nOutdoorWeatherViewComponent\n\nOutdoorWeatherViewComponent\n\nViewsModule -->\n\nOutdoorWeatherViewComponent->ViewsModule\n\n\n\n\n\nPersonalizationSettingsViewComponent\n\nPersonalizationSettingsViewComponent\n\nViewsModule -->\n\nPersonalizationSettingsViewComponent->ViewsModule\n\n\n\n\n\nPersonalizationViewComponent\n\nPersonalizationViewComponent\n\nViewsModule -->\n\nPersonalizationViewComponent->ViewsModule\n\n\n\n\n\nPollenflugDetailViewComponent\n\nPollenflugDetailViewComponent\n\nViewsModule -->\n\nPollenflugDetailViewComponent->ViewsModule\n\n\n\n\n\nPollenflugSmallTileComponent\n\nPollenflugSmallTileComponent\n\nViewsModule -->\n\nPollenflugSmallTileComponent->ViewsModule\n\n\n\n\n\nPollenflugTileViewComponent\n\nPollenflugTileViewComponent\n\nViewsModule -->\n\nPollenflugTileViewComponent->ViewsModule\n\n\n\n\n\nRegistrationViewComponent\n\nRegistrationViewComponent\n\nViewsModule -->\n\nRegistrationViewComponent->ViewsModule\n\n\n\n\n\nSimpleTileViewComponent\n\nSimpleTileViewComponent\n\nViewsModule -->\n\nSimpleTileViewComponent->ViewsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        5 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    41 Components\n                \n            \n        \n        \n            \n                \n                    \n                    11 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    22 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        16 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AMBROSIA   (src/.../weather.mock.ts)\n                        \n                        \n                            BIRKE   (src/.../weather.mock.ts)\n                        \n                        \n                            DASHBOARDTILES   (src/.../weather.mock.ts)\n                        \n                        \n                            DAYS   (src/.../history-tile.service.ts)\n                        \n                        \n                            DISABLE_LOGIN_IDENTIFIER   (src/.../local-storage.service.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            ESCHE   (src/.../weather.mock.ts)\n                        \n                        \n                            FORECAST   (src/.../weather.mock.ts)\n                        \n                        \n                            FORECASTTILE   (src/.../weather.mock.ts)\n                        \n                        \n                            Gradients   (src/.../image.service.ts)\n                        \n                        \n                            HASEL   (src/.../weather.mock.ts)\n                        \n                        \n                            INDOORAIRQUALITY   (src/.../weather.mock.ts)\n                        \n                        \n                            INDOORAIRQUALITY2   (src/.../weather.mock.ts)\n                        \n                        \n                            INDOORROOM1   (src/.../weather.mock.ts)\n                        \n                        \n                            INDOORROOM2   (src/.../weather.mock.ts)\n                        \n                        \n                            INITIAL_USER_CONTEXT   (src/.../user-context.ts)\n                        \n                        \n                            INITIAL_USER_IDENTIFIKATION   (src/.../user-context.ts)\n                        \n                        \n                            MONTHS   (src/.../history-tile.service.ts)\n                        \n                        \n                            OUTDOORWEA3THE3R114   (src/.../weather.mock.ts)\n                        \n                        \n                            OUTDOORWEATHE3R114   (src/.../weather.mock.ts)\n                        \n                        \n                            OUTDOORWEATHER   (src/.../weather.mock.ts)\n                        \n                        \n                            OUTDOORWEATHER10   (src/.../weather.mock.ts)\n                        \n                        \n                            OUTDOORWEATHER11   (src/.../weather.mock.ts)\n                        \n                        \n                            OUTDOORWEATHER110   (src/.../weather.mock.ts)\n                        \n                        \n                            OUTDOORWEATHER112   (src/.../weather.mock.ts)\n                        \n                        \n                            OUTDOORWEATHER113   (src/.../weather.mock.ts)\n                        \n                        \n                            OUTDOORWEATHER114   (src/.../weather.mock.ts)\n                        \n                        \n                            OUTDOORWEATHER12   (src/.../weather.mock.ts)\n                        \n                        \n                            OUTDOORWEATHER13   (src/.../weather.mock.ts)\n                        \n                        \n                            OUTDOORWEATHER14   (src/.../weather.mock.ts)\n                        \n                        \n                            OUTDOORWEATHER2   (src/.../weather.mock.ts)\n                        \n                        \n                            OUTDOORWEATHER3   (src/.../weather.mock.ts)\n                        \n                        \n                            OUTDOORWEATHER321   (src/.../weather.mock.ts)\n                        \n                        \n                            OUTDOORWEATHER4   (src/.../weather.mock.ts)\n                        \n                        \n                            OUTDOORWEATHER41   (src/.../weather.mock.ts)\n                        \n                        \n                            POLLEN   (src/.../weather.mock.ts)\n                        \n                        \n                            POLLENLIST   (src/.../weather.mock.ts)\n                        \n                        \n                            POLLENSMALL   (src/.../weather.mock.ts)\n                        \n                        \n                            POLLENSMALL2   (src/.../weather.mock.ts)\n                        \n                        \n                            ROGGEN   (src/.../weather.mock.ts)\n                        \n                        \n                            routeTransitionAnimations   (src/.../route-transition-animation.ts)\n                        \n                        \n                            SCHLAFZIMMER   (src/.../weather.mock.ts)\n                        \n                        \n                            SCHLAFZIMMER2   (src/.../weather.mock.ts)\n                        \n                        \n                            SENSOR1   (src/.../weather.mock.ts)\n                        \n                        \n                            SENSOR2   (src/.../weather.mock.ts)\n                        \n                        \n                            USER_CONTEXT_IDENTIFIER   (src/.../local-storage.service.ts)\n                        \n                        \n                            USER_IDENTIFIKATION   (src/.../local-storage.service.ts)\n                        \n                        \n                            WEATHERHISTORY   (src/.../weather.mock.ts)\n                        \n                        \n                            WEATHERHISTORYBYDAY   (src/.../weather.mock.ts)\n                        \n                        \n                            WOHNZIMMER   (src/.../weather.mock.ts)\n                        \n                        \n                            WOHNZIMMER2   (src/.../weather.mock.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/model/mock-data/weather.mock.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            AMBROSIA\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         PollenData\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    pollenName: \"Ambrosia\",\n    id: 5,\n    today: '3',\n    tomorrow: '0',\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            BIRKE\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         PollenData\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    pollenName: \"Birke\",\n    id: 4,\n    today: '2',\n    tomorrow: '0',\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            DASHBOARDTILES\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Tile[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    FORECASTTILE,\n    INDOORROOM1,\n    POLLENLIST,\n    INDOORROOM2,\n    POLLENSMALL,\n    POLLENSMALL2,\n]\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ESCHE\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         PollenData\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    pollenName: \"Esche\",\n    id : 1,\n    today: '0',\n    tomorrow: '0',\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            FORECAST\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         WeatherForecastData\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    trend: \"falling\",\n    weatherDescription: \"Rainy\",\n    weatherIcon: \"rainy\"\n  }\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            FORECASTTILE\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Tile\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    type: TileType.forecast,\n    data: FORECAST,\n    id: \"FORECAST\",\n    priority: TilePriority.low,\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            HASEL\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         PollenData\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    pollenName: \"Hasel\",\n    id: 3,\n    today: '1',\n    tomorrow: '0',\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            INDOORAIRQUALITY\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IndoorRoomData[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    WOHNZIMMER,\n    SCHLAFZIMMER\n]\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            INDOORAIRQUALITY2\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IndoorRoomData[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    WOHNZIMMER2,\n    SCHLAFZIMMER2\n]\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            INDOORROOM1\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Tile\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    type: TileType.indoorRoom,\n    data: WOHNZIMMER,\n    id: SCHLAFZIMMER.roomID,\n    priority: TilePriority.low,\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            INDOORROOM2\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Tile\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    type: TileType.indoorRoom,\n    data: SCHLAFZIMMER,\n    id: SCHLAFZIMMER.roomID,\n    priority: TilePriority.low,\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            OUTDOORWEA3THE3R114\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         OutdoorWeatherData\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    temperature: 8,\n    maxTemperature: 20,\n    minTemperature: 4,\n    humidity: 70,\n    timestamp: new Date('May 19, 2021 10:24:00'),\n    weather: \"cloudy\",\n    apparentTemperature: 12,\n    location: \"Stuttgart\",\n    postCode: '71549'\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            OUTDOORWEATHE3R114\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         OutdoorWeatherData\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    temperature: 20,\n    maxTemperature: 20,\n    minTemperature: 4,\n    humidity: 70,\n    timestamp: new Date('May 19, 2021 10:34:00'),\n    weather: \"cloudy\",\n    apparentTemperature: 12,\n    location: \"Stuttgart\",\n    postCode: '71549'\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            OUTDOORWEATHER\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         OutdoorWeatherData\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    temperature: 25,\n    maxTemperature: 20,\n    minTemperature: 14,\n    humidity: 46,\n    timestamp: new Date('May 17, 2021 07:24:00'),\n    weather: \"partly-cloudy-day\",\n    apparentTemperature: 12,\n    location: \"Stuttgart\",\n    postCode: '70565'\n}\n                        \n                    \n\n                \n                    \n                        MOCK DATA\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            OUTDOORWEATHER10\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         OutdoorWeatherData\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    temperature: 14,\n    maxTemperature: 20,\n    minTemperature: 4,\n    humidity: 66,\n    timestamp: new Date('May 16, 2021 07:24:00'),\n    weather: \"cloudy\",\n    apparentTemperature: 12,\n    location: \"Stuttgart\",\n    postCode: '71549'\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            OUTDOORWEATHER11\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         OutdoorWeatherData\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    temperature: 15,\n    maxTemperature: 20,\n    minTemperature: 4,\n    humidity: 50,\n    timestamp: new Date('May 13, 2021 08:24:00'),\n    weather: \"cloudy\",\n    apparentTemperature: 12,\n    location: \"Stuttgart\",\n    postCode: '71549',\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            OUTDOORWEATHER110\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         OutdoorWeatherData\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    temperature: 14,\n    maxTemperature: 20,\n    minTemperature: 4,\n    humidity: 66,\n    timestamp: new Date('May 19, 2021 07:24:00'),\n    weather: \"cloudy\",\n    apparentTemperature: 12,\n    location: \"Stuttgart\",\n    postCode: '71549'\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            OUTDOORWEATHER112\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         OutdoorWeatherData\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    temperature: 15,\n    maxTemperature: 20,\n    minTemperature: 4,\n    humidity: 50,\n    timestamp: new Date('May 12, 2021 08:24:00'),\n    weather: \"cloudy\",\n    apparentTemperature: 12,\n    location: \"Stuttgart\",\n    postCode: '71549'\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            OUTDOORWEATHER113\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         OutdoorWeatherData\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    temperature: 20,\n    maxTemperature: 20,\n    minTemperature: 4,\n    humidity: 40,\n    timestamp: new Date('May 11, 2021 09:24:00'),\n    weather: \"cloudy\",\n    apparentTemperature: 12,\n    location: \"Stuttgart\",\n    postCode: '71549'\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            OUTDOORWEATHER114\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         OutdoorWeatherData\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    temperature: 18,\n    maxTemperature: 20,\n    minTemperature: 4,\n    humidity: 70,\n    timestamp: new Date('May 10, 2021 10:24:00'),\n    weather: \"cloudy\",\n    apparentTemperature: 12,\n    location: \"Stuttgart\",\n    postCode: '71549'\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            OUTDOORWEATHER12\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         OutdoorWeatherData\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    temperature: 15,\n    maxTemperature: 20,\n    minTemperature: 4,\n    humidity: 50,\n    timestamp: new Date('May 16, 2021 08:24:00'),\n    weather: \"cloudy\",\n    apparentTemperature: 12,\n    location: \"Stuttgart\",\n    postCode: '71549'\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            OUTDOORWEATHER13\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         OutdoorWeatherData\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    temperature: 20,\n    maxTemperature: 20,\n    minTemperature: 4,\n    humidity: 40,\n    timestamp: new Date('May 14, 2021 09:24:00'),\n    weather: \"cloudy\",\n    apparentTemperature: 12,\n    location: \"Stuttgart\",\n    postCode: '71549'\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            OUTDOORWEATHER14\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         OutdoorWeatherData\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    temperature: 18,\n    maxTemperature: 20,\n    minTemperature: 4,\n    humidity: 70,\n    timestamp: new Date('May 14, 2021 10:24:00'),\n    weather: \"cloudy\",\n    apparentTemperature: 12,\n    location: \"Stuttgart\",\n    postCode: '71549'\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            OUTDOORWEATHER2\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         OutdoorWeatherData\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    temperature: 15,\n    maxTemperature: 20,\n    minTemperature: 4,\n    humidity: 50,\n    timestamp: new Date('May 17, 2021 08:24:00'),\n    weather: \"cloudy\",\n    apparentTemperature: 12,\n    location: \"Stuttgart\",\n    postCode: '71549'\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            OUTDOORWEATHER3\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         OutdoorWeatherData\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    temperature: 20,\n    maxTemperature: 20,\n    minTemperature: 4,\n    humidity: 40,\n    timestamp: new Date('May 17, 2021 09:24:00'),\n    weather: \"cloudy\",\n    apparentTemperature: 12,\n    location: \"Stuttgart\",\n    postCode: '71549'\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            OUTDOORWEATHER321\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         OutdoorWeatherData\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    temperature: 20,\n    maxTemperature: 20,\n    minTemperature: 4,\n    humidity: 40,\n    timestamp: new Date('May 13, 2021 09:24:00'),\n    weather: \"cloudy\",\n    apparentTemperature: 12,\n    location: \"Stuttgart\",\n    postCode: '71549'\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            OUTDOORWEATHER4\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         OutdoorWeatherData\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    temperature: 18,\n    maxTemperature: 20,\n    minTemperature: 4,\n    humidity: 70,\n    timestamp: new Date('May 17, 2021 10:24:00'),\n    weather: \"cloudy\",\n    apparentTemperature: 12,\n    location: \"Stuttgart\",\n    postCode: '71549'\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            OUTDOORWEATHER41\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         OutdoorWeatherData\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    temperature: 18,\n    maxTemperature: 20,\n    minTemperature: 4,\n    humidity: 70,\n    timestamp: new Date('May 18, 2021 10:24:00'),\n    weather: \"cloudy\",\n    apparentTemperature: 12,\n    location: \"Stuttgart\",\n    postCode: '71549'\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            POLLEN\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         PollenData[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    ESCHE,\n    ROGGEN,\n    HASEL,\n    AMBROSIA,\n    BIRKE,\n    {\n        pollenName: \"Beifuß\",\n        id: 6,\n        today: '0',\n        tomorrow: '0',\n    },\n\n    {\n        pollenName: \"Gräser\",\n        id: 7,\n        today: '3',\n        tomorrow: '0',\n    },\n\n    {\n        pollenName: \"Erle\",\n        id: 8,\n        today: '0',\n        tomorrow: '0',\n    },\n]\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            POLLENLIST\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Tile\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    type: TileType.pollenList,\n    data: POLLEN,\n    id: \"POLLENLIST\",\n    priority: TilePriority.low,\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            POLLENSMALL\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Tile\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    type: TileType.pollenSmall,\n    data: ESCHE,\n    id: ESCHE.id + \"\",\n    priority: TilePriority.low,\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            POLLENSMALL2\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Tile\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    type: TileType.pollenSmall,\n    data: BIRKE,\n    id: BIRKE.id + \"\",\n    priority: TilePriority.low,\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ROGGEN\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         PollenData\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    pollenName: \"Roggen\",\n    id: 2,\n    today: '1',\n    tomorrow: '0',\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            SCHLAFZIMMER\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IndoorRoomData\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    roomID: \"15359845524\",\n    roomName: \"Schlafzimmer\",\n    airQuality: 12,\n    temperature: 22,\n    humidity: 50,\n    timestamp: new Date(),\n    calibrationValue: 25,\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            SCHLAFZIMMER2\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IndoorRoomData\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    roomID: \"15359845524\",\n    roomName: \"Schlafzimmer2\",\n    airQuality: 2,\n    temperature: 22,\n    humidity: 5,\n    timestamp: new Date(),\n    calibrationValue: 25,\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            SENSOR1\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ESPConfiguration\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    id: 1,\n    roomName: \"device1\",\n    transmissionFrequency: 10,\n    sensorType: \"outdoor\",\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            SENSOR2\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ESPConfiguration\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    id: 1,\n    roomName: \"Wohnzimmer\",\n    transmissionFrequency: 10,\n    sensorType: \"indoor\",\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            WEATHERHISTORY\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         WeatherHistoryData\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    datapoints: [\n        OUTDOORWEATHER,\n        OUTDOORWEATHER10,\n        OUTDOORWEATHER2,\n        OUTDOORWEATHER13,\n        OUTDOORWEATHER14,\n        OUTDOORWEATHER4,\n        OUTDOORWEATHER3,\n        OUTDOORWEATHER12,\n        OUTDOORWEATHER114,\n        OUTDOORWEATHER113,\n        OUTDOORWEATHER112,\n        OUTDOORWEATHER110,\n        OUTDOORWEATHER41,\n        OUTDOORWEATHER321,\n        OUTDOORWEATHER11,\n        OUTDOORWEATHE3R114,\n        OUTDOORWEA3THE3R114,\n    ]\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            WEATHERHISTORYBYDAY\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         WeatherHistoryByDayData\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    averageHumidity: 40,\n    averageTemperature: 20,\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            WOHNZIMMER\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IndoorRoomData\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    roomID: \"328959845524\",\n    roomName: \"Wohnzimmer\",\n    airQuality: 26,\n    temperature: 22,\n    humidity: 50,\n    timestamp: new Date(),\n    calibrationValue: 25,\n\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            WOHNZIMMER2\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IndoorRoomData\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    roomID: \"328959845524\",\n    roomName: \"Wohnzimmer2\",\n    airQuality: 12,\n    temperature: 2,\n    humidity: 50,\n    timestamp: new Date(),\n    calibrationValue: 25,\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/services/history-tile.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            DAYS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : ['So','Mo','Di','Mi','Do','Fr','Sa']\n                        \n                    \n\n                \n                    \n                        Readable string constants of days and months\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            MONTHS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : ['Januar','Februar','März','April','Mai','Juni','Juli','August','September','Oktober','November','Dezember']\n                        \n                    \n\n\n            \n        \n\n    src/app/services/local-storage.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            DISABLE_LOGIN_IDENTIFIER\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'wetterstation-disable-login'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            USER_CONTEXT_IDENTIFIER\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'wetterstation-user-context'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            USER_IDENTIFIKATION\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'wetterstation-user-identifikation'\n                        \n                    \n\n                \n                    \n                        Identifier key constants\n\n                    \n                \n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true,\n  testData: false,\n  baseURL: 'http://192.168.178.47:4201/v1/',\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false,\n  testData: true, // Change this value to turn the test data on or off. Test data means that no connection to the server will be established\n  baseURL: '', // for not production case we are using the Angular proxy. Which is automatically started by calling ng serve.\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/services/image.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            Gradients\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  noon: {\n    background: 'linear-gradient(0deg, rgba(97,194,216,1) 0%, rgba(67,125,219,1) 100%)',\n    filter: 'progid:DXImageTransform.Microsoft.gradient(startColorstr=\"#61c2d8\",endColorstr=\"#437ddb\",GradientType=1)'\n  },\n  dawn: {\n    background: 'linear-gradient(0deg, rgba(238,69,59,1) 0%, rgba(164,9,110,1) 100%)',\n    filter: 'progid:DXImageTransform.Microsoft.gradient(startColorstr=\"#ee453b\",endColorstr=\"#a4096e\",GradientType=1)'\n  },\n  night: {\n    background: 'linear-gradient(0deg, rgba(216,97,204,1) 0%, rgba(70,67,219,1) 100%)',\n    filter: 'progid:DXImageTransform.Microsoft.gradient(startColorstr=\"#d861cc\",endColorstr=\"#4643db\",GradientType=1)'\n  },\n  noonDark: {\n    background: 'linear-gradient(170deg, rgba(20,27,87,1) 0%, rgba(151,208,255,1) 100%)',\n    filter: 'progid:DXImageTransform.Microsoft.gradient(startColorstr=\"#61c2d8\",endColorstr=\"#437ddb\",GradientType=1)'\n  },\n  dawnDark: {\n    background: 'linear-gradient(170deg, rgba(212,108,102,1) 0%, rgba(108,10,72,1) 100%)',\n    filter: 'progid:DXImageTransform.Microsoft.gradient(startColorstr=\"#ee453b\",endColorstr=\"#a4096e\",GradientType=1)'\n  },\n  nightDark: {\n    background: 'linear-gradient(170deg, rgba(119,48,112,1) 0%, rgba(152,152,191,1) 100%)',\n    filter: 'progid:DXImageTransform.Microsoft.gradient(startColorstr=\"#d861cc\",endColorstr=\"#4643db\",GradientType=1)'\n  },\n  highContrast: {\n    background: 'linear-gradient(170deg, rgba(0,0,0,1) 0%, rgba(0,0,0,1) 100%)',\n    filter: 'progid:DXImageTransform.Microsoft.gradient(startColorstr=\"#d861cc\",endColorstr=\"#4643db\",GradientType=1)'\n  }\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/model/user-context.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            INITIAL_USER_CONTEXT\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserContext\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    theme: Themes.Automatic,\n    fontSize: 62.5,\n    pollen: [],\n    selfVoicingEnabled: false,\n    doVentilationReminder: false,\n    reduceMotion: false,\n}\n                        \n                    \n\n                \n                    \n                        Empty user context \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            INITIAL_USER_IDENTIFIKATION\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserIdentifikation\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    token: '',\n    id: -99,\n}\n                        \n                    \n\n                \n                    \n                        Empty user identifikation \n\n                    \n                \n\n            \n        \n\n    src/app/route-transition-animation.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            routeTransitionAnimations\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : trigger('triggerName', [\n\ttransition('Dashboard => Detail, Login => Personalization, Login => Registration, Registration => Personalization, Configuration => Calibration', [\n\t\tstyle({ position: 'relative',}),\n\t\tquery(':enter, :leave', [\n\t\t\tstyle({\n\t\t\t\tposition: 'absolute',\n\t\t\t\ttop: 0,\n\t\t\t\tright: 0,\n\t\t\t\twidth: '100%',\n\t\t\t})\n\t\t]),\n\t\tquery(':enter', [style({ \n\t\t\tright: '-100%', \n\t\t\topacity: 0.5,\n\t\t })]),\n\t\tquery(':leave', animateChild()),\n\t\tgroup([\n\t\t\tquery(':leave', [animate('0.6s ease-out', style({ opacity: 0.5 }))]),\n\t\t\tquery(':enter', [animate('0.3s ease-out', style({ right: '0%', opacity: 1 }))])\n\t\t]),\n\t\tquery(':enter', animateChild())\n\t]),\n\t\n\ttransition('Detail => Dashboard', [\n\t\tstyle({ position: 'relative' }),\n\t\tquery(':enter, :leave', [\n\t\t\tstyle({\n\t\t\t\tposition: 'absolute',\n\t\t\t\ttop: 0,\n\t\t\t\tleft: 0,\n\t\t\t\twidth: '100%'\n\t\t\t})\n\t\t]),\n\t\tquery(':enter', [style({ opacity: 0.5 })]),\n\t\tquery(':leave', animateChild()),\n\t\tgroup([\n\t\t\tquery(':leave', [animate('0.6s ease-out', style({ opacity: 0.5 }))]),\n\t\t\tquery(':enter', [animate('0.6s ease-out', style({ opacity: 1 }))])\n\t\t]),\n\t\tquery(':enter', animateChild())\n\t]),\n\n\ttransition('Personalization => Login, Registration => Login, Personalization => Registration', [\n\t\tstyle({ position: 'relative',}),\n\t\tquery(':enter, :leave', [\n\t\t\tstyle({\n\t\t\t\tposition: 'absolute',\n\t\t\t\ttop: 0,\n\t\t\t\tright: 0,\n\t\t\t\twidth: '100%',\n\t\t\t})\n\t\t]),\n\t\tquery(':leave', [style({ \n\t\t\tright: '0%', \n\t\t\topacity: 1,\n\t\t\t\"z-index\": 100,\n\t\t })]),\n\t\t query(':enter', [style({ \n\t\t\topacity: 0.2,\n\t\t })]),\n\t\tquery(':leave', animateChild()),\n\t\tgroup([\n\t\t\tquery(':enter', [animate('0.6s ease-out', style({ opacity: 1 }))]),\n\t\t\tquery(':leave', [animate('0.3s ease-out', style({ right: '-100%', opacity: 0 }))])\n\t\t]),\n\t\tquery(':enter', animateChild())\n\t]),\n])\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}

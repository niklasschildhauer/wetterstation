var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.042,1,0.688]],["body/components/AppComponent.html",[0,0.061,1,1.098,2,0.896,3,0.093,4,0.082,5,0.696,6,0.696,7,0.696,8,0.696,9,0.082,10,3.163,11,0.696,12,1.653,13,1.545,14,1.887,15,0.989,16,5.99,17,0.989,18,5.147,19,0.128,20,0.534,21,3.259,22,3.424,23,5.235,24,3.821,25,1.098,26,2.817,27,0.702,28,6.525,29,6.525,30,6.525,31,1.254,32,4.498,33,0.494,34,3.62,35,5.701,36,3.005,37,5.99,38,3.108,39,5.005,40,4.701,41,1.073,42,5.147,43,0.896,44,0.013,45,0.858,46,0.254,47,4.498,48,3.62,49,0.685,50,1.241,51,3.62,52,3.62,53,3.62,54,4.498,55,5.701,56,3.62,57,4.498,58,1.277,59,1.213,60,1.295,61,1.799,62,0.675,63,3.62,64,2.634,65,3.62,66,4.07,67,3.62,68,3.62,69,0.604,70,0.271,71,2.558,72,3.62,73,1.532,74,1.655,75,2.354,76,1.591,77,3.751,78,3.163,79,2.309,80,1.969,81,2.181,82,1.476,83,3.496,84,2.309,85,2.862,86,0.093,87,0.285,88,0.817,89,1.622,90,5.147,91,2.637,92,3.62,93,2.862,94,2.309,95,2.309,96,2.458,97,0.957,98,3.163,99,3.163,100,2.862,101,2.801,102,1.969,103,1.119,104,2.309,105,3.496,106,3.163,107,0.58,108,3.62,109,2.862,110,2.458,111,2.862,112,1.123,113,2.309,114,2.458,115,2.458,116,4.07,117,1.799,118,3.62,119,3.283,120,2.354,121,2.674,122,3.62,123,3.62,124,2.637,125,3.62,126,2.458,127,0.531,128,3.163,129,0.817,130,3.163,131,1.88,132,1.88,133,3.62,134,1.954,135,3.62,136,5.147,137,2.051,138,4.07,139,2.263,140,3.62,141,3.62,142,3.62,143,4.07,144,5.147,145,5.147,146,3.62,147,3.62,148,2.637,149,3.62,150,5.147,151,2.637,152,3.62,153,2.309,154,2.637,155,3.163,156,3.62,157,3.62,158,3.62,159,1.473,160,3.62,161,3.62,162,3.62,163,3.62,164,3.62,165,3.62,166,3.62,167,3.62,168,3.163,169,1.404,170,2.309,171,1.16,172,3.163,173,1.724,174,2.051,175,1.239,176,1.476,177,0.957,178,1.591,179,2.024,180,0.589,181,0.989,182,1.043,183,0.696,184,0.696,185,0.609,186,0.673,187,0.314,188,0.74,189,1.6,190,0.696,191,0.609,192,0.673,193,0.926,194,1.511,195,0.609,196,0.673,197,0.609,198,0.673,199,0.651,200,0.609,201,0.975,202,0.696,203,0.609,204,0.589,205,0.589,206,1.254,207,0.589,208,0.589,209,0.406,210,0.609,211,0.589,212,0.557,213,0.609,214,0.609,215,0.314,216,0.589,217,0.755,218,0.609,219,0.589,220,0.531,221,0.609,222,1.114,223,0.926,224,0.609,225,0.609,226,0.609,227,0.673,228,0.589,229,0.651,230,0.609,231,0.651,232,0.651,233,0.589,234,0.728,235,0.386,236,0.609,237,0.589,238,0.896,239,0.782,240,0.589,241,0.589,242,1.114,243,0.609,244,0.63,245,0.696,246,0.609,247,0.609,248,0.289,249,0.651,250,0.609,251,0.651,252,0.609,253,0.673,254,0.651,255,0.589,256,0.63,257,0.589,258,0.609,259,0.673,260,0.609,261,0.673,262,0.609,263,0.673,264,0.651,265,0.696,266,0.696,267,0.005,268,0.007,269,0.005]],["title/modules/AppModule.html",[270,2.123,271,2.978]],["body/modules/AppModule.html",[1,1.427,3,0.142,4,0.124,9,0.124,13,1.227,44,0.013,69,0.668,70,0.414,74,2.526,86,0.142,87,0.435,180,0.899,267,0.008,268,0.01,269,0.008,270,2.869,271,6.236,272,3.157,273,3.328,274,5.023,275,5.023,276,4.631,277,3.523,278,4.827,279,4.827,280,4.827,281,4.827,282,5.155,283,5.489,284,4.87,285,5.155,286,4.631,287,3.751,288,3.005,289,5.523,290,4.631,291,6.819,292,4.631,293,6.819,294,5.392,295,3.751,296,5.523,297,4.025,298,4.368,299,5.523,300,5.523,301,4.827,302,5.523,303,5.958,304,4.827,305,5.523,306,4.827,307,4.827,308,2.429,309,5.523,310,5.392,311,3.523,312,3.523,313,5.523,314,5.523,315,5.523,316,5.523,317,3.751,318,5.523,319,5.523,320,5.523,321,5.523,322,5.523,323,5.523,324,5.523,325,5.523,326,5.523,327,5.523]],["title/modules/AppRoutingModule.html",[270,2.123,282,2.607]],["body/modules/AppRoutingModule.html",[0,0.087,3,0.128,4,0.112,9,0.112,44,0.013,69,0.669,70,0.373,71,2.474,86,0.128,87,0.393,103,1.281,107,0.795,127,1.174,134,1.89,175,1.705,201,0.81,204,1.039,205,1.039,207,1.039,208,1.039,209,0.393,211,1.039,212,0.539,216,1.039,219,1.039,220,0.937,228,1.039,229,0.896,233,1.039,234,0.704,235,0.479,237,0.81,238,1.228,239,1.071,240,1.148,241,1.039,248,0.28,255,1.039,256,1.112,257,1.039,267,0.007,268,0.009,269,0.007,272,2.846,277,3.176,282,4.074,290,3.381,292,4.338,328,4.351,329,4.979,330,5.051,331,3.225,332,4.979,333,3.628,334,6.501,335,4.979,336,3.628,337,4.979,338,3.628,339,4.979,340,3.628,341,4.979,342,3.176,343,6.528,344,4.979,345,3.381,346,4.979,347,3.176,348,4.979,349,3.381,350,4.979,351,3.628,352,4.979,353,3.381,354,6.388,355,4.338,356,4.979,357,3.381,358,4.979,359,3.628,360,6.692,361,8.005,362,7.053,363,2.372,364,4.979,365,4.979,366,4.351,367,4.979,368,4.979]],["title/components/ApparentTemperatureTileViewComponent.html",[0,0.042,185,0.688]],["body/components/ApparentTemperatureTileViewComponent.html",[0,0.066,1,0.702,2,0.989,3,0.107,4,0.094,5,0.802,6,0.802,7,0.802,8,0.802,9,0.094,11,0.802,12,1.666,13,1.558,15,1.092,17,1.092,19,0.148,20,0.59,25,1.088,27,0.775,31,1.333,33,0.882,41,1.064,43,0.726,44,0.012,45,0.85,46,0.201,49,0.565,50,1.088,58,1.41,59,1.202,60,1.283,61,2.083,69,0.509,70,0.313,86,0.107,87,0.329,103,1.138,107,0.47,127,1.098,129,1.282,159,1.333,177,1.103,180,0.679,181,1.092,182,1.125,183,0.802,184,0.802,185,1.168,186,1.451,187,0.741,188,0.821,189,1.624,190,0.802,191,0.702,192,0.776,193,1.023,194,1.552,195,0.702,196,0.776,197,0.702,198,0.776,199,0.751,200,0.702,201,1.052,202,0.802,203,0.702,204,0.679,205,0.679,206,1.333,207,0.679,208,0.679,209,0.448,210,0.702,211,0.679,212,0.615,213,0.702,214,0.702,215,0.362,216,0.679,217,0.833,218,0.702,219,0.679,220,0.612,221,0.702,222,1.202,223,1.023,224,0.702,225,0.702,226,0.702,227,0.776,228,0.679,229,0.751,230,0.702,231,0.751,232,0.751,233,0.679,234,0.804,235,0.426,236,0.702,237,0.679,238,0.989,239,0.863,240,0.679,241,0.679,242,1.202,243,0.702,244,0.726,245,0.802,246,0.702,247,0.702,248,0.319,249,0.751,250,0.702,251,0.751,252,0.702,253,0.776,254,0.751,255,0.679,256,0.726,257,0.679,258,0.702,259,0.776,260,0.702,261,0.776,262,0.702,263,0.776,264,0.751,265,0.802,266,0.802,267,0.006,268,0.008,269,0.006,369,6.912,370,6.255,371,1.337,372,0.989,373,1.283,374,1.946,375,2.213,376,1.946,377,7.26,378,4.709,379,2.083,380,3.894,381,3.694,382,2.824,383,4.141,384,3.625,385,2.167,386,2.514,387,2.514,388,2.514,389,4.122,390,2.514,391,2.223,392,1.763,393,1.652,394,1.701,395,2.661,396,2.514,397,2.385,398,2.833,399,1.987,400,2.514,401,4.172,402,4.172,403,2.833,404,1.641]],["title/components/BackButtonElementComponent.html",[0,0.042,191,0.688]],["body/components/BackButtonElementComponent.html",[0,0.066,1,0.69,2,0.977,3,0.105,4,0.092,5,0.788,6,0.788,7,0.788,8,0.788,9,0.092,11,0.788,12,1.664,13,1.556,15,1.079,17,1.079,19,0.145,20,0.583,25,0.69,27,0.766,31,1.324,33,0.559,41,1.016,43,0.714,44,0.013,45,0.842,46,0.244,49,0.558,50,1.159,59,0.762,60,0.814,62,0.633,69,0.543,70,0.307,86,0.105,87,0.323,88,0.925,103,1.132,107,0.462,131,2.916,132,2.129,137,1.403,139,2.468,159,1.466,171,1.313,173,1.484,174,1.403,176,1.671,177,1.484,180,0.667,181,1.079,182,1.256,183,0.788,184,0.788,185,0.69,186,0.762,187,0.356,188,0.759,189,1.621,190,0.788,191,1.159,192,1.544,193,1.531,194,1.547,195,0.69,196,0.762,197,0.69,198,0.762,199,0.738,200,0.69,201,1.042,202,0.788,203,0.69,204,0.667,205,0.667,206,1.324,207,0.667,208,0.667,209,0.443,210,0.69,211,0.667,212,0.607,213,0.69,214,0.69,215,0.356,216,0.667,217,0.823,218,0.69,219,0.667,220,0.601,221,0.69,222,1.191,223,1.01,224,0.69,225,0.69,226,0.69,227,0.762,228,0.667,229,0.738,230,0.69,231,0.738,232,0.738,233,0.667,234,0.794,235,0.421,236,0.69,237,0.667,238,0.977,239,0.853,240,0.667,241,0.667,242,1.191,243,0.69,244,0.714,245,0.788,246,0.69,247,0.69,248,0.315,249,0.738,250,0.69,251,0.738,252,0.69,253,0.762,254,0.738,255,0.667,256,0.714,257,0.667,258,0.69,259,0.762,260,0.69,261,0.762,262,0.69,263,0.762,264,0.738,265,0.788,266,0.788,267,0.006,268,0.008,269,0.006,372,0.977,373,1.271,379,2.058,391,1.799,404,1.612,405,3.229,406,6.666,407,6.032,408,1.802,409,3.05,410,2.674,411,6.403,412,1.923,413,4.803,414,6.887,415,2.93,416,4.099,417,2.828,418,3.241,419,2.614,420,3.582,421,3.582,422,4.084,423,2.568,424,6.887,425,2.47,426,3.241,427,2.784,428,2.987,429,3.582,430,4.099,431,2.47,432,1.313,433,1.271,434,1.671,435,2.037,436,2.674,437,1.452,438,1.502,439,3.581,440,2.784,441,3.241,442,2.614,443,2.987,444,2.987,445,2.987,446,3.582,447,3.484,448,3.241,449,2.614,450,3.582]],["title/components/CardElementComponent.html",[0,0.042,195,0.688]],["body/components/CardElementComponent.html",[0,0.062,1,0.623,2,0.911,3,0.095,4,0.083,5,0.711,6,0.711,7,0.711,8,0.711,9,0.083,11,0.711,12,1.655,13,1.544,15,1.005,17,1.005,19,0.131,20,0.543,24,4.435,27,0.714,31,1.267,33,0.827,41,1.034,44,0.013,45,0.688,46,0.246,49,0.368,50,0.88,58,1.635,59,1.226,60,1.308,61,1.979,62,0.743,69,0.292,70,0.277,79,4.204,86,0.134,87,0.292,101,2.014,103,1.096,107,0.417,112,2.238,132,1.923,137,2.077,159,1.613,169,1.654,170,2.361,171,1.186,173,2.164,174,2.704,175,1.268,176,2.687,177,2.002,178,2.898,179,2.057,180,0.602,181,1.005,182,1.21,183,0.711,184,0.711,185,0.623,186,0.689,187,0.322,188,0.743,189,1.604,190,0.711,191,0.623,192,0.689,193,0.941,194,1.518,195,1.109,196,1.452,197,0.623,198,0.689,199,0.666,200,0.623,201,0.987,202,0.711,203,0.623,204,0.602,205,0.602,206,1.267,207,0.602,208,0.602,209,0.412,210,0.623,211,0.602,212,0.566,213,0.623,214,0.623,215,0.322,216,0.602,217,0.767,218,0.623,219,0.602,220,0.543,221,0.623,222,1.128,223,0.941,224,0.623,225,0.623,226,0.623,227,0.689,228,0.602,229,0.666,230,0.623,231,0.666,232,0.666,233,0.602,234,0.74,235,0.392,236,0.623,237,0.602,238,0.911,239,0.794,240,0.602,241,0.602,242,1.128,243,0.623,244,1.056,245,0.711,246,0.623,247,0.623,248,0.294,249,0.666,250,0.623,251,0.666,252,0.623,253,0.689,254,0.666,255,0.602,256,0.644,257,0.602,258,0.623,259,0.689,260,0.623,261,0.689,262,0.623,263,0.689,264,0.666,265,0.711,266,0.711,267,0.005,268,0.008,269,0.005,372,0.911,373,1.204,379,1.917,380,3.654,381,3.467,389,5.038,391,2.312,396,4.642,397,4.403,404,2.385,405,3.26,408,1.628,409,2.889,410,2.491,419,2.361,425,2.231,426,2.927,433,2.044,434,1.51,444,3.811,445,3.811,447,2.014,451,6.075,452,3.336,453,5.23,454,2.927,455,2.514,456,2.698,457,2.133,458,3.702,459,3.702,460,3.702,461,3.702,462,2.361,463,3.702,464,5.3,465,3.702,466,3.702,467,2.717,468,2.361,469,2.514,470,3.811,471,1.923,472,6.591,473,4.571,474,5.23,475,5.23,476,2.838,477,2.514,478,3.702,479,3.702,480,2.514,481,3.235,482,2.491,483,2.361,484,3.702,485,2.3,486,2.116,487,3.702,488,3.702,489,5.759,490,3.702,491,3.702,492,1.763,493,4.476,494,7.216,495,5.23,496,5.23,497,2.927,498,2.514,499,3.702,500,4.571,501,5.23,502,5.23,503,3.702,504,3.702,505,3.702,506,5.23]],["title/interfaces/CheckTokenResponse.html",[507,0.518,508,2.607]],["body/interfaces/CheckTokenResponse.html",[3,0.081,4,0.071,9,0.071,14,1.153,19,0.112,20,0.482,22,3.726,26,2.776,38,2.634,44,0.013,46,0.196,49,0.749,58,1.917,59,0.585,62,0.911,64,2.044,69,0.514,70,0.236,74,1.439,75,3.715,76,1.383,81,1.895,82,3.212,86,0.081,87,0.248,88,0.71,89,1.616,97,2.098,121,2.873,127,0.461,129,1.378,139,1.383,220,0.461,248,0.311,267,0.005,268,0.007,269,0.005,308,1.383,317,2.136,331,1.439,372,0.548,412,2.222,423,1.439,507,0.7,508,2.965,509,0.944,510,2.136,511,1.498,512,1.153,513,2.794,514,3.157,515,3.841,516,3.996,517,4.75,518,5.144,519,2.292,520,1.461,521,1.563,522,1.634,523,3.24,524,2.673,525,1.077,526,1.704,527,0.831,528,1.439,529,1.498,530,1.194,531,2.006,532,2.292,533,3.678,534,2.292,535,2.292,536,2.292,537,2.292,538,2.292,539,2.292,540,2.292,541,2.292,542,2.292,543,1.712,544,1.712,545,2.292,546,2.292,547,2.292,548,2.292,549,2.292,550,2.292,551,2.006,552,2.292,553,4.143,554,4.018,555,2.046,556,3.678,557,2.292,558,3.901,559,3.157,560,3.897,561,4.303,562,2.965,563,2.415,564,2.965,565,2.965,566,3.528,567,2.292,568,2.292,569,1.712,570,4.149,571,2.292,572,1.352,573,2.292,574,2.292,575,2.292,576,3.104,577,3.897,578,4.353,579,3.391,580,4.353,581,3.897,582,3.681,583,2.91,584,3.897,585,3.897,586,3.391,587,3.972,588,2.402,589,2.292,590,5.631,591,4.972,592,4.972,593,4.972,594,4.452,595,2.292,596,2.292,597,2.292,598,4.03,599,2.292,600,2.292,601,2.292,602,4.452,603,2.292,604,2.292,605,2.292,606,4.452,607,2.292,608,2.292,609,3.391,610,2.292,611,3.388,612,3.161,613,3.388,614,3.161,615,3.388,616,2.634,617,3.388,618,2.292,619,2.292,620,4.03,621,2.292,622,2.292,623,3.388,624,3.157,625,2.31,626,2.292,627,2.292,628,4.972,629,2.292,630,3.388,631,3.388,632,3.388,633,2.292,634,2.292,635,2.292,636,2.292,637,2.292,638,2.292,639,2.292,640,2.31,641,2.292,642,2.292,643,2.292,644,2.292,645,2.292,646,2.292,647,2.292,648,2.292,649,2.292,650,2.292,651,1.331,652,2.292,653,1.712,654,2.006,655,2.215,656,2.044,657,2.006,658,1.563,659,1.331,660,2.292,661,3.528,662,2.292,663,2.292,664,1.634,665,2.292,666,2.292,667,2.292,668,2.748,669,1.895,670,1.798,671,1.439,672,1.895,673,1.498,674,2.006]],["title/components/CheckboxSwitcherElementComponent.html",[0,0.042,197,0.688]],["body/components/CheckboxSwitcherElementComponent.html",[0,0.061,1,0.603,2,0.889,3,0.092,4,0.081,5,0.688,6,0.688,7,0.688,8,0.688,9,0.081,11,0.688,12,1.652,13,1.544,15,0.982,17,0.982,19,0.127,25,0.603,26,2.342,27,0.697,31,1.248,33,0.489,36,2.911,39,4.989,41,1.07,43,0.623,44,0.013,45,0.783,46,0.26,49,0.646,50,1.002,58,1.267,60,1.182,62,0.893,64,1.574,69,0.512,70,0.268,73,1.515,82,1.46,83,3.469,84,2.284,86,0.092,87,0.282,88,0.808,89,1.453,91,2.609,97,1.886,103,1.084,107,0.403,110,2.432,112,1.111,114,2.432,115,2.432,124,2.609,126,2.432,127,0.525,131,1.86,137,2.351,138,2.832,159,1.508,169,0.977,171,1.637,173,0.946,174,2.039,175,1.226,177,1.574,179,2.009,180,0.583,181,0.982,182,1.195,183,0.688,184,0.688,185,0.603,186,0.666,187,0.311,188,0.738,189,1.598,190,0.688,191,0.603,192,0.666,193,0.919,194,1.508,195,0.603,196,0.666,197,1.093,198,1.397,199,1.532,200,0.603,201,0.969,202,0.688,203,0.603,204,0.583,205,0.583,206,1.248,207,0.583,208,0.583,209,0.403,210,0.603,211,0.583,212,0.553,213,0.603,214,0.603,215,0.311,216,0.583,217,0.749,218,0.603,219,0.583,220,0.525,221,0.603,222,1.108,223,0.919,224,0.603,225,0.603,226,0.603,227,0.666,228,0.583,229,0.644,230,0.603,231,0.644,232,0.644,233,0.583,234,0.723,235,0.383,236,0.603,237,0.583,238,0.889,239,0.776,240,0.583,241,0.583,242,1.108,243,0.603,244,0.623,245,0.688,246,0.603,247,0.603,248,0.287,249,0.644,250,0.603,251,0.644,252,0.603,253,0.666,254,0.644,255,0.583,256,0.623,257,0.583,258,0.603,259,0.666,260,0.603,261,0.666,262,0.603,263,0.666,264,0.644,265,0.688,266,0.688,267,0.005,268,0.007,269,0.005,372,0.889,373,1.182,379,1.872,391,2.287,404,2.009,405,3.354,408,1.574,409,2.836,410,2.433,415,2.342,418,2.832,419,2.284,423,1.638,425,2.157,432,1.147,433,1.584,434,2.083,435,1.779,436,2.836,437,1.268,438,1.312,442,2.284,443,2.609,452,2.284,467,2.653,468,2.284,469,2.432,470,2.609,471,1.86,555,0.917,669,3.588,670,2.92,672,3.078,673,1.706,675,6.925,676,6.267,677,6.493,678,6.493,679,6.493,680,5.955,681,5.955,682,5.955,683,4.039,684,5.955,685,2.047,686,2.832,687,3.129,688,4.709,689,3.581,690,3.581,691,3.227,692,2.832,693,3.129,694,2.832,695,3.722,696,1.779,697,1.706,698,3.129,699,3.129,700,3.581,701,3.129,702,3.129,703,3.129,704,4.464,705,5.204,706,4.464,707,5.955,708,3.129,709,5.108,710,5.108,711,5.955,712,2.609,713,5.108,714,1.86,715,2.047,716,2.609,717,2.609,718,3.581,719,3.581,720,4.464,721,2.162,722,5.108,723,1.779,724,2.609,725,3.581,726,3.581,727,2.432,728,3.129,729,2.609,730,3.129]],["title/components/ConfigurationTilePopUpDialogView.html",[0,0.042,200,0.688]],["body/components/ConfigurationTilePopUpDialogView.html",[0,0.069,1,0.648,2,0.936,3,0.099,4,0.087,5,0.74,6,0.74,7,0.74,8,0.74,9,0.087,11,0.74,12,1.66,13,1.55,15,1.191,17,1.191,19,0.137,20,0.558,25,0.648,27,0.734,31,0.74,33,0.734,41,0.997,43,0.67,44,0.013,45,0.961,46,0.22,49,0.535,50,1.23,59,0.716,60,0.764,62,0.756,69,0.529,70,0.289,86,0.138,87,0.424,88,0.869,101,2.096,103,1.11,107,0.434,112,1.194,127,1.122,134,1.462,137,2.296,159,1.356,169,1.467,173,1.018,174,1.319,175,1.319,177,1.018,179,2.115,180,0.627,181,1.033,182,1.079,183,0.74,184,0.74,185,0.648,186,0.716,187,0.335,188,0.816,189,1.611,190,0.74,191,0.648,192,0.716,193,1.115,194,1.529,195,0.648,196,0.716,197,0.648,198,0.716,199,0.693,200,1.129,201,1.325,202,1.47,203,0.905,204,0.627,205,0.627,206,1.289,207,0.627,208,0.627,209,0.424,210,0.648,211,0.627,212,0.582,213,0.648,214,0.648,215,0.335,216,0.627,217,0.788,218,0.648,219,0.627,220,0.565,221,0.648,222,1.152,223,0.968,224,0.648,225,0.648,226,0.648,227,0.716,228,0.627,229,0.693,230,0.648,231,0.693,232,0.693,233,0.627,234,0.761,235,0.403,236,0.648,237,0.627,238,0.936,239,0.817,240,0.627,241,0.627,242,1.152,243,0.648,244,0.67,245,0.74,246,0.648,247,0.648,248,0.302,249,0.693,250,0.648,251,0.693,252,0.648,253,0.716,254,0.693,255,0.627,256,0.67,257,0.627,258,0.648,259,0.716,260,0.648,261,0.716,262,0.648,263,0.716,264,0.693,265,0.74,266,0.74,267,0.01,268,0.008,269,0.006,342,4.784,371,1.234,372,0.67,373,1.067,374,2.121,375,2.296,376,2.121,391,1.985,404,2.115,412,2.252,431,2.32,432,1.234,433,1.668,434,1.57,437,1.364,438,1.971,467,2.793,468,2.456,485,1.693,555,1.377,691,1.914,714,2,715,2.201,731,5.465,732,6.165,733,5.86,734,4.554,735,3.851,736,6.165,737,5.377,738,3.851,739,3.851,740,3.851,741,4.699,742,3.851,743,3.365,744,4.208,745,3.365,746,3.733,747,3.24,748,2.456,749,2.806,750,4.699,751,3.365,752,3.045,753,2.096,754,3.045,755,3.365,756,3.365,757,3.365,758,3.365,759,3.365,760,3.365,761,4.699,762,4.699,763,3.365,764,3.365,765,3.365,766,3.365,767,3.365,768,3.045,769,3.365,770,3.365,771,3.365,772,6.706,773,5.377,774,5.377,775,2.276,776,2.276,777,5.377,778,5.377,779,2.806,780,3.365,781,3.851,782,3.045,783,3.851,784,3.851,785,3.365,786,3.045,787,3.851,788,3.851]],["title/components/ConfigurationTileViewComponent.html",[0,0.042,203,0.688]],["body/components/ConfigurationTileViewComponent.html",[0,0.069,1,0.656,2,0.944,3,0.1,4,0.088,5,0.749,6,0.749,7,0.749,8,0.749,9,0.088,11,0.749,12,1.661,13,1.552,15,1.198,17,1.198,19,0.138,20,0.562,25,0.656,27,0.74,31,1.295,33,0.74,41,1.001,43,0.678,44,0.013,45,0.886,46,0.221,49,0.62,50,1.267,62,0.439,69,0.531,70,0.292,86,0.139,87,0.427,88,0.879,101,2.12,103,1.114,107,0.439,112,1.208,127,0.988,134,1.479,137,1.334,159,1.361,169,1.063,180,0.634,181,1.042,182,1.085,183,0.749,184,0.749,185,0.656,186,0.725,187,0.338,188,0.817,189,1.613,190,0.749,191,0.656,192,0.725,193,0.976,194,1.532,195,0.656,196,0.725,197,0.656,198,0.725,199,0.701,200,0.913,201,1.328,202,1.295,203,1.135,204,0.634,205,0.634,206,1.295,207,0.634,208,0.634,209,0.427,210,0.656,211,0.634,212,0.586,213,0.656,214,0.656,215,0.338,216,0.634,217,0.795,218,0.656,219,0.634,220,0.571,221,0.656,222,1.16,223,0.976,224,0.656,225,0.656,226,0.656,227,0.725,228,0.634,229,0.701,230,0.656,231,0.701,232,0.701,233,0.634,234,0.767,235,0.406,236,0.656,237,0.634,238,0.944,239,0.823,240,0.634,241,0.634,242,1.16,243,0.656,244,0.678,245,0.749,246,0.656,247,0.656,248,0.305,249,0.701,250,0.656,251,0.701,252,0.656,253,0.725,254,0.701,255,0.634,256,0.678,257,0.634,258,0.656,259,0.725,260,0.656,261,0.725,262,0.656,263,0.725,264,0.701,265,0.749,266,0.749,267,0.01,268,0.008,269,0.006,342,4.8,371,1.248,372,0.944,373,1.238,374,2.135,375,2.308,376,2.135,379,1.987,385,2.816,391,1.737,412,2.127,432,1.248,433,2.197,434,2.21,437,1.38,438,1.987,476,2.132,555,0.997,691,1.936,714,2.024,715,2.227,721,2.294,731,5.483,732,4.737,733,3.405,734,2.646,736,4.737,741,3.405,744,3.681,745,3.405,746,4.419,747,4.061,748,2.485,749,2.839,750,6.191,751,3.405,752,3.081,753,2.12,754,4.287,755,6.191,756,5.89,757,3.405,758,3.405,759,3.405,760,3.405,761,4.737,762,4.737,763,3.405,764,3.405,765,5.89,766,3.405,767,3.405,768,3.081,769,3.405,770,3.405,771,3.405,789,3.405,790,2.485,791,2.646,792,3.405,793,1.936,794,5.421,795,5.421,796,5.421,797,7.674,798,7.674,799,3.458,800,4.287,801,2.95,802,3.896,803,4.543]],["title/components/ConfigurationViewComponent.html",[0,0.042,204,0.665]],["body/components/ConfigurationViewComponent.html",[0,0.068,1,0.745,2,1.03,3,0.114,4,0.1,5,0.851,6,0.851,7,0.851,8,0.851,9,0.1,11,0.851,12,1.67,13,1.562,15,1.137,17,1.137,19,0.157,20,0.614,25,1.121,27,0.807,31,1.366,33,0.807,41,0.97,43,0.771,44,0.012,45,0.876,46,0.21,49,0.588,50,1.121,69,0.525,70,0.332,86,0.114,87,0.349,89,1.252,102,3.868,103,1.158,107,0.499,127,0.649,159,1.424,169,1.208,171,1.419,173,1.17,175,1.516,180,0.72,181,1.137,182,1.16,183,0.851,184,0.851,185,0.745,186,0.823,187,0.385,188,0.77,189,1.633,190,0.851,191,0.745,192,0.823,193,1.064,194,1.568,195,0.745,196,0.823,197,0.745,198,0.823,199,0.797,200,0.745,201,1.327,202,0.851,203,0.745,204,1.157,205,0.72,206,1.366,207,0.72,208,0.72,209,0.466,210,0.745,211,0.72,212,0.64,213,0.745,214,0.745,215,0.385,216,0.72,217,0.867,218,0.745,219,0.72,220,0.649,221,0.745,222,1.239,223,1.064,224,0.745,225,0.745,226,0.745,227,0.823,228,0.72,229,0.797,230,0.745,231,0.797,232,0.797,233,0.72,234,0.837,235,0.443,236,0.745,237,0.72,238,1.03,239,0.898,240,0.72,241,0.72,242,1.239,243,0.745,244,0.771,245,0.851,246,0.745,247,0.745,248,0.332,249,0.797,250,0.745,251,0.797,252,0.745,253,0.823,254,0.797,255,0.72,256,0.771,257,0.72,258,0.745,259,0.823,260,0.745,261,0.823,262,0.745,263,0.823,264,0.797,265,0.851,266,0.851,267,0.006,268,0.009,269,0.006,311,2.824,312,4.535,342,4.725,371,1.419,372,1.03,373,1.322,374,2.025,375,2.281,376,2.025,386,3.564,583,2.818,731,5.398,746,4.013,747,4.283,748,2.824,749,3.226,754,4.677,789,3.869,790,2.824,804,5.267,805,7.109,806,6.212,807,3.226,808,4.428,809,3.869,810,4.428,811,4.428,812,3.869,813,5.169,814,5.915,815,5.915,816,5.915,817,5.915,818,2.531]],["title/interfaces/Credentials.html",[507,0.518,819,3.232]],["body/interfaces/Credentials.html",[3,0.168,4,0.147,9,0.147,19,0.232,20,0.782,44,0.012,46,0.267,62,0.946,86,0.168,267,0.009,268,0.011,269,0.009,507,0.828,509,1.962,553,4.668,558,4.668,819,5.961,820,5.71]],["title/components/DashboardScreenComponent.html",[0,0.042,205,0.665]],["body/components/DashboardScreenComponent.html",[0,0.062,1,0.614,2,0.901,3,0.094,4,0.082,5,0.701,6,0.701,7,0.701,8,0.701,9,0.082,11,0.701,12,1.654,13,1.546,15,0.995,17,0.995,19,0.129,20,0.537,21,3.563,25,1.164,27,0.706,31,1.258,33,0.498,36,2.929,39,5.016,41,1.062,43,0.635,44,0.013,45,0.791,46,0.245,49,0.598,50,1.164,58,1.624,59,1.218,60,1.3,61,2.076,69,0.582,70,0.273,73,1.544,83,3.516,84,2.328,86,0.094,87,0.288,88,0.823,89,1.464,93,2.886,97,0.964,103,1.091,104,3.302,107,0.865,109,2.886,110,2.478,111,2.886,112,1.606,113,3.302,114,2.478,115,2.478,116,4.094,117,1.813,119,2.328,120,2.752,127,0.759,132,1.895,159,1.475,169,1.641,171,1.928,173,1.827,174,1.249,175,1.773,176,1.488,177,1.827,178,1.604,180,0.594,181,0.995,182,1.048,183,0.701,184,0.701,185,0.614,186,0.679,187,0.317,188,0.763,189,1.602,190,0.701,191,0.614,192,0.679,193,0.932,194,1.513,195,0.614,196,1.218,197,0.614,198,0.679,199,0.657,200,0.614,201,0.979,202,0.701,203,0.614,204,0.594,205,1.066,206,1.258,207,0.594,208,0.594,209,0.408,210,0.614,211,0.594,212,0.56,213,0.614,214,0.614,215,0.317,216,0.594,217,0.759,218,0.614,219,0.594,220,0.535,221,0.614,222,1.119,223,0.932,224,0.614,225,0.614,226,0.614,227,0.679,228,0.594,229,0.657,230,0.614,231,0.657,232,0.657,233,0.594,234,0.851,235,0.451,236,0.614,237,0.594,238,0.901,239,0.786,240,0.594,241,0.594,242,1.119,243,0.614,244,0.635,245,0.701,246,0.614,247,0.614,248,0.291,249,0.657,250,0.614,251,0.657,252,0.614,253,0.679,254,0.657,255,0.594,256,0.635,257,0.594,258,0.614,259,0.679,260,0.614,261,0.679,262,0.614,263,0.679,264,0.657,265,0.701,266,0.701,267,0.005,268,0.007,269,0.005,311,2.328,312,4.177,333,5.739,372,0.901,373,1.194,392,1.641,393,1.061,394,1.488,432,1.169,433,1.866,434,1.488,435,1.813,437,1.292,438,1.337,477,2.478,485,1.604,486,2.086,616,2.866,685,2.086,697,1.738,723,2.573,775,1.544,776,1.544,806,5.722,809,3.189,812,3.189,818,3.439,821,6.882,822,2.478,823,4.385,824,3.773,825,4.385,826,3.838,827,3.04,828,3.838,829,6.548,830,5.178,831,3.671,832,3.837,833,3.649,834,3.649,835,3.649,836,3.649,837,3.189,838,3.189,839,3.649,840,3.649,841,3.649,842,3.649,843,1.895,844,2.086,845,2.199,846,5.177,847,3.649,848,5.177,849,3.649,850,2.886,851,3.649,852,4.524,853,2.886,854,2.886,855,3.649,856,3.189,857,5.177,858,3.649,859,2.886,860,3.649,861,4.524,862,2.959,863,2.886,864,3.189,865,3.649,866,3.189,867,3.649,868,3.189,869,3.649,870,5.177,871,3.649,872,3.189,873,2.886,874,2.886,875,2.659,876,2.659]],["title/components/DetailScreenComponent.html",[0,0.042,207,0.665]],["body/components/DetailScreenComponent.html",[0,0.07,1,0.788,2,1.069,3,0.12,4,0.106,5,0.9,6,0.9,7,0.9,8,0.9,9,0.106,11,0.9,12,1.675,13,1.567,15,1.18,17,1.18,19,0.166,20,0.637,21,3.726,27,0.837,31,1.397,33,0.934,41,0.934,44,0.012,45,0.807,46,0.166,49,0.466,50,1.033,58,1.523,59,0.871,60,0.93,61,1.843,69,0.369,70,0.351,86,0.12,87,0.369,103,1.265,104,3.916,107,0.528,159,1.45,169,1.277,171,1.501,173,1.238,175,1.603,180,0.762,181,1.18,182,1.192,183,0.9,184,0.9,185,0.788,186,0.871,187,0.407,188,0.778,189,1.641,190,0.9,191,0.788,192,0.871,193,1.105,194,1.582,195,0.788,196,0.871,197,0.788,198,0.871,199,0.843,200,0.788,201,1.114,202,0.9,203,0.788,204,0.762,205,0.762,206,1.397,207,1.183,208,0.762,209,0.484,210,0.788,211,0.762,212,0.664,213,0.788,214,0.788,215,0.407,216,0.762,217,0.9,218,0.788,219,0.762,220,0.687,221,0.788,222,1.274,223,1.105,224,0.788,225,0.788,226,0.788,227,0.871,228,0.762,229,0.843,230,0.788,231,0.843,232,0.843,233,0.762,234,0.868,235,0.46,236,0.788,237,0.762,238,1.069,239,0.932,240,0.762,241,0.762,242,1.274,243,0.788,244,0.815,245,0.9,246,0.788,247,0.788,248,0.345,249,0.843,250,0.788,251,0.843,252,0.788,253,0.871,254,0.843,255,0.762,256,0.815,257,0.762,258,0.788,259,0.871,260,0.788,261,0.871,262,0.788,263,0.871,264,0.843,265,0.9,266,0.9,267,0.007,268,0.009,269,0.007,336,5.296,372,1.069,373,1.359,412,2.056,818,2.677,822,3.18,823,4.99,824,4.473,877,6.351,878,5.364,879,3.703]],["title/interfaces/ESPConfiguration.html",[507,0.518,746,2.463]],["body/interfaces/ESPConfiguration.html",[3,0.139,4,0.122,9,0.122,14,1.977,19,0.191,20,0.697,38,3.486,44,0.013,46,0.259,49,0.668,62,0.825,69,0.604,70,0.404,74,2.467,75,3.604,76,2.372,86,0.173,87,0.425,88,1.217,89,1.422,97,1.776,129,1.813,201,1.094,267,0.008,268,0.01,269,0.008,308,2.372,412,2.018,507,0.683,509,1.62,511,2.57,512,1.977,513,3.073,516,3.917,520,1.934,521,2.681,525,1.847,526,2.463,527,1.426,528,2.467,529,2.57,530,2.048,533,3.339,554,3.807,555,1.721,556,3.339,560,3.441,561,3.084,562,3.441,563,2.802,564,3.441,565,3.441,566,3.441,572,2.227,576,2.372,577,3.441,578,3.441,579,2.681,580,3.441,581,3.441,582,3.251,583,2.57,584,3.441,585,3.441,586,2.681,587,3.807,588,2.122,640,2.681,654,3.441,746,4.842,747,3.251,748,3.441,804,4.266,880,2.907,881,6.694,882,2.57,883,4.715,884,4.715,885,4.715,886,4.715,887,4.715,888,4.715,889,4.715,890,4.715,891,4.715,892,4.715,893,4.715]],["title/injectables/ESPConfigurationAPIService.html",[520,1.08,747,2.463]],["body/injectables/ESPConfigurationAPIService.html",[3,0.134,4,0.117,9,0.117,14,1.906,19,0.184,25,1.106,27,0.896,33,0.71,38,3.793,41,0.982,43,1.143,44,0.013,45,0.864,46,0.233,49,0.752,62,0.586,69,0.596,70,0.39,74,2.379,75,3.775,76,2.287,86,0.169,87,0.41,88,1.173,89,1.39,97,1.736,129,1.482,201,1.316,267,0.007,268,0.009,269,0.007,308,2.287,412,2.391,507,0.659,511,2.478,512,1.906,513,2.379,516,3.757,520,1.998,521,2.585,525,2.249,526,2.771,527,1.736,528,3.004,529,3.128,530,1.974,533,3.264,554,3.757,555,1.682,556,3.264,560,3.318,561,2.973,562,3.318,563,2.702,564,3.318,565,3.318,566,3.318,572,1.512,576,2.287,577,3.318,578,3.318,579,2.585,580,3.318,581,3.318,582,3.134,583,2.478,584,3.318,585,3.318,586,2.585,587,3.757,588,2.583,640,2.585,654,3.318,746,4.871,747,3.957,748,4.823,804,5.193,880,1.974,881,4.545,882,3.128,883,4.545,884,4.545,885,4.545,886,4.545,887,6.607,888,4.545,889,5.739,890,5.739,891,4.545,892,4.545,893,4.545,894,2.585,895,6.568,896,4.113,897,5.202,898,5.202,899,5.202]],["title/components/ForecastDetailViewComponent.html",[0,0.042,208,0.665]],["body/components/ForecastDetailViewComponent.html",[0,0.063,1,0.645,2,0.932,3,0.098,4,0.086,5,0.736,6,0.736,7,0.736,8,0.736,9,0.086,11,0.736,12,1.658,13,1.55,15,1.029,17,1.029,19,0.136,20,0.556,25,1.04,27,0.731,31,1.285,33,0.522,41,0.96,43,0.667,44,0.012,45,0.812,46,0.19,49,0.533,50,1.04,59,0.712,60,0.76,69,0.527,70,0.287,86,0.098,87,0.302,88,0.864,89,0.811,96,3.637,102,2.914,103,1.285,105,3.637,107,0.431,120,1.751,127,0.561,148,3.903,159,1.285,180,0.623,181,1.029,182,1.075,183,0.736,184,0.736,185,0.645,186,0.712,187,0.333,188,0.748,189,1.61,190,0.736,191,0.645,192,0.712,193,0.964,194,1.528,195,0.645,196,0.712,197,0.645,198,0.712,199,0.689,200,0.645,201,1.005,202,0.736,203,0.645,204,0.623,205,0.623,206,1.285,207,0.623,208,1.089,209,0.632,210,0.645,211,0.623,212,0.579,213,0.645,214,0.645,215,0.333,216,0.623,217,0.785,218,0.645,219,0.623,220,0.561,221,0.645,222,1.149,223,0.964,224,0.645,225,0.645,226,0.645,227,0.712,228,0.623,229,0.689,230,0.645,231,0.689,232,0.689,233,0.623,234,0.758,235,0.401,236,0.645,237,0.623,238,0.932,239,0.813,240,0.623,241,0.623,242,1.149,243,0.645,244,0.667,245,0.736,246,0.645,247,0.645,248,0.301,249,0.689,250,0.645,251,0.689,252,0.645,253,0.712,254,0.689,255,0.623,256,0.667,257,0.623,258,0.645,259,0.712,260,0.645,261,0.712,262,0.645,263,0.712,264,0.689,265,0.736,266,0.736,267,0.006,268,0.008,269,0.006,345,4.954,371,1.227,372,0.932,373,1.226,374,1.834,375,2.115,376,1.834,385,1.989,388,2.307,394,1.561,579,3.324,582,3.227,583,2.551,828,3.94,831,3.625,832,3.89,843,1.989,844,2.189,845,2.307,900,5.768,901,6.69,902,2.79,903,2.914,904,2.6,905,1.979,906,3.829,907,3.829,908,3.829,909,3.829,910,5.356,911,3.637,912,5.356,913,2.882,914,5.356,915,4.874,916,5.356,917,5.356,918,5.356,919,5.846,920,5.846,921,4.68,922,4.874,923,5.356,924,5.356,925,5.356,926,5.356,927,5.356,928,4.68,929,5.356,930,3.824,931,3.903,932,5.356,933,5.356,934,5.356,935,4.68,936,5.356,937,5.356,938,4.68,939,5.356,940,4.235,941,4.68,942,4.68,943,5.356,944,5.356,945,2.449,946,5.356,947,5.356,948,5.356,949,5.356,950,5.356,951,5.356,952,5.356,953,5.356,954,5.356,955,7.295,956,3.903,957,6.69,958,5.356,959,5.356,960,5.356,961,5.356,962,5.356,963,3.637,964,4.68,965,5.356,966,3.637,967,5.356,968,5.356,969,5.356,970,5.356,971,4.235,972,5.356,973,5.356,974,5.356]],["title/interfaces/ForecastResponse.html",[507,0.518,975,2.463]],["body/interfaces/ForecastResponse.html",[3,0.089,4,0.078,9,0.078,14,1.268,19,0.123,20,0.517,38,2.783,44,0.013,46,0.25,49,0.765,62,0.939,69,0.556,70,0.259,74,1.583,75,3.564,76,1.522,86,0.089,87,0.273,88,0.781,89,1.629,94,2.207,95,2.207,97,2.143,120,1.583,127,1.035,129,1.839,134,2.678,187,0.555,209,0.461,215,0.555,217,0.507,234,0.49,235,0.568,248,0.397,267,0.005,268,0.007,269,0.005,308,1.522,331,1.583,392,1.925,412,2.034,417,2.217,476,1.96,482,1.648,507,0.81,509,1.039,511,1.648,512,1.268,513,3.098,516,4.006,520,1.544,521,1.72,525,2.635,526,1.827,527,0.914,528,1.583,529,1.648,530,1.313,533,3.367,543,1.883,544,1.883,554,3.824,555,1.862,556,3.367,569,2.712,572,2.164,576,2.192,586,2.477,587,3.614,588,2.927,625,1.72,640,1.72,651,1.465,653,1.883,655,3.227,656,2.979,658,3.367,659,2.867,664,3.519,801,1.883,826,2.207,862,2.849,880,1.313,905,2.171,930,1.978,975,3.52,976,2.207,977,4.341,978,4.341,979,2.571,980,2.763,981,2.763,982,2.085,983,1.72,984,2.085,985,2.35,986,2.35,987,2.255,988,2.244,989,1.651,990,1.72,991,2.35,992,1.978,993,2.35,994,2.35,995,2.35,996,2.35,997,2.35,998,2.35,999,2.35,1000,2.35,1001,4.601,1002,4.601,1003,2.207,1004,4.601,1005,2.35,1006,2.35,1007,2.35,1008,2.35,1009,2.35,1010,2.35,1011,2.35,1012,3.52,1013,2.35,1014,2.35,1015,2.35,1016,2.35,1017,2.35,1018,2.35,1019,2.207,1020,3.967,1021,2.35,1022,3.003,1023,2.35,1024,2.35,1025,2.35,1026,2.35,1027,2.35,1028,2.35,1029,2.35,1030,2.35,1031,2.35,1032,2.35,1033,2.35,1034,2.665,1035,2.35,1036,2.35,1037,2.35,1038,2.35,1039,2.35,1040,1.883,1041,2.35,1042,1.892,1043,2.35,1044,2.35,1045,2.207,1046,2.35,1047,2.35,1048,2.35,1049,3.385,1050,2.35,1051,3.385,1052,2.35,1053,2.207,1054,2.35,1055,3.003,1056,2.35,1057,3.179,1058,2.35,1059,1.883,1060,2.35,1061,2.589,1062,2.35,1063,3.179,1064,2.35,1065,3.385,1066,2.35,1067,3.385,1068,1.361,1069,2.712,1070,1.361,1071,3.385,1072,2.606,1073,2.35,1074,1.827,1075,2.35,1076,2.35,1077,1.411,1078,3.385,1079,2.35,1080,3.003,1081,1.411,1082,2.35,1083,1.411,1084,2.35,1085,2.35,1086,2.35,1087,3.003,1088,2.35,1089,2.085,1090,2.35,1091,2.35,1092,2.35,1093,1.827,1094,2.35,1095,1.411,1096,2.35,1097,1.411,1098,2.35,1099,2.35,1100,2.35,1101,2.35,1102,2.35,1103,3.385,1104,2.35,1105,1.978,1106,2.35]],["title/components/ForecastTileViewComponent.html",[0,0.042,210,0.688]],["body/components/ForecastTileViewComponent.html",[0,0.064,1,0.659,2,0.947,3,0.101,4,0.088,5,0.753,6,0.753,7,0.753,8,0.753,9,0.088,11,0.753,12,1.66,13,1.552,15,1.045,17,1.045,19,0.139,20,0.564,25,1.137,27,0.742,31,1.298,33,0.534,41,1.078,43,0.947,44,0.013,45,0.888,46,0.239,49,0.706,50,1.052,58,1.676,59,1.012,60,1.08,61,2.028,62,0.828,69,0.533,70,0.293,86,0.101,87,0.309,88,0.883,89,0.829,97,1.652,103,1.116,107,0.441,112,1.214,127,1.077,159,1.364,169,1.068,171,1.255,173,1.785,175,1.341,176,1.597,178,1.722,180,0.637,181,1.045,182,1.088,183,0.753,184,0.753,185,0.659,186,0.728,187,0.34,188,0.821,189,1.614,190,0.753,191,0.659,192,0.728,193,0.979,194,1.534,195,0.659,196,0.728,197,0.659,198,0.728,199,0.705,200,0.659,201,1.017,202,0.753,203,0.659,204,0.637,205,0.637,206,1.298,207,0.637,208,0.637,209,0.629,210,1.137,211,0.637,212,0.588,213,0.659,214,0.659,215,0.34,216,0.637,217,0.798,218,0.659,219,0.637,220,0.574,221,0.659,222,1.163,223,0.979,224,0.659,225,0.659,226,0.659,227,0.728,228,0.637,229,0.705,230,0.659,231,0.705,232,0.705,233,0.637,234,0.77,235,0.408,236,0.659,237,0.637,238,0.947,239,0.826,240,0.637,241,0.637,242,1.163,243,0.659,244,0.682,245,0.753,246,0.659,247,0.659,248,0.306,249,0.705,250,0.659,251,0.705,252,0.659,253,0.728,254,0.705,255,0.637,256,0.682,257,0.637,258,0.659,259,0.728,260,0.659,261,0.728,262,0.659,263,0.728,264,0.705,265,0.753,266,0.753,267,0.006,268,0.008,269,0.006,345,5.421,371,1.255,372,0.947,373,1.241,374,1.863,375,2.14,376,1.863,379,1.994,380,3.766,381,3.573,382,2.703,385,2.034,388,3.278,390,2.359,391,2.164,393,1.582,394,1.597,399,1.865,400,2.359,413,4.426,428,2.853,432,1.255,433,1.687,437,1.387,438,1.435,439,3.47,485,1.722,691,3.651,775,1.657,776,1.657,782,3.097,793,2.703,832,3.914,845,2.359,900,6.312,903,2.131,904,2.659,905,2.164,1107,6.251,1108,7.347,1109,6.755,1110,6.755,1111,3.916,1112,3.422,1113,3.422,1114,3.097,1115,3.916,1116,3.916,1117,3.916,1118,3.916,1119,3.916,1120,3.916,1121,3.916,1122,4.754,1123,2.359,1124,3.422]],["title/interfaces/GraphDataSet.html",[507,0.518,1125,1.667]],["body/interfaces/GraphDataSet.html",[3,0.127,4,0.111,9,0.111,19,0.175,20,0.66,44,0.013,46,0.283,62,0.961,86,0.216,107,0.557,127,1.03,129,1.942,187,0.552,188,0.706,209,0.554,212,0.535,215,0.61,235,0.37,248,0.357,267,0.007,268,0.009,269,0.007,363,2.354,392,1.734,393,2.378,415,2.918,417,1.876,457,3.025,492,2.354,507,1.044,509,1.484,524,1.692,525,1.692,527,1.306,572,1.848,827,2.69,880,1.876,882,2.354,905,1.584,913,1.811,945,2.26,979,1.876,980,2.015,981,2.015,987,1.533,988,1.637,989,1.637,1034,2.33,1042,1.876,1068,1.943,1070,1.943,1072,2.592,1074,2.33,1077,2.015,1081,2.015,1083,2.015,1093,1.811,1095,2.015,1097,2.015,1125,2.592,1126,2.354,1127,4.205,1128,3.687,1129,3.687,1130,3.687,1131,3.687,1132,3.687,1133,2.26,1134,2.26,1135,2.173,1136,2.26,1137,3.028,1138,2.354,1139,2.567,1140,2.354,1141,2.456,1142,2.354,1143,3.534,1144,3.655,1145,3.492,1146,3.302,1147,3.65,1148,3.302,1149,3.302,1150,3.302,1151,2.567,1152,2.26,1153,2.456,1154,2.567,1155,2.567,1156,2.567,1157,2.567,1158,2.456,1159,2.567,1160,2.015,1161,2.251,1162,2.592,1163,2.26,1164,2.354,1165,2.354,1166,2.173,1167,2.092,1168,2.092,1169,2.173]],["title/components/HistoryDetailViewComponent.html",[0,0.042,211,0.665]],["body/components/HistoryDetailViewComponent.html",[0,0.055,1,0.496,2,0.771,3,0.076,4,0.066,5,0.566,6,0.566,7,0.566,8,0.566,9,0.066,11,0.566,12,1.631,13,1.524,15,0.851,17,0.851,19,0.225,20,0.459,25,0.996,27,0.604,31,1.137,33,0.402,41,1.092,43,0.771,44,0.013,45,0.778,46,0.21,49,0.748,50,1.267,58,1.467,59,1.1,60,1.372,61,1.33,62,0.666,69,0.525,70,0.221,86,0.076,87,0.232,88,0.665,89,0.937,96,3.007,97,2.014,102,2.409,103,1.301,106,3.87,107,0.332,112,0.914,117,2.2,127,0.432,129,1.334,148,4.31,151,3.227,154,4.31,159,1.366,169,1.614,171,0.944,173,1.676,176,1.201,177,1.826,180,0.479,181,0.851,182,0.926,183,0.566,184,0.566,185,0.496,186,0.548,187,0.256,188,0.734,189,1.561,190,0.566,191,0.496,192,1.179,193,1.141,194,1.446,195,0.496,196,0.548,197,0.496,198,0.548,199,0.53,200,0.496,201,0.866,202,0.566,203,0.496,204,0.479,205,0.479,206,1.137,207,0.479,208,0.479,209,0.349,210,0.496,211,0.963,212,0.801,213,0.496,214,0.496,215,0.256,216,0.479,217,0.649,218,0.496,219,0.479,220,0.432,221,0.496,222,0.989,223,0.797,224,0.496,225,0.496,226,0.496,227,0.548,228,0.479,229,0.53,230,0.496,231,0.53,232,0.53,233,0.479,234,0.626,235,0.332,236,0.496,237,0.479,238,0.771,239,0.673,240,0.479,241,0.479,242,0.989,243,0.496,244,0.513,245,0.566,246,0.496,247,0.496,248,0.249,249,0.53,250,0.496,251,0.957,252,0.496,253,0.548,254,0.53,255,0.479,256,0.513,257,0.479,258,0.496,259,0.548,260,0.496,261,0.548,262,0.496,263,0.548,264,0.53,265,0.566,266,0.566,267,0.004,268,0.006,269,0.004,343,2.33,347,5.16,371,0.944,372,0.771,373,1.056,374,1.516,375,1.821,376,1.516,382,2.2,394,1.201,399,1.404,432,1.895,433,2.364,434,1.201,435,1.464,436,1.404,437,2.095,438,2.168,447,1.603,450,3.87,457,1.201,483,1.879,486,1.684,625,2.94,714,2.3,715,1.684,721,1.247,723,2.94,775,1.874,776,1.874,790,1.879,793,1.464,803,2.147,831,3.434,843,1.53,844,1.684,911,3.007,913,2.168,915,4.964,920,3.87,921,3.87,922,4.249,928,3.87,931,3.227,979,1.681,989,1.466,1040,1.603,1059,1.603,1061,1.53,1089,2.668,1113,2.575,1114,2.33,1125,2.169,1143,1.404,1161,2.095,1170,5.866,1171,5.32,1172,4.207,1173,4.649,1174,5.32,1175,5.32,1176,5.916,1177,5.916,1178,5.916,1179,5.916,1180,5.916,1181,5.916,1182,5.916,1183,2.946,1184,4.524,1185,3.87,1186,2.946,1187,2.946,1188,2.946,1189,2.946,1190,2.946,1191,2.946,1192,2.575,1193,2.33,1194,2.946,1195,2.575,1196,2.946,1197,4.207,1198,5.32,1199,2.575,1200,4.649,1201,2.946,1202,2.946,1203,2.147,1204,2.33,1205,2.946,1206,2.946,1207,2.946,1208,2.946,1209,2.946,1210,4.428,1211,5.916,1212,4.428,1213,2.946,1214,5.32,1215,2.946,1216,2.946,1217,2.946,1218,6.661,1219,2.946,1220,5.32,1221,5.32,1222,4.428,1223,2.946,1224,2.946,1225,2.946,1226,2.946,1227,2.946,1228,2.946,1229,2.946,1230,2.946,1231,2.33,1232,4.428,1233,4.428,1234,4.428,1235,4.428,1236,3.007,1237,3.87,1238,4.428,1239,4.428,1240,4.428,1241,4.428,1242,6.661,1243,4.428,1244,4.428,1245,3.773,1246,4.428,1247,4.428,1248,4.428,1249,3.773,1250,4.428,1251,4.428,1252,4.428,1253,5.916,1254,4.428,1255,4.428,1256,4.428,1257,4.428,1258,4.428,1259,4.428,1260,4.428,1261,4.428,1262,4.428,1263,4.428,1264,3.007,1265,4.428,1266,4.428,1267,4.428,1268,4.428,1269,4.428,1270,4.428,1271,4.428,1272,4.428,1273,4.428,1274,4.428,1275,4.428,1276,4.428,1277,4.428,1278,4.428,1279,2.147,1280,2.946,1281,2.946,1282,3.007,1283,2.946,1284,2.001,1285,2.147]],["title/injectables/HistoryTileService.html",[520,1.08,1184,2.776]],["body/injectables/HistoryTileService.html",[2,1.068,3,0.082,4,0.071,9,0.071,14,1.162,19,0.285,25,0.787,27,0.638,33,0.758,41,0.758,43,0.814,44,0.013,45,0.615,46,0.166,49,0.75,62,0.912,69,0.369,70,0.238,86,0.082,87,0.25,89,1.449,97,2.085,127,1.135,129,1.805,134,3.087,177,2.115,187,0.275,188,0.445,212,0.837,215,0.275,267,0.005,268,0.007,269,0.005,392,0.865,412,2.055,415,3.044,482,1.511,512,2.037,520,1.621,526,2.248,527,1.236,530,1.204,555,1.198,579,1.576,583,1.511,588,3.183,659,3.237,664,3.555,768,2.508,800,2.508,894,1.576,989,2.632,990,1.576,1022,1.911,1034,2.804,1042,2.815,1045,2.023,1057,3.545,1059,2.545,1061,3.398,1125,3.331,1128,2.324,1129,3.686,1130,1.576,1131,3.251,1132,1.576,1145,3.048,1161,1.657,1164,2.922,1165,2.922,1172,4.85,1184,3.177,1203,4.47,1231,5.597,1286,2.508,1287,5.36,1288,4.678,1289,4.678,1290,3.172,1291,4.678,1292,3.172,1293,6.134,1294,6.134,1295,4.85,1296,5.36,1297,4.47,1298,6.134,1299,5.36,1300,5.36,1301,4.85,1302,6.134,1303,5.36,1304,6.134,1305,6.134,1306,4.85,1307,7.265,1308,4.678,1309,3.172,1310,4.678,1311,4.678,1312,4.678,1313,3.172,1314,4.678,1315,4.088,1316,4.678,1317,4.678,1318,6.134,1319,4.678,1320,4.678,1321,4.678,1322,4.678,1323,7.543,1324,7.741,1325,7.741,1326,3.177,1327,4.678,1328,5.557,1329,5.557,1330,5.557,1331,6.134,1332,6.134,1333,4.678,1334,4.678,1335,3.172,1336,3.172,1337,6.134,1338,4.678,1339,4.678,1340,4.678,1341,4.678,1342,4.678,1343,4.678,1344,3.172,1345,3.172,1346,3.172,1347,4.678,1348,3.172,1349,6.134,1350,5.412,1351,3.172,1352,3.172,1353,3.172,1354,3.172,1355,3.172,1356,3.172,1357,4.678,1358,4.678,1359,3.172,1360,3.172,1361,3.172,1362,3.172,1363,3.172,1364,3.172,1365,3.172,1366,3.172,1367,4.678,1368,3.172,1369,3.172,1370,3.172,1371,3.172,1372,3.172,1373,4.678,1374,4.678,1375,4.678,1376,3.172,1377,3.172,1378,3.172,1379,3.172,1380,3.172,1381,4.678,1382,3.172,1383,4.678,1384,3.172,1385,6.134,1386,6.134,1387,4.678,1388,3.172,1389,3.172,1390,3.172,1391,3.172,1392,3.172,1393,3.172,1394,3.172,1395,3.172,1396,3.172,1397,2.508,1398,3.699,1399,2.771,1400,2.771]],["title/components/HistoryTileViewComponent.html",[0,0.042,213,0.688]],["body/components/HistoryTileViewComponent.html",[0,0.06,1,0.575,2,0.86,3,0.088,4,0.077,5,0.657,6,0.657,7,0.657,8,0.657,9,0.077,11,0.657,12,1.647,13,1.54,15,0.949,17,0.949,19,0.121,20,0.512,24,3.7,25,1.135,27,0.674,31,1.221,33,0.791,41,1.116,43,1.01,44,0.013,45,0.886,46,0.281,49,0.632,50,1.135,58,1.225,59,1.406,60,1.5,61,1.908,62,0.556,64,2.55,69,0.501,70,0.256,82,1.393,86,0.127,87,0.269,103,1.067,107,0.385,112,1.06,117,2.454,127,1.108,131,1.774,132,1.774,153,2.179,159,1.425,169,0.932,173,1.679,174,1.691,176,1.393,178,1.502,180,0.556,181,0.949,182,1.01,183,0.657,184,0.657,185,0.575,186,0.635,187,0.429,188,0.824,189,1.59,190,0.657,191,0.575,192,0.635,193,0.889,194,1.493,195,0.575,196,0.635,197,0.575,198,0.635,199,0.615,200,0.575,201,0.944,202,0.657,203,0.575,204,0.556,205,0.556,206,1.221,207,0.556,208,0.556,209,0.389,210,0.575,211,0.556,212,0.818,213,1.07,214,0.575,215,0.429,216,0.556,217,0.724,218,0.575,219,0.556,220,0.501,221,0.575,222,1.079,223,0.889,224,0.575,225,0.575,226,0.575,227,0.635,228,0.556,229,0.615,230,0.575,231,0.615,232,0.615,233,0.556,234,0.699,235,0.37,236,0.575,237,0.556,238,0.86,239,0.75,240,0.556,241,0.556,242,1.079,243,0.575,244,0.595,245,0.657,246,0.575,247,0.575,248,0.278,249,0.615,250,0.575,251,0.615,252,0.575,253,0.635,254,0.889,255,0.556,256,0.595,257,0.556,258,0.575,259,0.635,260,0.575,261,0.635,262,0.575,263,0.635,264,0.615,265,0.657,266,0.657,267,0.005,268,0.007,269,0.005,347,5.238,371,1.095,372,0.86,373,1.151,374,1.691,375,1.986,376,1.691,379,1.81,381,3.315,382,2.454,385,1.774,387,2.976,390,2.058,391,2.16,393,1.436,394,1.393,399,2.352,400,2.058,415,1.942,457,1.393,588,1.343,609,2.882,668,2.454,670,2.823,696,1.698,724,3.599,793,2.454,807,2.489,866,4.316,903,1.859,1112,2.985,1114,2.701,1125,2.954,1143,1.627,1170,5.984,1172,4.586,1173,6.482,1192,2.985,1193,2.701,1197,5.728,1297,2.489,1401,5.8,1402,5.8,1403,7.026,1404,5.8,1405,5.8,1406,5.8,1407,5.8,1408,5.8,1409,4.939,1410,3.905,1411,3.416,1412,4.939,1413,7.244,1414,7.026,1415,2.985,1416,2.985,1417,5.8,1418,5.8,1419,3.416,1420,3.416,1421,3.416,1422,3.416,1423,2.701,1424,3.416,1425,5.8,1426,4.939,1427,4.939,1428,4.939,1429,5.8,1430,4.939,1431,3.416,1432,4.939,1433,4.939,1434,4.939,1435,2.179,1436,4.939,1437,3.416,1438,3.416,1439,3.416,1440,2.985,1441,3.416,1442,3.416,1443,3.416,1444,3.416,1445,2.985]],["title/components/HumidityTileViewComponent.html",[0,0.042,214,0.688]],["body/components/HumidityTileViewComponent.html",[0,0.067,1,0.713,2,1,3,0.109,4,0.096,5,0.814,6,0.814,7,0.814,8,0.814,9,0.096,11,0.814,12,1.667,13,1.559,15,1.104,17,1.104,19,0.15,20,0.596,25,1.097,27,0.784,31,1.342,33,0.889,41,1.068,43,0.738,44,0.012,45,0.857,46,0.231,49,0.571,50,1.097,58,1.732,59,1.212,60,1.293,61,2.097,69,0.514,70,0.317,86,0.109,87,0.334,103,1.143,107,0.477,127,1.103,129,1.296,159,1.342,177,1.12,180,0.69,181,1.104,182,1.134,183,0.814,184,0.814,185,0.713,186,0.788,187,0.368,188,0.822,189,1.626,190,0.814,191,0.713,192,0.788,193,1.034,194,1.556,195,0.713,196,0.788,197,0.713,198,0.788,199,0.763,200,0.713,201,1.06,202,0.814,203,0.713,204,0.69,205,0.69,206,1.342,207,0.69,208,0.69,209,0.453,210,0.713,211,0.69,212,0.621,213,0.713,214,1.176,215,0.68,216,0.69,217,0.842,218,0.713,219,0.69,220,0.621,221,0.713,222,1.212,223,1.034,224,0.713,225,0.713,226,0.713,227,0.788,228,0.69,229,0.763,230,0.713,231,0.763,232,0.763,233,0.69,234,0.813,235,0.43,236,0.713,237,0.69,238,1,239,0.872,240,0.69,241,0.69,242,1.212,243,0.713,244,0.738,245,0.814,246,0.713,247,0.713,248,0.323,249,0.763,250,0.713,251,0.763,252,0.713,253,0.788,254,0.763,255,0.69,256,0.738,257,0.69,258,0.713,259,0.788,260,0.713,261,0.788,262,0.713,263,0.788,264,0.763,265,0.814,266,0.814,267,0.006,268,0.008,269,0.006,371,1.358,372,1,373,1.293,374,1.967,375,2.231,376,1.967,378,4.747,379,2.105,380,3.925,381,3.724,382,2.854,383,4.185,384,3.664,385,2.201,386,2.554,387,2.554,388,2.554,389,4.156,390,2.554,391,2.238,392,1.777,393,1.67,394,1.728,395,2.703,396,2.554,397,2.423,398,2.878,399,2.019,400,2.554,403,2.878,404,1.667,987,1.314,1446,6.935,1447,6.275,1448,7.299,1449,4.238,1450,4.238]],["title/interfaces/ImageModel.html",[422,2.607,507,0.518]],["body/interfaces/ImageModel.html",[3,0.166,4,0.145,9,0.145,19,0.229,20,0.776,25,1.259,44,0.012,46,0.28,62,0.963,86,0.166,139,3.575,267,0.009,268,0.011,269,0.009,422,4.771,423,3.719,507,0.817,509,1.936,671,3.719,1451,5.634]],["title/injectables/ImageService.html",[413,2.463,520,1.08]],["body/injectables/ImageService.html",[3,0.096,4,0.084,9,0.084,14,1.368,19,0.132,25,1.114,26,2.396,27,0.718,33,0.509,36,2.951,39,5.049,41,0.902,43,1.152,44,0.013,45,0.87,46,0.247,49,0.739,59,1.133,62,0.913,64,1.641,69,0.57,70,0.28,73,1.58,81,2.249,82,1.522,83,3.573,84,2.381,86,0.096,87,0.294,88,0.842,89,1.574,91,2.72,97,2.194,110,2.535,114,2.535,115,2.535,126,2.535,127,0.547,134,2.511,137,2.478,138,5.722,139,1.641,153,4.219,177,1.965,179,3.076,235,0.593,267,0.005,268,0.008,269,0.005,360,6.003,366,6.634,412,2.318,413,3.17,422,4.743,439,5.275,512,1.928,513,2.406,520,1.748,524,1.278,526,2.425,527,2.006,530,1.417,555,0.956,559,2.535,656,3.181,659,2.578,668,4.14,669,3.671,670,3.482,671,1.707,672,3.17,673,1.778,685,2.134,691,3.888,698,3.262,699,3.262,702,3.262,703,3.262,704,4.597,705,3.262,706,3.262,708,3.262,729,3.834,894,1.855,990,1.855,1034,1.928,1061,2.733,1166,3.066,1167,1.58,1168,1.58,1169,1.641,1301,4.16,1452,2.952,1453,7.592,1454,5.261,1455,5.261,1456,5.261,1457,3.733,1458,5.261,1459,3.733,1460,6.745,1461,3.834,1462,5.261,1463,5.261,1464,3.262,1465,5.261,1466,3.733,1467,7.823,1468,6.615,1469,5.261,1470,3.733,1471,3.733,1472,3.733,1473,3.733,1474,3.733,1475,3.733,1476,3.733,1477,7.236,1478,6.093,1479,5.261,1480,5.261,1481,4.34,1482,3.733,1483,3.733,1484,4.16,1485,4.597,1486,2.952,1487,3.262,1488,3.262,1489,3.262,1490,5.261,1491,4.597,1492,3.733,1493,5.261,1494,3.733,1495,5.261,1496,3.733,1497,3.733,1498,3.733,1499,3.733,1500,3.733,1501,3.733,1502,3.733,1503,3.262,1504,2.952,1505,6.974,1506,3.733,1507,3.262,1508,2.952,1509,4.597,1510,3.733,1511,2.535,1512,3.733,1513,3.733,1514,3.733,1515,3.733,1516,2.952,1517,4.25,1518,4.439,1519,2.72,1520,2.72,1521,3.542,1522,3.834,1523,2.952,1524,2.952,1525,4.16,1526,2.952,1527,2.952,1528,4.818,1529,3.262,1530,5.781,1531,3.262,1532,3.262,1533,3.262,1534,3.262,1535,3.262,1536,3.262,1537,3.262,1538,3.262,1539,4.597]],["title/components/IndoorDetailViewComponent.html",[0,0.042,216,0.665]],["body/components/IndoorDetailViewComponent.html",[0,0.064,1,0.653,2,0.941,3,0.1,4,0.087,5,0.745,6,0.745,7,0.745,8,0.745,9,0.087,11,0.745,12,1.659,13,1.551,15,1.039,17,1.039,19,0.138,20,0.561,25,1.047,27,0.737,31,1.293,33,0.529,41,0.965,43,0.675,44,0.012,45,0.818,46,0.192,49,0.537,50,1.047,59,0.721,60,0.77,69,0.53,70,0.291,86,0.1,87,0.306,88,0.875,89,0.821,103,1.286,105,3.67,107,0.437,120,1.774,127,0.569,151,3.938,159,1.293,169,1.058,180,0.631,181,1.039,182,1.083,183,0.745,184,0.745,185,0.653,186,0.721,187,0.337,188,0.771,189,1.612,190,0.745,191,0.653,192,0.721,193,0.973,194,1.531,195,0.653,196,0.721,197,0.653,198,0.721,199,0.698,200,0.653,201,1.012,202,0.745,203,0.653,204,0.631,205,0.631,206,1.293,207,0.631,208,0.631,209,0.426,210,0.653,211,0.631,212,0.585,213,0.653,214,0.653,215,0.337,216,1.095,217,1.142,218,0.653,219,0.631,220,0.569,221,0.653,222,1.157,223,0.973,224,0.653,225,0.653,226,0.653,227,0.721,228,0.631,229,0.698,230,0.653,231,0.698,232,0.698,233,0.631,234,0.765,235,0.405,236,0.653,237,0.631,238,0.941,239,0.821,240,0.631,241,0.631,242,1.157,243,0.653,244,0.675,245,0.745,246,0.653,247,0.653,248,0.304,249,0.698,250,0.653,251,0.698,252,0.653,253,0.721,254,0.698,255,0.631,256,0.675,257,0.631,258,0.653,259,0.721,260,0.653,261,0.721,262,0.653,263,0.721,264,0.698,265,0.745,266,0.745,267,0.006,268,0.008,269,0.006,349,4.974,371,1.243,372,0.941,373,1.235,374,1.85,375,2.13,376,1.85,385,2.015,388,2.337,393,1.128,394,1.582,432,1.243,433,1.676,437,1.374,438,1.422,579,3.343,583,2.574,723,2.686,775,1.642,776,1.642,828,3.967,831,3.64,832,3.904,843,2.015,844,2.217,845,2.337,902,2.827,903,2.941,904,2.634,913,2.466,915,4.672,922,4.291,930,3.845,931,3.938,935,4.723,956,3.938,963,3.67,966,3.67,1019,4.291,1022,3.256,1236,3.67,1237,4.723,1249,3.447,1264,3.67,1540,5.792,1541,5.435,1542,3.879,1543,3.879,1544,3.879,1545,3.39,1546,5.405,1547,5.405,1548,4.723,1549,5.405,1550,4.902,1551,4.723,1552,5.405,1553,6.727,1554,6.727,1555,5.405,1556,4.889,1557,5.405,1558,5.792,1559,5.405,1560,5.405,1561,5.405,1562,5.405,1563,5.405,1564,5.405,1565,5.405,1566,5.405,1567,5.405,1568,3.67,1569,5.405,1570,5.405,1571,5.405,1572,5.405,1573,5.405,1574,5.405,1575,4.723,1576,5.405,1577,5.405,1578,5.405,1579,5.405,1580,5.405,1581,5.405,1582,4.723,1583,5.405,1584,5.405,1585,4.723,1586,5.405,1587,5.405,1588,5.405]],["title/interfaces/IndoorRoomData.html",[507,0.518,988,1.354]],["body/interfaces/IndoorRoomData.html",[3,0.127,4,0.111,9,0.111,19,0.175,20,0.66,44,0.013,46,0.283,62,0.961,86,0.216,107,0.557,127,1.03,129,1.936,187,0.667,188,0.706,209,0.554,212,0.535,215,0.682,235,0.37,248,0.357,267,0.007,268,0.009,269,0.007,363,2.354,392,1.734,393,2.378,415,1.943,417,1.876,457,3.025,492,2.354,507,1.044,509,1.484,524,1.692,525,1.692,527,1.306,572,1.848,827,2.69,880,2.816,882,2.354,905,1.584,913,1.811,945,2.26,979,1.876,980,2.015,981,2.015,987,1.533,988,2.105,989,1.637,1034,2.719,1042,1.876,1068,1.943,1070,1.943,1072,3.13,1074,2.33,1077,2.015,1081,3.025,1083,3.025,1093,1.811,1095,2.015,1097,2.015,1125,2.015,1126,2.354,1127,4.205,1128,2.456,1129,2.456,1130,2.456,1131,2.456,1132,2.456,1133,2.26,1134,2.26,1135,2.173,1136,2.26,1137,3.028,1138,2.354,1139,2.567,1140,2.354,1141,2.456,1142,2.354,1143,3.534,1144,3.655,1145,3.492,1146,3.302,1147,3.65,1148,3.302,1149,3.302,1150,3.302,1151,2.567,1152,2.26,1153,2.456,1154,2.567,1155,2.567,1156,2.567,1157,2.567,1158,2.456,1159,2.567,1160,2.015,1161,2.251,1162,2.592,1163,2.26,1164,2.354,1165,2.354,1166,2.173,1167,2.092,1168,2.092,1169,2.173]],["title/interfaces/IndoorRoomResponse.html",[507,0.518,1080,2.463]],["body/interfaces/IndoorRoomResponse.html",[3,0.088,4,0.078,9,0.078,14,1.262,19,0.122,20,0.515,38,2.775,44,0.013,46,0.257,49,0.764,62,0.926,69,0.555,70,0.258,74,1.574,75,3.56,76,1.514,86,0.088,87,0.271,88,0.777,89,1.627,94,2.196,95,2.196,97,2.141,120,1.574,127,1.033,129,1.88,134,2.673,187,0.631,209,0.391,215,0.631,217,0.728,234,0.487,235,0.567,248,0.396,267,0.005,268,0.007,269,0.005,308,1.514,331,1.574,392,1.921,412,2.03,417,2.673,476,1.953,482,1.64,507,0.808,509,1.034,511,1.64,512,1.262,513,3.092,516,4.003,520,1.539,521,1.711,525,2.632,526,1.82,527,0.91,528,1.574,529,1.64,530,1.307,533,3.36,543,1.873,544,1.873,554,3.82,555,1.859,556,3.36,569,2.702,572,2.161,576,2.183,586,2.468,587,3.608,588,2.923,625,1.711,640,1.711,651,1.457,653,1.873,655,3.221,656,2.973,658,3.36,659,2.861,664,3.512,801,1.873,826,2.196,862,2.839,880,1.307,905,2.166,930,1.968,975,2.992,976,2.196,977,2.338,978,2.338,979,1.885,980,2.025,981,2.025,982,2.074,983,1.711,984,2.074,985,2.338,986,2.338,987,2.252,988,2.239,989,1.645,990,1.711,991,2.338,992,1.968,993,2.338,994,2.338,995,2.338,996,2.338,997,2.338,998,2.338,999,2.338,1000,2.338,1001,4.591,1002,4.591,1003,2.196,1004,4.591,1005,2.338,1006,2.338,1007,2.338,1008,2.338,1009,2.338,1010,2.338,1011,2.338,1012,3.51,1013,2.338,1014,2.338,1015,2.338,1016,2.338,1017,2.338,1018,2.338,1019,2.196,1020,3.956,1021,2.338,1022,2.992,1023,2.338,1024,2.338,1025,2.338,1026,2.338,1027,2.338,1028,2.338,1029,2.338,1030,2.338,1031,2.338,1032,2.338,1033,2.338,1034,2.661,1035,2.338,1036,2.338,1037,2.338,1038,2.338,1039,2.338,1040,1.873,1041,2.338,1042,1.885,1043,2.338,1044,2.338,1045,2.196,1046,2.338,1047,2.338,1048,2.338,1049,3.372,1050,2.338,1051,3.372,1052,2.338,1053,2.196,1054,2.338,1055,2.992,1056,2.338,1057,3.168,1058,2.338,1059,1.873,1060,2.338,1061,2.579,1062,2.338,1063,3.168,1064,2.338,1065,3.372,1066,2.338,1067,3.372,1068,1.354,1069,2.702,1070,1.354,1071,3.372,1072,2.961,1073,2.338,1074,1.82,1075,2.338,1076,2.338,1077,1.404,1078,3.372,1079,2.338,1080,3.51,1081,1.404,1082,2.338,1083,1.404,1084,2.338,1085,2.338,1086,2.338,1087,2.992,1088,2.338,1089,2.074,1090,2.338,1091,2.338,1092,2.338,1093,1.82,1094,2.338,1095,1.404,1096,2.338,1097,1.404,1098,2.338,1099,2.338,1100,2.338,1101,2.338,1102,2.338,1103,4.591,1104,2.338,1105,2.839,1106,4.331]],["title/components/IndoorTileViewComponent.html",[0,0.042,218,0.688]],["body/components/IndoorTileViewComponent.html",[0,0.067,1,0.707,2,0.994,3,0.108,4,0.095,5,0.807,6,0.807,7,0.807,8,0.807,9,0.095,11,0.807,12,1.666,13,1.558,15,1.097,17,1.097,19,0.149,20,0.592,25,1.092,27,0.779,31,1.337,33,0.885,41,1.048,43,0.731,44,0.012,45,0.853,46,0.23,49,0.568,50,1.092,58,1.726,59,1.062,60,1.133,61,2.089,69,0.45,70,0.315,86,0.108,87,0.331,103,1.14,107,0.473,127,1.146,131,2.966,132,2.182,159,1.337,169,1.146,177,1.11,180,0.684,181,1.097,182,1.129,183,0.807,184,0.807,185,0.707,186,0.781,187,0.365,188,0.82,189,1.625,190,0.807,191,0.707,192,0.781,193,1.028,194,1.554,195,0.707,196,0.781,197,0.707,198,0.781,199,0.756,200,0.707,201,1.055,202,0.807,203,0.707,204,0.684,205,0.684,206,1.337,207,0.684,208,0.684,209,0.45,210,0.707,211,0.684,212,0.618,213,0.707,214,0.707,215,0.496,216,0.684,217,1.161,218,1.171,219,0.684,220,0.616,221,0.707,222,1.206,223,1.028,224,0.707,225,0.707,226,0.707,227,0.781,228,0.684,229,0.756,230,0.707,231,0.756,232,0.756,233,0.684,234,0.808,235,0.428,236,0.707,237,0.684,238,0.994,239,0.867,240,0.684,241,0.684,242,1.206,243,0.707,244,0.731,245,0.807,246,0.707,247,0.707,248,0.321,249,0.756,250,0.707,251,0.756,252,0.707,253,0.781,254,0.756,255,0.684,256,0.731,257,0.684,258,0.707,259,0.781,260,0.707,261,0.781,262,0.707,263,0.781,264,0.756,265,0.807,266,0.807,267,0.006,268,0.008,269,0.006,349,5.306,371,1.346,372,0.994,373,1.287,374,1.955,375,2.221,376,1.955,379,2.093,380,3.908,381,3.707,382,2.837,384,2.68,386,3.44,390,2.532,391,2.23,393,1.66,394,1.713,399,2.001,400,2.532,403,2.853,404,1.652,432,1.83,433,2.012,437,2.022,438,2.093,439,2.68,442,2.68,775,1.778,776,1.778,791,2.853,793,2.088,945,2.611,988,2.305,1040,2.286,1540,6.179,1589,6.486,1590,3.878,1591,4.202,1592,5.71,1593,5.71,1594,4.515,1595,5.71,1596,3.672,1597,4.202,1598,4.202,1599,4.202]],["title/injectables/LocalStorageService.html",[520,1.08,1600,3.232]],["body/injectables/LocalStorageService.html",[3,0.11,4,0.097,9,0.097,14,1.572,19,0.152,25,1.103,26,3.235,27,0.79,33,0.894,41,1.071,43,1.141,44,0.013,45,0.862,46,0.152,49,0.768,50,1.271,58,1.873,60,1.633,61,1.288,62,0.851,66,5.183,69,0.456,70,0.321,81,2.584,82,3.148,86,0.11,87,0.338,89,1.387,97,2.04,134,3.052,220,0.629,231,1.359,267,0.006,268,0.008,269,0.006,288,3.151,295,3.932,382,2.877,399,3.343,412,1.968,512,2.572,515,3.151,520,1.855,523,3.753,524,2.688,526,2.572,527,1.996,528,2.648,530,1.628,551,3.693,570,5.403,588,2.76,624,5.551,655,3.122,656,3.222,659,2.774,894,2.131,1152,2.648,1326,4.451,1397,3.392,1504,5.972,1600,4.579,1601,6.291,1602,3.392,1603,8.473,1604,8.473,1605,6.555,1606,4.289,1607,4.289,1608,5.79,1609,3.748,1610,4.289,1611,6.599,1612,4.289,1613,4.289,1614,4.289,1615,4.289,1616,4.289,1617,4.289,1618,4.289,1619,4.289,1620,6.105,1621,7.552,1622,4.289,1623,4.289,1624,3.693,1625,3.693,1626,4.289,1627,7.851,1628,4.289,1629,4.289,1630,5.79,1631,4.289,1632,5.79,1633,4.289,1634,4.289,1635,4.289,1636,4.289,1637,4.289,1638,4.289,1639,4.289,1640,4.289,1641,4.289,1642,4.289,1643,4.289,1644,4.289,1645,4.289,1646,4.289,1647,4.289,1648,4.289,1649,4.289,1650,4.289,1651,4.289,1652,3.392,1653,3.748,1654,3.392,1655,3.392,1656,3.392]],["title/interfaces/LoginResponse.html",[507,0.518,674,2.607]],["body/interfaces/LoginResponse.html",[3,0.08,4,0.07,9,0.07,14,1.144,19,0.111,20,0.48,22,3.714,26,2.955,38,2.623,44,0.013,46,0.23,49,0.747,58,1.914,59,0.581,62,0.918,64,2.033,69,0.512,70,0.234,74,1.428,75,3.712,76,1.373,81,1.881,82,3.208,86,0.08,87,0.246,88,0.704,89,1.614,97,2.095,121,2.86,127,0.458,129,1.373,139,1.373,220,0.678,248,0.309,267,0.004,268,0.007,269,0.004,308,1.373,317,2.12,331,1.428,372,0.543,412,2.218,423,1.428,507,0.697,508,1.991,509,0.937,510,2.12,511,1.487,512,1.144,513,2.784,514,2.12,515,4.019,516,3.991,517,4.735,518,5.132,519,2.275,520,1.455,521,1.551,522,1.621,523,3.229,524,2.669,525,1.069,526,1.694,527,0.825,528,1.428,529,1.487,530,1.185,531,1.991,532,2.275,533,3.671,534,2.275,535,2.275,536,2.275,537,2.275,538,2.275,539,2.275,540,2.275,541,2.275,542,2.275,543,1.699,544,1.699,545,2.275,546,2.275,547,2.275,548,2.275,549,2.275,550,2.275,551,1.991,552,2.275,553,4.134,554,4.013,555,2.044,556,3.671,557,2.275,558,3.89,559,3.14,560,3.883,561,4.295,562,2.949,563,2.401,564,2.949,565,2.949,566,3.512,567,2.275,568,2.275,569,1.699,570,4.134,571,2.275,572,1.344,573,2.275,574,2.275,575,2.275,576,3.097,577,3.883,578,4.341,579,3.382,580,4.341,581,3.883,582,3.667,583,2.899,584,3.883,585,3.883,586,3.382,587,3.967,588,2.394,589,2.275,590,5.622,591,4.959,592,4.959,593,4.959,594,4.435,595,2.275,596,2.275,597,2.275,598,4.012,599,2.275,600,2.275,601,2.275,602,4.435,603,2.275,604,2.275,605,2.275,606,4.435,607,2.275,608,2.275,609,3.382,610,2.275,611,3.369,612,3.147,613,3.369,614,3.147,615,3.369,616,2.623,617,3.369,618,2.275,619,2.275,620,4.012,621,2.275,622,2.275,623,3.369,624,3.14,625,2.297,626,2.275,627,2.275,628,4.959,629,2.275,630,3.369,631,3.369,632,3.369,633,2.275,634,2.275,635,2.275,636,2.275,637,2.275,638,2.275,639,2.275,640,2.297,641,2.275,642,2.275,643,2.275,644,2.275,645,2.275,646,2.275,647,2.275,648,2.275,649,2.275,650,2.275,651,1.321,652,2.275,653,1.699,654,1.991,655,2.202,656,2.033,657,1.991,658,1.551,659,1.321,660,2.275,661,4.145,662,2.275,663,2.275,664,1.621,665,2.275,666,2.275,667,2.275,668,2.736,669,1.881,670,1.784,671,1.428,672,1.881,673,1.487,674,2.949]],["title/components/LoginViewComponent.html",[0,0.042,219,0.665]],["body/components/LoginViewComponent.html",[0,0.061,1,0.598,2,0.884,3,0.091,4,0.08,5,0.683,6,0.683,7,0.683,8,0.683,9,0.08,11,0.683,12,1.651,13,1.543,15,0.976,17,0.976,19,0.126,20,0.527,22,2.903,25,0.998,27,0.693,31,1.243,33,0.485,36,2.989,40,4.675,41,1,43,0.618,44,0.013,45,0.78,46,0.18,49,0.643,50,1.198,59,0.661,60,0.705,62,0.572,69,0.51,70,0.266,71,1.765,73,1.503,86,0.091,87,0.28,88,0.801,89,1.075,100,2.809,101,2.764,103,1.081,107,0.4,112,1.839,113,2.266,117,1.765,134,1.928,137,1.739,159,1.487,169,1.867,170,2.266,171,1.138,173,2.091,174,2.03,175,1.216,176,1.449,177,2.07,178,3.009,179,2.691,180,0.578,181,0.976,182,1.032,183,0.683,184,0.683,185,0.598,186,0.661,187,0.309,188,0.737,189,1.597,190,0.683,191,0.598,192,0.661,193,1.164,194,1.505,195,0.598,196,0.661,197,0.598,198,0.661,199,0.639,200,0.598,201,0.965,202,0.683,203,0.598,204,0.578,205,0.578,206,1.243,207,0.578,208,0.578,209,0.4,210,0.598,211,0.578,212,0.549,213,0.598,214,0.598,215,0.309,216,0.578,217,0.745,218,0.598,219,1.053,220,1.135,221,0.598,222,1.103,223,0.914,224,0.598,225,0.598,226,0.598,227,0.661,228,0.578,229,0.639,230,0.598,231,0.639,232,0.639,233,0.578,234,0.719,235,0.38,236,0.598,237,0.578,238,0.884,239,0.771,240,0.578,241,0.578,242,1.103,243,0.598,244,0.618,245,0.683,246,0.598,247,0.598,248,0.285,249,0.639,250,0.598,251,0.639,252,0.598,253,0.661,254,0.639,255,0.578,256,0.618,257,0.578,258,0.598,259,0.661,260,0.598,261,0.661,262,0.598,263,0.661,264,0.639,265,0.683,266,0.683,267,0.005,268,0.007,269,0.005,351,5.461,371,1.138,372,0.884,373,1.177,374,1.739,375,2.03,376,1.739,385,1.845,387,2.14,403,2.412,404,2.544,432,1.9,433,2.273,434,2.903,435,2.946,436,3.082,437,1.799,438,1.862,440,2.412,471,1.845,476,1.397,480,2.412,482,1.692,485,2.844,486,2.03,493,2.412,553,3.389,555,1.656,558,3.389,563,1.845,576,3.355,691,1.765,697,1.692,714,3.079,715,2.03,721,3.013,734,4.393,744,4.648,753,1.933,775,2.15,776,2.15,790,3.24,863,2.809,963,3.449,1162,1.449,1167,1.503,1195,3.104,1284,3.449,1410,2.809,1435,2.266,1461,2.588,1481,2.03,1517,3.389,1518,4.32,1519,4.32,1520,4.32,1521,3.26,1522,2.588,1556,3.24,1657,6.55,1658,5.181,1659,6.469,1660,6.469,1661,2.809,1662,5.629,1663,3.552,1664,4.016,1665,5.116,1666,4.688,1667,4.438,1668,3.104,1669,3.104,1670,4.688,1671,3.552,1672,3.104,1673,3.104,1674,3.104,1675,3.104,1676,3.552,1677,3.104,1678,3.104,1679,5.079,1680,5.079,1681,4.438,1682,4.438,1683,4.016,1684,4.016,1685,5.079,1686,4.438,1687,5.079,1688,3.104,1689,2.588,1690,5.079,1691,5.079,1692,3.552,1693,3.104,1694,3.552,1695,3.552,1696,3.552,1697,3.552]],["title/components/MenuBarElementComponent.html",[0,0.042,221,0.688]],["body/components/MenuBarElementComponent.html",[0,0.062,1,0.618,2,0.905,3,0.094,4,0.083,5,0.706,6,0.706,7,0.706,8,0.706,9,0.083,11,0.706,12,1.654,13,1.546,15,0.999,17,0.999,19,0.214,20,0.54,21,1.998,25,1.016,27,0.709,31,1.262,33,0.501,36,3.017,41,1.01,43,0.639,44,0.013,45,0.863,46,0.214,49,0.653,50,1.212,58,1.29,59,0.683,60,1.032,61,1.561,62,0.586,69,0.546,70,0.275,73,1.554,80,2.829,86,0.094,87,0.289,88,0.828,89,0.777,103,1.093,107,0.414,112,1.613,113,2.342,119,2.342,120,2.378,131,1.907,137,2.373,159,1.572,169,1.647,171,2.306,173,2.104,174,2.633,175,2.373,176,2.935,177,2.06,178,3.047,180,0.597,181,0.999,182,1.207,183,0.706,184,0.706,185,0.618,186,0.683,187,0.319,188,0.742,189,1.603,190,0.706,191,0.618,192,0.683,193,1.182,194,1.515,195,0.618,196,0.683,197,0.618,198,0.683,199,0.661,200,0.618,201,0.982,202,0.706,203,0.618,204,0.597,205,0.597,206,1.262,207,0.597,208,0.597,209,0.41,210,0.618,211,0.597,212,0.562,213,0.618,214,0.618,215,0.319,216,0.597,217,0.762,218,0.618,219,0.597,220,0.538,221,1.105,222,1.467,223,1.52,224,0.618,225,0.618,226,0.618,227,0.683,228,0.597,229,0.661,230,0.618,231,0.661,232,0.661,233,0.597,234,0.736,235,0.39,236,0.618,237,0.597,238,0.905,239,0.79,240,0.597,241,0.597,242,1.123,243,0.618,244,0.639,245,0.706,246,0.618,247,0.618,248,0.292,249,0.661,250,0.618,251,0.661,252,0.618,253,0.683,254,0.661,255,0.597,256,0.639,257,0.597,258,0.618,259,0.683,260,0.618,261,0.683,262,0.618,263,0.683,264,0.661,265,0.706,266,0.706,267,0.005,268,0.007,269,0.005,372,0.905,373,1.198,391,1.176,392,1.002,394,1.497,404,1.444,405,3.199,408,1.614,409,2.876,410,2.477,419,2.342,420,3.208,425,3.133,426,2.903,432,1.176,433,1.613,437,1.3,438,1.346,441,2.903,447,2.829,449,3.851,462,3.317,477,3.531,480,2.493,485,2.286,616,2.876,694,2.903,697,1.749,721,1.554,723,1.825,775,1.554,776,1.554,779,3.789,799,2.342,818,2.972,830,5.192,831,3.576,843,1.907,844,2.099,850,2.903,853,2.903,854,2.903,859,2.903,873,2.903,874,2.903,875,2.675,876,2.675,902,2.675,1123,3.133,1282,2.493,1481,2.972,1511,2.493,1517,2.099,1521,1.749,1698,5.509,1699,5.134,1700,6.931,1701,6.567,1702,5.738,1703,2.903,1704,3.208,1705,2.903,1706,3.672,1707,3.208,1708,3.672,1709,3.208,1710,3.672,1711,3.672,1712,2.675,1713,3.672,1714,3.208,1715,3.531,1716,3.672,1717,4.112,1718,4.112,1719,2.903,1720,2.903,1721,2.903,1722,2.675,1723,3.672,1724,4.112,1725,3.672,1726,2.342,1727,3.672]],["title/components/MenuButtonElementComponent.html",[0,0.042,224,0.688]],["body/components/MenuButtonElementComponent.html",[0,0.064,1,0.651,2,0.938,3,0.099,4,0.087,5,0.743,6,0.743,7,0.743,8,0.743,9,0.087,11,0.743,12,1.659,13,1.551,15,1.036,17,1.036,19,0.137,20,0.559,25,0.651,27,0.735,31,1.291,33,0.527,36,2.983,41,1.024,43,0.673,44,0.013,45,0.883,46,0.22,49,0.668,50,1.264,58,1.666,59,1.003,60,1.232,61,1.864,69,0.489,70,0.29,73,1.636,80,2.933,86,0.099,87,0.305,88,0.872,103,1.111,107,0.435,112,1.672,113,2.465,117,3.085,119,2.465,120,1.768,131,3.224,132,2.008,137,2.419,159,1.472,171,1.238,173,1.425,174,1.323,176,1.576,177,1.425,178,1.699,180,0.629,181,1.036,182,1.23,183,0.743,184,0.743,185,0.651,186,0.719,187,0.336,188,0.75,189,1.612,190,0.743,191,0.651,192,0.719,193,1.529,194,1.53,195,0.651,196,0.719,197,0.651,198,0.719,199,0.696,200,0.651,201,1.01,202,0.743,203,0.651,204,0.629,205,0.629,206,1.291,207,0.629,208,0.629,209,0.425,210,0.651,211,0.629,212,0.583,213,0.651,214,0.651,215,0.336,216,0.629,217,0.79,218,0.651,219,0.629,220,0.567,221,0.651,222,1.55,223,1.117,224,1.131,225,0.651,226,0.651,227,0.719,228,0.629,229,0.696,230,0.651,231,0.696,232,0.696,233,0.629,234,0.763,235,0.404,236,0.651,237,0.629,238,0.938,239,0.819,240,0.629,241,0.629,242,1.155,243,0.651,244,0.673,245,0.743,246,0.651,247,0.651,248,0.303,249,0.696,250,0.651,251,0.696,252,0.651,253,0.719,254,0.696,255,0.629,256,0.673,257,0.629,258,0.651,259,0.719,260,0.651,261,0.719,262,0.651,263,0.719,264,0.696,265,0.743,266,0.743,267,0.006,268,0.008,269,0.006,372,0.938,373,1.232,404,1.52,405,3.241,408,1.699,409,2.957,410,2.568,415,1.52,418,3.056,419,3.439,421,3.377,431,2.329,432,1.238,433,1.199,434,1.576,435,1.921,436,1.841,439,3.439,440,2.625,442,2.465,443,2.816,444,2.816,445,2.816,446,3.377,447,3.655,448,3.056,449,4.284,454,3.056,477,2.625,480,2.625,616,2.957,685,2.209,697,1.841,730,3.377,779,4.894,830,5.311,850,3.056,852,4.711,853,3.056,854,3.056,874,3.056,875,2.816,876,2.816,1511,2.625,1517,2.209,1698,5.581,1699,5.201,1704,3.377,1705,3.056,1712,2.816,1719,3.056,1720,3.056,1721,3.056,1722,2.816,1724,5.311,1726,2.465,1728,6.208,1729,5.869,1730,6.717,1731,3.865,1732,3.865,1733,5.391,1734,3.865,1735,3.865,1736,3.865,1737,5.391,1738,3.865,1739,4.711,1740,5.391,1741,5.391]],["title/components/MenuElementComponent.html",[0,0.042,225,0.688]],["body/components/MenuElementComponent.html",[0,0.058,1,0.557,2,0.84,3,0.085,4,0.075,5,0.636,6,0.636,7,0.636,8,0.636,9,0.075,11,0.636,12,1.644,13,1.536,15,0.927,17,0.927,19,0.202,20,0.501,25,0.557,27,0.658,31,1.203,33,0.451,36,2.925,40,4.432,41,1.065,43,0.576,44,0.013,45,0.749,46,0.246,49,0.662,50,1.238,58,0.821,59,1.059,60,1.13,69,0.548,70,0.248,71,1.644,73,1.4,79,3.633,85,2.616,86,0.085,87,0.261,88,0.746,89,0.7,97,0.874,103,1.055,107,0.373,112,1.496,131,3.251,132,2.506,137,1.133,139,3.055,159,1.441,169,1.316,171,1.546,172,2.891,173,2.04,174,1.652,175,1.652,177,2.013,178,2.122,179,1.301,180,0.538,181,0.927,182,1.159,183,0.636,184,0.636,185,0.557,186,0.615,187,0.287,188,0.725,189,1.584,190,0.636,191,0.557,192,0.615,193,1.484,194,1.483,195,0.557,196,0.615,197,0.557,198,0.615,199,0.595,200,0.557,201,0.927,202,0.636,203,0.557,204,0.538,205,0.538,206,1.203,207,0.538,208,0.538,209,0.38,210,0.557,211,0.538,212,0.522,213,0.557,214,0.557,215,0.287,216,0.538,217,0.707,218,0.557,219,0.538,220,0.485,221,0.557,222,1.452,223,0.868,224,0.557,225,1.054,226,0.557,227,0.615,228,0.538,229,0.595,230,0.557,231,0.595,232,0.595,233,0.538,234,0.683,235,0.361,236,0.557,237,0.538,238,0.84,239,0.733,240,0.538,241,0.538,242,1.059,243,0.557,244,0.576,245,0.636,246,0.557,247,0.557,248,0.271,249,0.595,250,0.557,251,0.595,252,0.557,253,0.615,254,0.595,255,0.538,256,0.576,257,0.538,258,0.557,259,0.615,260,0.557,261,0.615,262,0.557,263,0.615,264,0.595,265,0.636,266,0.636,267,0.005,268,0.007,269,0.005,288,1.8,372,0.84,373,1.13,382,2.398,405,3.336,408,1.455,409,2.713,410,2.298,412,2.344,413,4.59,422,4.576,423,3.178,428,2.411,429,2.891,431,3.431,432,1.546,433,2.155,434,1.968,435,2.398,436,1.576,437,1.709,438,1.768,442,3.078,443,3.516,447,1.8,448,3.815,462,3.078,467,2.506,468,2.11,469,2.247,471,1.719,476,2.24,483,2.11,485,2.504,486,1.891,555,0.847,671,3.178,683,3.815,688,4.503,692,2.616,695,3.516,697,1.576,714,2.506,715,1.891,716,3.516,717,3.516,720,2.891,729,2.411,775,1.4,776,1.4,1040,2.625,1123,2.907,1161,1.709,1284,2.247,1285,2.411,1481,1.891,1521,1.576,1675,2.891,1698,5.743,1699,5.352,1703,2.616,1715,3.277,1717,2.616,1718,2.616,1729,5.47,1742,5.695,1743,5.695,1744,5.695,1745,7.618,1746,6.26,1747,6.26,1748,5.695,1749,5.695,1750,2.891,1751,3.309,1752,3.309,1753,3.309,1754,3.309,1755,3.309,1756,3.309,1757,6.948,1758,6.948,1759,6.948,1760,6.948,1761,3.309,1762,3.309,1763,6.948,1764,2.891,1765,3.309,1766,3.309,1767,4.216,1768,5.816,1769,3.815,1770,2.891,1771,3.309,1772,4.95,1773,4.216,1774,4.216,1775,2.891,1776,3.309,1777,3.309,1778,4.825,1779,3.309,1780,3.309,1781,3.309,1782,4.977,1783,4.825,1784,4.825,1785,4.825,1786,4.825,1787,3.309,1788,2.891,1789,3.309,1790,2.616,1791,3.309,1792,5.695,1793,3.309]],["title/components/NavBarElementComponent.html",[0,0.042,226,0.688]],["body/components/NavBarElementComponent.html",[0,0.068,1,0.746,2,1.03,3,0.114,4,0.1,5,0.852,6,0.852,7,0.852,8,0.852,9,0.1,11,0.852,12,1.671,13,1.563,15,1.137,17,1.137,19,0.21,27,0.807,31,1.367,33,0.909,41,0.97,44,0.012,45,0.778,46,0.21,49,0.441,50,0.996,62,0.801,69,0.349,70,0.332,86,0.114,87,0.349,103,1.158,107,0.499,137,1.517,159,1.539,169,1.209,171,1.896,173,1.958,174,2.435,175,2.026,176,2.717,177,1.879,178,2.602,179,2.327,180,0.721,181,1.137,182,1.29,183,0.852,184,0.852,185,0.746,186,0.824,187,0.385,188,0.77,189,1.633,190,0.852,191,0.746,192,0.824,193,1.065,194,1.568,195,0.746,196,0.824,197,0.746,198,0.824,199,0.797,200,0.746,201,1.084,202,0.852,203,0.746,204,0.721,205,0.721,206,1.367,207,0.721,208,0.721,209,0.467,210,0.746,211,0.721,212,0.64,213,0.746,214,0.746,215,0.385,216,0.721,217,0.868,218,0.746,219,0.721,220,0.65,221,0.746,222,1.239,223,1.522,224,0.746,225,0.746,226,1.197,227,1.471,228,0.721,229,0.797,230,0.746,231,0.797,232,0.797,233,0.721,234,0.837,235,0.443,236,0.746,237,0.721,238,1.03,239,0.899,240,0.721,241,0.721,242,1.239,243,0.746,244,0.771,245,0.852,246,0.746,247,0.746,248,0.333,249,0.797,250,0.746,251,0.797,252,0.746,253,0.824,254,0.797,255,0.721,256,0.771,257,0.721,258,0.746,259,0.824,260,0.746,261,0.824,262,0.746,263,0.824,264,0.797,265,0.852,266,0.852,267,0.006,268,0.009,269,0.006,372,1.03,373,1.323,379,2.169,391,2.135,405,3.136,408,1.948,409,3.174,410,2.819,452,2.826,455,4.019,456,3.229,462,2.826,485,1.948,818,2.533,1123,2.67,1481,2.533,1521,2.111,1715,3.009,1717,3.504,1718,3.504,1794,6.475,1795,5.86,1796,6.664,1797,7.41]],["title/components/OnboardingScreenComponent.html",[0,0.042,228,0.665]],["body/components/OnboardingScreenComponent.html",[0,0.069,1,0.767,2,1.049,3,0.117,4,0.103,5,0.875,6,0.875,7,0.875,8,0.875,9,0.103,11,0.875,12,1.673,13,1.565,15,1.158,17,1.158,19,0.162,20,0.625,21,3.676,25,0.767,27,0.822,31,1.382,32,5.268,33,0.922,41,0.981,43,0.793,44,0.012,45,0.888,46,0.214,49,0.599,50,1.015,54,5.268,55,6.283,57,5.268,58,1.495,59,0.847,60,0.904,61,1.81,69,0.533,70,0.341,71,2.264,77,4.392,78,3.981,79,2.906,80,2.479,85,3.602,86,0.117,87,0.359,97,1.204,98,3.981,99,3.981,103,1.167,104,3.845,107,0.513,159,1.382,180,0.741,181,1.158,182,1.176,183,0.875,184,0.875,185,0.767,186,0.847,187,0.396,188,0.774,189,1.637,190,0.875,191,0.767,192,0.847,193,1.085,194,1.575,195,0.767,196,0.847,197,0.767,198,0.847,199,0.82,200,0.767,201,1.099,202,0.875,203,0.767,204,0.741,205,0.741,206,1.382,207,0.741,208,0.741,209,0.475,210,0.767,211,0.741,212,0.652,213,0.767,214,0.767,215,0.396,216,0.741,217,0.884,218,0.767,219,0.741,220,0.668,221,0.767,222,1.257,223,1.085,224,0.767,225,0.767,226,0.767,227,0.847,228,1.17,229,1.432,230,0.767,231,0.82,232,0.82,233,0.741,234,0.853,235,0.452,236,0.767,237,0.741,238,1.049,239,0.915,240,0.741,241,0.741,242,1.257,243,0.767,244,0.793,245,0.875,246,0.767,247,0.767,248,0.339,249,0.82,250,0.767,251,0.82,252,0.767,253,0.847,254,0.82,255,0.741,256,0.793,257,0.741,258,0.767,259,0.847,260,0.767,261,0.847,262,0.767,263,0.847,264,0.82,265,0.875,266,0.875,267,0.007,268,0.009,269,0.007,338,5.449,372,1.049,373,1.341,412,2.029,822,3.094,823,4.923,824,4.392,837,3.981,838,3.981,879,4.767,1798,6.535]],["title/components/OpenAPELoginTileViewComponent.html",[0,0.042,230,0.688]],["body/components/OpenAPELoginTileViewComponent.html",[0,0.065,1,0.666,2,0.954,3,0.102,4,0.089,5,0.76,6,0.76,7,0.76,8,0.76,9,0.089,11,0.76,12,1.661,13,1.553,15,1.053,17,1.053,19,0.14,20,0.569,22,2.261,25,1.142,27,0.748,31,1.304,33,0.748,36,3.081,41,1.006,43,0.954,44,0.013,45,0.892,46,0.223,49,0.625,50,1.199,59,0.736,60,0.785,62,0.868,69,0.496,70,0.296,73,1.674,86,0.102,87,0.312,89,1.16,101,2.981,103,1.119,107,0.446,134,2.079,137,2.152,159,1.48,173,1.448,174,1.355,175,1.355,179,2.155,180,0.644,181,1.053,182,1.094,183,0.76,184,0.76,185,0.666,186,0.736,187,0.344,188,0.815,189,1.615,190,0.76,191,0.666,192,0.736,193,0.986,194,1.537,195,0.666,196,0.736,197,0.666,198,0.736,199,0.712,200,0.666,201,1.023,202,0.76,203,0.666,204,0.644,205,0.644,206,1.304,207,0.644,208,0.644,209,0.432,210,0.666,211,0.644,212,0.593,213,0.666,214,0.666,215,0.344,216,0.644,217,0.803,218,0.666,219,0.644,220,0.58,221,0.666,222,1.169,223,0.986,224,0.666,225,0.666,226,0.666,227,0.736,228,0.644,229,0.712,230,1.142,231,1.386,232,1.517,233,0.644,234,0.775,235,0.41,236,0.666,237,0.644,238,0.954,239,0.832,240,0.644,241,0.644,242,1.169,243,0.666,244,0.689,245,0.76,246,0.666,247,0.666,248,0.308,249,0.712,250,0.666,251,0.712,252,0.666,253,0.736,254,0.712,255,0.644,256,0.689,257,0.644,258,0.666,259,0.736,260,0.666,261,0.736,262,0.666,263,0.736,264,0.712,265,0.76,266,0.76,267,0.006,268,0.008,269,0.006,371,1.268,372,0.954,373,1.248,374,1.876,375,2.152,376,1.876,386,2.384,387,2.384,391,1.268,434,1.613,436,1.885,471,2.055,476,1.556,485,1.74,553,3.878,555,1.737,558,4.319,563,2.055,576,3.241,691,2.723,697,1.885,721,1.674,727,3.721,734,4.608,744,4.838,753,2.153,791,2.687,793,2.723,963,3.721,1199,3.457,1435,2.524,1658,5.493,1661,3.129,1662,5.828,1664,4.333,1665,5.365,1666,4.97,1667,4.788,1668,3.457,1669,3.457,1670,4.97,1683,4.333,1684,4.333,1799,6.603,1800,5.975,1801,5.479,1802,5.479,1803,3.957,1804,3.957,1805,3.957,1806,3.957,1807,3.957,1808,3.957,1809,3.957]],["title/interfaces/OutdoorWeatherData.html",[392,1.115,507,0.518]],["body/interfaces/OutdoorWeatherData.html",[3,0.125,4,0.109,9,0.109,19,0.172,20,0.652,44,0.013,46,0.291,62,0.963,86,0.215,107,0.546,127,1.021,129,1.944,187,0.663,188,0.701,209,0.549,212,0.524,215,0.679,235,0.552,248,0.353,267,0.007,268,0.009,269,0.007,363,2.309,392,1.9,393,2.369,415,1.907,417,2.795,457,3.004,492,2.309,507,1.041,509,1.456,524,1.66,525,1.66,527,1.281,572,1.826,827,2.657,880,1.84,882,2.309,905,1.554,913,1.777,945,2.217,979,1.84,980,1.977,981,1.977,987,1.504,988,1.606,989,1.606,1034,2.7,1042,1.84,1068,2.896,1070,2.896,1072,3.111,1074,2.796,1077,3.004,1081,1.977,1083,1.977,1093,1.777,1095,1.977,1097,1.977,1125,1.977,1126,2.309,1127,4.188,1128,2.409,1129,2.409,1130,2.409,1131,2.409,1132,2.409,1133,2.217,1134,2.217,1135,2.132,1136,2.217,1137,2.991,1138,2.309,1139,2.518,1140,2.309,1141,2.409,1142,2.309,1143,3.509,1144,3.638,1145,3.461,1146,3.261,1147,3.617,1148,3.261,1149,3.261,1150,3.261,1151,2.518,1152,2.217,1153,2.409,1154,2.518,1155,2.518,1156,2.518,1157,2.518,1158,2.409,1159,2.518,1160,1.977,1161,2.224,1162,2.56,1163,2.217,1164,2.309,1165,2.309,1166,2.132,1167,2.052,1168,2.052,1169,2.132]],["title/components/OutdoorWeatherDetailViewComponent.html",[0,0.042,233,0.665]],["body/components/OutdoorWeatherDetailViewComponent.html",[0,0.06,1,0.587,2,0.872,3,0.09,4,0.079,5,0.67,6,0.67,7,0.67,8,0.67,9,0.079,11,0.67,12,1.649,13,1.542,15,0.963,17,0.963,19,0.124,20,0.52,21,3.192,25,0.987,27,0.684,31,1.232,33,0.475,39,4.804,41,0.927,43,0.607,44,0.013,45,0.771,46,0.208,49,0.347,50,0.843,58,1.243,59,0.932,60,0.995,61,1.761,69,0.536,70,0.261,83,3.402,84,2.223,86,0.09,87,0.275,88,0.786,89,1.357,93,2.756,96,3.402,102,2.726,103,1.274,105,3.402,107,0.393,109,2.756,110,2.367,111,2.756,112,1.554,113,2.223,114,2.367,115,2.367,116,3.962,117,1.732,127,0.511,151,3.651,159,1.306,169,1.6,170,2.223,173,1.324,176,1.421,180,0.567,181,0.963,182,1.021,183,0.67,184,0.67,185,0.587,186,0.648,187,0.303,188,0.734,189,1.594,190,0.67,191,0.587,192,0.648,193,0.902,194,1.5,195,0.587,196,0.648,197,0.587,198,0.648,199,0.627,200,0.587,201,0.955,202,0.67,203,0.587,204,0.567,205,0.567,206,1.232,207,0.567,208,0.567,209,0.395,210,0.587,211,0.567,212,0.542,213,0.587,214,0.587,215,0.303,216,0.567,217,0.735,218,0.587,219,0.567,220,0.511,221,0.587,222,1.091,223,0.902,224,0.587,225,0.587,226,0.587,227,0.648,228,0.567,229,0.627,230,0.587,231,0.627,232,0.627,233,1.044,234,1.074,235,0.621,236,0.587,237,0.567,238,0.872,239,0.761,240,0.567,241,0.567,242,1.091,243,0.587,244,0.607,245,0.67,246,0.587,247,0.587,248,0.282,249,0.627,250,0.587,251,0.627,252,0.587,253,0.648,254,0.627,255,0.567,256,0.607,257,0.567,258,0.587,259,0.648,260,0.587,261,0.648,262,0.587,263,0.648,264,0.627,265,0.67,266,0.67,267,0.005,268,0.007,269,0.005,353,4.804,371,1.117,372,0.872,373,1.164,374,1.715,375,2.008,376,1.715,384,2.223,392,1.6,394,1.421,432,1.117,433,2.194,437,1.774,438,1.836,480,2.367,481,3.046,723,2.49,775,1.475,776,1.475,793,2.49,803,2.54,828,3.741,831,3.187,832,3.785,843,1.81,844,1.992,845,2.1,903,1.896,904,2.367,911,3.402,913,3.029,915,5.178,919,5.604,922,4.757,938,5.604,942,4.378,945,3.525,964,4.378,966,4.355,971,3.962,983,2.915,1089,3.019,1245,4.091,1264,3.402,1486,3.962,1550,4.673,1556,3.196,1585,4.378,1594,5.071,1810,5.593,1811,3.485,1812,5.866,1813,3.485,1814,3.485,1815,3.485,1816,3.485,1817,3.046,1818,5.01,1819,4.378,1820,5.01,1821,5.01,1822,5.01,1823,5.01,1824,5.01,1825,5.01,1826,5.01,1827,6.413,1828,5.01,1829,5.01,1830,6.413,1831,6.516,1832,5.01,1833,5.01,1834,5.01,1835,5.604,1836,5.01,1837,5.01,1838,5.604,1839,5.01,1840,5.01,1841,5.01,1842,5.01,1843,5.604,1844,5.01,1845,5.01,1846,5.01,1847,5.01,1848,5.01,1849,6.413,1850,4.378,1851,5.01,1852,5.01,1853,4.378,1854,5.01,1855,5.01,1856,4.378,1857,5.01,1858,5.01,1859,5.01,1860,5.01,1861,5.01,1862,5.01,1863,4.378,1864,5.01,1865,5.01,1866,5.01]],["title/interfaces/OutdoorWeatherResponse.html",[507,0.518,1055,2.463]],["body/interfaces/OutdoorWeatherResponse.html",[3,0.088,4,0.077,9,0.077,14,1.251,19,0.121,20,0.512,38,2.761,44,0.013,46,0.268,49,0.763,62,0.938,69,0.554,70,0.256,74,1.56,75,3.553,76,1.5,86,0.088,87,0.269,88,0.77,89,1.624,94,2.176,95,2.176,97,2.139,120,1.56,127,1.03,129,1.878,134,2.665,187,0.629,209,0.389,215,0.629,217,0.5,234,0.698,235,0.594,248,0.395,267,0.005,268,0.007,269,0.005,308,1.5,331,1.56,392,1.916,412,2.023,417,2.665,476,1.94,482,1.625,507,0.804,509,1.024,511,1.625,512,1.251,513,3.081,516,3.997,520,1.532,521,1.696,525,2.627,526,1.808,527,0.902,528,1.56,529,1.625,530,1.295,533,3.348,543,1.857,544,1.857,554,3.812,555,1.854,556,3.348,569,2.685,572,2.156,576,2.169,586,2.452,587,3.598,588,2.916,625,1.696,640,1.696,651,1.444,653,1.857,655,3.209,656,2.962,658,3.348,659,2.851,664,3.499,801,1.857,826,2.176,862,2.82,880,1.295,905,2.159,930,1.95,975,2.973,976,2.176,977,2.317,978,2.317,979,1.873,980,2.012,981,2.012,982,2.056,983,1.696,984,2.056,985,2.317,986,2.317,987,2.246,988,2.231,989,1.634,990,1.696,991,2.317,992,1.95,993,2.317,994,2.317,995,2.317,996,2.317,997,2.317,998,2.317,999,2.317,1000,2.317,1001,4.575,1002,4.575,1003,2.176,1004,4.575,1005,2.317,1006,2.317,1007,2.317,1008,2.317,1009,2.317,1010,2.317,1011,2.317,1012,3.492,1013,2.317,1014,2.317,1015,2.317,1016,2.317,1017,2.317,1018,2.317,1019,2.176,1020,3.936,1021,2.317,1022,2.973,1023,2.317,1024,2.317,1025,2.317,1026,2.317,1027,2.317,1028,2.317,1029,2.317,1030,2.317,1031,2.317,1032,2.317,1033,2.317,1034,2.654,1035,2.317,1036,2.317,1037,2.317,1038,2.317,1039,2.317,1040,1.857,1041,2.317,1042,1.873,1043,2.317,1044,2.317,1045,2.176,1046,2.317,1047,2.317,1048,2.317,1049,3.351,1050,2.317,1051,3.351,1052,2.317,1053,2.176,1054,2.317,1055,3.492,1056,2.317,1057,3.147,1058,2.317,1059,1.857,1060,2.317,1061,2.563,1062,2.317,1063,3.147,1064,2.317,1065,3.351,1066,2.317,1067,3.351,1068,1.342,1069,2.685,1070,1.342,1071,3.351,1072,2.953,1073,2.317,1074,2.469,1075,2.317,1076,2.317,1077,1.391,1078,3.351,1079,2.317,1080,2.973,1081,1.391,1082,2.317,1083,1.391,1084,2.317,1085,2.317,1086,2.317,1087,2.973,1088,2.317,1089,2.056,1090,2.317,1091,2.317,1092,2.317,1093,1.808,1094,2.317,1095,1.391,1096,2.317,1097,1.391,1098,2.317,1099,2.317,1100,2.317,1101,2.317,1102,2.317,1103,4.575,1104,4.313,1105,1.95,1106,2.317]],["title/components/OutdoorWeatherViewComponent.html",[0,0.042,236,0.688]],["body/components/OutdoorWeatherViewComponent.html",[0,0.051,1,0.442,2,0.706,3,0.067,4,0.059,5,0.505,6,0.779,7,0.505,8,0.505,9,0.059,11,0.505,12,1.617,13,1.51,15,0.779,17,0.779,19,0.176,20,0.421,21,2.207,23,4.33,25,1.014,26,2.504,27,0.553,31,1.071,33,0.358,36,2.597,41,1.057,43,0.457,44,0.013,45,0.792,46,0.243,49,0.66,50,1.072,58,1.383,59,1.235,60,1.264,61,1.674,62,0.717,64,2.649,69,0.541,70,0.197,73,1.111,80,3.278,82,1.071,86,0.067,87,0.207,88,0.592,89,1.049,91,1.913,97,1.473,101,1.429,103,0.967,107,0.628,112,1.537,117,2.463,119,1.675,120,1.201,124,4.061,126,1.783,127,0.385,131,2.895,132,3.308,137,1.908,159,1.617,168,2.295,169,1.92,170,2.587,171,2.197,173,2.185,174,2.505,175,2.348,176,2.457,177,2.162,178,2.919,179,3.021,180,0.427,181,0.779,182,0.863,183,0.505,184,0.505,185,0.442,186,0.488,187,0.523,188,0.684,189,1.537,190,0.505,191,0.442,192,0.488,193,0.73,194,1.406,195,0.442,196,0.488,197,0.442,198,0.488,199,0.473,200,0.442,201,0.806,202,0.505,203,0.442,204,0.427,205,0.427,206,1.071,207,0.427,208,0.427,209,0.32,210,0.442,211,0.427,212,0.439,213,0.442,214,0.442,215,0.228,216,0.427,217,0.595,218,0.442,219,0.427,220,0.385,221,0.442,222,0.922,223,0.73,224,0.442,225,0.442,226,0.442,227,0.488,228,0.427,229,0.473,230,0.442,231,0.473,232,0.473,233,0.427,234,1.076,235,0.637,236,0.938,237,0.427,238,0.706,239,0.616,240,0.427,241,0.427,242,0.922,243,0.442,244,0.457,245,0.505,246,0.442,247,0.442,248,0.228,249,0.473,250,0.442,251,0.473,252,0.442,253,0.488,254,0.473,255,0.427,256,0.457,257,0.427,258,0.442,259,0.488,260,0.442,261,0.488,262,0.442,263,0.488,264,0.473,265,0.505,266,0.505,267,0.004,268,0.006,269,0.004,353,5.303,371,0.841,372,0.706,373,0.984,374,1.389,375,1.697,376,1.389,379,1.487,383,1.913,388,1.582,391,1.3,392,1.352,394,1.071,399,1.251,404,2.192,413,4,428,1.913,431,1.582,432,1.3,433,1.975,434,2.457,435,2.016,436,2.655,437,1.755,438,2.043,439,3.843,442,2.587,444,1.913,445,1.913,462,3.161,467,3.733,468,4.062,470,1.913,471,1.364,476,1.033,477,3.785,483,1.675,485,2.179,486,1.501,489,4.871,493,3.365,498,2.754,512,0.962,524,0.899,609,2.463,616,2.361,673,1.932,685,1.501,691,2.016,696,1.305,697,1.251,712,1.913,714,1.364,715,1.501,721,2.097,723,2.463,727,1.783,728,2.295,743,2.295,775,2.097,776,1.716,790,1.675,791,1.783,792,2.295,793,1.305,801,1.429,807,1.913,818,1.501,831,3.299,832,3.448,843,1.364,844,1.501,845,1.582,859,2.076,864,3.544,873,2.076,875,2.955,876,2.955,904,2.754,983,2.77,1003,3.555,1040,1.429,1122,2.295,1123,2.986,1140,1.932,1161,1.436,1162,1.071,1166,3.015,1167,1.111,1168,1.111,1169,1.154,1282,1.783,1301,2.076,1326,1.783,1410,2.076,1416,2.295,1461,3.611,1464,2.295,1481,3.444,1491,3.544,1511,1.783,1517,4.182,1518,5.128,1519,3.611,1520,3.611,1521,3.352,1522,1.913,1523,3.919,1524,3.919,1525,2.076,1526,3.919,1527,3.919,1528,2.076,1558,2.076,1590,1.783,1596,2.295,1688,2.295,1689,3.611,1712,1.913,1715,2.754,1719,3.919,1720,2.076,1721,2.076,1722,2.955,1724,3.919,1726,3.161,1739,2.295,1810,6.175,1817,2.295,1867,4.956,1868,4.956,1869,5.574,1870,6.368,1871,5.574,1872,5.574,1873,2.626,1874,2.626,1875,2.626,1876,2.626,1877,2.626,1878,2.626,1879,2.626,1880,2.626,1881,2.626,1882,2.626,1883,4.956,1884,2.295,1885,2.626,1886,2.626,1887,2.626,1888,2.626,1889,2.626,1890,5.574,1891,2.626,1892,2.626,1893,2.626,1894,2.626,1895,2.626,1896,2.626,1897,2.626,1898,2.295,1899,4.056,1900,4.056,1901,2.626,1902,2.626,1903,4.056,1904,4.056,1905,4.056,1906,2.626,1907,2.626,1908,2.626,1909,4.056,1910,2.626,1911,2.295,1912,2.295,1913,4.056,1914,2.295,1915,2.626,1916,4.33,1917,2.626,1918,2.626,1919,2.626,1920,4.056]],["title/components/PersonalizationSettingsViewComponent.html",[0,0.042,237,0.665]],["body/components/PersonalizationSettingsViewComponent.html",[0,0.058,1,0.556,2,0.839,3,0.085,4,0.074,5,0.635,6,0.635,7,0.635,8,0.635,9,0.074,11,0.635,12,1.644,13,1.536,15,0.926,17,0.926,19,0.246,20,0.5,21,3.096,25,1.262,26,2.237,27,0.657,31,1.202,33,0.657,35,5.465,36,3.056,40,4.573,41,1.099,43,1.248,44,0.013,45,0.985,46,0.27,47,4.971,49,0.767,50,1.12,58,1.722,59,1.163,60,1.241,61,1.447,62,0.705,64,2.924,69,0.493,70,0.247,71,1.641,73,1.398,82,1.347,86,0.085,87,0.26,89,1.204,97,2.039,101,1.797,103,1.055,107,0.372,112,1.764,119,2.107,120,1.51,121,1.715,127,0.484,128,2.886,129,1.845,130,2.886,131,2.955,132,2.955,139,1.452,143,2.611,153,3.074,159,1.412,169,1.552,173,1.653,174,2.141,176,1.965,178,2.119,180,0.537,181,0.926,182,0.99,183,0.635,184,0.635,185,0.556,186,0.614,187,0.287,188,0.725,189,1.584,190,0.635,191,0.556,192,0.614,193,0.867,194,1.483,195,0.556,196,0.614,197,0.556,198,0.614,199,0.594,200,0.556,201,0.926,202,0.635,203,0.556,204,0.537,205,0.537,206,1.202,207,0.537,208,0.537,209,0.38,210,0.556,211,0.537,212,0.521,213,0.556,214,0.556,215,0.287,216,0.537,217,0.706,218,0.556,219,0.537,220,0.484,221,0.556,222,1.058,223,0.867,224,0.556,225,0.556,226,0.556,227,0.614,228,0.537,229,0.594,230,0.556,231,0.594,232,0.594,233,0.537,234,0.682,235,0.361,236,0.556,237,1.018,238,1.305,239,1.301,240,0.537,241,0.537,242,1.058,243,0.556,244,0.575,245,0.635,246,0.556,247,0.556,248,0.32,249,0.594,250,0.556,251,0.594,252,0.556,253,0.614,254,0.594,255,0.537,256,0.575,257,0.537,258,0.556,259,0.614,260,0.556,261,0.896,262,0.556,263,0.614,264,0.594,265,0.635,266,0.635,267,0.005,268,0.007,269,0.005,355,5.5,371,1.058,372,0.839,373,1.129,374,1.65,375,1.948,376,1.65,383,2.407,384,2.107,387,1.99,404,1.895,412,1.708,415,1.299,423,1.51,432,1.823,433,2.279,437,1.707,438,1.766,473,4.211,476,1.299,522,1.715,555,1.234,609,1.641,668,3.108,669,1.99,670,1.888,671,1.51,672,1.99,673,2.295,685,1.888,696,1.641,697,1.573,714,1.715,723,3.45,775,2.039,776,2.039,793,1.641,1158,1.641,1185,2.886,1193,2.611,1284,2.243,1285,3.511,1295,2.611,1326,3.272,1415,2.886,1445,2.886,1590,3.272,1609,5.465,1677,2.886,1921,6.404,1922,5.689,1923,5.689,1924,4.819,1925,4.819,1926,4.819,1927,4.819,1928,6.254,1929,6.254,1930,6.254,1931,4.819,1932,4.819,1933,6.254,1934,3.303,1935,4.819,1936,3.303,1937,6.254,1938,3.303,1939,4.819,1940,3.303,1941,3.303,1942,3.303,1943,4.819,1944,4.819,1945,3.303,1946,3.303,1947,3.303,1948,3.303,1949,3.303,1950,3.303,1951,3.303,1952,3.303,1953,3.303,1954,4.819,1955,3.303,1956,4.819,1957,4.819,1958,3.303,1959,2.243,1960,3.303,1961,3.303,1962,3.303,1963,3.303,1964,3.303,1965,3.303,1966,3.303,1967,2.886,1968,3.303]],["title/components/PersonalizationViewComponent.html",[0,0.042,240,0.665]],["body/components/PersonalizationViewComponent.html",[0,0.07,1,0.783,2,1.064,3,0.12,4,0.105,5,0.894,6,0.894,7,0.894,8,0.894,9,0.105,11,0.894,12,1.674,13,1.566,15,1.174,17,1.174,19,0.165,25,0.783,27,0.834,31,1.393,33,0.634,40,4.93,41,0.931,43,0.81,44,0.012,45,0.897,46,0.165,49,0.608,50,1.149,69,0.482,70,0.348,71,2.311,86,0.12,87,0.367,88,1.049,100,3.677,103,1.174,107,0.524,159,1.447,169,1.269,171,1.49,173,1.229,175,1.592,180,0.757,181,1.174,182,1.188,183,0.894,184,0.894,185,0.783,186,0.865,187,0.404,188,0.777,189,1.64,190,0.894,191,0.783,192,0.865,193,1.1,194,1.58,195,0.783,196,0.865,197,0.783,198,0.865,199,0.837,200,0.783,201,1.111,202,0.894,203,0.783,204,0.757,205,0.757,206,1.393,207,0.757,208,0.757,209,0.482,210,0.783,211,0.757,212,0.661,213,0.783,214,0.783,215,0.404,216,0.757,217,0.896,218,0.783,219,0.757,220,0.682,221,0.783,222,1.269,223,1.1,224,0.783,225,0.783,226,0.783,227,0.865,228,0.757,229,0.837,230,0.783,231,0.837,232,0.837,233,0.757,234,0.864,235,0.458,236,0.783,237,0.757,238,1.407,239,0.928,240,1.18,241,0.757,242,1.269,243,0.783,244,0.81,245,0.894,246,0.783,247,0.783,248,0.343,249,0.837,250,0.783,251,0.837,252,0.783,253,0.865,254,0.837,255,0.757,256,0.81,257,0.757,258,0.783,259,0.865,260,0.783,261,0.865,262,0.783,263,0.865,264,0.837,265,0.894,266,0.894,267,0.007,268,0.009,269,0.007,355,4.923,371,1.49,372,1.064,373,1.355,374,2.092,375,2.337,376,2.092,818,2.658,903,2.53,1590,3.158,1750,4.064,1782,5.34,1921,5.732,1969,7.249,1970,4.651]],["title/interfaces/PollenData.html",[507,0.518,987,1.268]],["body/interfaces/PollenData.html",[3,0.129,4,0.113,9,0.113,19,0.178,20,0.665,44,0.013,46,0.273,62,0.966,86,0.216,107,0.564,127,1.037,129,1.921,187,0.557,188,0.71,209,0.557,212,0.542,215,0.614,235,0.375,248,0.36,267,0.007,268,0.009,269,0.007,363,2.385,392,1.749,393,2.384,415,1.969,417,1.9,457,3.04,492,2.385,507,1.047,509,1.503,524,1.714,525,1.714,527,1.323,572,2.241,827,2.713,880,1.9,882,2.385,905,1.604,913,1.835,945,2.29,979,1.9,980,2.042,981,2.042,987,1.988,988,1.658,989,1.658,1034,2.35,1042,1.9,1068,1.969,1070,1.969,1072,2.614,1074,2.35,1077,2.042,1081,2.042,1083,2.042,1093,2.732,1095,3.04,1097,3.04,1125,2.042,1126,2.385,1127,4.216,1128,2.488,1129,2.488,1130,2.488,1131,2.488,1132,2.488,1133,2.29,1134,2.29,1135,2.201,1136,2.29,1137,3.054,1138,2.385,1139,2.601,1140,2.385,1141,2.488,1142,2.385,1143,3.551,1144,3.666,1145,3.514,1146,3.33,1147,3.673,1148,3.33,1149,3.33,1150,3.33,1151,2.601,1152,2.29,1153,2.488,1154,2.601,1155,2.601,1156,2.601,1157,2.601,1158,2.488,1159,2.601,1160,2.042,1161,2.27,1162,2.614,1163,2.29,1164,2.385,1165,2.385,1166,2.201,1167,2.119,1168,2.119,1169,2.201]],["title/components/PollenListElementComponent.html",[0,0.042,247,0.688]],["body/components/PollenListElementComponent.html",[0,0.069,1,0.752,2,1.036,3,0.115,4,0.101,5,0.859,6,0.859,7,0.859,8,0.859,9,0.101,11,0.859,12,1.671,13,1.563,15,1.144,17,1.144,19,0.158,24,4.874,27,0.812,31,1.371,33,0.913,41,0.973,44,0.012,45,0.782,46,0.211,49,0.444,50,1.002,60,1.328,62,0.804,69,0.352,70,0.335,86,0.115,87,0.352,103,1.161,107,0.503,112,1.386,159,1.428,169,1.219,173,1.181,174,1.53,177,1.573,180,0.727,181,1.144,182,1.294,183,0.859,184,0.859,185,0.752,186,0.831,187,0.388,188,0.771,189,1.634,190,0.859,191,0.752,192,0.831,193,1.071,194,1.57,195,0.752,196,0.831,197,0.752,198,0.831,199,0.804,200,0.752,201,1.089,202,0.859,203,0.752,204,0.727,205,0.727,206,1.371,207,0.727,208,0.727,209,0.469,210,0.752,211,0.727,212,0.644,213,0.752,214,0.752,215,0.388,216,0.727,217,0.873,218,0.752,219,0.727,220,0.655,221,0.752,222,1.245,223,1.071,224,0.752,225,0.752,226,0.752,227,0.831,228,0.727,229,0.804,230,0.752,231,0.804,232,0.804,233,0.727,234,0.842,235,0.446,236,0.752,237,0.727,238,1.036,239,0.904,240,0.727,241,0.727,242,1.245,243,0.752,244,0.778,245,0.859,246,0.752,247,1.201,248,0.451,249,1.519,250,0.752,251,0.804,252,0.752,253,0.831,254,0.804,255,0.727,256,0.778,257,0.727,258,0.752,259,0.831,260,0.752,261,0.831,262,0.752,263,0.831,264,0.804,265,0.859,266,0.859,267,0.006,268,0.009,269,0.006,372,1.036,373,1.328,379,2.181,391,2.144,405,3.145,408,1.965,409,3.187,410,2.835,432,1.432,433,1.386,434,2.427,435,2.22,436,2.835,437,1.582,438,2.181,447,2.431,452,2.85,455,4.041,456,3.256,471,2.321,485,2.617,486,2.554,775,1.891,776,1.891,780,5.2,1971,5.876,1972,5.415,1973,4.468,1974,4.468]],["title/interfaces/PollenResponse.html",[507,0.518,1087,2.463]],["body/interfaces/PollenResponse.html",[3,0.09,4,0.079,9,0.079,14,1.286,19,0.124,20,0.522,38,2.804,44,0.013,46,0.209,49,0.768,62,0.928,69,0.559,70,0.263,74,1.604,75,3.574,76,1.542,86,0.09,87,0.277,88,0.791,89,1.634,94,2.238,95,2.238,97,2.147,120,1.604,127,1.039,129,1.822,134,2.69,187,0.559,209,0.397,215,0.559,217,0.514,234,0.496,235,0.57,248,0.41,267,0.005,268,0.007,269,0.005,308,1.542,331,1.604,392,1.934,412,2.045,417,2.234,476,1.979,482,1.671,507,0.815,509,1.053,511,1.671,512,1.286,513,3.115,516,4.014,520,1.556,521,1.743,525,2.643,526,1.845,527,0.927,528,1.604,529,1.671,530,1.331,533,3.385,543,1.909,544,1.909,554,3.836,555,1.87,556,3.385,569,2.739,572,2.172,576,2.213,586,2.501,587,3.629,588,2.938,625,1.743,640,1.743,651,1.485,653,1.909,655,3.244,656,2.995,658,3.385,659,2.882,664,3.538,801,1.909,826,2.238,862,2.877,880,1.331,905,2.182,930,2.005,975,3.033,976,2.238,977,2.382,978,2.382,979,1.91,980,2.053,981,2.053,982,2.114,983,1.743,984,2.114,985,2.382,986,2.382,987,2.265,988,2.256,989,1.667,990,1.743,991,2.382,992,2.005,993,2.382,994,2.382,995,2.382,996,2.382,997,2.382,998,2.382,999,2.382,1000,2.382,1001,4.625,1002,4.625,1003,2.238,1004,4.625,1005,2.382,1006,2.382,1007,2.382,1008,2.382,1009,2.382,1010,2.382,1011,2.382,1012,3.547,1013,2.382,1014,2.382,1015,2.382,1016,2.382,1017,2.382,1018,2.382,1019,2.238,1020,3.998,1021,2.382,1022,3.033,1023,2.382,1024,2.382,1025,2.382,1026,2.382,1027,2.382,1028,2.382,1029,2.382,1030,2.382,1031,2.382,1032,2.382,1033,2.382,1034,2.676,1035,2.382,1036,2.382,1037,2.382,1038,2.382,1039,2.382,1040,1.909,1041,2.382,1042,1.91,1043,2.382,1044,2.382,1045,2.238,1046,2.382,1047,2.382,1048,2.382,1049,3.418,1050,2.382,1051,3.418,1052,2.382,1053,2.238,1054,2.382,1055,3.033,1056,2.382,1057,3.211,1058,2.382,1059,1.909,1060,2.382,1061,2.615,1062,2.382,1063,3.211,1064,2.382,1065,3.418,1066,2.382,1067,3.418,1068,1.38,1069,2.739,1070,1.38,1071,3.418,1072,2.623,1073,2.382,1074,1.845,1075,2.382,1076,2.382,1077,1.43,1078,3.418,1079,2.382,1080,3.033,1081,1.43,1082,2.382,1083,1.43,1084,2.382,1085,2.382,1086,2.382,1087,3.547,1088,2.382,1089,2.114,1090,2.382,1091,2.382,1092,2.382,1093,2.496,1094,2.382,1095,1.43,1096,2.382,1097,1.43,1098,2.382,1099,2.382,1100,2.382,1101,2.382,1102,4.368,1103,3.418,1104,2.382,1105,2.005,1106,2.382]],["title/components/PollenTagElementComponent.html",[0,0.042,250,0.688]],["body/components/PollenTagElementComponent.html",[0,0.063,1,0.633,2,0.92,3,0.097,4,0.085,5,0.722,6,0.722,7,0.722,8,0.722,9,0.085,11,0.722,12,1.656,13,1.549,15,1.016,17,1.016,19,0.133,20,0.549,25,1.254,27,0.721,31,1.275,33,0.834,41,1.016,43,0.654,44,0.013,45,0.804,46,0.248,49,0.526,50,1.03,59,0.699,60,1.479,62,0.901,69,0.296,70,0.282,86,0.097,87,0.296,89,0.796,97,0.993,103,1.101,107,0.424,112,1.166,137,2.647,159,1.486,169,1.442,171,1.694,173,1.754,174,1.81,177,1.616,179,2.75,180,0.612,181,1.016,182,1.217,183,0.722,184,0.722,185,0.633,186,0.699,187,0.327,188,0.746,189,1.607,190,0.722,191,0.633,192,0.699,193,0.952,194,1.522,195,0.633,196,0.699,197,0.633,198,0.699,199,0.677,200,0.633,201,0.995,202,0.722,203,0.633,204,0.612,205,0.612,206,1.275,207,0.612,208,0.612,209,0.417,210,0.633,211,0.612,212,0.572,213,0.633,214,0.633,215,0.327,216,0.612,217,0.775,218,0.633,219,0.612,220,0.551,221,0.633,222,1.137,223,0.952,224,0.633,225,0.633,226,0.633,227,0.699,228,0.612,229,0.677,230,0.633,231,0.677,232,0.677,233,0.612,234,0.748,235,0.396,236,0.633,237,0.612,238,0.92,239,0.803,240,0.612,241,0.612,242,1.137,243,0.633,244,0.654,245,0.722,246,0.633,247,0.633,248,0.434,249,0.677,250,1.117,251,1.52,252,0.633,253,0.699,254,0.677,255,0.612,256,0.654,257,0.612,258,0.633,259,0.699,260,0.633,261,0.699,262,0.633,263,0.699,264,0.677,265,0.722,266,0.722,267,0.005,268,0.008,269,0.005,372,0.92,373,1.214,379,1.938,382,2.627,391,1.694,399,1.791,404,1.478,405,3.219,408,1.653,409,2.913,410,2.518,412,2.321,425,2.265,432,1.694,433,1.897,434,2.494,435,2.627,436,3.161,437,1.331,438,1.378,441,2.973,455,2.553,467,2.746,469,2.553,476,2.405,482,3.161,483,4.233,485,2.325,563,3.447,668,3.779,692,2.973,712,3.853,721,1.591,723,1.868,724,4.456,779,3.853,799,2.398,1161,1.872,1162,2.494,1282,2.553,1285,2.739,1435,3.901,1764,3.285,1790,2.973,1971,6.014,1972,5.542,1975,6.116,1976,6.116,1977,6.337,1978,5.287,1979,3.759,1980,3.759,1981,5.287,1982,3.759,1983,3.759,1984,6.636,1985,3.759,1986,6.636,1987,3.759,1988,6.636,1989,6.116,1990,3.759,1991,3.759,1992,5.344,1993,3.759,1994,3.759,1995,3.759,1996,3.759,1997,5.344,1998,3.759,1999,4.62,2000,5.287,2001,3.759,2002,3.285]],["title/interfaces/PollenType.html",[507,0.518,522,2.123]],["body/interfaces/PollenType.html",[3,0.148,4,0.13,9,0.13,19,0.204,20,0.726,26,2.753,44,0.013,46,0.248,58,1.87,61,2.264,62,0.905,64,3.078,80,3.138,86,0.212,102,3.138,121,3.637,129,1.812,134,2.657,139,2.536,182,1.004,239,0.876,248,0.393,267,0.008,268,0.01,269,0.008,423,2.638,457,2.855,507,0.955,509,1.732,515,3.81,522,3.637,523,3.479,555,1.477,572,2.374,609,3.479,612,4.002,614,4.002,616,3.335,651,2.441,671,2.638,673,2.747,696,2.866,913,2.114,1069,3.138,1093,2.874,1144,2.638,1160,2.352,1236,3.917,1245,3.679,1249,3.679,1568,3.917,1624,3.679,1625,3.679,1959,3.917,2003,4.56,2004,4.56,2005,4.56,2006,4.56,2007,4.56,2008,4.56,2009,4.56,2010,4.56,2011,4.56,2012,4.56,2013,4.56,2014,4.202,2015,4.56,2016,4.56,2017,4.56,2018,4.56,2019,4.56,2020,4.202,2021,4.755,2022,5.102,2023,4.202]],["title/components/PollenflugDetailViewComponent.html",[0,0.042,241,0.665]],["body/components/PollenflugDetailViewComponent.html",[0,0.062,1,0.613,2,0.9,3,0.094,4,0.082,5,0.699,6,0.699,7,0.699,8,0.699,9,0.082,11,0.699,12,1.653,13,1.546,15,0.993,17,0.993,19,0.129,20,0.536,25,1.011,27,0.705,31,1.257,33,0.496,41,0.942,43,0.634,44,0.012,45,0.79,46,0.183,49,0.362,50,1.011,59,0.961,60,1.026,69,0.545,70,0.273,86,0.094,87,0.287,88,0.821,89,1.094,102,3.559,103,1.279,105,3.509,107,0.41,127,0.534,148,3.765,159,1.257,169,0.993,173,0.962,177,0.962,180,0.592,181,0.993,182,1.046,183,0.699,184,0.699,185,0.613,186,0.677,187,0.316,188,0.763,189,1.601,190,0.699,191,0.613,192,0.677,193,0.93,194,1.513,195,0.613,196,0.677,197,0.613,198,0.677,199,0.655,200,0.613,201,0.978,202,0.699,203,0.613,204,0.592,205,0.592,206,1.257,207,0.592,208,0.592,209,0.407,210,0.613,211,0.592,212,0.559,213,0.613,214,0.613,215,0.316,216,0.592,217,0.758,218,0.613,219,0.592,220,0.534,221,0.613,222,1.117,223,0.93,224,0.613,225,0.613,226,0.613,227,0.677,228,0.592,229,0.655,230,0.613,231,0.655,232,0.655,233,0.592,234,0.731,235,0.387,236,0.613,237,0.592,238,0.9,239,0.785,240,0.592,241,1.064,242,1.519,243,0.613,244,0.634,245,0.699,246,0.613,247,0.613,248,0.29,249,0.655,250,0.613,251,0.655,252,0.613,253,0.677,254,0.655,255,0.592,256,0.634,257,0.592,258,0.613,259,0.677,260,0.613,261,0.677,262,0.613,263,0.677,264,0.655,265,0.699,266,0.699,267,0.005,268,0.007,269,0.005,357,4.873,371,1.166,372,0.9,373,1.193,374,1.769,375,2.057,376,1.769,384,2.321,393,1.058,394,1.484,432,1.166,433,1.863,437,1.289,438,1.334,579,3.748,583,3.115,723,2.568,775,1.54,776,1.54,793,2.568,807,2.652,827,3.037,828,3.832,831,3.566,832,3.834,843,1.89,844,2.08,845,2.193,861,4.515,862,2.954,902,2.652,903,1.98,911,3.509,913,2.764,915,5.149,922,4.811,930,3.738,931,3.765,940,4.086,941,4.515,956,3.765,966,3.509,990,1.808,1249,3.296,1264,3.509,1548,4.515,1550,4.766,1556,3.296,1558,4.086,1568,3.509,1575,4.515,1582,4.515,1686,4.515,1819,4.515,1843,4.515,1850,4.515,1853,4.515,1856,4.515,1863,4.515,2024,5.229,2025,5.25,2026,3.639,2027,3.639,2028,3.639,2029,3.639,2030,3.18,2031,5.167,2032,4.086,2033,5.167,2034,5.167,2035,5.167,2036,4.515,2037,5.167,2038,5.167,2039,5.167,2040,5.167,2041,5.167,2042,5.167,2043,5.167,2044,6.54,2045,5.167,2046,5.167,2047,5.167,2048,5.167,2049,5.167,2050,5.167,2051,5.167,2052,5.167,2053,5.167,2054,5.167,2055,5.167,2056,5.167,2057,5.167,2058,5.167,2059,5.167,2060,5.167,2061,5.167,2062,5.167,2063,5.167,2064,5.167,2065,5.167,2066,4.515,2067,5.167,2068,5.167,2069,5.167,2070,6.54,2071,5.167,2072,5.167,2073,5.167,2074,5.167,2075,5.167,2076,5.167,2077,5.167,2078,5.167,2079,5.167,2080,5.167,2081,5.167,2082,5.167,2083,5.167,2084,5.167,2085,5.167,2086,5.167,2087,5.167,2088,5.167]],["title/components/PollenflugSmallTileComponent.html",[0,0.042,243,0.688]],["body/components/PollenflugSmallTileComponent.html",[0,0.066,1,0.691,2,0.978,3,0.105,4,0.092,5,0.788,6,0.788,7,0.788,8,0.788,9,0.092,11,0.788,12,1.664,13,1.556,15,1.079,17,1.079,19,0.145,20,0.583,25,1.078,27,0.766,31,1.324,33,0.874,41,1.06,43,0.714,44,0.013,45,0.842,46,0.227,49,0.558,50,1.078,58,1.709,59,1.191,60,1.272,61,2.069,69,0.505,70,0.307,86,0.105,87,0.323,103,1.132,107,0.462,112,1.272,127,1.093,137,2.471,159,1.387,169,1.119,171,1.314,173,1.084,174,1.404,177,1.484,179,2.709,180,0.667,181,1.079,182,1.115,183,0.788,184,0.788,185,0.691,186,0.763,187,0.356,188,0.772,189,1.621,190,0.788,191,0.691,192,0.763,193,1.011,194,1.547,195,0.691,196,0.763,197,0.691,198,0.763,199,0.738,200,0.691,201,1.042,202,0.788,203,0.691,204,0.667,205,0.667,206,1.324,207,0.667,208,0.667,209,0.443,210,0.691,211,0.667,212,0.608,213,0.691,214,0.691,215,0.356,216,0.667,217,0.824,218,0.691,219,0.667,220,0.601,221,0.691,222,1.191,223,1.011,224,0.691,225,0.691,226,0.691,227,0.763,228,0.667,229,0.738,230,0.691,231,0.738,232,0.738,233,0.667,234,0.795,235,0.421,236,0.691,237,0.667,238,0.978,239,0.853,240,0.667,241,0.667,242,1.483,243,1.16,244,1.484,245,0.788,246,0.691,247,0.691,248,0.316,249,0.738,250,0.691,251,0.738,252,0.691,253,0.763,254,0.738,255,0.667,256,0.714,257,0.667,258,0.691,259,0.763,260,0.691,261,0.763,262,0.691,263,0.763,264,0.738,265,0.788,266,0.788,267,0.006,268,0.008,269,0.006,372,0.978,373,1.272,378,4.668,379,2.059,380,3.86,381,3.662,382,2.791,389,4.086,390,2.471,391,2.208,393,1.633,394,1.673,395,2.616,396,2.471,397,2.345,398,2.786,399,1.954,400,2.471,432,1.314,433,1.742,434,1.673,436,1.954,467,2.131,712,2.989,721,1.736,727,2.786,987,2.137,1435,3.583,1440,3.584,1790,3.244,1977,3.584,1992,4.908,1997,4.908,1999,3.584,2002,4.908,2024,5.743,2089,6.232,2090,3.584,2091,6.406,2092,5.617,2093,5.598,2094,5.617,2095,5.617,2096,4.102,2097,4.102,2098,4.102,2099,4.102,2100,3.584,2101,4.102,2102,3.584]],["title/components/PollenflugTileViewComponent.html",[0,0.042,246,0.688]],["body/components/PollenflugTileViewComponent.html",[0,0.068,1,0.733,2,1.018,3,0.112,4,0.098,5,0.837,6,0.837,7,0.837,8,0.837,9,0.098,11,0.837,12,1.669,13,1.561,15,1.124,17,1.124,19,0.154,20,0.607,25,1.112,27,0.798,31,1.357,33,0.901,41,1.057,43,0.758,44,0.012,45,0.869,46,0.234,49,0.582,50,1.112,58,1.752,59,1.088,60,1.161,61,2.12,69,0.461,70,0.326,86,0.112,87,0.343,103,1.152,107,0.491,127,1.112,159,1.357,180,0.709,181,1.124,182,1.15,183,0.837,184,0.837,185,0.733,186,0.81,187,0.378,188,0.822,189,1.631,190,0.837,191,0.733,192,0.81,193,1.053,194,1.563,195,0.733,196,0.81,197,0.733,198,0.81,199,0.784,200,0.733,201,1.075,202,0.837,203,0.733,204,0.709,205,0.709,206,1.357,207,0.709,208,0.709,209,0.461,210,0.733,211,0.709,212,0.633,213,0.733,214,0.733,215,0.378,216,0.709,217,0.858,218,0.733,219,0.709,220,0.639,221,0.733,222,1.229,223,1.053,224,0.733,225,0.733,226,0.733,227,0.81,228,0.709,229,0.784,230,0.733,231,0.784,232,0.784,233,0.709,234,0.828,235,0.438,236,0.733,237,0.709,238,1.018,239,0.888,240,0.709,241,0.709,242,1.5,243,0.733,244,0.758,245,0.837,246,1.189,247,0.733,248,0.329,249,0.784,250,0.733,251,0.784,252,0.733,253,0.81,254,0.784,255,0.709,256,0.758,257,0.709,258,0.733,259,0.81,260,0.733,261,0.81,262,0.733,263,0.81,264,0.784,265,0.837,266,0.837,267,0.006,268,0.008,269,0.006,357,5.35,371,1.396,372,1.018,373,1.311,374,2.003,375,2.262,376,2.003,379,2.144,380,3.98,381,3.776,382,2.907,386,2.624,390,2.624,391,2.263,393,1.701,394,1.776,399,2.075,400,2.624,791,2.958,903,3.183,987,2.19,1590,3.973,2024,5.741,2093,5.773,2100,3.806,2103,4.356]],["title/components/ProgressChartElementComponent.html",[0,0.042,252,0.688]],["body/components/ProgressChartElementComponent.html",[0,0.061,1,0.598,2,0.884,3,0.091,4,0.08,5,0.682,6,0.682,7,0.682,8,0.682,9,0.08,11,0.682,12,1.651,13,1.543,15,0.976,17,0.976,19,0.126,27,0.693,31,1.243,33,0.809,41,0.809,44,0.013,45,0.668,46,0.126,49,0.353,50,0.855,59,0.66,60,1.284,69,0.28,70,0.266,86,0.091,87,0.28,103,1.081,107,0.4,112,2.324,129,1.145,137,2.214,159,1.368,171,2.401,173,1.342,174,2.709,175,1.215,177,2.016,179,2.881,180,0.826,181,0.976,182,1.191,183,0.682,184,0.682,185,0.598,186,0.66,187,0.308,188,0.737,189,1.597,190,0.682,191,0.598,192,0.66,193,0.914,194,1.505,195,0.598,196,0.66,197,0.598,198,0.66,199,0.639,200,0.598,201,0.964,202,0.682,203,0.598,204,0.578,205,0.578,206,1.243,207,0.578,208,0.578,209,0.4,210,0.598,211,0.578,212,0.549,213,0.598,214,0.598,215,0.308,216,0.578,217,0.744,218,0.598,219,0.578,220,0.52,221,0.598,222,1.102,223,0.914,224,0.598,225,0.598,226,0.598,227,0.66,228,0.578,229,0.639,230,0.598,231,0.639,232,0.639,233,0.578,234,0.718,235,0.38,236,0.598,237,0.578,238,0.884,239,0.771,240,0.578,241,0.578,242,1.102,243,0.598,244,0.618,245,0.682,246,0.598,247,0.598,248,0.285,249,0.639,250,0.598,251,0.639,252,1.089,253,1.394,254,1.465,255,0.578,256,0.618,257,0.578,258,0.598,259,0.66,260,0.598,261,1.203,262,0.598,263,0.66,264,0.639,265,0.682,266,0.682,267,0.005,268,0.007,269,0.005,372,0.884,373,1.176,379,1.861,391,1.899,404,1.996,405,2.737,408,1.561,409,2.823,410,2.418,431,3.897,432,1.137,433,1.101,437,1.257,438,1.301,440,2.411,447,1.932,449,4.125,452,2.264,456,3.699,467,3.554,471,3.554,483,2.264,493,4.833,497,5.794,498,4.976,524,1.215,561,2.029,716,5.186,717,5.339,721,1.502,775,1.502,776,1.502,786,2.807,1279,3.699,1461,5.46,1481,2.029,1517,3.387,1521,3.634,1620,2.807,1689,4.318,1726,5.091,1769,4.014,2104,5.651,2105,5.114,2106,4.436,2107,4.436,2108,3.55,2109,3.55,2110,5.179,2111,3.55,2112,5.926,2113,5.926,2114,5.926,2115,5.926,2116,5.926,2117,3.55,2118,6.403,2119,4.014,2120,4.436,2121,6.219,2122,5.979,2123,6.666,2124,4.436,2125,5.651,2126,4.436,2127,5.651,2128,7.536,2129,6.403,2130,6.403,2131,4.436,2132,5.651,2133,4.436,2134,4.436,2135,6.219,2136,3.102,2137,4.014,2138,4.436,2139,2.807]],["title/components/RegistrationViewComponent.html",[0,0.042,255,0.665]],["body/components/RegistrationViewComponent.html",[0,0.065,1,0.684,2,0.972,3,0.104,4,0.092,5,0.781,6,0.781,7,0.781,8,0.781,9,0.092,11,0.781,12,1.663,13,1.556,15,1.073,17,1.073,19,0.144,20,0.579,22,2.323,25,1.073,27,0.762,31,1.319,33,0.555,36,3.104,40,4.855,41,0.981,43,0.708,44,0.013,45,0.838,46,0.198,49,0.555,50,1.155,59,0.756,60,0.807,62,0.629,69,0.541,70,0.304,71,2.02,73,1.72,86,0.104,87,0.32,88,0.917,89,1.182,96,2.76,97,1.074,103,1.129,107,0.458,112,1.261,134,2.42,137,1.392,159,1.428,169,1.109,171,1.302,173,1.685,175,1.911,180,0.661,181,1.073,182,1.11,183,0.781,184,0.781,185,0.684,186,0.756,187,0.353,188,0.757,189,1.62,190,0.781,191,0.684,192,0.756,193,1.005,194,1.544,195,0.684,196,0.756,197,0.684,198,0.756,199,0.731,200,0.684,201,1.037,202,0.781,203,0.684,204,0.661,205,0.661,206,1.319,207,0.661,208,0.661,209,0.44,210,0.684,211,0.661,212,0.604,213,0.684,214,0.684,215,0.353,216,0.661,217,0.818,218,0.684,219,0.661,220,0.596,221,0.684,222,1.186,223,1.005,224,0.684,225,0.684,226,0.684,227,0.756,228,0.661,229,0.731,230,0.684,231,0.731,232,0.731,233,0.661,234,0.79,235,0.418,236,0.684,237,0.661,238,0.972,239,0.848,240,0.661,241,0.661,242,1.186,243,0.684,244,0.708,245,0.781,246,0.684,247,0.684,248,0.314,249,0.731,250,0.684,251,0.731,252,0.684,253,0.756,254,0.731,255,1.117,256,1.35,257,0.661,258,0.684,259,0.756,260,0.684,261,0.756,262,0.684,263,0.756,264,0.731,265,0.781,266,0.781,267,0.006,268,0.008,269,0.006,359,5.415,371,1.302,372,0.972,373,1.266,374,1.911,375,2.183,376,1.911,385,2.111,387,2.449,432,1.302,433,1.731,434,2.276,435,2.774,436,2.659,437,1.439,476,1.598,485,1.787,553,3.644,555,1.903,558,3.644,563,2.111,576,3.268,691,2.02,697,1.936,714,2.111,715,2.323,721,1.72,734,4.661,744,5.169,753,2.212,790,3.56,818,2.323,863,3.214,963,2.76,1435,2.593,1521,1.936,1661,3.214,1662,5.877,1664,4.414,1665,5.877,1666,3.214,1670,5.041,1672,3.552,1673,3.552,1674,3.552,1678,3.552,1683,4.414,1684,5.688,1693,3.552,2140,6.494,2141,6.375,2142,4.065,2143,6.863,2144,4.065,2145,4.065,2146,4.065,2147,4.065,2148,4.065,2149,4.065,2150,4.065,2151,5.582]],["title/modules/ScreensModule.html",[270,2.123,283,2.776]],["body/modules/ScreensModule.html",[3,0.143,4,0.125,9,0.125,44,0.013,69,0.671,70,0.416,71,2.762,84,3.545,86,0.143,87,0.438,103,0.844,107,0.626,180,0.904,205,1.317,207,1.317,228,1.317,229,1,239,0.844,257,1.317,267,0.008,268,0.01,269,0.008,270,2.887,272,3.177,273,3.349,274,5.037,275,3.774,276,3.774,277,3.545,282,5.163,283,5.853,284,4.877,285,5.163,286,4.648,287,3.774,288,3.024,290,4.648,292,4.648,294,4.395,297,4.05,298,4.395,301,4.857,303,5.981,304,4.857,310,5.412,311,3.545,312,3.545,328,4.857,330,5.412,333,4.05,334,6.764,336,4.05,338,4.05,340,4.05,395,3.545,427,3.774,2152,4.857,2153,4.857,2154,5.558,2155,5.558,2156,5.412,2157,5.558,2158,6.845]],["title/components/SettingsScreenComponent.html",[0,0.042,257,0.665]],["body/components/SettingsScreenComponent.html",[0,0.07,1,0.787,2,1.067,3,0.12,4,0.105,5,0.898,6,0.898,7,0.898,8,0.898,9,0.105,11,0.898,12,1.675,13,1.567,15,1.178,17,1.178,19,0.166,20,0.636,21,3.723,27,0.837,31,1.396,33,0.933,41,0.933,44,0.012,45,0.806,46,0.166,49,0.465,50,1.032,58,1.521,59,0.869,60,0.928,61,1.841,69,0.369,70,0.35,86,0.12,87,0.369,103,1.175,104,3.911,107,0.527,137,1.601,159,1.449,170,2.982,171,1.498,179,2.691,180,0.761,181,1.178,182,1.191,183,0.898,184,0.898,185,0.787,186,0.869,187,0.406,188,0.777,189,1.641,190,0.898,191,0.787,192,0.869,193,1.103,194,1.582,195,0.787,196,0.869,197,0.787,198,0.869,199,0.841,200,0.787,201,1.113,202,0.898,203,0.787,204,0.761,205,0.761,206,1.396,207,0.761,208,0.761,209,0.483,210,0.787,211,0.761,212,0.663,213,0.787,214,0.787,215,0.406,216,0.761,217,0.899,218,0.787,219,0.761,220,0.685,221,0.787,222,1.273,223,1.103,224,0.787,225,0.787,226,0.787,227,0.869,228,0.761,229,0.841,230,0.787,231,0.841,232,0.841,233,0.761,234,0.867,235,0.459,236,0.787,237,0.761,238,1.067,239,1.229,240,0.761,241,0.761,242,1.273,243,0.787,244,0.814,245,0.898,246,0.787,247,0.787,248,0.345,249,0.841,250,0.787,251,0.841,252,0.787,253,0.869,254,0.841,255,0.761,256,0.814,257,1.182,258,0.787,259,0.869,260,0.787,261,0.869,262,0.787,263,0.869,264,0.841,265,0.898,266,0.898,267,0.007,268,0.009,269,0.007,340,5.293,372,1.067,373,1.358,822,3.175,823,4.986,824,4.468,878,5.358,879,3.697,1914,4.085,2159,6.347,2160,4.675]],["title/components/SimpleTileViewComponent.html",[0,0.042,258,0.688]],["body/components/SimpleTileViewComponent.html",[0,0.068,1,0.735,2,1.02,3,0.112,4,0.098,5,0.839,6,0.839,7,0.839,8,0.839,9,0.098,11,0.839,12,1.669,13,1.561,15,1.126,17,1.126,19,0.155,20,0.608,24,4.219,27,0.799,31,1.358,33,0.902,41,1.036,44,0.013,45,0.771,46,0.235,49,0.434,50,0.986,59,1.315,60,1.585,62,0.855,69,0.521,70,0.327,86,0.112,87,0.344,103,1.153,107,0.492,159,1.358,177,1.154,180,0.71,181,1.126,182,1.151,183,0.839,184,0.839,185,0.735,186,0.812,187,0.379,188,0.82,189,1.631,190,0.839,191,0.735,192,0.812,193,1.055,194,1.564,195,0.735,196,0.812,197,0.735,198,0.812,199,0.786,200,0.735,201,1.076,202,0.839,203,0.735,204,0.71,205,0.71,206,1.358,207,0.71,208,0.71,209,0.462,210,0.735,211,0.71,212,0.634,213,0.735,214,0.735,215,0.379,216,0.71,217,0.859,218,0.735,219,0.71,220,0.64,221,0.735,222,1.23,223,1.055,224,0.735,225,0.735,226,0.735,227,0.812,228,0.71,229,0.786,230,0.735,231,0.786,232,0.786,233,0.71,234,0.829,235,0.439,236,0.735,237,0.71,238,1.02,239,0.89,240,0.71,241,0.71,242,1.23,243,0.735,244,0.76,245,0.839,246,0.735,247,0.735,248,0.329,249,0.786,250,0.735,251,0.786,252,0.735,253,0.812,254,0.786,255,0.71,256,0.76,257,0.71,258,1.19,259,1.466,260,0.735,261,0.812,262,0.735,263,0.812,264,0.786,265,0.839,266,0.839,267,0.006,268,0.008,269,0.006,371,1.399,372,1.02,373,1.313,374,2.006,375,2.265,376,2.006,378,4.82,379,2.148,385,2.268,386,2.631,388,2.631,389,4.219,391,2.265,393,1.269,394,1.78,395,2.785,396,2.631,397,2.496,398,2.965,403,2.965,404,1.717,451,5.78,793,2.912,903,2.376,2161,6.777,2162,6.132]],["title/components/SliderElementComponent.html",[0,0.042,260,0.688]],["body/components/SliderElementComponent.html",[0,0.061,1,0.596,2,0.882,3,0.091,4,0.08,5,0.68,6,0.68,7,0.68,8,0.68,9,0.08,11,0.68,12,1.651,13,1.543,15,0.973,17,0.973,19,0.125,20,0.526,25,0.596,27,0.691,31,1.241,33,0.807,41,0.999,43,0.616,44,0.013,45,0.778,46,0.242,49,0.504,50,0.996,59,0.658,60,1.282,62,0.571,69,0.399,70,0.265,86,0.091,87,0.279,103,1.08,107,0.399,112,2.322,129,1.457,137,2.025,159,1.407,169,0.965,171,2.399,173,1.338,174,2.707,175,1.211,177,1.806,179,3.11,180,0.576,181,0.973,182,1.19,183,0.68,184,0.68,185,0.596,186,0.658,187,0.307,188,0.736,189,1.596,190,0.68,191,0.596,192,0.658,193,0.911,194,1.504,195,0.596,196,0.658,197,0.596,198,0.658,199,0.637,200,0.596,201,0.963,202,0.68,203,0.596,204,0.576,205,0.576,206,1.241,207,0.576,208,0.576,209,0.399,210,0.596,211,0.576,212,0.548,213,0.596,214,0.596,215,0.307,216,0.576,217,0.743,218,0.596,219,0.576,220,0.519,221,0.596,222,1.1,223,0.911,224,0.596,225,0.596,226,0.596,227,0.658,228,0.576,229,0.637,230,0.596,231,0.637,232,0.637,233,0.576,234,0.716,235,0.379,236,0.596,237,0.576,238,0.882,239,0.769,240,0.576,241,0.576,242,1.1,243,0.596,244,0.616,245,0.68,246,0.596,247,0.596,248,0.285,249,0.637,250,0.596,251,0.637,252,0.596,253,0.658,254,0.637,255,0.576,256,0.616,257,0.576,258,0.596,259,0.658,260,1.087,261,1.456,262,0.596,263,0.658,264,0.637,265,0.68,266,0.68,267,0.005,268,0.007,269,0.005,372,0.882,373,1.174,379,1.856,391,1.895,404,2.326,405,3.169,408,1.556,409,2.818,410,2.413,415,2.687,425,2.132,431,3.564,440,2.403,449,4.119,454,2.798,455,2.403,467,3.549,471,3.549,493,4.641,497,5.789,498,4.971,513,2.705,555,0.906,561,2.022,683,4.005,686,2.798,687,4.426,688,4.677,695,3.69,716,5.18,717,5.18,721,1.497,727,2.403,753,1.925,786,2.798,1279,3.69,1521,3.076,1689,3.69,1726,5.088,1769,4.005,2110,5.169,2118,6.397,2119,4.005,2120,4.426,2121,6.213,2122,5.971,2123,6.661,2124,4.426,2125,5.643,2126,4.426,2127,5.643,2128,7.535,2129,6.397,2130,6.397,2131,4.426,2132,5.643,2133,4.426,2134,4.426,2135,6.213,2136,3.092,2137,4.005,2138,4.426,2139,2.798,2163,6.543,2164,5.92,2165,5.065,2166,5.915,2167,5.065,2168,3.538,2169,3.538,2170,5.065,2171,3.538,2172,3.538]],["title/injectables/SpeechService.html",[520,1.08,2173,2.978]],["body/injectables/SpeechService.html",[3,0.143,4,0.125,9,0.125,14,2.033,19,0.197,25,0.934,27,0.933,33,1.011,41,1.055,43,0.966,44,0.013,45,0.729,46,0.197,49,0.769,50,1.302,58,1.696,62,0.835,69,0.437,70,0.415,86,0.143,87,0.437,89,1.174,97,1.466,117,3.397,267,0.008,268,0.01,269,0.008,295,4.642,412,2.506,512,2.505,520,2.044,526,2.835,527,1.807,530,2.105,555,1.42,659,2.347,695,5.895,721,3.424,803,4.981,894,2.756,1161,2.421,2021,4.642,2173,4.981,2174,4.847,2175,7.339,2176,6.76,2177,6.76,2178,6.836,2179,7.736,2180,6.836,2181,7.736,2182,5.546,2183,5.546,2184,6.836,2185,6.836,2186,6.836,2187,5.546,2188,5.546,2189,6.836,2190,5.546,2191,5.546,2192,5.546,2193,5.546,2194,5.546,2195,5.546,2196,5.546,2197,5.546,2198,6.836,2199,5.546,2200,5.546,2201,5.546]],["title/injectables/TextService.html",[520,1.08,832,2.123]],["body/injectables/TextService.html",[3,0.072,4,0.063,9,0.063,14,1.026,19,0.099,24,4.741,25,1.143,27,0.581,33,0.704,41,0.955,43,1.182,44,0.013,45,0.977,46,0.241,49,0.766,59,0.521,60,0.846,62,0.905,69,0.407,70,0.21,86,0.072,87,0.221,97,1.795,127,1.208,129,0.632,153,3.677,187,0.501,188,0.59,209,0.454,215,0.37,235,0.432,248,0.29,267,0.004,268,0.006,269,0.004,391,2.469,392,1.853,393,1.803,412,2.423,417,1.617,476,2.028,482,2.03,512,1.562,520,1.523,526,2.394,527,1.126,530,1.063,579,3.082,583,3.784,588,2.964,625,2.117,651,2.962,657,5.068,659,2.874,668,4.18,691,4.096,721,3.514,724,6.076,799,1.786,813,3.723,827,1.185,832,2.213,862,1.601,894,1.391,905,2.469,911,1.902,913,2.113,915,1.786,922,3.29,940,2.214,956,2.04,966,1.902,971,4.904,979,1.617,987,2.268,988,2.318,990,2.117,1012,1.687,1061,2.213,1068,1.676,1070,1.676,1074,1.562,1105,2.435,1152,1.949,1161,1.509,1162,2.103,1168,1.803,1245,2.718,1264,2.894,1287,3.723,1350,6.534,1484,5.37,1485,2.447,1486,2.214,1487,2.447,1488,2.447,1489,2.447,1503,3.723,1504,4.558,1507,3.723,1508,3.369,1509,3.723,1550,4.519,1551,5.42,1556,3.956,1594,2.214,1707,5.709,1709,2.447,1831,3.723,1835,5.935,1838,2.447,2036,4.507,2066,4.507,2175,3.723,2176,3.723,2177,3.723,2202,2.447,2203,4.261,2204,4.261,2205,4.261,2206,4.261,2207,4.261,2208,4.261,2209,4.261,2210,2.8,2211,4.261,2212,2.8,2213,6.735,2214,4.261,2215,2.8,2216,4.261,2217,2.8,2218,4.261,2219,2.8,2220,4.261,2221,2.8,2222,4.261,2223,2.8,2224,3.369,2225,4.261,2226,2.8,2227,8.52,2228,2.8,2229,2.8,2230,2.8,2231,2.214,2232,2.8,2233,5.764,2234,2.8,2235,2.8,2236,2.214,2237,2.8,2238,2.8,2239,2.214,2240,2.8,2241,2.214,2242,2.8,2243,2.8,2244,4.261,2245,6.202,2246,4.261,2247,4.261,2248,5.158,2249,2.8,2250,2.8,2251,4.261,2252,2.8,2253,2.8,2254,2.8,2255,2.8,2256,2.8,2257,2.8,2258,2.8,2259,2.8,2260,2.8,2261,2.447,2262,2.8,2263,5.158,2264,5.764,2265,2.8,2266,2.8,2267,2.8,2268,4.261,2269,2.8,2270,4.261,2271,5.764,2272,5.158,2273,5.158,2274,2.8,2275,2.8,2276,2.8,2277,2.8,2278,5.158,2279,5.158,2280,2.8,2281,2.8,2282,2.8,2283,2.8,2284,2.8,2285,2.8,2286,2.8,2287,2.8,2288,2.8,2289,2.8,2290,5.764,2291,2.8,2292,2.8,2293,2.8,2294,2.8,2295,2.8,2296,2.8,2297,2.8,2298,2.8,2299,2.8,2300,2.8,2301,2.8,2302,2.8,2303,4.261,2304,5.158,2305,2.8,2306,4.261,2307,4.261,2308,2.8,2309,2.8,2310,2.8,2311,2.8,2312,2.8,2313,2.8,2314,2.8,2315,2.8]],["title/interfaces/Tile.html",[188,0.389,507,0.518]],["body/interfaces/Tile.html",[3,0.129,4,0.113,9,0.113,19,0.178,20,0.667,44,0.013,46,0.288,62,0.957,86,0.216,107,0.566,127,1.157,129,1.911,187,0.558,188,0.734,209,0.558,212,0.544,215,0.615,235,0.376,248,0.361,267,0.007,268,0.009,269,0.007,363,2.394,392,1.753,393,2.362,415,1.976,417,1.907,457,3.044,492,2.394,507,1.047,509,1.509,524,1.721,525,1.721,527,1.328,572,2.243,827,3.16,880,1.907,882,2.394,905,1.61,913,1.842,945,2.298,979,1.907,980,2.049,981,2.049,987,1.559,988,1.664,989,1.664,1034,2.355,1042,1.907,1068,1.976,1070,1.976,1072,2.62,1074,2.355,1077,2.049,1081,2.049,1083,2.049,1093,1.842,1095,2.049,1097,2.049,1125,2.049,1126,2.394,1127,4.167,1128,2.497,1129,2.497,1130,2.497,1131,2.497,1132,2.497,1133,2.298,1134,2.298,1135,2.21,1136,2.298,1137,3.556,1138,2.394,1139,2.61,1140,2.394,1141,2.497,1142,3.556,1143,3.556,1144,3.669,1145,3.52,1146,3.338,1147,3.679,1148,3.338,1149,3.338,1150,3.338,1151,2.61,1152,2.298,1153,2.497,1154,2.61,1155,2.61,1156,2.61,1157,2.61,1158,2.497,1159,2.61,1160,2.049,1161,2.276,1162,2.62,1163,2.298,1164,2.394,1165,2.394,1166,2.21,1167,2.127,1168,2.127,1169,2.21]],["title/interfaces/TileArrays.html",[507,0.518,1136,1.869]],["body/interfaces/TileArrays.html",[3,0.13,4,0.114,9,0.114,19,0.179,20,0.669,44,0.013,46,0.265,62,0.952,86,0.216,107,0.843,127,1.041,129,1.912,187,0.56,188,0.788,209,0.56,212,0.546,215,0.617,235,0.378,248,0.434,267,0.007,268,0.009,269,0.007,363,3.562,392,1.758,393,2.364,415,1.986,417,1.916,457,3.05,492,2.405,507,1.048,509,1.516,524,1.729,525,1.729,527,1.334,572,1.874,827,2.728,880,1.916,882,2.405,905,1.618,913,1.851,945,2.309,979,1.916,980,2.059,981,2.059,987,1.566,988,1.672,989,1.672,1034,2.362,1042,1.916,1068,1.986,1070,1.986,1072,2.628,1074,2.362,1077,2.059,1081,2.059,1083,2.059,1093,1.851,1095,2.059,1097,2.059,1125,2.059,1126,2.405,1127,4.171,1128,2.509,1129,2.509,1130,2.509,1131,2.509,1132,2.509,1133,2.309,1134,2.309,1135,2.22,1136,2.948,1137,3.07,1138,2.405,1139,2.623,1140,2.405,1141,2.509,1142,2.405,1143,3.562,1144,3.673,1145,3.528,1146,3.348,1147,3.687,1148,3.348,1149,3.348,1150,3.348,1151,2.623,1152,2.309,1153,2.509,1154,2.623,1155,2.623,1156,2.623,1157,2.623,1158,2.509,1159,2.623,1160,2.059,1161,2.283,1162,2.628,1163,2.309,1164,2.405,1165,2.405,1166,2.22,1167,2.137,1168,2.137,1169,2.22]],["title/injectables/TileService.html",[520,1.08,2316,2.978]],["body/injectables/TileService.html",[0,0.071,2,0.827,3,0.083,4,0.073,9,0.073,14,1.188,19,0.168,25,0.8,27,0.648,33,0.442,36,2.812,41,0.648,43,0.827,44,0.013,45,0.625,46,0.276,49,0.473,50,1.161,62,0.535,69,0.489,70,0.243,73,1.371,82,2.527,86,0.083,87,0.255,88,0.731,89,1.646,97,2.055,101,3.591,103,1.11,104,3.953,107,0.935,127,1.21,129,0.731,153,2.067,177,1.487,188,0.818,209,0.544,212,0.771,215,0.281,217,1.045,234,0.458,235,0.464,248,0.448,267,0.005,268,0.007,269,0.005,363,1.544,392,1.944,393,1.636,476,1.274,482,1.544,507,0.602,509,1.427,512,1.188,520,1.638,524,2.26,526,2.272,527,1.638,530,1.23,572,2.169,588,1.869,651,3.436,655,2.952,656,3.134,657,4.546,659,3.452,668,3.279,685,1.852,825,5.193,827,2.382,894,1.61,905,2.284,983,2.362,987,2.411,988,2.36,989,2.36,990,1.61,1074,1.188,1105,4.178,1125,1.321,1133,3.154,1135,1.425,1136,2.574,1137,2.264,1142,3.482,1161,1.683,1162,2.295,1184,4.84,1204,2.563,1295,4.901,1299,4.153,1300,5.416,1315,2.832,1326,4.209,1460,4.917,1541,4.917,1705,4.901,2014,2.361,2025,4.917,2137,2.563,2224,6.6,2231,4.45,2236,4.45,2239,4.45,2241,4.45,2316,3.463,2317,2.832,2318,4.153,2319,5.627,2320,4.917,2321,4.153,2322,3.241,2323,4.752,2324,3.241,2325,4.752,2326,4.752,2327,4.752,2328,4.752,2329,4.752,2330,4.752,2331,4.752,2332,3.241,2333,3.241,2334,3.241,2335,3.241,2336,3.241,2337,6.599,2338,3.241,2339,4.752,2340,4.752,2341,6.198,2342,4.752,2343,4.752,2344,7.127,2345,3.241,2346,3.241,2347,3.241,2348,4.752,2349,3.241,2350,6.198,2351,3.241,2352,3.241,2353,5.627,2354,3.241,2355,3.241,2356,4.752,2357,3.241,2358,5.627,2359,3.241,2360,3.241,2361,3.241,2362,3.241,2363,3.241,2364,5.627,2365,3.241,2366,3.241,2367,3.241,2368,3.241,2369,3.241,2370,3.241,2371,3.241,2372,4.752,2373,3.241,2374,3.241,2375,4.752,2376,3.241,2377,3.241,2378,2.832,2379,3.241,2380,5.416,2381,6.198,2382,6.198,2383,3.241,2384,6.599,2385,3.241,2386,5.627,2387,3.241,2388,4.752,2389,4.752,2390,3.241,2391,3.241,2392,3.241,2393,3.241,2394,3.241,2395,3.241,2396,3.241,2397,3.241,2398,3.241,2399,3.241,2400,3.241,2401,3.241,2402,3.241]],["title/components/TtsPlayerElementComponent.html",[0,0.042,262,0.688]],["body/components/TtsPlayerElementComponent.html",[0,0.058,1,0.544,2,0.825,3,0.083,4,0.073,5,0.621,6,0.621,7,0.621,8,0.621,9,0.073,11,0.621,12,1.641,13,1.534,15,0.911,17,0.911,19,0.115,20,0.492,25,1.042,26,2.709,27,0.647,31,1.189,33,0.441,36,2.809,41,0.996,43,0.825,44,0.013,45,0.814,46,0.234,49,0.615,50,1.11,58,1.176,59,0.882,60,0.941,61,1.858,62,0.364,69,0.52,70,0.242,73,1.367,80,4.473,82,1.317,86,0.083,87,0.255,88,0.729,89,0.684,103,1.046,107,0.364,112,1.742,117,1.606,126,2.194,127,0.474,137,1.106,159,1.508,169,0.881,171,2.208,173,1.821,174,2.438,175,1.106,176,2.291,177,1.821,178,3.638,179,1.865,180,0.526,181,0.911,182,1.147,183,0.621,184,0.621,185,0.544,186,0.601,187,0.281,188,0.721,189,1.58,190,0.621,191,0.544,192,0.601,193,1.186,194,1.476,195,0.544,196,0.601,197,0.544,198,0.601,199,0.581,200,0.544,201,0.914,202,0.621,203,0.544,204,0.526,205,0.526,206,1.189,207,0.526,208,0.526,209,0.374,210,0.544,211,0.526,212,0.513,213,0.544,214,0.544,215,0.281,216,0.526,217,0.695,218,0.544,219,0.526,220,0.474,221,0.544,222,1.045,223,1.114,224,0.544,225,0.544,226,0.544,227,0.601,228,0.526,229,0.581,230,0.544,231,0.581,232,0.581,233,0.526,234,0.671,235,0.355,236,0.544,237,0.526,238,0.825,239,0.72,240,0.526,241,0.526,242,1.045,243,0.544,244,0.562,245,0.621,246,0.544,247,0.544,248,0.266,249,0.581,250,0.544,251,0.581,252,0.544,253,0.601,254,0.581,255,0.526,256,0.562,257,0.526,258,0.544,259,0.601,260,0.544,261,0.601,262,1.042,263,1.358,264,1.502,265,0.621,266,0.621,267,0.005,268,0.007,269,0.005,360,3.75,372,0.825,373,1.115,379,1.738,391,1.519,404,1.865,405,3.154,408,1.421,409,2.676,410,2.259,419,2.061,425,1.947,432,1.035,433,1.742,447,1.758,449,2.061,452,3.025,462,2.061,467,2.463,468,2.061,469,2.194,470,4.093,471,1.678,485,1.421,486,2.71,498,2.194,500,7.155,526,1.184,656,1.421,685,1.847,686,2.555,693,2.823,694,2.555,696,1.606,697,1.539,701,2.823,714,1.678,721,2.007,723,1.606,729,3.455,782,2.555,828,3.583,1123,3.385,1161,1.144,1279,2.354,1282,2.194,1284,2.194,1517,1.847,1521,2.259,1703,2.555,1712,2.354,1722,2.354,1726,2.061,1772,3.75,1911,2.823,1912,2.823,1916,2.823,2102,4.144,2107,2.823,2119,2.555,2139,2.555,2173,5.662,2403,6.512,2404,5.893,2405,6.189,2406,4.742,2407,6.189,2408,6.189,2409,4.742,2410,3.231,2411,5.618,2412,3.231,2413,3.231,2414,3.231,2415,3.231,2416,3.231,2417,3.231,2418,3.231,2419,3.231,2420,3.231,2421,3.231,2422,4.144,2423,5.618,2424,3.231,2425,3.231,2426,4.742,2427,3.231,2428,4.144,2429,3.231,2430,4.742,2431,4.742,2432,3.231,2433,3.231,2434,8.188,2435,3.231,2436,4.742,2437,3.231,2438,4.742,2439,3.231,2440,3.231,2441,4.742,2442,3.231,2443,3.231,2444,4.742,2445,3.231,2446,3.231,2447,4.742,2448,3.231,2449,3.231,2450,4.742,2451,3.231,2452,3.231,2453,4.742,2454,3.231,2455,4.742,2456,3.231,2457,3.231,2458,4.742,2459,3.231,2460,3.231,2461,4.742,2462,3.231,2463,3.231,2464,3.231,2465,3.231,2466,3.231,2467,3.231,2468,3.231,2469,3.231,2470,3.231,2471,3.231,2472,3.231,2473,3.231,2474,3.231,2475,3.231,2476,3.231,2477,3.231,2478,3.231,2479,3.231,2480,3.231,2481,3.231,2482,3.231,2483,3.231,2484,3.231]],["title/modules/UiElementsModule.html",[270,2.123,284,2.463]],["body/modules/UiElementsModule.html",[3,0.121,4,0.106,9,0.106,44,0.013,69,0.663,70,0.352,86,0.121,87,0.37,180,0.764,191,1.395,192,0.873,193,1.309,195,1.395,196,0.873,197,1.395,198,0.873,199,1.107,221,1.395,222,1.275,223,1.309,224,1.395,225,1.395,226,1.395,227,0.873,247,1.395,248,0.346,249,1.107,250,1.395,251,1.107,252,1.395,253,0.873,254,1.107,260,1.395,261,0.873,262,1.395,263,0.873,264,1.107,267,0.007,268,0.009,269,0.007,270,2.439,272,2.684,273,2.829,274,4.657,275,3.189,276,3.189,277,4.374,284,5.249,286,4.176,287,3.189,288,2.555,290,3.189,292,4.176,297,3.421,397,2.684,398,5.628,405,1.987,407,3.713,427,3.189,676,3.713,753,2.555,1699,4.657,1795,3.713,1972,4.481,2105,3.713,2156,4.862,2164,3.713,2404,3.713,2485,4.103,2486,4.103,2487,4.103,2488,4.695,2489,5.373]],["title/interfaces/UserContext.html",[26,1.607,507,0.518]],["body/interfaces/UserContext.html",[3,0.144,4,0.126,9,0.126,19,0.198,20,0.713,26,2.926,44,0.013,46,0.287,58,2.073,61,2.234,62,0.897,64,3.412,80,3.046,86,0.211,102,3.046,121,4.137,129,1.797,134,2.609,139,2.462,182,0.975,239,0.85,248,0.448,267,0.008,268,0.01,269,0.008,423,2.56,457,2.804,507,0.942,509,1.681,515,3.741,522,2.908,523,3.417,555,1.433,572,2.164,609,3.958,612,4.553,614,4.553,616,3.794,651,2.369,671,2.56,673,2.667,696,2.782,913,2.052,1069,3.046,1093,2.052,1144,2.56,1160,2.283,1236,3.802,1245,3.571,1249,3.571,1568,3.802,1624,3.571,1625,3.571,1959,3.802,2003,4.427,2004,4.427,2005,4.427,2006,4.427,2007,4.427,2008,4.427,2009,4.427,2010,4.427,2011,4.427,2012,4.427,2013,4.427,2014,4.079,2015,4.427,2016,4.427,2017,4.427,2018,4.427,2019,4.427,2020,4.079,2021,4.669,2022,5.01,2023,4.079]],["title/injectables/UserContextAPIService.html",[520,1.08,531,2.607]],["body/injectables/UserContextAPIService.html",[3,0.07,4,0.062,9,0.062,14,1.005,19,0.097,22,2.396,25,1.2,26,2.908,27,0.572,33,0.374,38,3.086,41,0.992,43,1.241,44,0.013,45,0.937,46,0.258,49,0.792,58,1.921,59,0.51,62,0.938,64,1.843,69,0.484,70,0.205,74,1.254,75,3.84,76,1.205,81,1.652,82,3.386,86,0.07,87,0.216,88,0.618,89,1.565,97,2.047,121,2.644,124,3.055,127,0.615,129,1.568,139,1.205,220,0.402,248,0.32,267,0.004,268,0.006,269,0.004,308,1.205,317,2.847,331,1.917,372,0.73,412,2.469,423,1.254,507,0.645,508,1.749,510,5.022,511,1.306,512,1.005,513,2.328,514,1.862,515,3.878,516,3.881,517,3.055,518,4.912,519,1.998,520,1.507,521,1.362,522,1.424,523,3.773,524,2.755,525,1.435,526,2.09,527,1.108,528,1.917,529,1.997,530,1.04,531,2.674,532,1.998,533,3.541,534,1.998,535,1.998,536,1.998,537,1.998,538,1.998,539,1.998,540,1.998,541,1.998,542,1.998,543,1.492,544,1.492,545,1.998,546,1.998,547,1.998,548,1.998,549,1.998,550,1.998,551,2.674,552,3.055,553,4.34,554,3.935,555,1.999,556,3.541,557,1.998,558,4.156,559,2.847,560,3.637,561,4.156,562,2.674,563,2.178,564,2.674,565,2.674,566,3.247,567,1.998,568,1.998,569,1.492,570,4.84,571,1.998,572,1.219,573,1.998,574,1.998,575,1.998,576,2.964,577,3.637,578,4.132,579,3.219,580,4.132,581,3.637,582,3.435,583,2.716,584,3.637,585,3.637,586,3.219,587,3.881,588,2.548,589,3.055,590,5.466,591,4.721,592,4.721,593,4.721,594,4.154,595,1.998,596,1.998,597,1.998,598,3.709,599,1.998,600,1.998,601,1.998,602,5.066,603,3.055,604,1.998,605,1.998,606,4.154,607,3.055,608,3.055,609,3.219,610,1.998,611,3.055,612,2.91,613,3.055,614,2.91,615,3.055,616,2.425,617,3.055,618,1.998,619,1.998,620,3.709,621,1.998,622,1.998,623,3.055,624,2.847,625,2.083,626,3.055,627,3.055,628,5.299,629,1.998,630,3.055,631,3.055,632,3.055,633,3.055,634,3.055,635,1.998,636,3.055,637,3.055,638,1.998,639,1.998,640,2.083,641,1.998,642,1.998,643,3.055,644,1.998,645,1.998,646,1.998,647,1.998,648,1.998,649,1.998,650,3.055,651,1.774,652,4.154,653,1.492,654,1.749,655,1.997,656,1.843,657,1.749,658,1.362,659,1.16,660,1.998,661,3.247,662,1.998,663,1.998,664,1.424,665,1.998,666,1.998,667,1.998,668,2.53,669,1.652,670,1.567,671,1.254,672,1.652,673,1.306,674,1.749,894,1.362,896,2.168,2490,4.192,2491,4.192,2492,4.192,2493,4.192,2494,4.192,2495,4.192,2496,4.192,2497,2.741,2498,2.741,2499,2.741,2500,2.741,2501,2.741,2502,2.741,2503,2.741,2504,2.741,2505,2.741,2506,2.741]],["title/interfaces/UserContextResponse.html",[507,0.518,661,2.607]],["body/interfaces/UserContextResponse.html",[3,0.079,4,0.069,9,0.069,14,1.125,19,0.109,20,0.474,22,2.61,26,2.754,38,2.597,44,0.013,46,0.261,49,0.744,58,1.975,59,0.571,62,0.924,64,2.008,69,0.509,70,0.23,74,1.404,75,3.703,76,1.35,81,1.85,82,3.223,86,0.079,87,0.242,88,0.693,89,1.608,97,2.089,121,3.513,127,0.45,129,1.624,139,1.35,220,0.45,248,0.38,267,0.004,268,0.007,269,0.004,308,1.35,317,2.085,331,1.404,372,0.534,412,2.208,423,1.404,507,0.69,508,1.958,509,0.922,510,2.085,511,1.462,512,1.125,513,2.761,514,2.085,515,3.68,516,3.981,517,3.327,518,5.104,519,2.237,520,1.441,521,1.525,522,1.594,523,3.207,524,2.685,525,1.051,526,1.673,527,0.811,528,1.404,529,1.462,530,1.165,531,1.958,532,2.237,533,3.654,534,2.237,535,2.237,536,2.237,537,2.237,538,2.237,539,2.237,540,2.237,541,2.237,542,2.237,543,1.67,544,1.67,545,2.237,546,2.237,547,2.237,548,2.237,549,2.237,550,2.237,551,1.958,552,2.237,553,4.341,554,4.003,555,2.038,556,3.654,557,2.237,558,3.866,559,3.101,560,3.851,561,4.278,562,2.912,563,2.372,564,2.912,565,2.912,566,3.477,567,2.237,568,2.237,569,1.67,570,4.1,571,2.237,572,1.876,573,2.237,574,2.237,575,2.237,576,3.08,577,3.851,578,4.314,579,3.361,580,4.314,581,3.851,582,3.637,583,2.876,584,3.851,585,3.851,586,3.361,587,3.956,588,2.374,589,2.237,590,5.603,591,4.929,592,4.929,593,4.929,594,4.399,595,2.237,596,2.237,597,2.237,598,3.972,599,2.237,600,2.237,601,2.237,602,4.399,603,2.237,604,2.237,605,2.237,606,4.399,607,2.237,608,2.237,609,3.654,610,2.237,611,3.327,612,3.866,613,3.327,614,3.866,615,3.327,616,3.222,617,3.327,618,2.237,619,2.237,620,3.972,621,2.237,622,2.237,623,3.327,624,3.101,625,2.269,626,2.237,627,2.237,628,4.929,629,2.237,630,3.327,631,3.327,632,3.327,633,2.237,634,2.237,635,2.237,636,2.237,637,2.237,638,2.237,639,2.237,640,2.269,641,2.237,642,2.237,643,2.237,644,2.237,645,2.237,646,2.237,647,2.237,648,2.237,649,2.237,650,2.237,651,1.299,652,2.237,653,1.67,654,1.958,655,2.175,656,2.008,657,1.958,658,1.525,659,1.299,660,2.237,661,3.851,662,2.237,663,2.237,664,1.594,665,2.237,666,2.237,667,2.237,668,2.709,669,1.85,670,1.755,671,1.404,672,1.85,673,1.462,674,1.958]],["title/interfaces/UserIdentifikation.html",[507,0.518,523,2.031]],["body/interfaces/UserIdentifikation.html",[3,0.148,4,0.13,9,0.13,19,0.204,20,0.726,26,2.753,44,0.013,46,0.248,58,1.87,61,2.264,62,0.905,64,3.078,80,3.138,86,0.212,102,3.138,121,3.637,129,1.812,134,2.657,139,2.536,182,1.004,239,0.876,248,0.393,267,0.008,268,0.01,269,0.008,423,2.638,457,2.855,507,0.955,509,1.732,515,4.371,522,2.996,523,3.746,555,1.477,572,2.374,609,3.479,612,4.002,614,4.002,616,3.335,651,2.441,671,2.638,673,2.747,696,2.866,913,2.114,1069,3.138,1093,2.114,1144,2.638,1160,2.352,1236,3.917,1245,3.679,1249,3.679,1568,3.917,1624,3.679,1625,3.679,1959,3.917,2003,4.56,2004,4.56,2005,4.56,2006,4.56,2007,4.56,2008,4.56,2009,4.56,2010,4.56,2011,4.56,2012,4.56,2013,4.56,2014,4.202,2015,4.56,2016,4.56,2017,4.56,2018,4.56,2019,4.56,2020,4.202,2021,4.755,2022,5.102,2023,4.202]],["title/modules/ViewsModule.html",[270,2.123,285,2.607]],["body/modules/ViewsModule.html",[3,0.1,4,0.087,9,0.087,44,0.013,69,0.672,70,0.29,71,1.926,86,0.1,87,0.306,103,1.197,180,0.631,185,1.353,186,0.721,187,0.469,188,0.791,200,1.233,201,0.879,203,1.233,204,1.192,208,1.308,209,0.426,210,1.353,211,1.308,212,0.584,213,1.353,214,1.353,215,0.337,216,1.308,217,0.792,218,1.353,219,1.308,220,0.568,230,1.233,231,0.698,232,0.972,233,1.308,234,0.764,235,0.504,236,1.353,237,1.308,238,0.94,239,0.82,240,1.192,241,1.308,242,1.156,243,1.353,244,0.94,246,1.353,255,1.308,256,0.675,258,1.233,259,0.721,267,0.006,268,0.008,269,0.006,270,2.013,272,2.216,273,2.335,274,4.222,275,2.632,276,2.632,277,3.966,284,4.412,285,5.572,286,3.668,287,2.632,288,2.109,290,3.668,292,3.668,297,2.825,298,3.065,310,4.271,311,2.472,312,2.472,330,4.271,342,3.446,343,6.614,345,3.668,347,3.446,349,3.668,351,2.825,353,3.668,355,3.668,357,3.668,359,2.825,370,3.065,395,2.472,427,2.632,752,3.065,753,2.109,1297,2.825,1423,3.065,1447,3.065,1800,3.065,2089,3.065,2156,4.271,2162,3.065,2489,4.72,2507,3.387,2508,3.876,2509,3.387,2510,3.387,2511,3.876,2512,3.876,2513,5.402,2514,5.402,2515,5.402]],["title/injectables/WeatherAPIService.html",[520,1.08,992,2.336]],["body/injectables/WeatherAPIService.html",[3,0.085,4,0.074,9,0.074,14,1.21,19,0.117,25,0.811,27,0.657,33,0.45,38,3.307,41,0.947,43,0.838,44,0.013,45,0.633,46,0.171,49,0.796,62,0.901,69,0.547,70,0.247,74,1.509,75,3.769,76,1.451,86,0.085,87,0.26,88,0.745,89,1.612,94,2.105,95,2.105,97,2.128,120,1.509,127,1.144,129,1.777,134,2.635,187,0.543,209,0.38,215,0.543,217,0.484,234,0.467,235,0.578,248,0.39,267,0.005,268,0.007,269,0.005,308,1.451,331,2.203,392,1.955,412,2.402,417,2.158,476,1.894,482,1.572,507,0.792,511,1.572,512,1.21,513,2.859,516,3.947,520,1.652,521,1.64,525,2.72,526,2.291,527,1.273,528,2.203,529,2.294,530,1.253,533,3.304,543,1.796,544,1.796,554,3.784,555,1.835,556,3.304,569,2.621,572,1.933,576,2.118,586,2.393,587,3.562,588,2.889,625,1.64,640,1.64,651,1.397,653,1.796,655,3.167,656,2.923,658,3.304,659,2.814,664,3.453,801,1.796,826,2.105,862,2.753,880,1.253,894,1.64,896,2.61,905,2.224,930,1.887,975,2.902,976,4.572,977,2.241,978,2.241,979,1.828,980,1.964,981,1.964,982,1.989,983,1.64,984,1.989,985,2.241,986,2.241,987,2.279,988,2.299,989,1.883,990,1.64,991,3.271,992,2.753,993,2.241,994,2.241,995,2.241,996,2.241,997,2.241,998,2.241,999,2.241,1000,2.241,1001,5.171,1002,5.171,1003,3.988,1004,4.515,1005,2.241,1006,2.241,1007,2.241,1008,2.241,1009,4.246,1010,2.241,1011,2.241,1012,3.426,1013,2.241,1014,2.241,1015,4.246,1016,2.241,1017,2.241,1018,2.241,1019,3.988,1020,3.862,1021,2.241,1022,2.902,1023,2.241,1024,2.241,1025,2.241,1026,2.241,1027,2.241,1028,2.241,1029,2.241,1030,2.241,1031,2.241,1032,2.241,1033,3.271,1034,2.828,1035,3.862,1036,2.241,1037,2.241,1038,2.241,1039,2.241,1040,1.796,1041,2.241,1042,1.828,1043,2.241,1044,2.241,1045,2.105,1046,2.241,1047,2.241,1048,2.241,1049,3.271,1050,2.241,1051,3.271,1052,2.241,1053,2.105,1054,2.241,1055,2.902,1056,2.241,1057,3.072,1058,2.241,1059,1.796,1060,2.241,1061,2.502,1062,2.241,1063,3.072,1064,2.241,1065,3.271,1066,2.241,1067,3.271,1068,1.298,1069,2.621,1070,1.298,1071,3.271,1072,2.549,1073,2.241,1074,1.765,1075,2.241,1076,2.241,1077,1.346,1078,3.271,1079,2.241,1080,2.902,1081,1.346,1082,2.241,1083,1.346,1084,2.241,1085,2.241,1086,2.241,1087,2.902,1088,2.241,1089,1.989,1090,2.241,1091,2.241,1092,2.241,1093,1.765,1094,2.241,1095,1.346,1096,2.241,1097,1.346,1098,2.241,1099,2.241,1100,2.241,1101,2.241,1102,2.241,1103,3.271,1104,2.241,1105,1.887,1106,2.241,2516,4.816,2517,3.301,2518,3.301,2519,3.301,2520,3.301,2521,3.301,2522,3.301,2523,3.301]],["title/interfaces/WeatherData.html",[393,1.188,507,0.518]],["body/interfaces/WeatherData.html",[3,0.133,4,0.116,9,0.116,44,0.013,46,0.183,62,0.954,86,0.217,107,0.582,127,1.052,129,1.917,187,0.568,188,0.718,209,0.566,212,0.559,215,0.623,235,0.387,248,0.367,267,0.007,268,0.009,269,0.007,363,2.461,392,1.784,393,2.397,415,2.032,417,1.961,457,3.075,492,2.461,507,1.052,509,1.551,524,1.769,525,1.769,527,1.365,572,1.901,827,2.768,880,1.961,882,2.461,905,1.655,913,1.894,945,2.363,979,1.961,980,2.107,981,2.107,987,1.602,988,1.711,989,1.711,1034,2.397,1042,1.961,1068,2.032,1070,2.032,1072,2.667,1074,2.397,1077,2.107,1081,2.107,1083,2.107,1093,1.894,1095,2.107,1097,2.107,1125,2.107,1126,2.461,1127,4.193,1128,2.567,1129,2.567,1130,2.567,1131,2.567,1132,2.567,1133,2.363,1134,2.363,1135,2.272,1136,2.363,1137,3.115,1138,2.461,1139,2.683,1140,2.461,1141,2.567,1142,2.461,1143,3.593,1144,3.692,1145,3.566,1146,3.397,1147,3.727,1148,3.397,1149,3.397,1150,3.397,1151,2.683,1152,2.363,1153,2.567,1154,2.683,1155,2.683,1156,2.683,1157,2.683,1158,2.567,1159,2.683,1160,2.107,1161,2.316,1162,2.667,1163,2.363,1164,2.461,1165,2.461,1166,2.272,1167,2.186,1168,2.186,1169,2.272]],["title/injectables/WeatherDataService.html",[520,1.08,831,2.031]],["body/injectables/WeatherDataService.html",[3,0.081,4,0.167,9,0.071,14,1.149,19,0.111,25,0.528,27,0.633,33,0.428,36,2.876,41,1.026,43,0.546,44,0.013,45,0.412,46,0.111,49,0.789,50,1.148,69,0.537,70,0.235,73,1.327,75,3.118,76,1.379,82,1.279,86,0.081,87,0.247,88,0.708,89,1.765,97,2.041,107,0.734,127,1.22,154,3.38,155,4.054,188,0.649,209,0.513,212,0.8,217,0.894,234,0.781,235,0.511,248,0.396,267,0.007,268,0.007,269,0.005,392,1.859,393,0.912,399,3.45,412,2.52,512,1.149,520,1.612,524,1.89,526,2.908,527,1.226,528,2.122,529,2.21,530,1.19,555,1.954,651,1.963,655,1.494,656,3.534,658,2.305,691,3.738,749,2.285,831,2.305,843,3.964,856,2.741,868,5.69,894,1.559,905,1.769,983,1.559,987,2.114,988,2.257,989,1.828,990,1.559,992,4.032,1012,3.676,1034,2.386,1042,1.19,1059,3.543,1063,2.959,1105,2.652,1133,1.434,1138,2.63,1152,1.434,1166,1.379,1204,2.48,1511,2.13,1545,2.741,1611,6.328,1702,5.331,1767,4.054,1967,2.741,2030,2.741,2224,6.034,2316,4.967,2318,4.054,2320,2.741,2321,4.054,2524,2.741,2525,4.639,2526,6.101,2527,6.101,2528,6.101,2529,6.101,2530,6.101,2531,6.511,2532,6.101,2533,6.511,2534,3.136,2535,3.136,2536,3.136,2537,8.319,2538,7.631,2539,7.723,2540,3.136,2541,3.136,2542,4.639,2543,3.136,2544,3.136,2545,4.639,2546,3.136,2547,3.136,2548,5.521,2549,6.163,2550,4.639,2551,4.054,2552,5.521,2553,4.639,2554,3.136,2555,3.136,2556,4.639,2557,4.639,2558,6.511,2559,4.639,2560,4.639,2561,4.639,2562,3.136,2563,3.136,2564,7.242,2565,7.242,2566,7.242,2567,5.521,2568,5.521,2569,3.136,2570,3.136,2571,3.136,2572,3.136,2573,3.136,2574,3.136,2575,3.136,2576,3.136,2577,3.136,2578,3.136,2579,6.511,2580,3.136,2581,6.511,2582,3.136,2583,3.136,2584,3.136,2585,3.136,2586,3.136,2587,3.136,2588,3.136,2589,3.136,2590,3.136,2591,3.136,2592,3.136,2593,3.136,2594,3.136,2595,6.511,2596,3.136,2597,3.136,2598,3.136,2599,3.136,2600,3.136,2601,3.136,2602,3.136,2603,3.136,2604,3.136,2605,3.136,2606,4.639,2607,3.136,2608,4.639,2609,4.639,2610,3.136,2611,3.136,2612,3.136,2613,3.136,2614,3.136,2615,3.136,2616,3.136,2617,3.136,2618,3.136,2619,3.136,2620,4.639,2621,4.639,2622,3.136,2623,3.136,2624,3.136,2625,4.639,2626,3.136,2627,4.639,2628,3.136,2629,4.639,2630,3.136,2631,6.101,2632,3.136,2633,4.639,2634,3.136,2635,4.639,2636,3.136,2637,3.136,2638,3.136,2639,3.136,2640,3.136,2641,3.136,2642,3.136,2643,3.136,2644,3.136,2645,3.136,2646,3.136,2647,3.136,2648,3.136,2649,3.136,2650,3.136,2651,3.136,2652,3.136,2653,3.136,2654,3.136,2655,3.136,2656,3.136,2657,3.136,2658,3.136,2659,3.136]],["title/interfaces/WeatherForecastData.html",[507,0.518,905,1.31]],["body/interfaces/WeatherForecastData.html",[3,0.13,4,0.114,9,0.114,19,0.179,20,0.668,44,0.013,46,0.265,62,0.966,86,0.216,107,0.568,127,1.04,129,1.912,187,0.559,188,0.711,209,0.559,212,0.545,215,0.616,235,0.378,248,0.362,267,0.007,268,0.009,269,0.007,363,2.401,392,1.756,393,2.386,415,1.982,417,1.913,457,3.048,492,2.401,507,1.048,509,1.513,524,1.726,525,1.726,527,1.332,572,1.872,827,2.724,880,1.913,882,2.401,905,2.063,913,1.847,945,2.305,979,2.836,980,3.048,981,3.048,987,1.563,988,1.669,989,1.669,1034,2.359,1042,1.913,1068,1.982,1070,1.982,1072,2.625,1074,2.359,1077,2.055,1081,2.055,1083,2.055,1093,1.847,1095,2.055,1097,2.055,1125,2.055,1126,2.401,1127,4.222,1128,2.505,1129,2.505,1130,2.505,1131,2.505,1132,2.505,1133,2.305,1134,2.305,1135,2.216,1136,2.305,1137,3.066,1138,2.401,1139,2.618,1140,2.401,1141,2.505,1142,2.401,1143,3.56,1144,3.671,1145,3.525,1146,3.344,1147,3.684,1148,3.344,1149,3.344,1150,3.344,1151,2.618,1152,2.305,1153,2.505,1154,2.618,1155,2.618,1156,2.618,1157,2.618,1158,2.505,1159,2.618,1160,2.055,1161,2.28,1162,2.625,1163,2.305,1164,2.401,1165,2.401,1166,2.216,1167,2.133,1168,2.133,1169,2.216]],["title/interfaces/WeatherHistoryByDayData.html",[507,0.518,1163,1.869]],["body/interfaces/WeatherHistoryByDayData.html",[3,0.13,4,0.114,9,0.114,19,0.18,20,0.671,44,0.013,46,0.252,62,0.952,86,0.216,107,0.572,127,1.043,129,1.933,187,0.562,188,0.713,209,0.561,212,0.549,215,0.618,235,0.38,248,0.363,267,0.007,268,0.009,269,0.007,363,2.417,392,1.763,393,2.389,415,1.995,417,1.925,457,3.055,492,2.417,507,1.049,509,1.523,524,1.737,525,1.737,527,1.341,572,1.88,827,2.736,880,1.925,882,2.417,905,1.626,913,1.859,945,2.32,979,1.925,980,2.069,981,2.069,987,1.573,988,1.68,989,1.68,1034,2.369,1042,1.925,1068,1.995,1070,1.995,1072,2.636,1074,2.369,1077,2.069,1081,2.069,1083,2.069,1093,1.859,1095,2.069,1097,2.069,1125,2.069,1126,2.417,1127,4.227,1128,2.521,1129,2.521,1130,2.521,1131,2.521,1132,2.521,1133,2.32,1134,2.32,1135,2.231,1136,2.32,1137,3.079,1138,2.417,1139,2.635,1140,2.417,1141,2.521,1142,2.417,1143,3.569,1144,3.677,1145,3.536,1146,3.358,1147,3.696,1148,3.358,1149,3.358,1150,3.358,1151,2.635,1152,2.32,1153,2.521,1154,2.635,1155,2.635,1156,2.635,1157,2.635,1158,2.521,1159,2.635,1160,2.069,1161,2.29,1162,2.636,1163,2.956,1164,3.569,1165,3.569,1166,2.231,1167,2.147,1168,2.147,1169,2.231]],["title/interfaces/WeatherHistoryData.html",[507,0.518,989,1.354]],["body/interfaces/WeatherHistoryData.html",[3,0.131,4,0.115,9,0.115,19,0.181,20,0.674,44,0.013,46,0.23,62,0.953,86,0.217,107,0.575,127,1.046,129,1.914,187,0.564,188,0.715,209,0.563,212,0.552,215,0.62,235,0.383,248,0.365,267,0.007,268,0.009,269,0.007,363,2.433,392,2.049,393,2.392,415,2.008,417,1.938,457,3.062,492,2.433,507,1.05,509,1.533,524,1.749,525,1.749,527,1.35,572,1.888,827,2.748,880,1.938,882,2.433,905,1.636,913,1.872,945,2.336,979,1.938,980,2.083,981,2.083,987,1.584,988,1.691,989,2.15,1034,2.379,1042,2.85,1068,2.008,1070,2.008,1072,2.647,1074,2.379,1077,2.083,1081,2.083,1083,2.083,1093,1.872,1095,2.083,1097,2.083,1125,2.083,1126,2.433,1127,4.233,1128,2.538,1129,2.538,1130,2.538,1131,2.538,1132,2.538,1133,2.336,1134,2.336,1135,2.246,1136,2.336,1137,3.092,1138,2.433,1139,2.653,1140,2.433,1141,2.538,1142,2.433,1143,3.577,1144,3.682,1145,3.547,1146,3.372,1147,3.707,1148,3.372,1149,3.372,1150,3.372,1151,2.653,1152,2.336,1153,2.538,1154,2.653,1155,2.653,1156,2.653,1157,2.653,1158,2.538,1159,2.653,1160,2.083,1161,2.299,1162,2.647,1163,2.336,1164,2.433,1165,2.433,1166,2.246,1167,2.161,1168,2.161,1169,2.246]],["title/coverage.html",[2660,4.896]],["body/coverage.html",[0,0.087,1,0.514,9,0.069,10,2.667,26,1.2,36,1.245,44,0.013,46,0.108,77,2.224,79,1.947,82,2.455,103,1.135,177,2.31,185,0.514,187,0.395,188,0.777,191,0.514,193,1.083,195,0.514,197,0.514,199,0.818,200,0.514,201,0.74,203,0.514,204,0.497,205,0.497,207,0.497,208,0.497,209,0.241,210,0.514,211,0.497,213,0.514,214,0.514,216,0.497,218,0.514,219,0.497,221,0.514,223,1.083,224,0.514,225,0.514,226,0.514,228,0.497,230,0.514,232,0.818,233,0.497,235,0.451,236,0.514,237,0.497,239,0.69,240,0.497,241,0.497,243,0.514,244,0.791,246,0.514,247,0.514,248,0.172,249,0.818,250,0.514,251,0.818,252,0.514,254,0.818,255,0.497,257,0.497,258,0.514,260,0.514,262,0.514,264,0.818,267,0.004,268,0.007,269,0.004,308,1.999,333,2.224,336,2.224,338,2.224,340,2.224,342,3.466,345,3.088,347,2.9,349,3.088,351,2.224,353,3.088,355,3.088,357,3.088,359,2.224,369,2.667,370,2.414,371,2.615,392,0.833,393,0.887,396,1.839,397,1.745,405,3.25,406,2.667,407,2.414,408,3.377,413,1.839,422,1.947,507,1.041,508,1.947,510,4.088,511,3.613,520,2.004,522,1.585,523,1.517,531,1.947,555,0.781,661,1.947,674,1.947,675,2.667,676,2.414,696,3.199,697,1.454,731,3.959,746,1.839,747,1.839,748,2.9,785,4.748,801,1.661,819,2.414,820,2.667,821,2.667,822,4.088,825,2.224,831,1.517,832,1.585,843,1.585,877,2.667,900,3.595,905,0.978,975,1.839,976,4.106,982,1.839,983,1.517,984,1.839,987,0.947,988,1.011,989,1.011,992,1.745,1055,1.839,1080,1.839,1087,1.839,1125,1.245,1126,3.56,1134,1.396,1135,1.342,1136,1.396,1160,2.625,1163,1.396,1170,3.313,1184,2.073,1203,3.959,1286,4.296,1306,2.414,1398,2.414,1446,2.667,1447,2.414,1451,2.667,1452,3.595,1516,2.414,1521,2.166,1540,3.595,1600,2.414,1601,4.76,1602,4.76,1624,1.947,1625,1.947,1652,2.414,1654,2.414,1655,2.414,1656,2.414,1657,2.667,1698,3.959,1699,3.69,1794,2.667,1795,2.414,1798,2.667,1799,2.667,1800,2.414,1810,3.595,1884,7.496,1921,3.595,1971,3.595,1972,3.313,2024,3.959,2089,2.414,2090,2.667,2104,2.667,2105,2.414,2140,2.667,2159,2.667,2161,2.667,2162,2.414,2163,2.667,2164,2.414,2173,2.224,2174,2.667,2202,2.667,2316,2.224,2317,2.667,2403,2.667,2404,2.414,2524,2.667,2660,2.667,2661,3.052,2662,3.052,2663,5.433,2664,3.052,2665,6.992,2666,6.75,2667,7.585,2668,4.547,2669,6.992,2670,6.438,2671,4.547,2672,6.02,2673,6.02,2674,7.419,2675,7.419,2676,2.667,2677,8.572,2678,2.667,2679,2.667,2680,2.667,2681,2.667,2682,2.667,2683,2.667,2684,2.667,2685,2.667,2686,2.667,2687,2.667,2688,2.667,2689,2.667,2690,2.667,2691,2.667,2692,2.667,2693,2.667,2694,2.667,2695,2.667,2696,2.667,2697,2.667,2698,2.667,2699,2.667,2700,2.667,2701,2.667,2702,2.667,2703,2.667,2704,2.667,2705,2.667,2706,2.667,2707,2.667,2708,3.052,2709,2.667,2710,2.667,2711,5.433,2712,3.052,2713,3.052,2714,3.052,2715,3.052,2716,2.667,2717,3.052,2718,2.414,2719,3.052,2720,3.973,2721,4.547,2722,2.667,2723,3.052,2724,3.052,2725,3.052,2726,3.052,2727,4.547,2728,4.547,2729,3.052,2730,3.973,2731,4.547,2732,3.052,2733,3.052,2734,3.052,2735,3.052,2736,3.052,2737,3.052,2738,3.052,2739,3.052,2740,2.667,2741,2.667,2742,3.052,2743,3.052]],["title/dependencies.html",[273,2.966,2744,3.401]],["body/dependencies.html",[44,0.013,70,0.476,71,3.158,76,2.795,267,0.009,268,0.011,269,0.009,273,3.829,294,5.866,295,5.038,306,5.554,307,5.554,311,4.054,312,4.054,427,4.316,753,3.458,1297,4.631,1423,5.026,1770,5.554,2745,8.527,2746,6.356,2747,7.418,2748,6.356,2749,6.356,2750,6.356,2751,6.356,2752,6.356,2753,6.356,2754,6.356,2755,6.356,2756,6.356,2757,6.356]],["title/miscellaneous/enumerations.html",[2758,2.478,2759,4.302]],["body/miscellaneous/enumerations.html",[19,0.219,44,0.011,64,3.206,103,1.179,139,2.714,187,0.536,188,0.739,209,0.487,212,0.668,215,0.633,244,1.075,267,0.009,268,0.011,269,0.009,347,4.651,371,2.57,389,4.651,396,3.719,397,3.528,405,2.612,408,3.206,423,2.823,464,5.394,492,2.94,671,2.823,696,3.067,827,3.086,1059,3.359,1061,3.206,1074,2.262,1126,2.94,1133,2.823,1134,2.823,1135,2.714,1137,3.474,1138,2.94,1140,2.94,1141,3.067,1160,3.165,1166,3.206,1167,2.612,1168,2.612,1169,2.714,1170,5.314,1197,5.766,1200,6.372,1231,4.881,1959,4.192,2020,5.314,2021,4.952,2022,5.314,2758,4.498,2759,5.394,2760,6.173,2761,7.761,2762,6.372,2763,6.372]],["title/index.html",[19,0.121,2764,3.401,2765,2.972]],["body/index.html",[0,0.08,4,0.14,13,1.117,44,0.011,45,0.816,143,4.909,154,4.524,235,0.465,267,0.009,268,0.011,269,0.009,288,3.378,514,4.216,527,2.056,555,1.59,658,3.636,872,5.425,1303,5.425,1556,3.96,1681,5.425,1682,5.425,2213,5.425,2549,5.425,2551,5.425,2766,6.209,2767,7.317,2768,6.209,2769,6.799,2770,7.78,2771,6.209,2772,6.209,2773,7.78,2774,7.161,2775,5.425,2776,6.209,2777,6.209,2778,6.209,2779,5.425,2780,6.209,2781,6.209,2782,7.78,2783,6.209,2784,8.195,2785,6.209,2786,6.209,2787,6.209,2788,6.209,2789,6.209,2790,5.425,2791,7.78,2792,6.209,2793,4.909,2794,6.209,2795,6.209,2796,6.209]],["title/modules.html",[272,3.203]],["body/modules.html",[44,0.011,267,0.009,268,0.011,269,0.009,271,4.802,272,3.767,282,4.204,283,4.476,284,3.971,285,4.204,295,5.56,1714,7.155,2797,8.188,2798,8.322,2799,6.591,2800,6.591]],["title/overview.html",[2793,4.431]],["body/overview.html",[1,1.293,2,0.733,44,0.013,180,0.685,185,1.293,191,1.293,195,1.293,197,1.293,200,1.093,203,1.093,204,1.057,205,1.057,207,1.057,208,1.25,210,1.293,211,1.25,213,1.293,214,1.293,216,1.25,218,1.293,219,1.25,221,1.293,224,1.293,225,1.293,226,1.293,228,1.057,230,1.093,233,1.25,236,1.293,237,1.25,240,1.057,241,1.25,243,1.293,246,1.293,247,1.293,250,1.293,252,1.293,255,1.25,257,1.057,258,1.093,260,1.293,262,1.293,267,0.006,268,0.008,269,0.006,270,2.188,271,5.978,272,2.407,273,2.538,274,2.86,275,2.86,276,2.86,277,2.686,278,3.68,279,3.68,280,3.68,281,3.68,282,4.443,283,5.677,284,5.225,285,5.587,286,3.884,287,2.86,288,2.292,331,1.926,509,1.265,799,2.686,894,2.093,2032,3.33,2152,3.68,2153,3.68,2485,3.68,2486,3.68,2487,3.68,2507,3.68,2509,3.68,2510,3.68,2718,3.33,2793,3.33,2801,4.212,2802,4.212]],["title/routes.html",[331,2.563]],["body/routes.html",[44,0.011,267,0.01,268,0.011,269,0.01,331,3.106]],["title/miscellaneous/variables.html",[2758,2.478,2803,4.302]],["body/miscellaneous/variables.html",[19,0.132,26,0.928,44,0.013,46,0.301,59,1.57,60,1.675,61,1.72,62,0.593,66,3.66,77,2.72,79,2.381,82,0.963,103,0.359,107,0.266,112,1.436,117,1.855,121,1.226,127,0.893,175,1.585,176,2.484,177,2.135,178,1.038,179,2.509,187,0.683,188,0.607,209,0.415,215,0.683,220,0.84,235,0.574,238,0.806,248,0.296,256,0.916,267,0.003,268,0.005,269,0.003,288,3.315,308,2.313,392,2.089,417,2.906,476,2.069,482,3.648,515,1.285,523,1.173,524,1.278,551,1.506,555,2.015,572,2.186,588,1.82,609,1.173,612,1.349,614,1.349,616,1.124,668,1.173,671,1.08,673,1.124,696,1.173,799,2.381,800,1.867,801,1.285,825,2.72,880,1.996,905,0.756,979,0.896,980,0.963,981,0.963,982,2.249,983,2.3,984,2.249,987,1.889,988,2.017,989,0.782,1034,1.928,1042,0.896,1053,2.381,1068,3.011,1069,1.285,1070,3.011,1072,3.208,1074,2.807,1077,3.123,1081,2.145,1083,2.145,1093,2.424,1095,2.697,1097,2.697,1123,3.67,1124,4.045,1134,2.117,1135,2.313,1142,2.902,1153,3.806,1160,1.887,1161,2.259,1162,1.887,1163,1.08,1164,1.124,1165,1.124,1167,0.999,1168,0.999,1169,1.038,1203,1.72,1286,3.66,1296,2.063,1306,3.66,1350,1.867,1397,2.951,1398,3.66,1399,2.063,1400,2.063,1452,1.867,1481,3.647,1484,6.056,1508,2.951,1516,2.951,1517,3.647,1518,3.373,1519,1.72,1520,1.72,1521,3.497,1522,2.72,1523,1.867,1524,1.867,1525,2.951,1526,1.867,1527,1.867,1528,3.66,1529,2.063,1530,4.597,1531,2.063,1532,2.063,1533,2.063,1534,2.063,1535,2.063,1536,2.063,1537,2.063,1538,2.063,1539,3.261,1601,1.867,1602,4.16,1620,1.867,1624,2.381,1625,2.381,1652,1.867,1653,2.063,1654,2.951,1655,2.951,1656,2.951,1715,1.603,1768,6.634,1772,5.514,1773,3.261,1774,5.323,1775,4.045,1788,2.063,1898,2.063,2023,1.72,2032,4.16,2106,5.575,2231,1.867,2236,2.951,2239,1.867,2241,2.951,2261,2.063,2378,5.323,2380,5.323,2422,4.045,2428,4.045,2674,2.063,2675,2.063,2676,4.597,2678,5.007,2679,5.007,2680,4.045,2681,4.597,2682,3.261,2683,4.045,2684,4.045,2685,4.045,2686,4.045,2687,4.045,2688,4.045,2689,4.045,2690,4.045,2691,4.045,2692,4.045,2693,4.045,2694,4.045,2695,4.045,2696,4.045,2697,4.045,2698,4.045,2699,4.045,2700,4.045,2701,4.045,2702,4.597,2703,5.007,2704,4.597,2705,3.261,2706,5.007,2707,4.597,2709,2.063,2710,3.261,2716,6.946,2718,1.867,2720,5.323,2722,6.836,2730,4.045,2740,2.063,2741,2.063,2758,1.72,2762,3.261,2763,3.261,2765,2.063,2769,2.063,2774,2.063,2775,2.063,2779,2.063,2790,4.045,2803,2.063,2804,8.316,2805,4.629,2806,2.361,2807,2.361,2808,2.361,2809,2.361,2810,3.732,2811,7.658,2812,4.629,2813,7.658,2814,5.73,2815,7.658,2816,2.361,2817,5.26,2818,4.629,2819,3.732,2820,3.732,2821,5.26,2822,5.73,2823,5.26,2824,5.73,2825,2.361,2826,2.361,2827,2.361,2828,2.361,2829,2.361,2830,2.361,2831,3.732,2832,4.629,2833,3.732,2834,3.732,2835,3.732,2836,2.361,2837,2.361,2838,2.361,2839,2.361,2840,2.361,2841,7.235,2842,5.26,2843,6.38,2844,6.092,2845,5.26,2846,2.361,2847,2.361]]],"invertedIndex":[["",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CardElementComponent.html":{},"interfaces/CheckTokenResponse.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"interfaces/Credentials.html":{},"components/DashboardScreenComponent.html":{},"components/DetailScreenComponent.html":{},"interfaces/ESPConfiguration.html":{},"injectables/ESPConfigurationAPIService.html":{},"components/ForecastDetailViewComponent.html":{},"interfaces/ForecastResponse.html":{},"components/ForecastTileViewComponent.html":{},"interfaces/GraphDataSet.html":{},"components/HistoryDetailViewComponent.html":{},"injectables/HistoryTileService.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"interfaces/ImageModel.html":{},"injectables/ImageService.html":{},"components/IndoorDetailViewComponent.html":{},"interfaces/IndoorRoomData.html":{},"interfaces/IndoorRoomResponse.html":{},"components/IndoorTileViewComponent.html":{},"injectables/LocalStorageService.html":{},"interfaces/LoginResponse.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"interfaces/OutdoorWeatherData.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"interfaces/OutdoorWeatherResponse.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"interfaces/PollenData.html":{},"components/PollenListElementComponent.html":{},"interfaces/PollenResponse.html":{},"components/PollenTagElementComponent.html":{},"interfaces/PollenType.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"modules/ScreensModule.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"injectables/SpeechService.html":{},"injectables/TextService.html":{},"interfaces/Tile.html":{},"interfaces/TileArrays.html":{},"injectables/TileService.html":{},"components/TtsPlayerElementComponent.html":{},"modules/UiElementsModule.html":{},"interfaces/UserContext.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{},"interfaces/UserIdentifikation.html":{},"modules/ViewsModule.html":{},"injectables/WeatherAPIService.html":{},"interfaces/WeatherData.html":{},"injectables/WeatherDataService.html":{},"interfaces/WeatherForecastData.html":{},"interfaces/WeatherHistoryByDayData.html":{},"interfaces/WeatherHistoryData.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":177,"title":{},"body":{"components/AppComponent.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/DashboardScreenComponent.html":{},"components/HistoryDetailViewComponent.html":{},"injectables/HistoryTileService.html":{},"components/HumidityTileViewComponent.html":{},"injectables/ImageService.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"injectables/TileService.html":{},"components/TtsPlayerElementComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["0.03em",{"_index":1908,"title":{},"body":{"components/OutdoorWeatherViewComponent.html":{}}}],["0.05em",{"_index":446,"title":{},"body":{"components/BackButtonElementComponent.html":{},"components/MenuButtonElementComponent.html":{}}}],["0.11.3",{"_index":2757,"title":{},"body":{"dependencies.html":{}}}],["0.2",{"_index":1898,"title":{},"body":{"components/OutdoorWeatherViewComponent.html":{},"miscellaneous/variables.html":{}}}],["0.2px",{"_index":1791,"title":{},"body":{"components/MenuElementComponent.html":{}}}],["0.2s",{"_index":2134,"title":{},"body":{"components/ProgressChartElementComponent.html":{},"components/SliderElementComponent.html":{}}}],["0.3s",{"_index":501,"title":{},"body":{"components/CardElementComponent.html":{}}}],["0.5",{"_index":2842,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.5em",{"_index":1285,"title":{},"body":{"components/HistoryDetailViewComponent.html":{},"components/MenuElementComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PollenTagElementComponent.html":{}}}],["0.5pt",{"_index":1973,"title":{},"body":{"components/PollenListElementComponent.html":{}}}],["0.5px",{"_index":1696,"title":{},"body":{"components/LoginViewComponent.html":{}}}],["0.7em",{"_index":725,"title":{},"body":{"components/CheckboxSwitcherElementComponent.html":{}}}],["0/1",{"_index":2677,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":2671,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":2664,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":2663,"title":{},"body":{"coverage.html":{}}}],["0/17",{"_index":2672,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":2708,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":2673,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":2665,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":2666,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":2670,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":2667,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":2669,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":2668,"title":{},"body":{"coverage.html":{}}}],["000000",{"_index":2129,"title":{},"body":{"components/ProgressChartElementComponent.html":{},"components/SliderElementComponent.html":{}}}],["000101",{"_index":2132,"title":{},"body":{"components/ProgressChartElementComponent.html":{},"components/SliderElementComponent.html":{}}}],["07:24:00",{"_index":2818,"title":{},"body":{"miscellaneous/variables.html":{}}}],["08:24:00",{"_index":2821,"title":{},"body":{"miscellaneous/variables.html":{}}}],["09:24:00",{"_index":2823,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0d0d0d",{"_index":2130,"title":{},"body":{"components/ProgressChartElementComponent.html":{},"components/SliderElementComponent.html":{}}}],["0ms",{"_index":2481,"title":{},"body":{"components/TtsPlayerElementComponent.html":{}}}],["0px",{"_index":2128,"title":{},"body":{"components/ProgressChartElementComponent.html":{},"components/SliderElementComponent.html":{}}}],["1",{"_index":1161,"title":{},"body":{"interfaces/GraphDataSet.html":{},"components/HistoryDetailViewComponent.html":{},"injectables/HistoryTileService.html":{},"interfaces/IndoorRoomData.html":{},"components/MenuElementComponent.html":{},"interfaces/OutdoorWeatherData.html":{},"components/OutdoorWeatherViewComponent.html":{},"interfaces/PollenData.html":{},"components/PollenTagElementComponent.html":{},"injectables/SpeechService.html":{},"injectables/TextService.html":{},"interfaces/Tile.html":{},"interfaces/TileArrays.html":{},"injectables/TileService.html":{},"components/TtsPlayerElementComponent.html":{},"interfaces/WeatherData.html":{},"interfaces/WeatherForecastData.html":{},"interfaces/WeatherHistoryByDayData.html":{},"interfaces/WeatherHistoryData.html":{},"miscellaneous/variables.html":{}}}],["1)/7",{"_index":1375,"title":{},"body":{"injectables/HistoryTileService.html":{}}}],["1.0em",{"_index":448,"title":{},"body":{"components/BackButtonElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{}}}],["1.4em",{"_index":2424,"title":{},"body":{"components/TtsPlayerElementComponent.html":{}}}],["1.5em",{"_index":2102,"title":{},"body":{"components/PollenflugSmallTileComponent.html":{},"components/TtsPlayerElementComponent.html":{}}}],["1.6em",{"_index":1445,"title":{},"body":{"components/HistoryTileViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{}}}],["1.7em",{"_index":441,"title":{},"body":{"components/BackButtonElementComponent.html":{},"components/MenuBarElementComponent.html":{},"components/PollenTagElementComponent.html":{}}}],["1/1",{"_index":2727,"title":{},"body":{"coverage.html":{}}}],["1/10",{"_index":2724,"title":{},"body":{"coverage.html":{}}}],["1/11",{"_index":2713,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":2715,"title":{},"body":{"coverage.html":{}}}],["1/4",{"_index":2711,"title":{},"body":{"coverage.html":{}}}],["1/5",{"_index":2717,"title":{},"body":{"coverage.html":{}}}],["1/7",{"_index":2721,"title":{},"body":{"coverage.html":{}}}],["1/8",{"_index":2723,"title":{},"body":{"coverage.html":{}}}],["1/9",{"_index":2719,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":801,"title":{},"body":{"components/ConfigurationTileViewComponent.html":{},"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"components/OutdoorWeatherViewComponent.html":{},"interfaces/PollenResponse.html":{},"injectables/WeatherAPIService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["10.0em",{"_index":1692,"title":{},"body":{"components/LoginViewComponent.html":{}}}],["10.3em",{"_index":719,"title":{},"body":{"components/CheckboxSwitcherElementComponent.html":{}}}],["100",{"_index":1521,"title":{},"body":{"injectables/ImageService.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["1000",{"_index":1911,"title":{},"body":{"components/OutdoorWeatherViewComponent.html":{},"components/TtsPlayerElementComponent.html":{}}}],["1000px",{"_index":481,"title":{},"body":{"components/CardElementComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{}}}],["100vh",{"_index":172,"title":{},"body":{"components/AppComponent.html":{},"components/MenuElementComponent.html":{}}}],["100vw",{"_index":1787,"title":{},"body":{"components/MenuElementComponent.html":{}}}],["102",{"_index":1788,"title":{},"body":{"components/MenuElementComponent.html":{},"miscellaneous/variables.html":{}}}],["103",{"_index":1789,"title":{},"body":{"components/MenuElementComponent.html":{}}}],["106px",{"_index":2473,"title":{},"body":{"components/TtsPlayerElementComponent.html":{}}}],["10:24:00",{"_index":2814,"title":{},"body":{"miscellaneous/variables.html":{}}}],["10:34:00",{"_index":2816,"title":{},"body":{"miscellaneous/variables.html":{}}}],["10px",{"_index":440,"title":{},"body":{"components/BackButtonElementComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/SliderElementComponent.html":{}}}],["11",{"_index":2718,"title":{},"body":{"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["11.0.1",{"_index":2752,"title":{},"body":{"dependencies.html":{}}}],["11.2.10",{"_index":2745,"title":{},"body":{"dependencies.html":{}}}],["11.2.11",{"_index":2747,"title":{},"body":{"dependencies.html":{}}}],["11.2.9",{"_index":2771,"title":{},"body":{"index.html":{}}}],["113px",{"_index":2475,"title":{},"body":{"components/TtsPlayerElementComponent.html":{}}}],["11em",{"_index":1968,"title":{},"body":{"components/PersonalizationSettingsViewComponent.html":{}}}],["12",{"_index":2722,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["120px",{"_index":1916,"title":{},"body":{"components/OutdoorWeatherViewComponent.html":{},"components/TtsPlayerElementComponent.html":{}}}],["127px",{"_index":2478,"title":{},"body":{"components/TtsPlayerElementComponent.html":{}}}],["12em",{"_index":718,"title":{},"body":{"components/CheckboxSwitcherElementComponent.html":{}}}],["13",{"_index":2820,"title":{},"body":{"miscellaneous/variables.html":{}}}],["134px",{"_index":2480,"title":{},"body":{"components/TtsPlayerElementComponent.html":{}}}],["14",{"_index":2720,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["15",{"_index":2032,"title":{},"body":{"components/PollenflugDetailViewComponent.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["15359845524",{"_index":2831,"title":{},"body":{"miscellaneous/variables.html":{}}}],["15px",{"_index":2440,"title":{},"body":{"components/TtsPlayerElementComponent.html":{}}}],["16",{"_index":2819,"title":{},"body":{"miscellaneous/variables.html":{}}}],["16px",{"_index":2121,"title":{},"body":{"components/ProgressChartElementComponent.html":{},"components/SliderElementComponent.html":{}}}],["17",{"_index":2817,"title":{},"body":{"miscellaneous/variables.html":{}}}],["17px",{"_index":1738,"title":{},"body":{"components/MenuButtonElementComponent.html":{}}}],["18",{"_index":2824,"title":{},"body":{"miscellaneous/variables.html":{}}}],["19",{"_index":2812,"title":{},"body":{"miscellaneous/variables.html":{}}}],["190px",{"_index":2425,"title":{},"body":{"components/TtsPlayerElementComponent.html":{}}}],["1em",{"_index":2002,"title":{},"body":{"components/PollenTagElementComponent.html":{},"components/PollenflugSmallTileComponent.html":{}}}],["1px",{"_index":470,"title":{},"body":{"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/TtsPlayerElementComponent.html":{}}}],["2",{"_index":476,"title":{},"body":{"components/CardElementComponent.html":{},"components/ConfigurationTileViewComponent.html":{},"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"components/LoginViewComponent.html":{},"components/MenuElementComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"interfaces/OutdoorWeatherResponse.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"interfaces/PollenResponse.html":{},"components/PollenTagElementComponent.html":{},"components/RegistrationViewComponent.html":{},"injectables/TextService.html":{},"injectables/TileService.html":{},"injectables/WeatherAPIService.html":{},"miscellaneous/variables.html":{}}}],["2.0.0",{"_index":2755,"title":{},"body":{"dependencies.html":{}}}],["2.2em",{"_index":1790,"title":{},"body":{"components/MenuElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugSmallTileComponent.html":{}}}],["2.5em",{"_index":730,"title":{},"body":{"components/CheckboxSwitcherElementComponent.html":{},"components/MenuButtonElementComponent.html":{}}}],["2.6em",{"_index":1713,"title":{},"body":{"components/MenuBarElementComponent.html":{}}}],["2/3",{"_index":2731,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":2716,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["200",{"_index":1910,"title":{},"body":{"components/OutdoorWeatherViewComponent.html":{}}}],["2021",{"_index":2813,"title":{},"body":{"miscellaneous/variables.html":{}}}],["20px",{"_index":782,"title":{},"body":{"components/ConfigurationTilePopUpDialogView.html":{},"components/ForecastTileViewComponent.html":{},"components/TtsPlayerElementComponent.html":{}}}],["22",{"_index":2832,"title":{},"body":{"miscellaneous/variables.html":{}}}],["22px",{"_index":2443,"title":{},"body":{"components/TtsPlayerElementComponent.html":{}}}],["23",{"_index":2802,"title":{},"body":{"overview.html":{}}}],["240",{"_index":1892,"title":{},"body":{"components/OutdoorWeatherViewComponent.html":{}}}],["25",{"_index":785,"title":{},"body":{"components/ConfigurationTilePopUpDialogView.html":{},"coverage.html":{}}}],["25px",{"_index":2131,"title":{},"body":{"components/ProgressChartElementComponent.html":{},"components/SliderElementComponent.html":{}}}],["28px",{"_index":2433,"title":{},"body":{"components/TtsPlayerElementComponent.html":{}}}],["29px",{"_index":2446,"title":{},"body":{"components/TtsPlayerElementComponent.html":{}}}],["2em",{"_index":2001,"title":{},"body":{"components/PollenTagElementComponent.html":{}}}],["2px",{"_index":1809,"title":{},"body":{"components/OpenAPELoginTileViewComponent.html":{}}}],["3",{"_index":1162,"title":{},"body":{"interfaces/GraphDataSet.html":{},"interfaces/IndoorRoomData.html":{},"components/LoginViewComponent.html":{},"interfaces/OutdoorWeatherData.html":{},"components/OutdoorWeatherViewComponent.html":{},"interfaces/PollenData.html":{},"components/PollenTagElementComponent.html":{},"injectables/TextService.html":{},"interfaces/Tile.html":{},"interfaces/TileArrays.html":{},"injectables/TileService.html":{},"interfaces/WeatherData.html":{},"interfaces/WeatherForecastData.html":{},"interfaces/WeatherHistoryByDayData.html":{},"interfaces/WeatherHistoryData.html":{},"miscellaneous/variables.html":{}}}],["3.2em",{"_index":2000,"title":{},"body":{"components/PollenTagElementComponent.html":{}}}],["3.3.0",{"_index":2751,"title":{},"body":{"dependencies.html":{}}}],["3/4",{"_index":2726,"title":{},"body":{"coverage.html":{}}}],["3/5",{"_index":2733,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":321,"title":{},"body":{"modules/AppModule.html":{}}}],["300px",{"_index":758,"title":{},"body":{"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{}}}],["30px",{"_index":2139,"title":{},"body":{"components/ProgressChartElementComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{}}}],["328959845524",{"_index":2833,"title":{},"body":{"miscellaneous/variables.html":{}}}],["32px",{"_index":2120,"title":{},"body":{"components/ProgressChartElementComponent.html":{},"components/SliderElementComponent.html":{}}}],["33",{"_index":2714,"title":{},"body":{"coverage.html":{}}}],["35",{"_index":2432,"title":{},"body":{"components/TtsPlayerElementComponent.html":{}}}],["36",{"_index":2738,"title":{},"body":{"coverage.html":{}}}],["36px",{"_index":2449,"title":{},"body":{"components/TtsPlayerElementComponent.html":{}}}],["39",{"_index":2801,"title":{},"body":{"overview.html":{}}}],["39px",{"_index":2136,"title":{},"body":{"components/ProgressChartElementComponent.html":{},"components/SliderElementComponent.html":{}}}],["3em",{"_index":2101,"title":{},"body":{"components/PollenflugSmallTileComponent.html":{}}}],["3px",{"_index":2430,"title":{},"body":{"components/TtsPlayerElementComponent.html":{}}}],["4",{"_index":482,"title":{},"body":{"components/CardElementComponent.html":{},"interfaces/ForecastResponse.html":{},"injectables/HistoryTileService.html":{},"interfaces/IndoorRoomResponse.html":{},"components/LoginViewComponent.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"components/PollenTagElementComponent.html":{},"injectables/TextService.html":{},"injectables/TileService.html":{},"injectables/WeatherAPIService.html":{},"miscellaneous/variables.html":{}}}],["4.0em",{"_index":1597,"title":{},"body":{"components/IndoorTileViewComponent.html":{}}}],["4/11",{"_index":2739,"title":{},"body":{"coverage.html":{}}}],["4/5",{"_index":2729,"title":{},"body":{"coverage.html":{}}}],["40",{"_index":2822,"title":{},"body":{"miscellaneous/variables.html":{}}}],["400ms",{"_index":2447,"title":{},"body":{"components/TtsPlayerElementComponent.html":{}}}],["407ms",{"_index":2441,"title":{},"body":{"components/TtsPlayerElementComponent.html":{}}}],["40px",{"_index":2429,"title":{},"body":{"components/TtsPlayerElementComponent.html":{}}}],["419ms",{"_index":2455,"title":{},"body":{"components/TtsPlayerElementComponent.html":{}}}],["427ms",{"_index":2450,"title":{},"body":{"components/TtsPlayerElementComponent.html":{}}}],["433ms",{"_index":2438,"title":{},"body":{"components/TtsPlayerElementComponent.html":{}}}],["43px",{"_index":2452,"title":{},"body":{"components/TtsPlayerElementComponent.html":{}}}],["441ms",{"_index":2453,"title":{},"body":{"components/TtsPlayerElementComponent.html":{}}}],["442ms",{"_index":2461,"title":{},"body":{"components/TtsPlayerElementComponent.html":{}}}],["4480db",{"_index":781,"title":{},"body":{"components/ConfigurationTilePopUpDialogView.html":{}}}],["458ms",{"_index":2444,"title":{},"body":{"components/TtsPlayerElementComponent.html":{}}}],["474ms",{"_index":2436,"title":{},"body":{"components/TtsPlayerElementComponent.html":{}}}],["487ms",{"_index":2458,"title":{},"body":{"components/TtsPlayerElementComponent.html":{}}}],["5",{"_index":799,"title":{},"body":{"components/ConfigurationTileViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/PollenTagElementComponent.html":{},"injectables/TextService.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["5.0em",{"_index":1907,"title":{},"body":{"components/OutdoorWeatherViewComponent.html":{}}}],["50",{"_index":2106,"title":{},"body":{"components/ProgressChartElementComponent.html":{},"miscellaneous/variables.html":{}}}],["50px",{"_index":1279,"title":{},"body":{"components/HistoryDetailViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{}}}],["55px",{"_index":2427,"title":{},"body":{"components/TtsPlayerElementComponent.html":{}}}],["57px",{"_index":2457,"title":{},"body":{"components/TtsPlayerElementComponent.html":{}}}],["5em",{"_index":1974,"title":{},"body":{"components/PollenListElementComponent.html":{}}}],["5px",{"_index":2107,"title":{},"body":{"components/ProgressChartElementComponent.html":{},"components/TtsPlayerElementComponent.html":{}}}],["6",{"_index":2826,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6.6.0",{"_index":2753,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":2732,"title":{},"body":{"coverage.html":{}}}],["60px",{"_index":1122,"title":{},"body":{"components/ForecastTileViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{}}}],["62",{"_index":2115,"title":{},"body":{"components/ProgressChartElementComponent.html":{}}}],["62.5",{"_index":2023,"title":{},"body":{"interfaces/PollenType.html":{},"interfaces/UserContext.html":{},"interfaces/UserIdentifikation.html":{},"miscellaneous/variables.html":{}}}],["64px",{"_index":2460,"title":{},"body":{"components/TtsPlayerElementComponent.html":{}}}],["66",{"_index":2730,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["690px",{"_index":1727,"title":{},"body":{"components/MenuBarElementComponent.html":{}}}],["7",{"_index":800,"title":{},"body":{"components/ConfigurationTileViewComponent.html":{},"injectables/HistoryTileService.html":{},"miscellaneous/variables.html":{}}}],["70",{"_index":2378,"title":{},"body":{"injectables/TileService.html":{},"miscellaneous/variables.html":{}}}],["700",{"_index":443,"title":{},"body":{"components/BackButtonElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{}}}],["70px",{"_index":1280,"title":{},"body":{"components/HistoryDetailViewComponent.html":{}}}],["71549",{"_index":2815,"title":{},"body":{"miscellaneous/variables.html":{}}}],["71px",{"_index":2463,"title":{},"body":{"components/TtsPlayerElementComponent.html":{}}}],["75",{"_index":2725,"title":{},"body":{"coverage.html":{}}}],["769px",{"_index":1913,"title":{},"body":{"components/OutdoorWeatherViewComponent.html":{}}}],["770px",{"_index":113,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardScreenComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{}}}],["78",{"_index":2170,"title":{},"body":{"components/SliderElementComponent.html":{}}}],["78px",{"_index":2465,"title":{},"body":{"components/TtsPlayerElementComponent.html":{}}}],["7em",{"_index":1121,"title":{},"body":{"components/ForecastTileViewComponent.html":{}}}],["8",{"_index":1053,"title":{},"body":{"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/WeatherAPIService.html":{},"miscellaneous/variables.html":{}}}],["8/10",{"_index":2737,"title":{},"body":{"coverage.html":{}}}],["8/9",{"_index":2735,"title":{},"body":{"coverage.html":{}}}],["80",{"_index":2728,"title":{},"body":{"coverage.html":{}}}],["800ms",{"_index":2482,"title":{},"body":{"components/TtsPlayerElementComponent.html":{}}}],["85px",{"_index":2467,"title":{},"body":{"components/TtsPlayerElementComponent.html":{}}}],["86400000",{"_index":1374,"title":{},"body":{"injectables/HistoryTileService.html":{}}}],["88",{"_index":2734,"title":{},"body":{"coverage.html":{}}}],["8px",{"_index":2119,"title":{},"body":{"components/ProgressChartElementComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{}}}],["9",{"_index":2712,"title":{},"body":{"coverage.html":{}}}],["92px",{"_index":2469,"title":{},"body":{"components/TtsPlayerElementComponent.html":{}}}],["99",{"_index":1069,"title":{},"body":{"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"interfaces/PollenType.html":{},"interfaces/UserContext.html":{},"interfaces/UserIdentifikation.html":{},"injectables/WeatherAPIService.html":{},"miscellaneous/variables.html":{}}}],["99px",{"_index":2471,"title":{},"body":{"components/TtsPlayerElementComponent.html":{}}}],["_apparenttemperature",{"_index":377,"title":{},"body":{"components/ApparentTemperatureTileViewComponent.html":{}}}],["_dashboardtiles",{"_index":2569,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["_dataset",{"_index":1401,"title":{},"body":{"components/HistoryTileViewComponent.html":{}}}],["_forecast",{"_index":1107,"title":{},"body":{"components/ForecastTileViewComponent.html":{}}}],["_forecastdata",{"_index":2590,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["_graphtype",{"_index":1402,"title":{},"body":{"components/HistoryTileViewComponent.html":{}}}],["_historydata",{"_index":2594,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["_humidity",{"_index":1448,"title":{},"body":{"components/HumidityTileViewComponent.html":{}}}],["_index",{"_index":1171,"title":{},"body":{"components/HistoryDetailViewComponent.html":{}}}],["_indoorroom",{"_index":1589,"title":{},"body":{"components/IndoorTileViewComponent.html":{}}}],["_indoorroom.airquality",{"_index":1592,"title":{},"body":{"components/IndoorTileViewComponent.html":{}}}],["_indoorroom.humidity",{"_index":1595,"title":{},"body":{"components/IndoorTileViewComponent.html":{}}}],["_indoorroom.temperature}}°c",{"_index":1593,"title":{},"body":{"components/IndoorTileViewComponent.html":{}}}],["_indoorroomsdata",{"_index":2585,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["_indoorroomtiles",{"_index":2576,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["_outdoorweatherdata",{"_index":2599,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["_pollen",{"_index":2093,"title":{},"body":{"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{}}}],["_pollendata",{"_index":2580,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["_pollentiles",{"_index":2572,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["_value",{"_index":1998,"title":{},"body":{"components/PollenTagElementComponent.html":{}}}],["_weatherhistory",{"_index":1208,"title":{},"body":{"components/HistoryDetailViewComponent.html":{}}}],["a.priority",{"_index":2401,"title":{},"body":{"injectables/TileService.html":{}}}],["a.timestamp.gettime",{"_index":1317,"title":{},"body":{"injectables/HistoryTileService.html":{}}}],["ab",{"_index":1277,"title":{},"body":{"components/HistoryDetailViewComponent.html":{}}}],["abbrechen",{"_index":774,"title":{},"body":{"components/ConfigurationTilePopUpDialogView.html":{}}}],["aber",{"_index":1828,"title":{},"body":{"components/OutdoorWeatherDetailViewComponent.html":{}}}],["abhängig",{"_index":946,"title":{},"body":{"components/ForecastDetailViewComponent.html":{}}}],["ableiten",{"_index":2068,"title":{},"body":{"components/PollenflugDetailViewComponent.html":{}}}],["abschließend",{"_index":1573,"title":{},"body":{"components/IndoorDetailViewComponent.html":{}}}],["abschätzung",{"_index":914,"title":{},"body":{"components/ForecastDetailViewComponent.html":{}}}],["absolute",{"_index":2428,"title":{},"body":{"components/TtsPlayerElementComponent.html":{},"miscellaneous/variables.html":{}}}],["accent",{"_index":727,"title":{},"body":{"components/CheckboxSwitcherElementComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/SliderElementComponent.html":{}}}],["access",{"_index":528,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/ESPConfiguration.html":{},"injectables/ESPConfigurationAPIService.html":{},"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"injectables/LocalStorageService.html":{},"interfaces/LoginResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{},"injectables/WeatherAPIService.html":{},"injectables/WeatherDataService.html":{}}}],["accessible",{"_index":2567,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["accessors",{"_index":382,"title":{},"body":{"components/ApparentTemperatureTileViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"injectables/LocalStorageService.html":{},"components/MenuElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{}}}],["accumulator",{"_index":1385,"title":{},"body":{"injectables/HistoryTileService.html":{}}}],["achtung",{"_index":2304,"title":{},"body":{"injectables/TextService.html":{}}}],["action",{"_index":2423,"title":{},"body":{"components/TtsPlayerElementComponent.html":{}}}],["actual_component",{"_index":266,"title":{},"body":{"components/AppComponent.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DetailScreenComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{}}}],["adaptive",{"_index":2636,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["add",{"_index":2337,"title":{},"body":{"injectables/TileService.html":{}}}],["addorreplacetileto(tilesarray",{"_index":2390,"title":{},"body":{"injectables/TileService.html":{}}}],["addtileto(tilesarray",{"_index":2387,"title":{},"body":{"injectables/TileService.html":{}}}],["adjust",{"_index":2283,"title":{},"body":{"injectables/TextService.html":{}}}],["afterward",{"_index":2559,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["afterwards",{"_index":2614,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["airquality",{"_index":1083,"title":{},"body":{"interfaces/ForecastResponse.html":{},"interfaces/GraphDataSet.html":{},"interfaces/IndoorRoomData.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherData.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenData.html":{},"interfaces/PollenResponse.html":{},"interfaces/Tile.html":{},"interfaces/TileArrays.html":{},"injectables/WeatherAPIService.html":{},"interfaces/WeatherData.html":{},"interfaces/WeatherForecastData.html":{},"interfaces/WeatherHistoryByDayData.html":{},"interfaces/WeatherHistoryData.html":{},"miscellaneous/variables.html":{}}}],["aktualisierte",{"_index":2082,"title":{},"body":{"components/PollenflugDetailViewComponent.html":{}}}],["aktuell",{"_index":2290,"title":{},"body":{"injectables/TextService.html":{}}}],["algorithm",{"_index":2382,"title":{},"body":{"injectables/TileService.html":{}}}],["align",{"_index":434,"title":{},"body":{"components/BackButtonElementComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/RegistrationViewComponent.html":{}}}],["allconfigs",{"_index":883,"title":{},"body":{"interfaces/ESPConfiguration.html":{},"injectables/ESPConfigurationAPIService.html":{}}}],["alle",{"_index":797,"title":{},"body":{"components/ConfigurationTileViewComponent.html":{}}}],["allergies/delete",{"_index":546,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/LoginResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{}}}],["allergies/save",{"_index":548,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/LoginResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{}}}],["allergischen",{"_index":2050,"title":{},"body":{"components/PollenflugDetailViewComponent.html":{}}}],["allergologen",{"_index":2055,"title":{},"body":{"components/PollenflugDetailViewComponent.html":{}}}],["alles",{"_index":910,"title":{},"body":{"components/ForecastDetailViewComponent.html":{}}}],["allowed",{"_index":1724,"title":{},"body":{"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/OutdoorWeatherViewComponent.html":{}}}],["allpollentypesurl",{"_index":543,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/LoginResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["almostdeath",{"_index":1987,"title":{},"body":{"components/PollenTagElementComponent.html":{}}}],["aloud",{"_index":2177,"title":{},"body":{"injectables/SpeechService.html":{},"injectables/TextService.html":{}}}],["als",{"_index":1843,"title":{},"body":{"components/OutdoorWeatherDetailViewComponent.html":{},"components/PollenflugDetailViewComponent.html":{}}}],["alternate",{"_index":2484,"title":{},"body":{"components/TtsPlayerElementComponent.html":{}}}],["altertum",{"_index":932,"title":{},"body":{"components/ForecastDetailViewComponent.html":{}}}],["ambrosia",{"_index":2676,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["angegeben",{"_index":1823,"title":{},"body":{"components/OutdoorWeatherDetailViewComponent.html":{}}}],["angel",{"_index":1996,"title":{},"body":{"components/PollenTagElementComponent.html":{}}}],["angemessener",{"_index":1829,"title":{},"body":{"components/OutdoorWeatherDetailViewComponent.html":{}}}],["angepasste",{"_index":1895,"title":{},"body":{"components/OutdoorWeatherViewComponent.html":{}}}],["angular",{"_index":2769,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["angular/animations",{"_index":1770,"title":{},"body":{"components/MenuElementComponent.html":{},"dependencies.html":{}}}],["angular/cdk",{"_index":2746,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk/layout",{"_index":84,"title":{},"body":{"components/AppComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/DashboardScreenComponent.html":{},"injectables/ImageService.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"modules/ScreensModule.html":{}}}],["angular/common",{"_index":427,"title":{},"body":{"components/BackButtonElementComponent.html":{},"modules/ScreensModule.html":{},"modules/UiElementsModule.html":{},"modules/ViewsModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":74,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"interfaces/CheckTokenResponse.html":{},"interfaces/ESPConfiguration.html":{},"injectables/ESPConfigurationAPIService.html":{},"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/LoginResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["angular/compiler",{"_index":2748,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":70,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CardElementComponent.html":{},"interfaces/CheckTokenResponse.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DetailScreenComponent.html":{},"interfaces/ESPConfiguration.html":{},"injectables/ESPConfigurationAPIService.html":{},"components/ForecastDetailViewComponent.html":{},"interfaces/ForecastResponse.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"injectables/HistoryTileService.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"injectables/ImageService.html":{},"components/IndoorDetailViewComponent.html":{},"interfaces/IndoorRoomResponse.html":{},"components/IndoorTileViewComponent.html":{},"injectables/LocalStorageService.html":{},"interfaces/LoginResponse.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"interfaces/OutdoorWeatherResponse.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenListElementComponent.html":{},"interfaces/PollenResponse.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"modules/ScreensModule.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"injectables/SpeechService.html":{},"injectables/TextService.html":{},"injectables/TileService.html":{},"components/TtsPlayerElementComponent.html":{},"modules/UiElementsModule.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{},"modules/ViewsModule.html":{},"injectables/WeatherAPIService.html":{},"injectables/WeatherDataService.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":753,"title":{},"body":{"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SliderElementComponent.html":{},"modules/UiElementsModule.html":{},"modules/ViewsModule.html":{},"dependencies.html":{}}}],["angular/material",{"_index":2749,"title":{},"body":{"dependencies.html":{}}}],["angular/material/button",{"_index":1206,"title":{},"body":{"components/HistoryDetailViewComponent.html":{}}}],["angular/material/dialog",{"_index":752,"title":{},"body":{"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"modules/ViewsModule.html":{}}}],["angular/platform",{"_index":294,"title":{},"body":{"modules/AppModule.html":{},"modules/ScreensModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":71,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/LoginViewComponent.html":{},"components/MenuElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/RegistrationViewComponent.html":{},"modules/ScreensModule.html":{},"modules/ViewsModule.html":{},"dependencies.html":{}}}],["angular/service",{"_index":306,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["animate",{"_index":1769,"title":{},"body":{"components/MenuElementComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/SliderElementComponent.html":{}}}],["animate('0.3s",{"_index":1773,"title":{},"body":{"components/MenuElementComponent.html":{},"miscellaneous/variables.html":{}}}],["animate('0.6s",{"_index":2845,"title":{},"body":{"miscellaneous/variables.html":{}}}],["animatechild",{"_index":2844,"title":{},"body":{"miscellaneous/variables.html":{}}}],["animation",{"_index":80,"title":{},"body":{"components/AppComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"interfaces/PollenType.html":{},"components/TtsPlayerElementComponent.html":{},"interfaces/UserContext.html":{},"interfaces/UserIdentifikation.html":{}}}],["animation.ts",{"_index":2710,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["animations",{"_index":85,"title":{},"body":{"components/AppComponent.html":{},"components/MenuElementComponent.html":{},"components/OnboardingScreenComponent.html":{}}}],["animationstate",{"_index":361,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["another",{"_index":1967,"title":{},"body":{"components/PersonalizationSettingsViewComponent.html":{},"injectables/WeatherDataService.html":{}}}],["ansicht",{"_index":108,"title":{},"body":{"components/AppComponent.html":{}}}],["ape",{"_index":1621,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["apelogin",{"_index":232,"title":{},"body":{"components/AppComponent.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DetailScreenComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{},"modules/ViewsModule.html":{},"coverage.html":{}}}],["api",{"_index":525,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/ESPConfiguration.html":{},"injectables/ESPConfigurationAPIService.html":{},"interfaces/ForecastResponse.html":{},"interfaces/GraphDataSet.html":{},"interfaces/IndoorRoomData.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/LoginResponse.html":{},"interfaces/OutdoorWeatherData.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenData.html":{},"interfaces/PollenResponse.html":{},"interfaces/Tile.html":{},"interfaces/TileArrays.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{},"injectables/WeatherAPIService.html":{},"interfaces/WeatherData.html":{},"interfaces/WeatherForecastData.html":{},"interfaces/WeatherHistoryByDayData.html":{},"interfaces/WeatherHistoryData.html":{}}}],["api.service",{"_index":749,"title":{},"body":{"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"injectables/WeatherDataService.html":{}}}],["api.service.ts",{"_index":511,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/ESPConfiguration.html":{},"injectables/ESPConfigurationAPIService.html":{},"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/LoginResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{},"injectables/WeatherAPIService.html":{},"coverage.html":{}}}],["api.service.ts:102",{"_index":2505,"title":{},"body":{"injectables/UserContextAPIService.html":{}}}],["api.service.ts:113",{"_index":2519,"title":{},"body":{"injectables/WeatherAPIService.html":{}}}],["api.service.ts:135",{"_index":2506,"title":{},"body":{"injectables/UserContextAPIService.html":{}}}],["api.service.ts:16",{"_index":897,"title":{},"body":{"injectables/ESPConfigurationAPIService.html":{}}}],["api.service.ts:174",{"_index":2498,"title":{},"body":{"injectables/UserContextAPIService.html":{}}}],["api.service.ts:203",{"_index":2504,"title":{},"body":{"injectables/UserContextAPIService.html":{}}}],["api.service.ts:22",{"_index":2517,"title":{},"body":{"injectables/WeatherAPIService.html":{}}}],["api.service.ts:23",{"_index":898,"title":{},"body":{"injectables/ESPConfigurationAPIService.html":{}}}],["api.service.ts:232",{"_index":2501,"title":{},"body":{"injectables/UserContextAPIService.html":{}}}],["api.service.ts:25",{"_index":2497,"title":{},"body":{"injectables/UserContextAPIService.html":{}}}],["api.service.ts:255",{"_index":2500,"title":{},"body":{"injectables/UserContextAPIService.html":{}}}],["api.service.ts:277",{"_index":2499,"title":{},"body":{"injectables/UserContextAPIService.html":{}}}],["api.service.ts:29",{"_index":2522,"title":{},"body":{"injectables/WeatherAPIService.html":{}}}],["api.service.ts:32",{"_index":2502,"title":{},"body":{"injectables/UserContextAPIService.html":{}}}],["api.service.ts:37",{"_index":899,"title":{},"body":{"injectables/ESPConfigurationAPIService.html":{}}}],["api.service.ts:47",{"_index":2518,"title":{},"body":{"injectables/WeatherAPIService.html":{}}}],["api.service.ts:65",{"_index":2523,"title":{},"body":{"injectables/WeatherAPIService.html":{}}}],["api.service.ts:71",{"_index":2503,"title":{},"body":{"injectables/UserContextAPIService.html":{}}}],["api.service.ts:89",{"_index":2521,"title":{},"body":{"injectables/WeatherAPIService.html":{}}}],["api/weather",{"_index":2563,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["app",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DetailScreenComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{},"index.html":{}}}],["app.component",{"_index":302,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":18,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":16,"title":{},"body":{"components/AppComponent.html":{}}}],["apparent",{"_index":186,"title":{},"body":{"components/AppComponent.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DetailScreenComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{},"modules/ViewsModule.html":{}}}],["apparenttemperature",{"_index":1074,"title":{},"body":{"interfaces/ForecastResponse.html":{},"interfaces/GraphDataSet.html":{},"interfaces/IndoorRoomData.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherData.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenData.html":{},"interfaces/PollenResponse.html":{},"injectables/TextService.html":{},"interfaces/Tile.html":{},"interfaces/TileArrays.html":{},"injectables/TileService.html":{},"injectables/WeatherAPIService.html":{},"interfaces/WeatherData.html":{},"interfaces/WeatherForecastData.html":{},"interfaces/WeatherHistoryByDayData.html":{},"interfaces/WeatherHistoryData.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["apparenttemperaturetile",{"_index":2342,"title":{},"body":{"injectables/TileService.html":{}}}],["apparenttemperaturetileviewcomponent",{"_index":185,"title":{"components/ApparentTemperatureTileViewComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DetailScreenComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{},"modules/ViewsModule.html":{},"coverage.html":{},"overview.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DetailScreenComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appearance",{"_index":2124,"title":{},"body":{"components/ProgressChartElementComponent.html":{},"components/SliderElementComponent.html":{}}}],["applied",{"_index":1468,"title":{},"body":{"injectables/ImageService.html":{}}}],["appmodule",{"_index":271,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approutingmodule",{"_index":282,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ScreensModule.html":{},"modules.html":{},"overview.html":{}}}],["arbeiten",{"_index":1563,"title":{},"body":{"components/IndoorDetailViewComponent.html":{}}}],["array",{"_index":651,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/LoginResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"interfaces/PollenType.html":{},"injectables/TextService.html":{},"injectables/TileService.html":{},"interfaces/UserContext.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{},"interfaces/UserIdentifikation.html":{},"injectables/WeatherAPIService.html":{},"injectables/WeatherDataService.html":{}}}],["array(count",{"_index":1956,"title":{},"body":{"components/PersonalizationSettingsViewComponent.html":{}}}],["array.foreach(element",{"_index":2229,"title":{},"body":{"injectables/TextService.html":{}}}],["arrays",{"_index":2318,"title":{},"body":{"injectables/TileService.html":{},"injectables/WeatherDataService.html":{}}}],["artifacts",{"_index":2785,"title":{},"body":{"index.html":{}}}],["assets",{"_index":1453,"title":{},"body":{"injectables/ImageService.html":{}}}],["assets/icons",{"_index":1473,"title":{},"body":{"injectables/ImageService.html":{}}}],["assets/weather",{"_index":1475,"title":{},"body":{"injectables/ImageService.html":{}}}],["asthma",{"_index":2043,"title":{},"body":{"components/PollenflugDetailViewComponent.html":{}}}],["atemluft",{"_index":2063,"title":{},"body":{"components/PollenflugDetailViewComponent.html":{}}}],["atmosphäre",{"_index":953,"title":{},"body":{"components/ForecastDetailViewComponent.html":{}}}],["auch",{"_index":1249,"title":{},"body":{"components/HistoryDetailViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"interfaces/PollenType.html":{},"components/PollenflugDetailViewComponent.html":{},"interfaces/UserContext.html":{},"interfaces/UserIdentifikation.html":{}}}],["auf",{"_index":151,"title":{},"body":{"components/AppComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{}}}],["aufbereitete",{"_index":1250,"title":{},"body":{"components/HistoryDetailViewComponent.html":{}}}],["aufenthalt",{"_index":1580,"title":{},"body":{"components/IndoorDetailViewComponent.html":{}}}],["aufgetreten",{"_index":580,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/ESPConfiguration.html":{},"injectables/ESPConfigurationAPIService.html":{},"interfaces/LoginResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{}}}],["aufgrund",{"_index":2070,"title":{},"body":{"components/PollenflugDetailViewComponent.html":{}}}],["aus",{"_index":2064,"title":{},"body":{"components/PollenflugDetailViewComponent.html":{}}}],["ausfällt",{"_index":1269,"title":{},"body":{"components/HistoryDetailViewComponent.html":{}}}],["ausgeführt",{"_index":1736,"title":{},"body":{"components/MenuButtonElementComponent.html":{}}}],["ausgehend",{"_index":1252,"title":{},"body":{"components/HistoryDetailViewComponent.html":{}}}],["ausloggen",{"_index":1785,"title":{},"body":{"components/MenuElementComponent.html":{}}}],["ausreichende",{"_index":1586,"title":{},"body":{"components/IndoorDetailViewComponent.html":{}}}],["aussage",{"_index":1864,"title":{},"body":{"components/OutdoorWeatherDetailViewComponent.html":{}}}],["aussagen",{"_index":1856,"title":{},"body":{"components/OutdoorWeatherDetailViewComponent.html":{},"components/PollenflugDetailViewComponent.html":{}}}],["auswertung",{"_index":1276,"title":{},"body":{"components/HistoryDetailViewComponent.html":{}}}],["auswirken",{"_index":968,"title":{},"body":{"components/ForecastDetailViewComponent.html":{}}}],["auth/checktoken",{"_index":538,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/LoginResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{}}}],["auth/login",{"_index":534,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/LoginResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{}}}],["authorization",{"_index":592,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/LoginResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{}}}],["auto",{"_index":464,"title":{},"body":{"components/CardElementComponent.html":{},"miscellaneous/enumerations.html":{}}}],["autoatic",{"_index":152,"title":{},"body":{"components/AppComponent.html":{}}}],["automatic",{"_index":1959,"title":{},"body":{"components/PersonalizationSettingsViewComponent.html":{},"interfaces/PollenType.html":{},"interfaces/UserContext.html":{},"interfaces/UserIdentifikation.html":{},"miscellaneous/enumerations.html":{}}}],["automatically",{"_index":2779,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["available",{"_index":2800,"title":{},"body":{"modules.html":{}}}],["average",{"_index":1379,"title":{},"body":{"injectables/HistoryTileService.html":{}}}],["averagehumidity",{"_index":1165,"title":{},"body":{"interfaces/GraphDataSet.html":{},"injectables/HistoryTileService.html":{},"interfaces/IndoorRoomData.html":{},"interfaces/OutdoorWeatherData.html":{},"interfaces/PollenData.html":{},"interfaces/Tile.html":{},"interfaces/TileArrays.html":{},"interfaces/WeatherData.html":{},"interfaces/WeatherForecastData.html":{},"interfaces/WeatherHistoryByDayData.html":{},"interfaces/WeatherHistoryData.html":{},"miscellaneous/variables.html":{}}}],["averagetemperature",{"_index":1164,"title":{},"body":{"interfaces/GraphDataSet.html":{},"injectables/HistoryTileService.html":{},"interfaces/IndoorRoomData.html":{},"interfaces/OutdoorWeatherData.html":{},"interfaces/PollenData.html":{},"interfaces/Tile.html":{},"interfaces/TileArrays.html":{},"interfaces/WeatherData.html":{},"interfaces/WeatherForecastData.html":{},"interfaces/WeatherHistoryByDayData.html":{},"interfaces/WeatherHistoryData.html":{},"miscellaneous/variables.html":{}}}],["b",{"_index":1315,"title":{},"body":{"injectables/HistoryTileService.html":{},"injectables/TileService.html":{}}}],["b.priority",{"_index":2402,"title":{},"body":{"injectables/TileService.html":{}}}],["b.timestamp.gettime",{"_index":1316,"title":{},"body":{"injectables/HistoryTileService.html":{}}}],["b1",{"_index":777,"title":{},"body":{"components/ConfigurationTilePopUpDialogView.html":{}}}],["b2",{"_index":778,"title":{},"body":{"components/ConfigurationTilePopUpDialogView.html":{}}}],["back",{"_index":192,"title":{},"body":{"components/AppComponent.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DetailScreenComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{},"modules/UiElementsModule.html":{}}}],["backbuttonelementcomponent",{"_index":191,"title":{"components/BackButtonElementComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DetailScreenComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{},"modules/UiElementsModule.html":{},"coverage.html":{},"overview.html":{}}}],["backdrop",{"_index":1717,"title":{},"body":{"components/MenuBarElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{}}}],["backend",{"_index":2525,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["background",{"_index":179,"title":{},"body":{"components/AppComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"injectables/ImageService.html":{},"components/LoginViewComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/SettingsScreenComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{},"miscellaneous/variables.html":{}}}],["backgroundcolor",{"_index":1436,"title":{},"body":{"components/HistoryTileViewComponent.html":{}}}],["backiconmodel",{"_index":411,"title":{},"body":{"components/BackButtonElementComponent.html":{}}}],["backlabel",{"_index":1796,"title":{},"body":{"components/NavBarElementComponent.html":{}}}],["bar",{"_index":223,"title":{},"body":{"components/AppComponent.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DetailScreenComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{},"modules/UiElementsModule.html":{},"coverage.html":{}}}],["bar:nth",{"_index":2434,"title":{},"body":{"components/TtsPlayerElementComponent.html":{}}}],["bars",{"_index":2426,"title":{},"body":{"components/TtsPlayerElementComponent.html":{}}}],["based",{"_index":1705,"title":{},"body":{"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"injectables/TileService.html":{}}}],["baseurl",{"_index":2835,"title":{},"body":{"miscellaneous/variables.html":{}}}],["baseurlicons",{"_index":1472,"title":{},"body":{"injectables/ImageService.html":{}}}],["baseurlweather",{"_index":1474,"title":{},"body":{"injectables/ImageService.html":{}}}],["bearer",{"_index":593,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/LoginResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{}}}],["bedeckt",{"_index":2251,"title":{},"body":{"injectables/TextService.html":{}}}],["bedenkt",{"_index":939,"title":{},"body":{"components/ForecastDetailViewComponent.html":{}}}],["before",{"_index":2553,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["begin",{"_index":1038,"title":{},"body":{"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["begindate",{"_index":1035,"title":{},"body":{"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["behaglichkeit",{"_index":1857,"title":{},"body":{"components/OutdoorWeatherDetailViewComponent.html":{}}}],["behalf",{"_index":466,"title":{},"body":{"components/CardElementComponent.html":{}}}],["behavior",{"_index":2538,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["behaviorsubject",{"_index":2537,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["behaviorsubject(undefined",{"_index":2581,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["behaviour",{"_index":2560,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["bei",{"_index":1831,"title":{},"body":{"components/OutdoorWeatherDetailViewComponent.html":{},"injectables/TextService.html":{}}}],["beifu",{"_index":2825,"title":{},"body":{"miscellaneous/variables.html":{}}}],["belastung",{"_index":2066,"title":{},"body":{"components/PollenflugDetailViewComponent.html":{},"injectables/TextService.html":{}}}],["below",{"_index":158,"title":{},"body":{"components/AppComponent.html":{}}}],["beobachtet.wie",{"_index":1267,"title":{},"body":{"components/HistoryDetailViewComponent.html":{}}}],["beobachtungen",{"_index":1253,"title":{},"body":{"components/HistoryDetailViewComponent.html":{}}}],["beobachtungsdaten",{"_index":1243,"title":{},"body":{"components/HistoryDetailViewComponent.html":{}}}],["ber",{"_index":2084,"title":{},"body":{"components/PollenflugDetailViewComponent.html":{}}}],["berechnen",{"_index":1894,"title":{},"body":{"components/OutdoorWeatherViewComponent.html":{}}}],["berein",{"_index":2149,"title":{},"body":{"components/RegistrationViewComponent.html":{}}}],["berliefert",{"_index":933,"title":{},"body":{"components/ForecastDetailViewComponent.html":{}}}],["beschreibung",{"_index":1847,"title":{},"body":{"components/OutdoorWeatherDetailViewComponent.html":{}}}],["beschrieben",{"_index":1855,"title":{},"body":{"components/OutdoorWeatherDetailViewComponent.html":{}}}],["besonders",{"_index":942,"title":{},"body":{"components/ForecastDetailViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{}}}],["bestimmten",{"_index":955,"title":{},"body":{"components/ForecastDetailViewComponent.html":{}}}],["betrachtet",{"_index":974,"title":{},"body":{"components/ForecastDetailViewComponent.html":{}}}],["betrachteten",{"_index":1271,"title":{},"body":{"components/HistoryDetailViewComponent.html":{}}}],["beträgt",{"_index":2297,"title":{},"body":{"injectables/TextService.html":{}}}],["between",{"_index":776,"title":{},"body":{"components/ConfigurationTilePopUpDialogView.html":{},"components/DashboardScreenComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuElementComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/ProgressChartElementComponent.html":{}}}],["bevölkerung",{"_index":2033,"title":{},"body":{"components/PollenflugDetailViewComponent.html":{}}}],["bewegt",{"_index":1837,"title":{},"body":{"components/OutdoorWeatherDetailViewComponent.html":{}}}],["bewertung",{"_index":1246,"title":{},"body":{"components/HistoryDetailViewComponent.html":{}}}],["bewölkt",{"_index":2264,"title":{},"body":{"injectables/TextService.html":{}}}],["big",{"_index":478,"title":{},"body":{"components/CardElementComponent.html":{}}}],["bindehautentzündung",{"_index":2040,"title":{},"body":{"components/PollenflugDetailViewComponent.html":{}}}],["birke",{"_index":2678,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["birke.id",{"_index":2830,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bis",{"_index":2041,"title":{},"body":{"components/PollenflugDetailViewComponent.html":{}}}],["bit",{"_index":2417,"title":{},"body":{"components/TtsPlayerElementComponent.html":{}}}],["bitte",{"_index":581,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/ESPConfiguration.html":{},"injectables/ESPConfigurationAPIService.html":{},"interfaces/LoginResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{}}}],["black",{"_index":712,"title":{},"body":{"components/CheckboxSwitcherElementComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugSmallTileComponent.html":{}}}],["blicherweise",{"_index":1821,"title":{},"body":{"components/OutdoorWeatherDetailViewComponent.html":{}}}],["blue",{"_index":1440,"title":{},"body":{"components/HistoryTileViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{}}}],["blur",{"_index":1716,"title":{},"body":{"components/MenuBarElementComponent.html":{}}}],["blur(20px",{"_index":1718,"title":{},"body":{"components/MenuBarElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{}}}],["board",{"_index":1157,"title":{},"body":{"interfaces/GraphDataSet.html":{},"interfaces/IndoorRoomData.html":{},"interfaces/OutdoorWeatherData.html":{},"interfaces/PollenData.html":{},"interfaces/Tile.html":{},"interfaces/TileArrays.html":{},"interfaces/WeatherData.html":{},"interfaces/WeatherForecastData.html":{},"interfaces/WeatherHistoryByDayData.html":{},"interfaces/WeatherHistoryData.html":{}}}],["boden",{"_index":967,"title":{},"body":{"components/ForecastDetailViewComponent.html":{}}}],["body",{"_index":561,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/ESPConfiguration.html":{},"injectables/ESPConfigurationAPIService.html":{},"interfaces/LoginResponse.html":{},"components/ProgressChartElementComponent.html":{},"components/SliderElementComponent.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{}}}],["body.id",{"_index":622,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/LoginResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{}}}],["body.token",{"_index":571,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/LoginResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{}}}],["body.usercontext.id",{"_index":573,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/LoginResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{}}}],["bold",{"_index":1596,"title":{},"body":{"components/IndoorTileViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{}}}],["boolean",{"_index":58,"title":{},"body":{"components/AppComponent.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/CardElementComponent.html":{},"interfaces/CheckTokenResponse.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DetailScreenComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"injectables/LocalStorageService.html":{},"interfaces/LoginResponse.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"interfaces/PollenType.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/SettingsScreenComponent.html":{},"injectables/SpeechService.html":{},"components/TtsPlayerElementComponent.html":{},"interfaces/UserContext.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{},"interfaces/UserIdentifikation.html":{}}}],["bootstrap",{"_index":275,"title":{},"body":{"modules/AppModule.html":{},"modules/ScreensModule.html":{},"modules/UiElementsModule.html":{},"modules/ViewsModule.html":{},"overview.html":{}}}],["border",{"_index":174,"title":{},"body":{"components/AppComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/DashboardScreenComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{}}}],["bordercolor",{"_index":1434,"title":{},"body":{"components/HistoryTileViewComponent.html":{}}}],["bottom",{"_index":486,"title":{},"body":{"components/CardElementComponent.html":{},"components/DashboardScreenComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuElementComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/TtsPlayerElementComponent.html":{}}}],["box",{"_index":497,"title":{},"body":{"components/CardElementComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/SliderElementComponent.html":{}}}],["brauchen",{"_index":94,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["break",{"_index":724,"title":{},"body":{"components/CheckboxSwitcherElementComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/PollenTagElementComponent.html":{},"injectables/TextService.html":{}}}],["breakpoint",{"_index":869,"title":{},"body":{"components/DashboardScreenComponent.html":{}}}],["breakpointobserver",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/DashboardScreenComponent.html":{},"injectables/ImageService.html":{},"components/OutdoorWeatherDetailViewComponent.html":{}}}],["breakpointstate",{"_index":83,"title":{},"body":{"components/AppComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/DashboardScreenComponent.html":{},"injectables/ImageService.html":{},"components/OutdoorWeatherDetailViewComponent.html":{}}}],["browse",{"_index":2798,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":295,"title":{},"body":{"modules/AppModule.html":{},"injectables/LocalStorageService.html":{},"injectables/SpeechService.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":304,"title":{},"body":{"modules/AppModule.html":{},"modules/ScreensModule.html":{}}}],["browseranimationsmodule",{"_index":303,"title":{},"body":{"modules/AppModule.html":{},"modules/ScreensModule.html":{}}}],["browsermodule",{"_index":293,"title":{},"body":{"modules/AppModule.html":{}}}],["btn",{"_index":802,"title":{},"body":{"components/ConfigurationTileViewComponent.html":{}}}],["bug",{"_index":147,"title":{},"body":{"components/AppComponent.html":{}}}],["build",{"_index":2784,"title":{},"body":{"index.html":{}}}],["button",{"_index":193,"title":{},"body":{"components/AppComponent.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DetailScreenComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{},"modules/UiElementsModule.html":{},"coverage.html":{}}}],["button.disabled",{"_index":1281,"title":{},"body":{"components/HistoryDetailViewComponent.html":{}}}],["button.svg",{"_index":424,"title":{},"body":{"components/BackButtonElementComponent.html":{}}}],["buttoncolor",{"_index":1741,"title":{},"body":{"components/MenuButtonElementComponent.html":{}}}],["c",{"_index":1143,"title":{},"body":{"interfaces/GraphDataSet.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"interfaces/IndoorRoomData.html":{},"interfaces/OutdoorWeatherData.html":{},"interfaces/PollenData.html":{},"interfaces/Tile.html":{},"interfaces/TileArrays.html":{},"interfaces/WeatherData.html":{},"interfaces/WeatherForecastData.html":{},"interfaces/WeatherHistoryByDayData.html":{},"interfaces/WeatherHistoryData.html":{}}}],["caculate",{"_index":2373,"title":{},"body":{"injectables/TileService.html":{}}}],["calc(((100vw",{"_index":475,"title":{},"body":{"components/CardElementComponent.html":{}}}],["calc((100vw",{"_index":473,"title":{},"body":{"components/CardElementComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{}}}],["calc(100vh",{"_index":1914,"title":{},"body":{"components/OutdoorWeatherViewComponent.html":{},"components/SettingsScreenComponent.html":{}}}],["calc(100vw",{"_index":1444,"title":{},"body":{"components/HistoryTileViewComponent.html":{}}}],["calc(var",{"_index":485,"title":{},"body":{"components/CardElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/DashboardScreenComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/TtsPlayerElementComponent.html":{}}}],["calculate",{"_index":2371,"title":{},"body":{"injectables/TileService.html":{}}}],["calculates",{"_index":1378,"title":{},"body":{"injectables/HistoryTileService.html":{}}}],["called",{"_index":2558,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["calling",{"_index":2838,"title":{},"body":{"miscellaneous/variables.html":{}}}],["calls",{"_index":2613,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["card",{"_index":196,"title":{},"body":{"components/AppComponent.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DetailScreenComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{},"modules/UiElementsModule.html":{}}}],["cardelementcomponent",{"_index":195,"title":{"components/CardElementComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DetailScreenComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{},"modules/UiElementsModule.html":{},"coverage.html":{},"overview.html":{}}}],["cardsize",{"_index":389,"title":{},"body":{"components/ApparentTemperatureTileViewComponent.html":{},"components/CardElementComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/SimpleTileViewComponent.html":{},"miscellaneous/enumerations.html":{}}}],["cardsize.auto",{"_index":453,"title":{},"body":{"components/CardElementComponent.html":{}}}],["cardsizetype",{"_index":378,"title":{},"body":{"components/ApparentTemperatureTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/SimpleTileViewComponent.html":{}}}],["caret",{"_index":787,"title":{},"body":{"components/ConfigurationTilePopUpDialogView.html":{}}}],["case",{"_index":668,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"components/HistoryTileViewComponent.html":{},"injectables/ImageService.html":{},"interfaces/LoginResponse.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PollenTagElementComponent.html":{},"injectables/TextService.html":{},"injectables/TileService.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{},"miscellaneous/variables.html":{}}}],["celsius",{"_index":2273,"title":{},"body":{"injectables/TextService.html":{}}}],["center",{"_index":436,"title":{},"body":{"components/BackButtonElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/RegistrationViewComponent.html":{}}}],["change",{"_index":143,"title":{},"body":{"components/AppComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"index.html":{}}}],["changeconfig",{"_index":885,"title":{},"body":{"interfaces/ESPConfiguration.html":{},"injectables/ESPConfigurationAPIService.html":{}}}],["changes",{"_index":1511,"title":{},"body":{"injectables/ImageService.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"injectables/WeatherDataService.html":{}}}],["changevalue",{"_index":2165,"title":{},"body":{"components/SliderElementComponent.html":{}}}],["changevalue(event",{"_index":2167,"title":{},"body":{"components/SliderElementComponent.html":{}}}],["chart",{"_index":254,"title":{},"body":{"components/AppComponent.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DetailScreenComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{},"modules/UiElementsModule.html":{},"coverage.html":{}}}],["chartcolor",{"_index":1414,"title":{},"body":{"components/HistoryTileViewComponent.html":{}}}],["chartcolors",{"_index":1403,"title":{},"body":{"components/HistoryTileViewComponent.html":{}}}],["chartcolors[0",{"_index":1433,"title":{},"body":{"components/HistoryTileViewComponent.html":{}}}],["chartdata",{"_index":1404,"title":{},"body":{"components/HistoryTileViewComponent.html":{}}}],["chartdataset",{"_index":1413,"title":{},"body":{"components/HistoryTileViewComponent.html":{}}}],["chartdataset[0].data",{"_index":1430,"title":{},"body":{"components/HistoryTileViewComponent.html":{}}}],["chartdataset[0].label",{"_index":1432,"title":{},"body":{"components/HistoryTileViewComponent.html":{}}}],["chartlabel",{"_index":1418,"title":{},"body":{"components/HistoryTileViewComponent.html":{}}}],["chartlabels",{"_index":1405,"title":{},"body":{"components/HistoryTileViewComponent.html":{}}}],["chartlegend",{"_index":1406,"title":{},"body":{"components/HistoryTileViewComponent.html":{}}}],["chartoptions",{"_index":1407,"title":{},"body":{"components/HistoryTileViewComponent.html":{}}}],["chartplugins",{"_index":1408,"title":{},"body":{"components/HistoryTileViewComponent.html":{}}}],["charts",{"_index":1297,"title":{},"body":{"injectables/HistoryTileService.html":{},"components/HistoryTileViewComponent.html":{},"modules/ViewsModule.html":{},"dependencies.html":{}}}],["chartsmodule",{"_index":2515,"title":{},"body":{"modules/ViewsModule.html":{}}}],["check",{"_index":514,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/LoginResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{},"index.html":{}}}],["checkbox",{"_index":198,"title":{},"body":{"components/AppComponent.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DetailScreenComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{},"modules/UiElementsModule.html":{}}}],["checkboxswitcherelementcomponent",{"_index":197,"title":{"components/CheckboxSwitcherElementComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DetailScreenComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{},"modules/UiElementsModule.html":{},"coverage.html":{},"overview.html":{}}}],["checkedimage",{"_index":680,"title":{},"body":{"components/CheckboxSwitcherElementComponent.html":{}}}],["checktokenresponse",{"_index":508,"title":{"interfaces/CheckTokenResponse.html":{}},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/LoginResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{},"coverage.html":{}}}],["checktokenurl",{"_index":537,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/LoginResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{}}}],["child",{"_index":472,"title":{},"body":{"components/CardElementComponent.html":{}}}],["child(1",{"_index":2435,"title":{},"body":{"components/TtsPlayerElementComponent.html":{}}}],["child(10",{"_index":2459,"title":{},"body":{"components/TtsPlayerElementComponent.html":{}}}],["child(11",{"_index":2462,"title":{},"body":{"components/TtsPlayerElementComponent.html":{}}}],["child(12",{"_index":2464,"title":{},"body":{"components/TtsPlayerElementComponent.html":{}}}],["child(13",{"_index":2466,"title":{},"body":{"components/TtsPlayerElementComponent.html":{}}}],["child(14",{"_index":2468,"title":{},"body":{"components/TtsPlayerElementComponent.html":{}}}],["child(15",{"_index":2470,"title":{},"body":{"components/TtsPlayerElementComponent.html":{}}}],["child(16",{"_index":2472,"title":{},"body":{"components/TtsPlayerElementComponent.html":{}}}],["child(17",{"_index":2474,"title":{},"body":{"components/TtsPlayerElementComponent.html":{}}}],["child(18",{"_index":2476,"title":{},"body":{"components/TtsPlayerElementComponent.html":{}}}],["child(19",{"_index":2477,"title":{},"body":{"components/TtsPlayerElementComponent.html":{}}}],["child(2",{"_index":2437,"title":{},"body":{"components/TtsPlayerElementComponent.html":{}}}],["child(20",{"_index":2479,"title":{},"body":{"components/TtsPlayerElementComponent.html":{}}}],["child(3",{"_index":2439,"title":{},"body":{"components/TtsPlayerElementComponent.html":{}}}],["child(4",{"_index":2442,"title":{},"body":{"components/TtsPlayerElementComponent.html":{}}}],["child(5",{"_index":2445,"title":{},"body":{"components/TtsPlayerElementComponent.html":{}}}],["child(6",{"_index":2448,"title":{},"body":{"components/TtsPlayerElementComponent.html":{}}}],["child(7",{"_index":2451,"title":{},"body":{"components/TtsPlayerElementComponent.html":{}}}],["child(8",{"_index":2454,"title":{},"body":{"components/TtsPlayerElementComponent.html":{}}}],["child(9",{"_index":2456,"title":{},"body":{"components/TtsPlayerElementComponent.html":{}}}],["children",{"_index":362,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["class",{"_index":87,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CardElementComponent.html":{},"interfaces/CheckTokenResponse.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DetailScreenComponent.html":{},"interfaces/ESPConfiguration.html":{},"injectables/ESPConfigurationAPIService.html":{},"components/ForecastDetailViewComponent.html":{},"interfaces/ForecastResponse.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"injectables/HistoryTileService.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"injectables/ImageService.html":{},"components/IndoorDetailViewComponent.html":{},"interfaces/IndoorRoomResponse.html":{},"components/IndoorTileViewComponent.html":{},"injectables/LocalStorageService.html":{},"interfaces/LoginResponse.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"interfaces/OutdoorWeatherResponse.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenListElementComponent.html":{},"interfaces/PollenResponse.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"modules/ScreensModule.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"injectables/SpeechService.html":{},"injectables/TextService.html":{},"injectables/TileService.html":{},"components/TtsPlayerElementComponent.html":{},"modules/UiElementsModule.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{},"modules/ViewsModule.html":{},"injectables/WeatherAPIService.html":{},"injectables/WeatherDataService.html":{}}}],["clear",{"_index":1504,"title":{},"body":{"injectables/ImageService.html":{},"injectables/LocalStorageService.html":{},"injectables/TextService.html":{}}}],["cli",{"_index":2770,"title":{},"body":{"index.html":{}}}],["clickedoutdoorweatherview",{"_index":28,"title":{},"body":{"components/AppComponent.html":{}}}],["clickme",{"_index":29,"title":{},"body":{"components/AppComponent.html":{}}}],["closeevent",{"_index":1748,"title":{},"body":{"components/MenuElementComponent.html":{}}}],["closemenu",{"_index":1729,"title":{},"body":{"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{}}}],["cloudy",{"_index":1484,"title":{},"body":{"injectables/ImageService.html":{},"injectables/TextService.html":{},"miscellaneous/variables.html":{}}}],["cluster_appmodule",{"_index":278,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":281,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":279,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":280,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_screensmodule",{"_index":2152,"title":{},"body":{"modules/ScreensModule.html":{},"overview.html":{}}}],["cluster_screensmodule_declarations",{"_index":2153,"title":{},"body":{"modules/ScreensModule.html":{},"overview.html":{}}}],["cluster_screensmodule_imports",{"_index":2154,"title":{},"body":{"modules/ScreensModule.html":{}}}],["cluster_uielementsmodule",{"_index":2485,"title":{},"body":{"modules/UiElementsModule.html":{},"overview.html":{}}}],["cluster_uielementsmodule_declarations",{"_index":2486,"title":{},"body":{"modules/UiElementsModule.html":{},"overview.html":{}}}],["cluster_uielementsmodule_exports",{"_index":2487,"title":{},"body":{"modules/UiElementsModule.html":{},"overview.html":{}}}],["cluster_viewsmodule",{"_index":2507,"title":{},"body":{"modules/ViewsModule.html":{},"overview.html":{}}}],["cluster_viewsmodule_declarations",{"_index":2509,"title":{},"body":{"modules/ViewsModule.html":{},"overview.html":{}}}],["cluster_viewsmodule_exports",{"_index":2510,"title":{},"body":{"modules/ViewsModule.html":{},"overview.html":{}}}],["cluster_viewsmodule_imports",{"_index":2508,"title":{},"body":{"modules/ViewsModule.html":{}}}],["code",{"_index":872,"title":{},"body":{"components/DashboardScreenComponent.html":{},"index.html":{}}}],["color",{"_index":137,"title":{},"body":{"components/AppComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"injectables/ImageService.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SettingsScreenComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{}}}],["colorvalue",{"_index":1975,"title":{},"body":{"components/PollenTagElementComponent.html":{}}}],["column",{"_index":715,"title":{},"body":{"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuElementComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/RegistrationViewComponent.html":{}}}],["comes",{"_index":324,"title":{},"body":{"modules/AppModule.html":{}}}],["command",{"_index":2794,"title":{},"body":{"index.html":{}}}],["commonmodule",{"_index":2156,"title":{},"body":{"modules/ScreensModule.html":{},"modules/UiElementsModule.html":{},"modules/ViewsModule.html":{}}}],["complexity",{"_index":871,"title":{},"body":{"components/DashboardScreenComponent.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DetailScreenComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DetailScreenComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"injectables/TileService.html":{},"components/TtsPlayerElementComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":184,"title":{},"body":{"components/AppComponent.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DetailScreenComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DetailScreenComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"injectables/HistoryTileService.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"injectables/TileService.html":{},"components/TtsPlayerElementComponent.html":{},"overview.html":{}}}],["components/screens/dashboard",{"_index":332,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["components/screens/detail",{"_index":335,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["components/screens/onboarding",{"_index":337,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["components/screens/screens.module",{"_index":299,"title":{},"body":{"modules/AppModule.html":{}}}],["components/screens/settings",{"_index":339,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["components/ui",{"_index":296,"title":{},"body":{"modules/AppModule.html":{}}}],["components/views/configuration",{"_index":341,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["components/views/forecast",{"_index":344,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["components/views/history",{"_index":346,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["components/views/indoor",{"_index":348,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["components/views/login",{"_index":350,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["components/views/outdoor",{"_index":352,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["components/views/personalization",{"_index":354,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["components/views/pollenflug",{"_index":356,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["components/views/registration",{"_index":358,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["components/views/views.module",{"_index":300,"title":{},"body":{"modules/AppModule.html":{}}}],["concurring",{"_index":2013,"title":{},"body":{"interfaces/PollenType.html":{},"interfaces/UserContext.html":{},"interfaces/UserIdentifikation.html":{}}}],["configurable",{"_index":1155,"title":{},"body":{"interfaces/GraphDataSet.html":{},"interfaces/IndoorRoomData.html":{},"interfaces/OutdoorWeatherData.html":{},"interfaces/PollenData.html":{},"interfaces/Tile.html":{},"interfaces/TileArrays.html":{},"interfaces/WeatherData.html":{},"interfaces/WeatherForecastData.html":{},"interfaces/WeatherHistoryByDayData.html":{},"interfaces/WeatherHistoryData.html":{}}}],["configuration",{"_index":201,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DetailScreenComponent.html":{},"interfaces/ESPConfiguration.html":{},"injectables/ESPConfigurationAPIService.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{},"modules/ViewsModule.html":{},"coverage.html":{}}}],["configuration,{observe",{"_index":892,"title":{},"body":{"interfaces/ESPConfiguration.html":{},"injectables/ESPConfigurationAPIService.html":{}}}],["configurationicon",{"_index":1742,"title":{},"body":{"components/MenuElementComponent.html":{}}}],["configurationtilepopupdialogview",{"_index":200,"title":{"components/ConfigurationTilePopUpDialogView.html":{}},"body":{"components/AppComponent.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DetailScreenComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{},"modules/ViewsModule.html":{},"coverage.html":{},"overview.html":{}}}],["configurationtileviewcomponent",{"_index":203,"title":{"components/ConfigurationTileViewComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DetailScreenComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{},"modules/ViewsModule.html":{},"coverage.html":{},"overview.html":{}}}],["configurationviewcomponent",{"_index":204,"title":{"components/ConfigurationViewComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DetailScreenComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{},"modules/ViewsModule.html":{},"coverage.html":{},"overview.html":{}}}],["console.log",{"_index":768,"title":{},"body":{"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"injectables/HistoryTileService.html":{}}}],["console.log(\"changed",{"_index":767,"title":{},"body":{"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{}}}],["console.log(\"hide",{"_index":857,"title":{},"body":{"components/DashboardScreenComponent.html":{}}}],["console.log(\"open",{"_index":1734,"title":{},"body":{"components/MenuButtonElementComponent.html":{}}}],["console.log(\"pollen",{"_index":1088,"title":{},"body":{"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["console.log(\"re",{"_index":763,"title":{},"body":{"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{}}}],["console.log(\"user",{"_index":1776,"title":{},"body":{"components/MenuElementComponent.html":{}}}],["console.log(\"wird",{"_index":1735,"title":{},"body":{"components/MenuButtonElementComponent.html":{}}}],["console.log('created",{"_index":1340,"title":{},"body":{"injectables/HistoryTileService.html":{}}}],["console.log('saved",{"_index":1630,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["console.log(datapoints",{"_index":1045,"title":{},"body":{"interfaces/ForecastResponse.html":{},"injectables/HistoryTileService.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["console.log(dataset",{"_index":1348,"title":{},"body":{"injectables/HistoryTileService.html":{}}}],["console.log(error",{"_index":586,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/ESPConfiguration.html":{},"injectables/ESPConfigurationAPIService.html":{},"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/LoginResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["console.log(httpoptions",{"_index":638,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/LoginResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{}}}],["console.log(math.ceil((((date.valueof",{"_index":1372,"title":{},"body":{"injectables/HistoryTileService.html":{}}}],["console.log(pollen",{"_index":2383,"title":{},"body":{"injectables/TileService.html":{}}}],["console.log(readaloud",{"_index":2243,"title":{},"body":{"injectables/TextService.html":{}}}],["console.log(res",{"_index":165,"title":{},"body":{"components/AppComponent.html":{}}}],["console.log(response",{"_index":598,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/LoginResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{}}}],["console.log(status",{"_index":565,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/ESPConfiguration.html":{},"injectables/ESPConfigurationAPIService.html":{},"interfaces/LoginResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{}}}],["console.log(this.createusercontextfromserverresponse(body.usercontext",{"_index":568,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/LoginResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{}}}],["console.log(this.createusercontextfromserverresponse(context",{"_index":646,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/LoginResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{}}}],["console.log(this.createusercontextfromserverresponse(response",{"_index":600,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/LoginResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{}}}],["const",{"_index":134,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"interfaces/ForecastResponse.html":{},"injectables/HistoryTileService.html":{},"injectables/ImageService.html":{},"interfaces/IndoorRoomResponse.html":{},"injectables/LocalStorageService.html":{},"components/LoginViewComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"interfaces/PollenType.html":{},"components/RegistrationViewComponent.html":{},"interfaces/UserContext.html":{},"interfaces/UserIdentifikation.html":{},"injectables/WeatherAPIService.html":{}}}],["constants",{"_index":1397,"title":{},"body":{"injectables/HistoryTileService.html":{},"injectables/LocalStorageService.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DetailScreenComponent.html":{},"injectables/ESPConfigurationAPIService.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"injectables/HistoryTileService.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"injectables/ImageService.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"injectables/LocalStorageService.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"injectables/SpeechService.html":{},"injectables/TextService.html":{},"injectables/TileService.html":{},"components/TtsPlayerElementComponent.html":{},"injectables/UserContextAPIService.html":{},"injectables/WeatherAPIService.html":{},"injectables/WeatherDataService.html":{}}}],["constructor(breakpointobserver",{"_index":1811,"title":{},"body":{"components/OutdoorWeatherDetailViewComponent.html":{}}}],["constructor(dialogref",{"_index":735,"title":{},"body":{"components/ConfigurationTilePopUpDialogView.html":{}}}],["constructor(espconfigurationservice",{"_index":789,"title":{},"body":{"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{}}}],["constructor(formbuilder",{"_index":1661,"title":{},"body":{"components/LoginViewComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/RegistrationViewComponent.html":{}}}],["constructor(historytileservice",{"_index":1183,"title":{},"body":{"components/HistoryDetailViewComponent.html":{}}}],["constructor(httpclient",{"_index":896,"title":{},"body":{"injectables/ESPConfigurationAPIService.html":{},"injectables/UserContextAPIService.html":{},"injectables/WeatherAPIService.html":{}}}],["constructor(imageservice",{"_index":1111,"title":{},"body":{"components/ForecastTileViewComponent.html":{}}}],["constructor(location",{"_index":416,"title":{},"body":{"components/BackButtonElementComponent.html":{}}}],["constructor(private",{"_index":88,"title":{},"body":{"components/AppComponent.html":{},"components/BackButtonElementComponent.html":{},"interfaces/CheckTokenResponse.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/DashboardScreenComponent.html":{},"interfaces/ESPConfiguration.html":{},"injectables/ESPConfigurationAPIService.html":{},"components/ForecastDetailViewComponent.html":{},"interfaces/ForecastResponse.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"injectables/ImageService.html":{},"components/IndoorDetailViewComponent.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/LoginResponse.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"interfaces/OutdoorWeatherResponse.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"interfaces/PollenResponse.html":{},"components/PollenflugDetailViewComponent.html":{},"components/RegistrationViewComponent.html":{},"injectables/TileService.html":{},"components/TtsPlayerElementComponent.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{},"injectables/WeatherAPIService.html":{},"injectables/WeatherDataService.html":{}}}],["constructor(renderer",{"_index":34,"title":{},"body":{"components/AppComponent.html":{}}}],["constructor(router",{"_index":1750,"title":{},"body":{"components/MenuElementComponent.html":{},"components/PersonalizationViewComponent.html":{}}}],["constructor(tileservice",{"_index":2534,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["constructor(usercontextservice",{"_index":685,"title":{},"body":{"components/CheckboxSwitcherElementComponent.html":{},"components/DashboardScreenComponent.html":{},"injectables/ImageService.html":{},"components/MenuButtonElementComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"injectables/TileService.html":{},"components/TtsPlayerElementComponent.html":{}}}],["constructor(weatherdataservice",{"_index":902,"title":{},"body":{"components/ForecastDetailViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{}}}],["container",{"_index":169,"title":{},"body":{"components/AppComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DetailScreenComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{}}}],["container.checked",{"_index":726,"title":{},"body":{"components/CheckboxSwitcherElementComponent.html":{}}}],["container.motion",{"_index":864,"title":{},"body":{"components/DashboardScreenComponent.html":{},"components/OutdoorWeatherViewComponent.html":{}}}],["container.small",{"_index":474,"title":{},"body":{"components/CardElementComponent.html":{}}}],["contains",{"_index":2330,"title":{},"body":{"injectables/TileService.html":{}}}],["content",{"_index":438,"title":{},"body":{"components/BackButtonElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuElementComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/ProgressChartElementComponent.html":{}}}],["context",{"_index":82,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CheckTokenResponse.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/HistoryTileViewComponent.html":{},"injectables/ImageService.html":{},"injectables/LocalStorageService.html":{},"interfaces/LoginResponse.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"injectables/TileService.html":{},"components/TtsPlayerElementComponent.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{},"injectables/WeatherDataService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["context.service",{"_index":73,"title":{},"body":{"components/AppComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/DashboardScreenComponent.html":{},"injectables/ImageService.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/RegistrationViewComponent.html":{},"injectables/TileService.html":{},"components/TtsPlayerElementComponent.html":{},"injectables/WeatherDataService.html":{}}}],["context.service.ts",{"_index":2736,"title":{},"body":{"coverage.html":{}}}],["context.ts",{"_index":1160,"title":{},"body":{"interfaces/GraphDataSet.html":{},"interfaces/IndoorRoomData.html":{},"interfaces/OutdoorWeatherData.html":{},"interfaces/PollenData.html":{},"interfaces/PollenType.html":{},"interfaces/Tile.html":{},"interfaces/TileArrays.html":{},"interfaces/UserContext.html":{},"interfaces/UserIdentifikation.html":{},"interfaces/WeatherData.html":{},"interfaces/WeatherForecastData.html":{},"interfaces/WeatherHistoryByDayData.html":{},"interfaces/WeatherHistoryData.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["contrast",{"_index":1920,"title":{},"body":{"components/OutdoorWeatherViewComponent.html":{}}}],["conversion",{"_index":1304,"title":{},"body":{"injectables/HistoryTileService.html":{}}}],["convert",{"_index":664,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/ForecastResponse.html":{},"injectables/HistoryTileService.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/LoginResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["converted",{"_index":665,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/LoginResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{}}}],["converts",{"_index":1293,"title":{},"body":{"injectables/HistoryTileService.html":{}}}],["corner",{"_index":468,"title":{},"body":{"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/MenuElementComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/TtsPlayerElementComponent.html":{}}}],["count",{"_index":1954,"title":{},"body":{"components/PersonalizationSettingsViewComponent.html":{}}}],["coverage",{"_index":2660,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":657,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/LoginResponse.html":{},"injectables/TextService.html":{},"injectables/TileService.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{}}}],["createforecasttext",{"_index":2203,"title":{},"body":{"injectables/TextService.html":{}}}],["createforecasttext(data",{"_index":2211,"title":{},"body":{"injectables/TextService.html":{}}}],["createforecasttile(data",{"_index":2360,"title":{},"body":{"injectables/TileService.html":{}}}],["createforecasttitle",{"_index":2204,"title":{},"body":{"injectables/TextService.html":{}}}],["createforecasttitle(data",{"_index":2214,"title":{},"body":{"injectables/TextService.html":{}}}],["createhistorytile(data",{"_index":2361,"title":{},"body":{"injectables/TileService.html":{}}}],["createindoorroomdatafromserverresponse(response",{"_index":1079,"title":{},"body":{"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["createindoorroomtext",{"_index":2205,"title":{},"body":{"injectables/TextService.html":{}}}],["createindoorroomtext(data",{"_index":2216,"title":{},"body":{"injectables/TextService.html":{}}}],["createindoorroomtiles(data",{"_index":2367,"title":{},"body":{"injectables/TileService.html":{}}}],["createoutdoorforecastdatafromserverresponse(response",{"_index":1098,"title":{},"body":{"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["createoutdoortext",{"_index":2206,"title":{},"body":{"injectables/TextService.html":{}}}],["createoutdoortext(data",{"_index":2218,"title":{},"body":{"injectables/TextService.html":{}}}],["createoutdoorweatherdatafromserverresponse(response",{"_index":1054,"title":{},"body":{"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["createoutdoorweathertiles(data",{"_index":2338,"title":{},"body":{"injectables/TileService.html":{}}}],["createpollendatafromserverresponse(response",{"_index":1086,"title":{},"body":{"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["createpollentext",{"_index":2207,"title":{},"body":{"injectables/TextService.html":{}}}],["createpollentext(data",{"_index":2220,"title":{},"body":{"injectables/TextService.html":{}}}],["createpollentiles(data",{"_index":2345,"title":{},"body":{"injectables/TileService.html":{}}}],["creates",{"_index":2556,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["createserverfriendlydate(date",{"_index":1048,"title":{},"body":{"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["createtextfromtilesarray",{"_index":2208,"title":{},"body":{"injectables/TextService.html":{}}}],["createtextfromtilesarray(array",{"_index":2222,"title":{},"body":{"injectables/TextService.html":{}}}],["createtiles",{"_index":2321,"title":{},"body":{"injectables/TileService.html":{},"injectables/WeatherDataService.html":{}}}],["createtiles(outdoorweather",{"_index":2323,"title":{},"body":{"injectables/TileService.html":{}}}],["createusercontextfromserverresponse(usercontext",{"_index":660,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/LoginResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{}}}],["createweathergraphdataset(temperaturedata",{"_index":1382,"title":{},"body":{"injectables/HistoryTileService.html":{}}}],["createweathertext",{"_index":2209,"title":{},"body":{"injectables/TextService.html":{}}}],["createweathertext(data",{"_index":2225,"title":{},"body":{"injectables/TextService.html":{}}}],["credentials",{"_index":819,"title":{"interfaces/Credentials.html":{}},"body":{"interfaces/Credentials.html":{},"coverage.html":{}}}],["css",{"_index":477,"title":{},"body":{"components/CardElementComponent.html":{},"components/DashboardScreenComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/OutdoorWeatherViewComponent.html":{}}}],["current",{"_index":1460,"title":{},"body":{"injectables/ImageService.html":{},"injectables/TileService.html":{}}}],["currentusercontexturl",{"_index":539,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/LoginResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{}}}],["currentvalue",{"_index":1386,"title":{},"body":{"injectables/HistoryTileService.html":{}}}],["cursor",{"_index":716,"title":{},"body":{"components/CheckboxSwitcherElementComponent.html":{},"components/MenuElementComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/SliderElementComponent.html":{}}}],["da",{"_index":2069,"title":{},"body":{"components/PollenflugDetailViewComponent.html":{}}}],["dabei",{"_index":961,"title":{},"body":{"components/ForecastDetailViewComponent.html":{}}}],["dadurch",{"_index":1862,"title":{},"body":{"components/OutdoorWeatherDetailViewComponent.html":{}}}],["daher",{"_index":1555,"title":{},"body":{"components/IndoorDetailViewComponent.html":{}}}],["daily",{"_index":1149,"title":{},"body":{"interfaces/GraphDataSet.html":{},"interfaces/IndoorRoomData.html":{},"interfaces/OutdoorWeatherData.html":{},"interfaces/PollenData.html":{},"interfaces/Tile.html":{},"interfaces/TileArrays.html":{},"interfaces/WeatherData.html":{},"interfaces/WeatherForecastData.html":{},"interfaces/WeatherHistoryByDayData.html":{},"interfaces/WeatherHistoryData.html":{}}}],["damit",{"_index":2044,"title":{},"body":{"components/PollenflugDetailViewComponent.html":{}}}],["dann",{"_index":1860,"title":{},"body":{"components/OutdoorWeatherDetailViewComponent.html":{}}}],["dark",{"_index":139,"title":{},"body":{"components/AppComponent.html":{},"components/BackButtonElementComponent.html":{},"interfaces/CheckTokenResponse.html":{},"interfaces/ImageModel.html":{},"injectables/ImageService.html":{},"interfaces/LoginResponse.html":{},"components/MenuElementComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"interfaces/PollenType.html":{},"interfaces/UserContext.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{},"interfaces/UserIdentifikation.html":{},"miscellaneous/enumerations.html":{}}}],["dark.png",{"_index":1759,"title":{},"body":{"components/MenuElementComponent.html":{}}}],["das",{"_index":96,"title":{},"body":{"components/AppComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/RegistrationViewComponent.html":{}}}],["dashboard",{"_index":107,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DetailScreenComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"interfaces/GraphDataSet.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"interfaces/IndoorRoomData.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"interfaces/OutdoorWeatherData.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"interfaces/PollenData.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"modules/ScreensModule.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"interfaces/Tile.html":{},"interfaces/TileArrays.html":{},"injectables/TileService.html":{},"components/TtsPlayerElementComponent.html":{},"interfaces/WeatherData.html":{},"injectables/WeatherDataService.html":{},"interfaces/WeatherForecastData.html":{},"interfaces/WeatherHistoryByDayData.html":{},"interfaces/WeatherHistoryData.html":{},"miscellaneous/variables.html":{}}}],["dashboardscreencomponent",{"_index":205,"title":{"components/DashboardScreenComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DetailScreenComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"modules/ScreensModule.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{},"coverage.html":{},"overview.html":{}}}],["dashboardtiles",{"_index":825,"title":{},"body":{"components/DashboardScreenComponent.html":{},"injectables/TileService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["dashboardtiles(tiles",{"_index":2570,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["data",{"_index":127,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"interfaces/CheckTokenResponse.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/ForecastDetailViewComponent.html":{},"interfaces/ForecastResponse.html":{},"components/ForecastTileViewComponent.html":{},"interfaces/GraphDataSet.html":{},"components/HistoryDetailViewComponent.html":{},"injectables/HistoryTileService.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"injectables/ImageService.html":{},"components/IndoorDetailViewComponent.html":{},"interfaces/IndoorRoomData.html":{},"interfaces/IndoorRoomResponse.html":{},"components/IndoorTileViewComponent.html":{},"interfaces/LoginResponse.html":{},"interfaces/OutdoorWeatherData.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"interfaces/OutdoorWeatherResponse.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"interfaces/PollenData.html":{},"interfaces/PollenResponse.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"injectables/TextService.html":{},"interfaces/Tile.html":{},"interfaces/TileArrays.html":{},"injectables/TileService.html":{},"components/TtsPlayerElementComponent.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{},"injectables/WeatherAPIService.html":{},"interfaces/WeatherData.html":{},"injectables/WeatherDataService.html":{},"interfaces/WeatherForecastData.html":{},"interfaces/WeatherHistoryByDayData.html":{},"interfaces/WeatherHistoryData.html":{},"miscellaneous/variables.html":{}}}],["data(data",{"_index":400,"title":{},"body":{"components/ApparentTemperatureTileViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{}}}],["data.airquality",{"_index":2269,"title":{},"body":{"injectables/TextService.html":{}}}],["data.apparenttemperature",{"_index":2285,"title":{},"body":{"injectables/TextService.html":{}}}],["data.error",{"_index":1674,"title":{},"body":{"components/LoginViewComponent.html":{},"components/RegistrationViewComponent.html":{}}}],["data.fontsize",{"_index":122,"title":{},"body":{"components/AppComponent.html":{}}}],["data.humidity",{"_index":2288,"title":{},"body":{"injectables/TextService.html":{}}}],["data.length",{"_index":858,"title":{},"body":{"components/DashboardScreenComponent.html":{}}}],["data.location",{"_index":1709,"title":{},"body":{"components/MenuBarElementComponent.html":{},"injectables/TextService.html":{}}}],["data.map((element",{"_index":1043,"title":{},"body":{"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["data.maxtemperature",{"_index":2286,"title":{},"body":{"injectables/TextService.html":{}}}],["data.mintemperature",{"_index":2287,"title":{},"body":{"injectables/TextService.html":{}}}],["data.pollenname",{"_index":2276,"title":{},"body":{"injectables/TextService.html":{}}}],["data.postcode",{"_index":1710,"title":{},"body":{"components/MenuBarElementComponent.html":{}}}],["data.reducemotion",{"_index":853,"title":{},"body":{"components/DashboardScreenComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{}}}],["data.roomname",{"_index":2267,"title":{},"body":{"injectables/TextService.html":{}}}],["data.service",{"_index":844,"title":{},"body":{"components/DashboardScreenComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PollenflugDetailViewComponent.html":{}}}],["data.service.ts",{"_index":2524,"title":{},"body":{"injectables/WeatherDataService.html":{},"coverage.html":{}}}],["data.service.ts:106",{"_index":2535,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["data.service.ts:155",{"_index":2555,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["data.service.ts:177",{"_index":2554,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["data.service.ts:185",{"_index":2547,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["data.service.ts:219",{"_index":2536,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["data.service.ts:226",{"_index":2544,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["data.service.ts:233",{"_index":2541,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["data.service.ts:240",{"_index":2540,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["data.service.ts:247",{"_index":2543,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["data.service.ts:254",{"_index":2546,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["data.temperature",{"_index":2270,"title":{},"body":{"injectables/TextService.html":{}}}],["data.theme",{"_index":1879,"title":{},"body":{"components/OutdoorWeatherViewComponent.html":{}}}],["data.today",{"_index":2277,"title":{},"body":{"injectables/TextService.html":{}}}],["data.trend",{"_index":2256,"title":{},"body":{"injectables/TextService.html":{}}}],["data.weather",{"_index":2289,"title":{},"body":{"injectables/TextService.html":{}}}],["data.weatherdescription",{"_index":2244,"title":{},"body":{"injectables/TextService.html":{}}}],["data/forecast/latest",{"_index":1000,"title":{},"body":{"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["data/indoor/latest",{"_index":996,"title":{},"body":{"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["data/outdoor/history",{"_index":998,"title":{},"body":{"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["data/outdoor/latest",{"_index":994,"title":{},"body":{"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["data/weather.mock",{"_index":986,"title":{},"body":{"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["data/weather.mock.ts",{"_index":2675,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["database",{"_index":1146,"title":{},"body":{"interfaces/GraphDataSet.html":{},"interfaces/IndoorRoomData.html":{},"interfaces/OutdoorWeatherData.html":{},"interfaces/PollenData.html":{},"interfaces/Tile.html":{},"interfaces/TileArrays.html":{},"interfaces/WeatherData.html":{},"interfaces/WeatherForecastData.html":{},"interfaces/WeatherHistoryByDayData.html":{},"interfaces/WeatherHistoryData.html":{}}}],["datahoursperday",{"_index":2362,"title":{},"body":{"injectables/TileService.html":{}}}],["datahoursperday[0",{"_index":2365,"title":{},"body":{"injectables/TileService.html":{}}}],["dataitem.pollenname",{"_index":2352,"title":{},"body":{"injectables/TileService.html":{}}}],["datapoints",{"_index":1042,"title":{},"body":{"interfaces/ForecastResponse.html":{},"interfaces/GraphDataSet.html":{},"injectables/HistoryTileService.html":{},"interfaces/IndoorRoomData.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherData.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenData.html":{},"interfaces/PollenResponse.html":{},"interfaces/Tile.html":{},"interfaces/TileArrays.html":{},"injectables/WeatherAPIService.html":{},"interfaces/WeatherData.html":{},"injectables/WeatherDataService.html":{},"interfaces/WeatherForecastData.html":{},"interfaces/WeatherHistoryByDayData.html":{},"interfaces/WeatherHistoryData.html":{},"miscellaneous/variables.html":{}}}],["datapoints.sort((a",{"_index":1314,"title":{},"body":{"injectables/HistoryTileService.html":{}}}],["datapoints[0].timestamp",{"_index":1319,"title":{},"body":{"injectables/HistoryTileService.html":{}}}],["dataset",{"_index":1172,"title":{},"body":{"components/HistoryDetailViewComponent.html":{},"injectables/HistoryTileService.html":{},"components/HistoryTileViewComponent.html":{}}}],["dataset.humiditydatapoints",{"_index":1439,"title":{},"body":{"components/HistoryTileViewComponent.html":{}}}],["dataset.push(this.createweathergraphdataset(temperaturedatapoints",{"_index":1337,"title":{},"body":{"injectables/HistoryTileService.html":{}}}],["dataset.temperaturedatapoints",{"_index":1431,"title":{},"body":{"components/HistoryTileViewComponent.html":{}}}],["dataset.xaxislabel",{"_index":1443,"title":{},"body":{"components/HistoryTileViewComponent.html":{}}}],["dataset[index].label",{"_index":1235,"title":{},"body":{"components/HistoryDetailViewComponent.html":{}}}],["datasetcolor",{"_index":1422,"title":{},"body":{"components/HistoryTileViewComponent.html":{}}}],["date",{"_index":1034,"title":{},"body":{"interfaces/ForecastResponse.html":{},"interfaces/GraphDataSet.html":{},"injectables/HistoryTileService.html":{},"injectables/ImageService.html":{},"interfaces/IndoorRoomData.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherData.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenData.html":{},"interfaces/PollenResponse.html":{},"interfaces/Tile.html":{},"interfaces/TileArrays.html":{},"injectables/WeatherAPIService.html":{},"interfaces/WeatherData.html":{},"injectables/WeatherDataService.html":{},"interfaces/WeatherForecastData.html":{},"interfaces/WeatherHistoryByDayData.html":{},"interfaces/WeatherHistoryData.html":{},"miscellaneous/variables.html":{}}}],["date('may",{"_index":2811,"title":{},"body":{"miscellaneous/variables.html":{}}}],["date(date.utc(date.getutcfullyear(),0,1",{"_index":1371,"title":{},"body":{"injectables/HistoryTileService.html":{}}}],["date(date.utc(inputdate.getfullyear",{"_index":1364,"title":{},"body":{"injectables/HistoryTileService.html":{}}}],["date(month",{"_index":1066,"title":{},"body":{"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["date(oldesthistorydate",{"_index":2651,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["date(response.timestamp",{"_index":1085,"title":{},"body":{"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["date(this.oldesthistorydate",{"_index":2621,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["date.getdate",{"_index":1358,"title":{},"body":{"injectables/HistoryTileService.html":{}}}],["date.getfullyear",{"_index":1362,"title":{},"body":{"injectables/HistoryTileService.html":{}}}],["date.gethours",{"_index":1514,"title":{},"body":{"injectables/ImageService.html":{}}}],["date.getmonth",{"_index":1359,"title":{},"body":{"injectables/HistoryTileService.html":{}}}],["date.getutcday",{"_index":1368,"title":{},"body":{"injectables/HistoryTileService.html":{}}}],["date.now",{"_index":2608,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["date.setutcdate(date.getutcdate",{"_index":1369,"title":{},"body":{"injectables/HistoryTileService.html":{}}}],["date.substr(0",{"_index":1058,"title":{},"body":{"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["date.substr(11",{"_index":1064,"title":{},"body":{"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["date.substr(5",{"_index":1060,"title":{},"body":{"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["date.substr(8",{"_index":1062,"title":{},"body":{"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["date.toisostring().slice(0",{"_index":1050,"title":{},"body":{"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["date.totimestring().slice(0",{"_index":1052,"title":{},"body":{"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["daten",{"_index":1089,"title":{},"body":{"interfaces/ForecastResponse.html":{},"components/HistoryDetailViewComponent.html":{},"interfaces/IndoorRoomResponse.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["datestring",{"_index":1049,"title":{},"body":{"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["dawn",{"_index":1169,"title":{},"body":{"interfaces/GraphDataSet.html":{},"injectables/ImageService.html":{},"interfaces/IndoorRoomData.html":{},"interfaces/OutdoorWeatherData.html":{},"components/OutdoorWeatherViewComponent.html":{},"interfaces/PollenData.html":{},"interfaces/Tile.html":{},"interfaces/TileArrays.html":{},"interfaces/WeatherData.html":{},"interfaces/WeatherForecastData.html":{},"interfaces/WeatherHistoryByDayData.html":{},"interfaces/WeatherHistoryData.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["dawndark",{"_index":1533,"title":{},"body":{"injectables/ImageService.html":{},"miscellaneous/variables.html":{}}}],["day",{"_index":1061,"title":{},"body":{"interfaces/ForecastResponse.html":{},"components/HistoryDetailViewComponent.html":{},"injectables/HistoryTileService.html":{},"injectables/ImageService.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/TextService.html":{},"injectables/WeatherAPIService.html":{},"miscellaneous/enumerations.html":{}}}],["dayhour",{"_index":1513,"title":{},"body":{"injectables/ImageService.html":{}}}],["daynum",{"_index":1367,"title":{},"body":{"injectables/HistoryTileService.html":{}}}],["days",{"_index":1306,"title":{},"body":{"injectables/HistoryTileService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["days[date.getday",{"_index":1357,"title":{},"body":{"injectables/HistoryTileService.html":{}}}],["daytime",{"_index":1166,"title":{},"body":{"interfaces/GraphDataSet.html":{},"injectables/ImageService.html":{},"interfaces/IndoorRoomData.html":{},"interfaces/OutdoorWeatherData.html":{},"components/OutdoorWeatherViewComponent.html":{},"interfaces/PollenData.html":{},"interfaces/Tile.html":{},"interfaces/TileArrays.html":{},"interfaces/WeatherData.html":{},"injectables/WeatherDataService.html":{},"interfaces/WeatherForecastData.html":{},"interfaces/WeatherHistoryByDayData.html":{},"interfaces/WeatherHistoryData.html":{},"miscellaneous/enumerations.html":{}}}],["daytime.dawn",{"_index":1493,"title":{},"body":{"injectables/ImageService.html":{}}}],["daytime.night",{"_index":1495,"title":{},"body":{"injectables/ImageService.html":{}}}],["daytime.noon",{"_index":1491,"title":{},"body":{"injectables/ImageService.html":{},"components/OutdoorWeatherViewComponent.html":{}}}],["daytimetype",{"_index":1867,"title":{},"body":{"components/OutdoorWeatherViewComponent.html":{}}}],["de",{"_index":2021,"title":{},"body":{"interfaces/PollenType.html":{},"injectables/SpeechService.html":{},"interfaces/UserContext.html":{},"interfaces/UserIdentifikation.html":{},"miscellaneous/enumerations.html":{}}}],["death",{"_index":1994,"title":{},"body":{"components/PollenTagElementComponent.html":{}}}],["declarations",{"_index":274,"title":{},"body":{"modules/AppModule.html":{},"modules/ScreensModule.html":{},"modules/UiElementsModule.html":{},"modules/ViewsModule.html":{},"overview.html":{}}}],["decoration",{"_index":1694,"title":{},"body":{"components/LoginViewComponent.html":{}}}],["decorators",{"_index":740,"title":{},"body":{"components/ConfigurationTilePopUpDialogView.html":{}}}],["default",{"_index":59,"title":{},"body":{"components/AppComponent.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CardElementComponent.html":{},"interfaces/CheckTokenResponse.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/DashboardScreenComponent.html":{},"components/DetailScreenComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"injectables/ImageService.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"interfaces/LoginResponse.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"injectables/TextService.html":{},"components/TtsPlayerElementComponent.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DetailScreenComponent.html":{},"injectables/ESPConfigurationAPIService.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"injectables/HistoryTileService.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"injectables/ImageService.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"injectables/LocalStorageService.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"injectables/SpeechService.html":{},"injectables/TextService.html":{},"injectables/TileService.html":{},"components/TtsPlayerElementComponent.html":{},"injectables/UserContextAPIService.html":{},"injectables/WeatherAPIService.html":{},"injectables/WeatherDataService.html":{}}}],["delete",{"_index":157,"title":{},"body":{"components/AppComponent.html":{}}}],["deletepollefromusercontext",{"_index":2490,"title":{},"body":{"injectables/UserContextAPIService.html":{}}}],["deletepollefromusercontext(userid",{"_index":627,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/LoginResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{}}}],["deletepollenurl",{"_index":545,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/LoginResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{}}}],["deletion",{"_index":626,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/LoginResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{}}}],["dem",{"_index":931,"title":{},"body":{"components/ForecastDetailViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/PollenflugDetailViewComponent.html":{}}}],["den",{"_index":1242,"title":{},"body":{"components/HistoryDetailViewComponent.html":{}}}],["dennoch",{"_index":2056,"title":{},"body":{"components/PollenflugDetailViewComponent.html":{}}}],["dependencies",{"_index":273,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/ScreensModule.html":{},"modules/UiElementsModule.html":{},"modules/ViewsModule.html":{},"dependencies.html":{},"overview.html":{}}}],["der",{"_index":915,"title":{},"body":{"components/ForecastDetailViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"injectables/TextService.html":{}}}],["des",{"_index":1550,"title":{},"body":{"components/IndoorDetailViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"injectables/TextService.html":{}}}],["description",{"_index":512,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/ESPConfiguration.html":{},"injectables/ESPConfigurationAPIService.html":{},"interfaces/ForecastResponse.html":{},"injectables/HistoryTileService.html":{},"injectables/ImageService.html":{},"interfaces/IndoorRoomResponse.html":{},"injectables/LocalStorageService.html":{},"interfaces/LoginResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"components/OutdoorWeatherViewComponent.html":{},"interfaces/PollenResponse.html":{},"injectables/SpeechService.html":{},"injectables/TextService.html":{},"injectables/TileService.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{},"injectables/WeatherAPIService.html":{},"injectables/WeatherDataService.html":{}}}],["deshalb",{"_index":1585,"title":{},"body":{"components/IndoorDetailViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{}}}],["design",{"_index":867,"title":{},"body":{"components/DashboardScreenComponent.html":{}}}],["desktop",{"_index":21,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DetailScreenComponent.html":{},"components/MenuBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/SettingsScreenComponent.html":{}}}],["desktopbreakpointobserver",{"_index":109,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardScreenComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{}}}],["detail",{"_index":103,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DetailScreenComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"modules/ScreensModule.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"injectables/TileService.html":{},"components/TtsPlayerElementComponent.html":{},"modules/ViewsModule.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["detailscreencomponent",{"_index":207,"title":{"components/DetailScreenComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DetailScreenComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"modules/ScreensModule.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{},"coverage.html":{},"overview.html":{}}}],["deutschland",{"_index":2034,"title":{},"body":{"components/PollenflugDetailViewComponent.html":{}}}],["dev",{"_index":2776,"title":{},"body":{"index.html":{}}}],["development",{"_index":2772,"title":{},"body":{"index.html":{}}}],["dialog",{"_index":755,"title":{},"body":{"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{}}}],["dialogref",{"_index":732,"title":{},"body":{"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{}}}],["dialogref.afterclosed().subscribe(result",{"_index":760,"title":{},"body":{"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{}}}],["die",{"_index":913,"title":{},"body":{"components/ForecastDetailViewComponent.html":{},"interfaces/GraphDataSet.html":{},"components/HistoryDetailViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"interfaces/IndoorRoomData.html":{},"interfaces/OutdoorWeatherData.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"interfaces/PollenData.html":{},"interfaces/PollenType.html":{},"components/PollenflugDetailViewComponent.html":{},"injectables/TextService.html":{},"interfaces/Tile.html":{},"interfaces/TileArrays.html":{},"interfaces/UserContext.html":{},"interfaces/UserIdentifikation.html":{},"interfaces/WeatherData.html":{},"interfaces/WeatherForecastData.html":{},"interfaces/WeatherHistoryByDayData.html":{},"interfaces/WeatherHistoryData.html":{}}}],["diese",{"_index":2291,"title":{},"body":{"injectables/TextService.html":{}}}],["dieser",{"_index":1848,"title":{},"body":{"components/OutdoorWeatherDetailViewComponent.html":{}}}],["different",{"_index":2326,"title":{},"body":{"injectables/TileService.html":{}}}],["direction",{"_index":714,"title":{},"body":{"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuElementComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/RegistrationViewComponent.html":{},"components/TtsPlayerElementComponent.html":{}}}],["directive",{"_index":183,"title":{},"body":{"components/AppComponent.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DetailScreenComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{}}}],["directives",{"_index":265,"title":{},"body":{"components/AppComponent.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DetailScreenComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":2783,"title":{},"body":{"index.html":{}}}],["directory",{"_index":2787,"title":{},"body":{"index.html":{}}}],["direkt",{"_index":2065,"title":{},"body":{"components/PollenflugDetailViewComponent.html":{}}}],["disable",{"_index":1620,"title":{},"body":{"injectables/LocalStorageService.html":{},"components/ProgressChartElementComponent.html":{},"miscellaneous/variables.html":{}}}],["disable_login_identifier",{"_index":1656,"title":{},"body":{"injectables/LocalStorageService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["disabled",{"_index":865,"title":{},"body":{"components/DashboardScreenComponent.html":{}}}],["disablelogin",{"_index":1605,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["disablelogin(value",{"_index":1641,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["disableopenapevalue",{"_index":1637,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["disorders",{"_index":2017,"title":{},"body":{"interfaces/PollenType.html":{},"interfaces/UserContext.html":{},"interfaces/UserIdentifikation.html":{}}}],["display",{"_index":432,"title":{},"body":{"components/BackButtonElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/TtsPlayerElementComponent.html":{}}}],["dist",{"_index":2786,"title":{},"body":{"index.html":{}}}],["document.body.style.setproperty",{"_index":1900,"title":{},"body":{"components/OutdoorWeatherViewComponent.html":{}}}],["documentation",{"_index":2661,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DetailScreenComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{}}}],["done",{"_index":1793,"title":{},"body":{"components/MenuElementComponent.html":{}}}],["doventilationreminder",{"_index":614,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/LoginResponse.html":{},"interfaces/PollenType.html":{},"interfaces/UserContext.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{},"interfaces/UserIdentifikation.html":{},"miscellaneous/variables.html":{}}}],["downloaded",{"_index":2607,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["drop",{"_index":1912,"title":{},"body":{"components/OutdoorWeatherViewComponent.html":{},"components/TtsPlayerElementComponent.html":{}}}],["dummy",{"_index":156,"title":{},"body":{"components/AppComponent.html":{}}}],["duration",{"_index":500,"title":{},"body":{"components/CardElementComponent.html":{},"components/TtsPlayerElementComponent.html":{}}}],["dynamic",{"_index":2750,"title":{},"body":{"dependencies.html":{}}}],["dürften",{"_index":934,"title":{},"body":{"components/ForecastDetailViewComponent.html":{}}}],["e",{"_index":144,"title":{},"body":{"components/AppComponent.html":{}}}],["e.g",{"_index":1152,"title":{},"body":{"interfaces/GraphDataSet.html":{},"interfaces/IndoorRoomData.html":{},"injectables/LocalStorageService.html":{},"interfaces/OutdoorWeatherData.html":{},"interfaces/PollenData.html":{},"injectables/TextService.html":{},"interfaces/Tile.html":{},"interfaces/TileArrays.html":{},"interfaces/WeatherData.html":{},"injectables/WeatherDataService.html":{},"interfaces/WeatherForecastData.html":{},"interfaces/WeatherHistoryByDayData.html":{},"interfaces/WeatherHistoryData.html":{}}}],["ease",{"_index":1774,"title":{},"body":{"components/MenuElementComponent.html":{},"miscellaneous/variables.html":{}}}],["easily",{"_index":1299,"title":{},"body":{"injectables/HistoryTileService.html":{},"injectables/TileService.html":{}}}],["ein",{"_index":625,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/ForecastResponse.html":{},"components/HistoryDetailViewComponent.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/LoginResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/TextService.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["eine",{"_index":1556,"title":{},"body":{"components/IndoorDetailViewComponent.html":{},"components/LoginViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"injectables/TextService.html":{},"index.html":{}}}],["einem",{"_index":957,"title":{},"body":{"components/ForecastDetailViewComponent.html":{}}}],["einen",{"_index":1548,"title":{},"body":{"components/IndoorDetailViewComponent.html":{},"components/PollenflugDetailViewComponent.html":{}}}],["einer",{"_index":954,"title":{},"body":{"components/ForecastDetailViewComponent.html":{}}}],["eines",{"_index":951,"title":{},"body":{"components/ForecastDetailViewComponent.html":{}}}],["einfacher",{"_index":2005,"title":{},"body":{"interfaces/PollenType.html":{},"interfaces/UserContext.html":{},"interfaces/UserIdentifikation.html":{}}}],["eingeloggt",{"_index":1777,"title":{},"body":{"components/MenuElementComponent.html":{}}}],["eingesetzt",{"_index":1251,"title":{},"body":{"components/HistoryDetailViewComponent.html":{}}}],["einloggen",{"_index":1786,"title":{},"body":{"components/MenuElementComponent.html":{}}}],["element",{"_index":182,"title":{},"body":{"components/AppComponent.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DetailScreenComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"interfaces/PollenType.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{},"interfaces/UserContext.html":{},"interfaces/UserIdentifikation.html":{}}}],["element'},{'name",{"_index":194,"title":{},"body":{"components/AppComponent.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DetailScreenComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{}}}],["element.component",{"_index":398,"title":{},"body":{"components/ApparentTemperatureTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/SimpleTileViewComponent.html":{},"modules/UiElementsModule.html":{}}}],["element.component.html",{"_index":410,"title":{},"body":{"components/BackButtonElementComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{}}}],["element.component.scss",{"_index":409,"title":{},"body":{"components/BackButtonElementComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{}}}],["element.component.ts",{"_index":408,"title":{},"body":{"components/BackButtonElementComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["element.component.ts:10",{"_index":455,"title":{},"body":{"components/CardElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/SliderElementComponent.html":{}}}],["element.component.ts:11",{"_index":454,"title":{},"body":{"components/CardElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/SliderElementComponent.html":{}}}],["element.component.ts:12",{"_index":419,"title":{},"body":{"components/BackButtonElementComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/TtsPlayerElementComponent.html":{}}}],["element.component.ts:13",{"_index":425,"title":{},"body":{"components/BackButtonElementComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/MenuBarElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{}}}],["element.component.ts:14",{"_index":452,"title":{},"body":{"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/PollenListElementComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/TtsPlayerElementComponent.html":{}}}],["element.component.ts:15",{"_index":687,"title":{},"body":{"components/CheckboxSwitcherElementComponent.html":{},"components/SliderElementComponent.html":{}}}],["element.component.ts:16",{"_index":418,"title":{},"body":{"components/BackButtonElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/MenuButtonElementComponent.html":{}}}],["element.component.ts:17",{"_index":689,"title":{},"body":{"components/CheckboxSwitcherElementComponent.html":{}}}],["element.component.ts:18",{"_index":426,"title":{},"body":{"components/BackButtonElementComponent.html":{},"components/CardElementComponent.html":{},"components/MenuBarElementComponent.html":{}}}],["element.component.ts:19",{"_index":686,"title":{},"body":{"components/CheckboxSwitcherElementComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{}}}],["element.component.ts:20",{"_index":421,"title":{},"body":{"components/BackButtonElementComponent.html":{},"components/MenuButtonElementComponent.html":{}}}],["element.component.ts:22",{"_index":2168,"title":{},"body":{"components/SliderElementComponent.html":{}}}],["element.component.ts:23",{"_index":420,"title":{},"body":{"components/BackButtonElementComponent.html":{},"components/MenuBarElementComponent.html":{}}}],["element.component.ts:25",{"_index":693,"title":{},"body":{"components/CheckboxSwitcherElementComponent.html":{},"components/TtsPlayerElementComponent.html":{}}}],["element.component.ts:28",{"_index":1732,"title":{},"body":{"components/MenuButtonElementComponent.html":{}}}],["element.component.ts:30",{"_index":694,"title":{},"body":{"components/CheckboxSwitcherElementComponent.html":{},"components/MenuBarElementComponent.html":{},"components/TtsPlayerElementComponent.html":{}}}],["element.component.ts:33",{"_index":1731,"title":{},"body":{"components/MenuButtonElementComponent.html":{}}}],["element.component.ts:38",{"_index":1703,"title":{},"body":{"components/MenuBarElementComponent.html":{},"components/MenuElementComponent.html":{},"components/TtsPlayerElementComponent.html":{}}}],["element.component.ts:39",{"_index":1761,"title":{},"body":{"components/MenuElementComponent.html":{}}}],["element.component.ts:43",{"_index":1979,"title":{},"body":{"components/PollenTagElementComponent.html":{}}}],["element.component.ts:44",{"_index":1764,"title":{},"body":{"components/MenuElementComponent.html":{},"components/PollenTagElementComponent.html":{}}}],["element.component.ts:45",{"_index":1978,"title":{},"body":{"components/PollenTagElementComponent.html":{}}}],["element.component.ts:49",{"_index":692,"title":{},"body":{"components/CheckboxSwitcherElementComponent.html":{},"components/MenuElementComponent.html":{},"components/PollenTagElementComponent.html":{}}}],["element.component.ts:55",{"_index":1766,"title":{},"body":{"components/MenuElementComponent.html":{}}}],["element.component.ts:59",{"_index":1751,"title":{},"body":{"components/MenuElementComponent.html":{}}}],["element.component.ts:63",{"_index":1762,"title":{},"body":{"components/MenuElementComponent.html":{}}}],["element.component.ts:64",{"_index":690,"title":{},"body":{"components/CheckboxSwitcherElementComponent.html":{}}}],["element.component.ts:65",{"_index":1754,"title":{},"body":{"components/MenuElementComponent.html":{}}}],["element.component.ts:68",{"_index":1752,"title":{},"body":{"components/MenuElementComponent.html":{}}}],["element.component.ts:72",{"_index":1756,"title":{},"body":{"components/MenuElementComponent.html":{}}}],["element.component.ts:76",{"_index":1755,"title":{},"body":{"components/MenuElementComponent.html":{}}}],["element.component.ts:80",{"_index":1753,"title":{},"body":{"components/MenuElementComponent.html":{}}}],["element.component.ts:9",{"_index":456,"title":{},"body":{"components/CardElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/PollenListElementComponent.html":{},"components/ProgressChartElementComponent.html":{}}}],["element.data",{"_index":2233,"title":{},"body":{"injectables/TextService.html":{}}}],["element.id",{"_index":2398,"title":{},"body":{"injectables/TileService.html":{}}}],["element/back",{"_index":407,"title":{},"body":{"components/BackButtonElementComponent.html":{},"modules/UiElementsModule.html":{},"coverage.html":{}}}],["element/card",{"_index":397,"title":{},"body":{"components/ApparentTemperatureTileViewComponent.html":{},"components/CardElementComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/SimpleTileViewComponent.html":{},"modules/UiElementsModule.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["element/checkbox",{"_index":676,"title":{},"body":{"components/CheckboxSwitcherElementComponent.html":{},"modules/UiElementsModule.html":{},"coverage.html":{}}}],["element/menu",{"_index":1699,"title":{},"body":{"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"modules/UiElementsModule.html":{},"coverage.html":{}}}],["element/nav",{"_index":1795,"title":{},"body":{"components/NavBarElementComponent.html":{},"modules/UiElementsModule.html":{},"coverage.html":{}}}],["element/pollen",{"_index":1972,"title":{},"body":{"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"modules/UiElementsModule.html":{},"coverage.html":{}}}],["element/progress",{"_index":2105,"title":{},"body":{"components/ProgressChartElementComponent.html":{},"modules/UiElementsModule.html":{},"coverage.html":{}}}],["element/slider",{"_index":2164,"title":{},"body":{"components/SliderElementComponent.html":{},"modules/UiElementsModule.html":{},"coverage.html":{}}}],["element/tts",{"_index":2404,"title":{},"body":{"components/TtsPlayerElementComponent.html":{},"modules/UiElementsModule.html":{},"coverage.html":{}}}],["elements.module",{"_index":298,"title":{},"body":{"modules/AppModule.html":{},"modules/ScreensModule.html":{},"modules/ViewsModule.html":{}}}],["elements.module.ts",{"_index":2488,"title":{},"body":{"modules/UiElementsModule.html":{}}}],["elements/back",{"_index":406,"title":{},"body":{"components/BackButtonElementComponent.html":{},"coverage.html":{}}}],["elements/card",{"_index":396,"title":{},"body":{"components/ApparentTemperatureTileViewComponent.html":{},"components/CardElementComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/SimpleTileViewComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["elements/checkbox",{"_index":675,"title":{},"body":{"components/CheckboxSwitcherElementComponent.html":{},"coverage.html":{}}}],["elements/menu",{"_index":1698,"title":{},"body":{"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"coverage.html":{}}}],["elements/nav",{"_index":1794,"title":{},"body":{"components/NavBarElementComponent.html":{},"coverage.html":{}}}],["elements/pollen",{"_index":1971,"title":{},"body":{"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"coverage.html":{}}}],["elements/progress",{"_index":2104,"title":{},"body":{"components/ProgressChartElementComponent.html":{},"coverage.html":{}}}],["elements/slider",{"_index":2163,"title":{},"body":{"components/SliderElementComponent.html":{},"coverage.html":{}}}],["elements/tts",{"_index":2403,"title":{},"body":{"components/TtsPlayerElementComponent.html":{},"coverage.html":{}}}],["elements/ui",{"_index":297,"title":{},"body":{"modules/AppModule.html":{},"modules/ScreensModule.html":{},"modules/UiElementsModule.html":{},"modules/ViewsModule.html":{}}}],["emoji",{"_index":1999,"title":{},"body":{"components/PollenTagElementComponent.html":{},"components/PollenflugSmallTileComponent.html":{}}}],["emojiname",{"_index":1976,"title":{},"body":{"components/PollenTagElementComponent.html":{}}}],["empfindet",{"_index":1842,"title":{},"body":{"components/OutdoorWeatherDetailViewComponent.html":{}}}],["en",{"_index":2022,"title":{},"body":{"interfaces/PollenType.html":{},"interfaces/UserContext.html":{},"interfaces/UserIdentifikation.html":{},"miscellaneous/enumerations.html":{}}}],["enable",{"_index":2603,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["enabled",{"_index":315,"title":{},"body":{"modules/AppModule.html":{}}}],["end",{"_index":1040,"title":{},"body":{"interfaces/ForecastResponse.html":{},"components/HistoryDetailViewComponent.html":{},"interfaces/IndoorRoomResponse.html":{},"components/IndoorTileViewComponent.html":{},"components/MenuElementComponent.html":{},"interfaces/OutdoorWeatherResponse.html":{},"components/OutdoorWeatherViewComponent.html":{},"interfaces/PollenResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["enddate",{"_index":2520,"title":{},"body":{"injectables/WeatherAPIService.html":{}}}],["engen",{"_index":2057,"title":{},"body":{"components/PollenflugDetailViewComponent.html":{}}}],["enter",{"_index":1771,"title":{},"body":{"components/MenuElementComponent.html":{}}}],["entfernen",{"_index":769,"title":{},"body":{"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{}}}],["entspricht",{"_index":1825,"title":{},"body":{"components/OutdoorWeatherDetailViewComponent.html":{}}}],["enum",{"_index":457,"title":{},"body":{"components/CardElementComponent.html":{},"interfaces/GraphDataSet.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"interfaces/IndoorRoomData.html":{},"interfaces/OutdoorWeatherData.html":{},"interfaces/PollenData.html":{},"interfaces/PollenType.html":{},"interfaces/Tile.html":{},"interfaces/TileArrays.html":{},"interfaces/UserContext.html":{},"interfaces/UserIdentifikation.html":{},"interfaces/WeatherData.html":{},"interfaces/WeatherForecastData.html":{},"interfaces/WeatherHistoryByDayData.html":{},"interfaces/WeatherHistoryData.html":{}}}],["enumerations",{"_index":2759,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environment",{"_index":308,"title":{},"body":{"modules/AppModule.html":{},"interfaces/CheckTokenResponse.html":{},"interfaces/ESPConfiguration.html":{},"injectables/ESPConfigurationAPIService.html":{},"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/LoginResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{},"injectables/WeatherAPIService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.baseurl",{"_index":533,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/ESPConfiguration.html":{},"injectables/ESPConfigurationAPIService.html":{},"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/LoginResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["environment.production",{"_index":316,"title":{},"body":{"modules/AppModule.html":{}}}],["environment.testdata",{"_index":1004,"title":{},"body":{"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["environments/environment",{"_index":309,"title":{},"body":{"modules/AppModule.html":{}}}],["erdatmosphäre",{"_index":973,"title":{},"body":{"components/ForecastDetailViewComponent.html":{}}}],["erfahrung",{"_index":925,"title":{},"body":{"components/ForecastDetailViewComponent.html":{}}}],["erle",{"_index":2828,"title":{},"body":{"miscellaneous/variables.html":{}}}],["erneut",{"_index":585,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/ESPConfiguration.html":{},"injectables/ESPConfigurationAPIService.html":{},"interfaces/LoginResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{}}}],["error",{"_index":576,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/ESPConfiguration.html":{},"injectables/ESPConfigurationAPIService.html":{},"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/LoginResponse.html":{},"components/LoginViewComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"components/RegistrationViewComponent.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["erstellen",{"_index":2006,"title":{},"body":{"interfaces/PollenType.html":{},"interfaces/UserContext.html":{},"interfaces/UserIdentifikation.html":{}}}],["erwartete",{"_index":2085,"title":{},"body":{"components/PollenflugDetailViewComponent.html":{}}}],["es",{"_index":583,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"components/ConfigurationViewComponent.html":{},"interfaces/ESPConfiguration.html":{},"injectables/ESPConfigurationAPIService.html":{},"components/ForecastDetailViewComponent.html":{},"injectables/HistoryTileService.html":{},"components/IndoorDetailViewComponent.html":{},"interfaces/LoginResponse.html":{},"components/PollenflugDetailViewComponent.html":{},"injectables/TextService.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{}}}],["esche",{"_index":2679,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["esche.id",{"_index":2829,"title":{},"body":{"miscellaneous/variables.html":{}}}],["esp",{"_index":882,"title":{},"body":{"interfaces/ESPConfiguration.html":{},"injectables/ESPConfigurationAPIService.html":{},"interfaces/GraphDataSet.html":{},"interfaces/IndoorRoomData.html":{},"interfaces/OutdoorWeatherData.html":{},"interfaces/PollenData.html":{},"interfaces/Tile.html":{},"interfaces/TileArrays.html":{},"interfaces/WeatherData.html":{},"interfaces/WeatherForecastData.html":{},"interfaces/WeatherHistoryByDayData.html":{},"interfaces/WeatherHistoryData.html":{}}}],["espconfig/all",{"_index":884,"title":{},"body":{"interfaces/ESPConfiguration.html":{},"injectables/ESPConfigurationAPIService.html":{}}}],["espconfig/change",{"_index":886,"title":{},"body":{"interfaces/ESPConfiguration.html":{},"injectables/ESPConfigurationAPIService.html":{}}}],["espconfiguration",{"_index":746,"title":{"interfaces/ESPConfiguration.html":{}},"body":{"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"interfaces/ESPConfiguration.html":{},"injectables/ESPConfigurationAPIService.html":{},"coverage.html":{}}}],["espconfigurationapiservice",{"_index":747,"title":{"injectables/ESPConfigurationAPIService.html":{}},"body":{"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"interfaces/ESPConfiguration.html":{},"injectables/ESPConfigurationAPIService.html":{},"coverage.html":{}}}],["espconfigurations",{"_index":804,"title":{},"body":{"components/ConfigurationViewComponent.html":{},"interfaces/ESPConfiguration.html":{},"injectables/ESPConfigurationAPIService.html":{}}}],["espconfigurationservice",{"_index":754,"title":{},"body":{"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{}}}],["evenly",{"_index":1906,"title":{},"body":{"components/OutdoorWeatherViewComponent.html":{}}}],["event",{"_index":2169,"title":{},"body":{"components/SliderElementComponent.html":{}}}],["eventemitter",{"_index":688,"title":{},"body":{"components/CheckboxSwitcherElementComponent.html":{},"components/MenuElementComponent.html":{},"components/SliderElementComponent.html":{}}}],["events",{"_index":2109,"title":{},"body":{"components/ProgressChartElementComponent.html":{}}}],["everytime",{"_index":1885,"title":{},"body":{"components/OutdoorWeatherViewComponent.html":{}}}],["existiert",{"_index":1240,"title":{},"body":{"components/HistoryDetailViewComponent.html":{}}}],["explizit",{"_index":149,"title":{},"body":{"components/AppComponent.html":{}}}],["export",{"_index":86,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CardElementComponent.html":{},"interfaces/CheckTokenResponse.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"interfaces/Credentials.html":{},"components/DashboardScreenComponent.html":{},"components/DetailScreenComponent.html":{},"interfaces/ESPConfiguration.html":{},"injectables/ESPConfigurationAPIService.html":{},"components/ForecastDetailViewComponent.html":{},"interfaces/ForecastResponse.html":{},"components/ForecastTileViewComponent.html":{},"interfaces/GraphDataSet.html":{},"components/HistoryDetailViewComponent.html":{},"injectables/HistoryTileService.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"interfaces/ImageModel.html":{},"injectables/ImageService.html":{},"components/IndoorDetailViewComponent.html":{},"interfaces/IndoorRoomData.html":{},"interfaces/IndoorRoomResponse.html":{},"components/IndoorTileViewComponent.html":{},"injectables/LocalStorageService.html":{},"interfaces/LoginResponse.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"interfaces/OutdoorWeatherData.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"interfaces/OutdoorWeatherResponse.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"interfaces/PollenData.html":{},"components/PollenListElementComponent.html":{},"interfaces/PollenResponse.html":{},"components/PollenTagElementComponent.html":{},"interfaces/PollenType.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"modules/ScreensModule.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"injectables/SpeechService.html":{},"injectables/TextService.html":{},"interfaces/Tile.html":{},"interfaces/TileArrays.html":{},"injectables/TileService.html":{},"components/TtsPlayerElementComponent.html":{},"modules/UiElementsModule.html":{},"interfaces/UserContext.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{},"interfaces/UserIdentifikation.html":{},"modules/ViewsModule.html":{},"injectables/WeatherAPIService.html":{},"interfaces/WeatherData.html":{},"injectables/WeatherDataService.html":{},"interfaces/WeatherForecastData.html":{},"interfaces/WeatherHistoryByDayData.html":{},"interfaces/WeatherHistoryData.html":{}}}],["exports",{"_index":277,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ScreensModule.html":{},"modules/UiElementsModule.html":{},"modules/ViewsModule.html":{},"overview.html":{}}}],["extends",{"_index":1127,"title":{},"body":{"interfaces/GraphDataSet.html":{},"interfaces/IndoorRoomData.html":{},"interfaces/OutdoorWeatherData.html":{},"interfaces/PollenData.html":{},"interfaces/Tile.html":{},"interfaces/TileArrays.html":{},"interfaces/WeatherData.html":{},"interfaces/WeatherForecastData.html":{},"interfaces/WeatherHistoryByDayData.html":{},"interfaces/WeatherHistoryData.html":{}}}],["external",{"_index":1145,"title":{},"body":{"interfaces/GraphDataSet.html":{},"injectables/HistoryTileService.html":{},"interfaces/IndoorRoomData.html":{},"interfaces/OutdoorWeatherData.html":{},"interfaces/PollenData.html":{},"interfaces/Tile.html":{},"interfaces/TileArrays.html":{},"interfaces/WeatherData.html":{},"interfaces/WeatherForecastData.html":{},"interfaces/WeatherHistoryByDayData.html":{},"interfaces/WeatherHistoryData.html":{}}}],["extremwerte",{"_index":2294,"title":{},"body":{"injectables/TextService.html":{}}}],["fallend",{"_index":2260,"title":{},"body":{"injectables/TextService.html":{}}}],["falling",{"_index":2259,"title":{},"body":{"injectables/TextService.html":{}}}],["false",{"_index":61,"title":{},"body":{"components/AppComponent.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/CardElementComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DetailScreenComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"injectables/LocalStorageService.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"interfaces/PollenType.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/SettingsScreenComponent.html":{},"components/TtsPlayerElementComponent.html":{},"interfaces/UserContext.html":{},"interfaces/UserIdentifikation.html":{},"miscellaneous/variables.html":{}}}],["fehler",{"_index":578,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/ESPConfiguration.html":{},"injectables/ESPConfigurationAPIService.html":{},"interfaces/LoginResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{}}}],["fertig",{"_index":1782,"title":{},"body":{"components/MenuElementComponent.html":{},"components/PersonalizationViewComponent.html":{}}}],["field",{"_index":783,"title":{},"body":{"components/ConfigurationTilePopUpDialogView.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CardElementComponent.html":{},"interfaces/CheckTokenResponse.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"interfaces/Credentials.html":{},"components/DashboardScreenComponent.html":{},"components/DetailScreenComponent.html":{},"interfaces/ESPConfiguration.html":{},"injectables/ESPConfigurationAPIService.html":{},"components/ForecastDetailViewComponent.html":{},"interfaces/ForecastResponse.html":{},"components/ForecastTileViewComponent.html":{},"interfaces/GraphDataSet.html":{},"components/HistoryDetailViewComponent.html":{},"injectables/HistoryTileService.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"interfaces/ImageModel.html":{},"injectables/ImageService.html":{},"components/IndoorDetailViewComponent.html":{},"interfaces/IndoorRoomData.html":{},"interfaces/IndoorRoomResponse.html":{},"components/IndoorTileViewComponent.html":{},"injectables/LocalStorageService.html":{},"interfaces/LoginResponse.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"interfaces/OutdoorWeatherData.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"interfaces/OutdoorWeatherResponse.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"interfaces/PollenData.html":{},"components/PollenListElementComponent.html":{},"interfaces/PollenResponse.html":{},"components/PollenTagElementComponent.html":{},"interfaces/PollenType.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"modules/ScreensModule.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"injectables/SpeechService.html":{},"injectables/TextService.html":{},"interfaces/Tile.html":{},"interfaces/TileArrays.html":{},"injectables/TileService.html":{},"components/TtsPlayerElementComponent.html":{},"modules/UiElementsModule.html":{},"interfaces/UserContext.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{},"interfaces/UserIdentifikation.html":{},"modules/ViewsModule.html":{},"injectables/WeatherAPIService.html":{},"interfaces/WeatherData.html":{},"injectables/WeatherDataService.html":{},"interfaces/WeatherForecastData.html":{},"interfaces/WeatherHistoryByDayData.html":{},"interfaces/WeatherHistoryData.html":{},"coverage.html":{}}}],["files",{"_index":2780,"title":{},"body":{"index.html":{}}}],["fill",{"_index":449,"title":{},"body":{"components/BackButtonElementComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{}}}],["filter",{"_index":1481,"title":{},"body":{"injectables/ImageService.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"miscellaneous/variables.html":{}}}],["first",{"_index":325,"title":{},"body":{"modules/AppModule.html":{}}}],["fixed",{"_index":462,"title":{},"body":{"components/CardElementComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/TtsPlayerElementComponent.html":{}}}],["fixme",{"_index":101,"title":{},"body":{"components/AppComponent.html":{},"components/CardElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"injectables/TileService.html":{}}}],["flag",{"_index":2789,"title":{},"body":{"index.html":{}}}],["flex",{"_index":433,"title":{},"body":{"components/BackButtonElementComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/TtsPlayerElementComponent.html":{}}}],["fließschnupfen",{"_index":2039,"title":{},"body":{"components/PollenflugDetailViewComponent.html":{}}}],["fog",{"_index":1488,"title":{},"body":{"injectables/ImageService.html":{},"injectables/TextService.html":{}}}],["font",{"_index":131,"title":{},"body":{"components/AppComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{}}}],["fontsize",{"_index":121,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CheckTokenResponse.html":{},"interfaces/LoginResponse.html":{},"components/PersonalizationSettingsViewComponent.html":{},"interfaces/PollenType.html":{},"interfaces/UserContext.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{},"interfaces/UserIdentifikation.html":{},"miscellaneous/variables.html":{}}}],["forecast",{"_index":209,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DetailScreenComponent.html":{},"components/ForecastDetailViewComponent.html":{},"interfaces/ForecastResponse.html":{},"components/ForecastTileViewComponent.html":{},"interfaces/GraphDataSet.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"interfaces/IndoorRoomData.html":{},"interfaces/IndoorRoomResponse.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"interfaces/OutdoorWeatherData.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"interfaces/OutdoorWeatherResponse.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"interfaces/PollenData.html":{},"components/PollenListElementComponent.html":{},"interfaces/PollenResponse.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"injectables/TextService.html":{},"interfaces/Tile.html":{},"interfaces/TileArrays.html":{},"injectables/TileService.html":{},"components/TtsPlayerElementComponent.html":{},"modules/ViewsModule.html":{},"injectables/WeatherAPIService.html":{},"interfaces/WeatherData.html":{},"injectables/WeatherDataService.html":{},"interfaces/WeatherForecastData.html":{},"interfaces/WeatherHistoryByDayData.html":{},"interfaces/WeatherHistoryData.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["forecastdata",{"_index":1012,"title":{},"body":{"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/TextService.html":{},"injectables/WeatherAPIService.html":{},"injectables/WeatherDataService.html":{}}}],["forecastdata(value",{"_index":2592,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["forecastdetailviewcomponent",{"_index":208,"title":{"components/ForecastDetailViewComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DetailScreenComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{},"modules/ViewsModule.html":{},"coverage.html":{},"overview.html":{}}}],["forecastresponse",{"_index":975,"title":{"interfaces/ForecastResponse.html":{}},"body":{"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/WeatherAPIService.html":{},"coverage.html":{}}}],["forecasttile",{"_index":2680,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["forecasttileviewcomponent",{"_index":210,"title":{"components/ForecastTileViewComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DetailScreenComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{},"modules/ViewsModule.html":{},"coverage.html":{},"overview.html":{}}}],["forecasturl",{"_index":999,"title":{},"body":{"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["forkjoin",{"_index":2562,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["forkjoin([outdoorweather",{"_index":2623,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["form",{"_index":1693,"title":{},"body":{"components/LoginViewComponent.html":{},"components/RegistrationViewComponent.html":{}}}],["formbuilder",{"_index":1662,"title":{},"body":{"components/LoginViewComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/RegistrationViewComponent.html":{}}}],["formcontrol",{"_index":744,"title":{},"body":{"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/RegistrationViewComponent.html":{}}}],["formsmodule",{"_index":2489,"title":{},"body":{"modules/UiElementsModule.html":{},"modules/ViewsModule.html":{}}}],["forschung",{"_index":927,"title":{},"body":{"components/ForecastDetailViewComponent.html":{}}}],["forward",{"_index":1176,"title":{},"body":{"components/HistoryDetailViewComponent.html":{}}}],["fromdate",{"_index":2650,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["full",{"_index":366,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/ImageService.html":{}}}],["function",{"_index":656,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/ForecastResponse.html":{},"injectables/ImageService.html":{},"interfaces/IndoorRoomResponse.html":{},"injectables/LocalStorageService.html":{},"interfaces/LoginResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/TileService.html":{},"components/TtsPlayerElementComponent.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{},"injectables/WeatherAPIService.html":{},"injectables/WeatherDataService.html":{}}}],["funktionieren",{"_index":1667,"title":{},"body":{"components/LoginViewComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{}}}],["further",{"_index":1303,"title":{},"body":{"injectables/HistoryTileService.html":{},"index.html":{}}}],["fühlen",{"_index":2292,"title":{},"body":{"injectables/TextService.html":{}}}],["für",{"_index":1558,"title":{},"body":{"components/IndoorDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PollenflugDetailViewComponent.html":{}}}],["gasval",{"_index":1106,"title":{},"body":{"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["geben",{"_index":817,"title":{},"body":{"components/ConfigurationViewComponent.html":{}}}],["gebiet",{"_index":960,"title":{},"body":{"components/ForecastDetailViewComponent.html":{}}}],["gefühlte",{"_index":1151,"title":{},"body":{"interfaces/GraphDataSet.html":{},"interfaces/IndoorRoomData.html":{},"interfaces/OutdoorWeatherData.html":{},"interfaces/PollenData.html":{},"interfaces/Tile.html":{},"interfaces/TileArrays.html":{},"interfaces/WeatherData.html":{},"interfaces/WeatherForecastData.html":{},"interfaces/WeatherHistoryByDayData.html":{},"interfaces/WeatherHistoryData.html":{}}}],["gefühlten",{"_index":1849,"title":{},"body":{"components/OutdoorWeatherDetailViewComponent.html":{}}}],["gegenstand",{"_index":923,"title":{},"body":{"components/ForecastDetailViewComponent.html":{}}}],["geklärt",{"_index":1574,"title":{},"body":{"components/IndoorDetailViewComponent.html":{}}}],["gemeint",{"_index":969,"title":{},"body":{"components/ForecastDetailViewComponent.html":{}}}],["generate",{"_index":2782,"title":{},"body":{"index.html":{}}}],["generated",{"_index":2768,"title":{},"body":{"index.html":{}}}],["gerade",{"_index":2303,"title":{},"body":{"injectables/TextService.html":{}}}],["gering",{"_index":1985,"title":{},"body":{"components/PollenTagElementComponent.html":{}}}],["geringer",{"_index":1846,"title":{},"body":{"components/OutdoorWeatherDetailViewComponent.html":{}}}],["gesamte",{"_index":972,"title":{},"body":{"components/ForecastDetailViewComponent.html":{}}}],["gesundheit",{"_index":1559,"title":{},"body":{"components/IndoorDetailViewComponent.html":{}}}],["getaveragehumiditystring",{"_index":1177,"title":{},"body":{"components/HistoryDetailViewComponent.html":{}}}],["getaveragetempstring",{"_index":1178,"title":{},"body":{"components/HistoryDetailViewComponent.html":{}}}],["getcheckedimagesrc",{"_index":677,"title":{},"body":{"components/CheckboxSwitcherElementComponent.html":{}}}],["getdashboardtilessubject",{"_index":2526,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["getdatestringfromdate(date",{"_index":1360,"title":{},"body":{"injectables/HistoryTileService.html":{}}}],["getdaytime",{"_index":1512,"title":{},"body":{"injectables/ImageService.html":{}}}],["getdisablelogin",{"_index":1618,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["getforecastdatasubject",{"_index":2527,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["getforecastdescription",{"_index":1108,"title":{},"body":{"components/ForecastTileViewComponent.html":{}}}],["getforecasticon",{"_index":1109,"title":{},"body":{"components/ForecastTileViewComponent.html":{}}}],["getforecasttitle",{"_index":1110,"title":{},"body":{"components/ForecastTileViewComponent.html":{}}}],["getgradient",{"_index":1869,"title":{},"body":{"components/OutdoorWeatherViewComponent.html":{}}}],["getgradientstylefor",{"_index":1454,"title":{},"body":{"injectables/ImageService.html":{}}}],["getgradientstylefor(weather",{"_index":1458,"title":{},"body":{"injectables/ImageService.html":{}}}],["gethistorydatasetdaysperweekfrom",{"_index":1288,"title":{},"body":{"injectables/HistoryTileService.html":{}}}],["gethistorydatasetdaysperweekfrom(weatherhistorydata",{"_index":1291,"title":{},"body":{"injectables/HistoryTileService.html":{}}}],["gethistorydatasethoursperdayfrom",{"_index":1289,"title":{},"body":{"injectables/HistoryTileService.html":{}}}],["gethistorydatasethoursperdayfrom(weatherhistorydata",{"_index":1308,"title":{},"body":{"injectables/HistoryTileService.html":{}}}],["gethistorydatasubject",{"_index":2528,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["gethourstring(hour",{"_index":1351,"title":{},"body":{"injectables/HistoryTileService.html":{}}}],["getimagesrcfrom",{"_index":1455,"title":{},"body":{"injectables/ImageService.html":{}}}],["getimagesrcfrom(imagemodel",{"_index":1465,"title":{},"body":{"injectables/ImageService.html":{}}}],["getindex",{"_index":1201,"title":{},"body":{"components/HistoryDetailViewComponent.html":{}}}],["getindexoftilein(tilesarray",{"_index":2396,"title":{},"body":{"injectables/TileService.html":{}}}],["getindoorroomtilessubject",{"_index":2575,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["getindoortilessubject",{"_index":2529,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["getitem(key",{"_index":1646,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["getlocation",{"_index":1701,"title":{},"body":{"components/MenuBarElementComponent.html":{}}}],["getoutdoorweatherdatasubject",{"_index":2530,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["getpollenstringat",{"_index":1924,"title":{},"body":{"components/PersonalizationSettingsViewComponent.html":{}}}],["getpollenstringat(index",{"_index":1933,"title":{},"body":{"components/PersonalizationSettingsViewComponent.html":{}}}],["getpollentilessubject",{"_index":2531,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["getpollenvalueat",{"_index":1925,"title":{},"body":{"components/PersonalizationSettingsViewComponent.html":{}}}],["getpollenvalueat(index",{"_index":1935,"title":{},"body":{"components/PersonalizationSettingsViewComponent.html":{}}}],["getprioritiyof(data",{"_index":2376,"title":{},"body":{"injectables/TileService.html":{}}}],["getter",{"_index":2579,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["getthemestringat",{"_index":1926,"title":{},"body":{"components/PersonalizationSettingsViewComponent.html":{}}}],["getthemestringat(index",{"_index":1937,"title":{},"body":{"components/PersonalizationSettingsViewComponent.html":{}}}],["getthemetypeat",{"_index":1927,"title":{},"body":{"components/PersonalizationSettingsViewComponent.html":{}}}],["getthemetypeat(index",{"_index":1939,"title":{},"body":{"components/PersonalizationSettingsViewComponent.html":{}}}],["getthemetypefromserverresponse(theme",{"_index":666,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/LoginResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{}}}],["getting",{"_index":2764,"title":{"index.html":{}},"body":{}}],["getuncheckedimagesrc",{"_index":678,"title":{},"body":{"components/CheckboxSwitcherElementComponent.html":{}}}],["getusercontext",{"_index":1609,"title":{},"body":{"injectables/LocalStorageService.html":{},"components/PersonalizationSettingsViewComponent.html":{}}}],["getuserid",{"_index":1614,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["getuserloggedin",{"_index":1765,"title":{},"body":{"components/MenuElementComponent.html":{}}}],["getweatherdescription",{"_index":1870,"title":{},"body":{"components/OutdoorWeatherViewComponent.html":{}}}],["getweathericonstring",{"_index":1456,"title":{},"body":{"injectables/ImageService.html":{}}}],["getweathericonstring(weather",{"_index":1469,"title":{},"body":{"injectables/ImageService.html":{}}}],["getweatherimage",{"_index":1871,"title":{},"body":{"components/OutdoorWeatherViewComponent.html":{}}}],["getweekdaystringfromdate(date",{"_index":1356,"title":{},"body":{"injectables/HistoryTileService.html":{}}}],["getweeknumber(inputdate",{"_index":1363,"title":{},"body":{"injectables/HistoryTileService.html":{}}}],["getweekstringfromweeknumber(week",{"_index":1353,"title":{},"body":{"injectables/HistoryTileService.html":{}}}],["gewandelt",{"_index":2010,"title":{},"body":{"interfaces/PollenType.html":{},"interfaces/UserContext.html":{},"interfaces/UserIdentifikation.html":{}}}],["gewitter",{"_index":2314,"title":{},"body":{"injectables/TextService.html":{}}}],["gezielte",{"_index":2077,"title":{},"body":{"components/PollenflugDetailViewComponent.html":{}}}],["gibt",{"_index":1575,"title":{},"body":{"components/IndoorDetailViewComponent.html":{},"components/PollenflugDetailViewComponent.html":{}}}],["go",{"_index":2792,"title":{},"body":{"index.html":{}}}],["goback",{"_index":414,"title":{},"body":{"components/BackButtonElementComponent.html":{}}}],["good",{"_index":1236,"title":{},"body":{"components/HistoryDetailViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"interfaces/PollenType.html":{},"interfaces/UserContext.html":{},"interfaces/UserIdentifikation.html":{}}}],["grad",{"_index":2272,"title":{},"body":{"injectables/TextService.html":{}}}],["gradient",{"_index":1461,"title":{},"body":{"injectables/ImageService.html":{},"components/LoginViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/ProgressChartElementComponent.html":{}}}],["gradient(0deg",{"_index":1518,"title":{},"body":{"injectables/ImageService.html":{},"components/LoginViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"miscellaneous/variables.html":{}}}],["gradient(170deg",{"_index":1530,"title":{},"body":{"injectables/ImageService.html":{},"miscellaneous/variables.html":{}}}],["gradient(90deg",{"_index":2112,"title":{},"body":{"components/ProgressChartElementComponent.html":{}}}],["gradients",{"_index":1516,"title":{},"body":{"injectables/ImageService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["gradients.dawn",{"_index":1498,"title":{},"body":{"injectables/ImageService.html":{}}}],["gradients.dawndark",{"_index":1494,"title":{},"body":{"injectables/ImageService.html":{}}}],["gradients.highcontrast",{"_index":1483,"title":{},"body":{"injectables/ImageService.html":{}}}],["gradients.night",{"_index":1499,"title":{},"body":{"injectables/ImageService.html":{}}}],["gradients.nightdark",{"_index":1496,"title":{},"body":{"injectables/ImageService.html":{}}}],["gradients.noon",{"_index":1497,"title":{},"body":{"injectables/ImageService.html":{}}}],["gradients.noondark",{"_index":1492,"title":{},"body":{"injectables/ImageService.html":{}}}],["graph",{"_index":2799,"title":{},"body":{"modules.html":{}}}],["graphdataset",{"_index":1125,"title":{"interfaces/GraphDataSet.html":{}},"body":{"interfaces/GraphDataSet.html":{},"components/HistoryDetailViewComponent.html":{},"injectables/HistoryTileService.html":{},"components/HistoryTileViewComponent.html":{},"interfaces/IndoorRoomData.html":{},"interfaces/OutdoorWeatherData.html":{},"interfaces/PollenData.html":{},"interfaces/Tile.html":{},"interfaces/TileArrays.html":{},"injectables/TileService.html":{},"interfaces/WeatherData.html":{},"interfaces/WeatherForecastData.html":{},"interfaces/WeatherHistoryByDayData.html":{},"interfaces/WeatherHistoryData.html":{},"coverage.html":{}}}],["graphtype",{"_index":1173,"title":{},"body":{"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{}}}],["graphtype(type",{"_index":1424,"title":{},"body":{"components/HistoryTileViewComponent.html":{}}}],["graupelt",{"_index":2302,"title":{},"body":{"injectables/TextService.html":{}}}],["green",{"_index":1997,"title":{},"body":{"components/PollenTagElementComponent.html":{},"components/PollenflugSmallTileComponent.html":{}}}],["group",{"_index":2422,"title":{},"body":{"components/TtsPlayerElementComponent.html":{},"miscellaneous/variables.html":{}}}],["grows",{"_index":465,"title":{},"body":{"components/CardElementComponent.html":{}}}],["großteil",{"_index":1549,"title":{},"body":{"components/IndoorDetailViewComponent.html":{}}}],["grundlagen",{"_index":1557,"title":{},"body":{"components/IndoorDetailViewComponent.html":{}}}],["gräser",{"_index":2827,"title":{},"body":{"miscellaneous/variables.html":{}}}],["gute",{"_index":1553,"title":{},"body":{"components/IndoorDetailViewComponent.html":{}}}],["gutes",{"_index":1562,"title":{},"body":{"components/IndoorDetailViewComponent.html":{}}}],["h1",{"_index":403,"title":{},"body":{"components/ApparentTemperatureTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/SimpleTileViewComponent.html":{}}}],["h1.motion",{"_index":1723,"title":{},"body":{"components/MenuBarElementComponent.html":{}}}],["h3",{"_index":484,"title":{},"body":{"components/CardElementComponent.html":{}}}],["h5",{"_index":1690,"title":{},"body":{"components/LoginViewComponent.html":{}}}],["haben",{"_index":2278,"title":{},"body":{"injectables/TextService.html":{}}}],["hacky",{"_index":2418,"title":{},"body":{"components/TtsPlayerElementComponent.html":{}}}],["hagelt",{"_index":2313,"title":{},"body":{"injectables/TextService.html":{}}}],["hail",{"_index":2312,"title":{},"body":{"injectables/TextService.html":{}}}],["hasel",{"_index":2681,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["hat",{"_index":2271,"title":{},"body":{"injectables/TextService.html":{}}}],["hängt",{"_index":1270,"title":{},"body":{"components/HistoryDetailViewComponent.html":{}}}],["häufig",{"_index":1248,"title":{},"body":{"components/HistoryDetailViewComponent.html":{}}}],["hdm",{"_index":1680,"title":{},"body":{"components/LoginViewComponent.html":{}}}],["headers",{"_index":591,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/LoginResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{}}}],["height",{"_index":171,"title":{},"body":{"components/AppComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DetailScreenComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SettingsScreenComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{}}}],["help",{"_index":2791,"title":{},"body":{"index.html":{}}}],["helper",{"_index":655,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"injectables/LocalStorageService.html":{},"interfaces/LoginResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/TileService.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{},"injectables/WeatherAPIService.html":{},"injectables/WeatherDataService.html":{}}}],["here",{"_index":2014,"title":{},"body":{"interfaces/PollenType.html":{},"injectables/TileService.html":{},"interfaces/UserContext.html":{},"interfaces/UserIdentifikation.html":{}}}],["herrschenden",{"_index":1826,"title":{},"body":{"components/OutdoorWeatherDetailViewComponent.html":{}}}],["heute",{"_index":2279,"title":{},"body":{"injectables/TextService.html":{}}}],["heutigen",{"_index":2293,"title":{},"body":{"injectables/TextService.html":{}}}],["hidesubtitle",{"_index":380,"title":{},"body":{"components/ApparentTemperatureTileViewComponent.html":{},"components/CardElementComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{}}}],["hier",{"_index":1022,"title":{},"body":{"interfaces/ForecastResponse.html":{},"injectables/HistoryTileService.html":{},"components/IndoorDetailViewComponent.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["high",{"_index":1140,"title":{},"body":{"interfaces/GraphDataSet.html":{},"interfaces/IndoorRoomData.html":{},"interfaces/OutdoorWeatherData.html":{},"components/OutdoorWeatherViewComponent.html":{},"interfaces/PollenData.html":{},"interfaces/Tile.html":{},"interfaces/TileArrays.html":{},"interfaces/WeatherData.html":{},"interfaces/WeatherForecastData.html":{},"interfaces/WeatherHistoryByDayData.html":{},"interfaces/WeatherHistoryData.html":{},"miscellaneous/enumerations.html":{}}}],["high.png",{"_index":1760,"title":{},"body":{"components/MenuElementComponent.html":{}}}],["highcontrast",{"_index":671,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/ImageModel.html":{},"injectables/ImageService.html":{},"interfaces/LoginResponse.html":{},"components/MenuElementComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"interfaces/PollenType.html":{},"interfaces/UserContext.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{},"interfaces/UserIdentifikation.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["higher",{"_index":2374,"title":{},"body":{"injectables/TileService.html":{}}}],["highest",{"_index":1139,"title":{},"body":{"interfaces/GraphDataSet.html":{},"interfaces/IndoorRoomData.html":{},"interfaces/OutdoorWeatherData.html":{},"interfaces/PollenData.html":{},"interfaces/Tile.html":{},"interfaces/TileArrays.html":{},"interfaces/WeatherData.html":{},"interfaces/WeatherForecastData.html":{},"interfaces/WeatherHistoryByDayData.html":{},"interfaces/WeatherHistoryData.html":{}}}],["hin",{"_index":2042,"title":{},"body":{"components/PollenflugDetailViewComponent.html":{}}}],["hinzu",{"_index":2045,"title":{},"body":{"components/PollenflugDetailViewComponent.html":{}}}],["history",{"_index":212,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DetailScreenComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"interfaces/GraphDataSet.html":{},"components/HistoryDetailViewComponent.html":{},"injectables/HistoryTileService.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"interfaces/IndoorRoomData.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"interfaces/OutdoorWeatherData.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"interfaces/PollenData.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"interfaces/Tile.html":{},"interfaces/TileArrays.html":{},"injectables/TileService.html":{},"components/TtsPlayerElementComponent.html":{},"modules/ViewsModule.html":{},"interfaces/WeatherData.html":{},"injectables/WeatherDataService.html":{},"interfaces/WeatherForecastData.html":{},"interfaces/WeatherHistoryByDayData.html":{},"interfaces/WeatherHistoryData.html":{},"miscellaneous/enumerations.html":{}}}],["historydata",{"_index":2595,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["historydata(value",{"_index":2597,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["historydata.datapoints.concat(data.datapoints",{"_index":2648,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["historydetailviewcomponent",{"_index":211,"title":{"components/HistoryDetailViewComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DetailScreenComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{},"modules/ViewsModule.html":{},"coverage.html":{},"overview.html":{}}}],["historygraphtype",{"_index":1197,"title":{},"body":{"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"miscellaneous/enumerations.html":{}}}],["historygraphtype.humidity",{"_index":1438,"title":{},"body":{"components/HistoryTileViewComponent.html":{}}}],["historygraphtype.temperature",{"_index":1417,"title":{},"body":{"components/HistoryTileViewComponent.html":{}}}],["historytileservice",{"_index":1184,"title":{"injectables/HistoryTileService.html":{}},"body":{"components/HistoryDetailViewComponent.html":{},"injectables/HistoryTileService.html":{},"injectables/TileService.html":{},"coverage.html":{}}}],["historytileviewcomponent",{"_index":213,"title":{"components/HistoryTileViewComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DetailScreenComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{},"modules/ViewsModule.html":{},"coverage.html":{},"overview.html":{}}}],["historyurl",{"_index":997,"title":{},"body":{"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["hoch",{"_index":1993,"title":{},"body":{"components/PollenTagElementComponent.html":{}}}],["hohe",{"_index":2282,"title":{},"body":{"injectables/TextService.html":{}}}],["hohem",{"_index":1839,"title":{},"body":{"components/OutdoorWeatherDetailViewComponent.html":{}}}],["hour",{"_index":1349,"title":{},"body":{"injectables/HistoryTileService.html":{}}}],["hours",{"_index":1310,"title":{},"body":{"injectables/HistoryTileService.html":{}}}],["hover",{"_index":490,"title":{},"body":{"components/CardElementComponent.html":{}}}],["hover:active",{"_index":505,"title":{},"body":{"components/CardElementComponent.html":{}}}],["hover:focus",{"_index":504,"title":{},"body":{"components/CardElementComponent.html":{}}}],["hover:hover",{"_index":503,"title":{},"body":{"components/CardElementComponent.html":{}}}],["hsitory",{"_index":2542,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["html",{"_index":181,"title":{},"body":{"components/AppComponent.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DetailScreenComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{}}}],["http",{"_index":37,"title":{},"body":{"components/AppComponent.html":{}}}],["http://192.168.178.47:4201/v1",{"_index":2836,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://localhost:4200",{"_index":2778,"title":{},"body":{"index.html":{}}}],["httpclient",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CheckTokenResponse.html":{},"interfaces/ESPConfiguration.html":{},"injectables/ESPConfigurationAPIService.html":{},"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/LoginResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["httpclientmodule",{"_index":291,"title":{},"body":{"modules/AppModule.html":{}}}],["httpheaders",{"_index":518,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/LoginResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{}}}],["httpoptions",{"_index":590,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/LoginResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{}}}],["httpparams",{"_index":519,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/LoginResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{}}}],["httpparams().set('id",{"_index":619,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/LoginResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{}}}],["humidity",{"_index":215,"title":{},"body":{"components/AppComponent.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DetailScreenComponent.html":{},"components/ForecastDetailViewComponent.html":{},"interfaces/ForecastResponse.html":{},"components/ForecastTileViewComponent.html":{},"interfaces/GraphDataSet.html":{},"components/HistoryDetailViewComponent.html":{},"injectables/HistoryTileService.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"interfaces/IndoorRoomData.html":{},"interfaces/IndoorRoomResponse.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"interfaces/OutdoorWeatherData.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"interfaces/OutdoorWeatherResponse.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"interfaces/PollenData.html":{},"components/PollenListElementComponent.html":{},"interfaces/PollenResponse.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"injectables/TextService.html":{},"interfaces/Tile.html":{},"interfaces/TileArrays.html":{},"injectables/TileService.html":{},"components/TtsPlayerElementComponent.html":{},"modules/ViewsModule.html":{},"injectables/WeatherAPIService.html":{},"interfaces/WeatherData.html":{},"interfaces/WeatherForecastData.html":{},"interfaces/WeatherHistoryByDayData.html":{},"interfaces/WeatherHistoryData.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["humidityaverage",{"_index":1128,"title":{},"body":{"interfaces/GraphDataSet.html":{},"injectables/HistoryTileService.html":{},"interfaces/IndoorRoomData.html":{},"interfaces/OutdoorWeatherData.html":{},"interfaces/PollenData.html":{},"interfaces/Tile.html":{},"interfaces/TileArrays.html":{},"interfaces/WeatherData.html":{},"interfaces/WeatherForecastData.html":{},"interfaces/WeatherHistoryByDayData.html":{},"interfaces/WeatherHistoryData.html":{}}}],["humiditydata",{"_index":1381,"title":{},"body":{"injectables/HistoryTileService.html":{}}}],["humiditydata.length",{"_index":1391,"title":{},"body":{"injectables/HistoryTileService.html":{}}}],["humiditydata.reduce(function",{"_index":1388,"title":{},"body":{"injectables/HistoryTileService.html":{}}}],["humiditydata.reverse",{"_index":1393,"title":{},"body":{"injectables/HistoryTileService.html":{}}}],["humiditydatapoints",{"_index":1129,"title":{},"body":{"interfaces/GraphDataSet.html":{},"injectables/HistoryTileService.html":{},"interfaces/IndoorRoomData.html":{},"interfaces/OutdoorWeatherData.html":{},"interfaces/PollenData.html":{},"interfaces/Tile.html":{},"interfaces/TileArrays.html":{},"interfaces/WeatherData.html":{},"interfaces/WeatherForecastData.html":{},"interfaces/WeatherHistoryByDayData.html":{},"interfaces/WeatherHistoryData.html":{}}}],["humiditydatapoints.push(math.round(averagehumidity",{"_index":1332,"title":{},"body":{"injectables/HistoryTileService.html":{}}}],["humiditysum",{"_index":1387,"title":{},"body":{"injectables/HistoryTileService.html":{}}}],["humiditysumofweek",{"_index":1325,"title":{},"body":{"injectables/HistoryTileService.html":{}}}],["humiditytile",{"_index":2339,"title":{},"body":{"injectables/TileService.html":{}}}],["humiditytileviewcomponent",{"_index":214,"title":{"components/HumidityTileViewComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DetailScreenComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{},"modules/ViewsModule.html":{},"coverage.html":{},"overview.html":{}}}],["hyphens",{"_index":1792,"title":{},"body":{"components/MenuElementComponent.html":{}}}],["hält",{"_index":1547,"title":{},"body":{"components/IndoorDetailViewComponent.html":{}}}],["höher",{"_index":1844,"title":{},"body":{"components/OutdoorWeatherDetailViewComponent.html":{}}}],["icon",{"_index":729,"title":{},"body":{"components/CheckboxSwitcherElementComponent.html":{},"injectables/ImageService.html":{},"components/MenuElementComponent.html":{},"components/TtsPlayerElementComponent.html":{}}}],["iconstring",{"_index":1116,"title":{},"body":{"components/ForecastTileViewComponent.html":{}}}],["id",{"_index":572,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/ESPConfiguration.html":{},"injectables/ESPConfigurationAPIService.html":{},"interfaces/ForecastResponse.html":{},"interfaces/GraphDataSet.html":{},"interfaces/IndoorRoomData.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/LoginResponse.html":{},"interfaces/OutdoorWeatherData.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenData.html":{},"interfaces/PollenResponse.html":{},"interfaces/PollenType.html":{},"interfaces/Tile.html":{},"interfaces/TileArrays.html":{},"injectables/TileService.html":{},"interfaces/UserContext.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{},"interfaces/UserIdentifikation.html":{},"injectables/WeatherAPIService.html":{},"interfaces/WeatherData.html":{},"interfaces/WeatherForecastData.html":{},"interfaces/WeatherHistoryByDayData.html":{},"interfaces/WeatherHistoryData.html":{},"miscellaneous/variables.html":{}}}],["identifier",{"_index":1652,"title":{},"body":{"injectables/LocalStorageService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["identifikation",{"_index":551,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"injectables/LocalStorageService.html":{},"interfaces/LoginResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{},"miscellaneous/variables.html":{}}}],["if(!data",{"_index":1948,"title":{},"body":{"components/PersonalizationSettingsViewComponent.html":{}}}],["if(!result.success",{"_index":1806,"title":{},"body":{"components/OpenAPELoginTileViewComponent.html":{}}}],["if(!this.reducemotion",{"_index":1889,"title":{},"body":{"components/OutdoorWeatherViewComponent.html":{}}}],["if(array",{"_index":2228,"title":{},"body":{"injectables/TextService.html":{}}}],["if(body",{"_index":566,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/ESPConfiguration.html":{},"injectables/ESPConfigurationAPIService.html":{},"interfaces/LoginResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{}}}],["if(body.id",{"_index":605,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/LoginResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{}}}],["if(body.success",{"_index":567,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/LoginResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{}}}],["if(data",{"_index":1707,"title":{},"body":{"components/MenuBarElementComponent.html":{},"injectables/TextService.html":{}}}],["if(data.success",{"_index":1673,"title":{},"body":{"components/LoginViewComponent.html":{},"components/RegistrationViewComponent.html":{}}}],["if(dayhour",{"_index":1515,"title":{},"body":{"injectables/ImageService.html":{}}}],["if(disableopenapevalue",{"_index":1639,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["if(historydata",{"_index":2647,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["if(indexintilesarray",{"_index":2394,"title":{},"body":{"injectables/TileService.html":{}}}],["if(lastdate.getdate",{"_index":1327,"title":{},"body":{"injectables/HistoryTileService.html":{}}}],["if(lastdate.gethours",{"_index":1344,"title":{},"body":{"injectables/HistoryTileService.html":{}}}],["if(lastweek",{"_index":1335,"title":{},"body":{"injectables/HistoryTileService.html":{}}}],["if(oldesthistorydate.getmonth",{"_index":2653,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["if(password",{"_index":2147,"title":{},"body":{"components/RegistrationViewComponent.html":{}}}],["if(pollendata",{"_index":2641,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["if(preferredpollen.length",{"_index":2348,"title":{},"body":{"injectables/TileService.html":{}}}],["if(response",{"_index":599,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/LoginResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{}}}],["if(scrollvalue",{"_index":1897,"title":{},"body":{"components/OutdoorWeatherViewComponent.html":{}}}],["if(service.isoutputrunning",{"_index":2419,"title":{},"body":{"components/TtsPlayerElementComponent.html":{}}}],["if(this._dataset",{"_index":1426,"title":{},"body":{"components/HistoryTileViewComponent.html":{}}}],["if(this._weatherhistory",{"_index":1219,"title":{},"body":{"components/HistoryDetailViewComponent.html":{}}}],["if(this.dataset",{"_index":1211,"title":{},"body":{"components/HistoryDetailViewComponent.html":{}}}],["if(this.espconfiguration",{"_index":761,"title":{},"body":{"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{}}}],["if(this.index",{"_index":1228,"title":{},"body":{"components/HistoryDetailViewComponent.html":{}}}],["if(this.isbackpossible",{"_index":1227,"title":{},"body":{"components/HistoryDetailViewComponent.html":{}}}],["if(this.isforwardpossible",{"_index":1226,"title":{},"body":{"components/HistoryDetailViewComponent.html":{}}}],["if(this.outdoorweather",{"_index":1901,"title":{},"body":{"components/OutdoorWeatherViewComponent.html":{}}}],["if(this.selectedtimeinterval",{"_index":1220,"title":{},"body":{"components/HistoryDetailViewComponent.html":{}}}],["if(this.systemtheme",{"_index":708,"title":{},"body":{"components/CheckboxSwitcherElementComponent.html":{},"injectables/ImageService.html":{}}}],["if(this.usercontext?.theme",{"_index":1482,"title":{},"body":{"injectables/ImageService.html":{}}}],["if(this.usercontextdata",{"_index":1952,"title":{},"body":{"components/PersonalizationSettingsViewComponent.html":{}}}],["if(usercontexttheme",{"_index":707,"title":{},"body":{"components/CheckboxSwitcherElementComponent.html":{}}}],["if(weather",{"_index":1502,"title":{},"body":{"injectables/ImageService.html":{}}}],["im",{"_index":1835,"title":{},"body":{"components/OutdoorWeatherDetailViewComponent.html":{},"injectables/TextService.html":{}}}],["image",{"_index":439,"title":{},"body":{"components/BackButtonElementComponent.html":{},"components/ForecastTileViewComponent.html":{},"injectables/ImageService.html":{},"components/IndoorTileViewComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/OutdoorWeatherViewComponent.html":{}}}],["image.motion",{"_index":1739,"title":{},"body":{"components/MenuButtonElementComponent.html":{},"components/OutdoorWeatherViewComponent.html":{}}}],["imagemodel",{"_index":422,"title":{"interfaces/ImageModel.html":{}},"body":{"components/BackButtonElementComponent.html":{},"interfaces/ImageModel.html":{},"injectables/ImageService.html":{},"components/MenuElementComponent.html":{},"coverage.html":{}}}],["imagemodel.dark",{"_index":1478,"title":{},"body":{"injectables/ImageService.html":{}}}],["imagemodel.highcontrast",{"_index":1480,"title":{},"body":{"injectables/ImageService.html":{}}}],["imagemodel.light",{"_index":1479,"title":{},"body":{"injectables/ImageService.html":{}}}],["imageservice",{"_index":413,"title":{"injectables/ImageService.html":{}},"body":{"components/BackButtonElementComponent.html":{},"components/ForecastTileViewComponent.html":{},"injectables/ImageService.html":{},"components/MenuElementComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"coverage.html":{}}}],["implement",{"_index":2381,"title":{},"body":{"injectables/TileService.html":{}}}],["implemented",{"_index":862,"title":{},"body":{"components/DashboardScreenComponent.html":{},"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"components/PollenflugDetailViewComponent.html":{},"injectables/TextService.html":{},"injectables/WeatherAPIService.html":{}}}],["implementes",{"_index":991,"title":{},"body":{"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["implements",{"_index":372,"title":{},"body":{"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CardElementComponent.html":{},"interfaces/CheckTokenResponse.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DetailScreenComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"interfaces/LoginResponse.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{}}}],["import",{"_index":69,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CardElementComponent.html":{},"interfaces/CheckTokenResponse.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DetailScreenComponent.html":{},"interfaces/ESPConfiguration.html":{},"injectables/ESPConfigurationAPIService.html":{},"components/ForecastDetailViewComponent.html":{},"interfaces/ForecastResponse.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"injectables/HistoryTileService.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"injectables/ImageService.html":{},"components/IndoorDetailViewComponent.html":{},"interfaces/IndoorRoomResponse.html":{},"components/IndoorTileViewComponent.html":{},"injectables/LocalStorageService.html":{},"interfaces/LoginResponse.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"interfaces/OutdoorWeatherResponse.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenListElementComponent.html":{},"interfaces/PollenResponse.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"modules/ScreensModule.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"injectables/SpeechService.html":{},"injectables/TextService.html":{},"injectables/TileService.html":{},"components/TtsPlayerElementComponent.html":{},"modules/UiElementsModule.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{},"modules/ViewsModule.html":{},"injectables/WeatherAPIService.html":{},"injectables/WeatherDataService.html":{}}}],["important",{"_index":1138,"title":{},"body":{"interfaces/GraphDataSet.html":{},"interfaces/IndoorRoomData.html":{},"interfaces/OutdoorWeatherData.html":{},"interfaces/PollenData.html":{},"interfaces/Tile.html":{},"interfaces/TileArrays.html":{},"interfaces/WeatherData.html":{},"injectables/WeatherDataService.html":{},"interfaces/WeatherForecastData.html":{},"interfaces/WeatherHistoryByDayData.html":{},"interfaces/WeatherHistoryData.html":{},"miscellaneous/enumerations.html":{}}}],["imports",{"_index":290,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ScreensModule.html":{},"modules/UiElementsModule.html":{},"modules/ViewsModule.html":{}}}],["include",{"_index":1726,"title":{},"body":{"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{}}}],["including",{"_index":2565,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["index",{"_index":19,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CardElementComponent.html":{},"interfaces/CheckTokenResponse.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"interfaces/Credentials.html":{},"components/DashboardScreenComponent.html":{},"components/DetailScreenComponent.html":{},"interfaces/ESPConfiguration.html":{},"injectables/ESPConfigurationAPIService.html":{},"components/ForecastDetailViewComponent.html":{},"interfaces/ForecastResponse.html":{},"components/ForecastTileViewComponent.html":{},"interfaces/GraphDataSet.html":{},"components/HistoryDetailViewComponent.html":{},"injectables/HistoryTileService.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"interfaces/ImageModel.html":{},"injectables/ImageService.html":{},"components/IndoorDetailViewComponent.html":{},"interfaces/IndoorRoomData.html":{},"interfaces/IndoorRoomResponse.html":{},"components/IndoorTileViewComponent.html":{},"injectables/LocalStorageService.html":{},"interfaces/LoginResponse.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"interfaces/OutdoorWeatherData.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"interfaces/OutdoorWeatherResponse.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"interfaces/PollenData.html":{},"components/PollenListElementComponent.html":{},"interfaces/PollenResponse.html":{},"components/PollenTagElementComponent.html":{},"interfaces/PollenType.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"injectables/SpeechService.html":{},"injectables/TextService.html":{},"interfaces/Tile.html":{},"interfaces/TileArrays.html":{},"injectables/TileService.html":{},"components/TtsPlayerElementComponent.html":{},"interfaces/UserContext.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{},"interfaces/UserIdentifikation.html":{},"injectables/WeatherAPIService.html":{},"injectables/WeatherDataService.html":{},"interfaces/WeatherForecastData.html":{},"interfaces/WeatherHistoryByDayData.html":{},"interfaces/WeatherHistoryData.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["index(value",{"_index":1209,"title":{},"body":{"components/HistoryDetailViewComponent.html":{}}}],["indexintilesarray",{"_index":2391,"title":{},"body":{"injectables/TileService.html":{}}}],["individuell",{"_index":2051,"title":{},"body":{"components/PollenflugDetailViewComponent.html":{}}}],["indoor",{"_index":217,"title":{},"body":{"components/AppComponent.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DetailScreenComponent.html":{},"components/ForecastDetailViewComponent.html":{},"interfaces/ForecastResponse.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"interfaces/IndoorRoomResponse.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"interfaces/OutdoorWeatherResponse.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenListElementComponent.html":{},"interfaces/PollenResponse.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"injectables/TileService.html":{},"components/TtsPlayerElementComponent.html":{},"modules/ViewsModule.html":{},"injectables/WeatherAPIService.html":{},"injectables/WeatherDataService.html":{}}}],["indoorairquality",{"_index":982,"title":{},"body":{"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/WeatherAPIService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["indoorairquality2",{"_index":2682,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["indoorarray",{"_index":2237,"title":{},"body":{"injectables/TextService.html":{}}}],["indoordata",{"_index":1020,"title":{},"body":{"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["indoordetailviewcomponent",{"_index":216,"title":{"components/IndoorDetailViewComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DetailScreenComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{},"modules/ViewsModule.html":{},"coverage.html":{},"overview.html":{}}}],["indoorroom",{"_index":1133,"title":{},"body":{"interfaces/GraphDataSet.html":{},"interfaces/IndoorRoomData.html":{},"interfaces/OutdoorWeatherData.html":{},"interfaces/PollenData.html":{},"interfaces/Tile.html":{},"interfaces/TileArrays.html":{},"injectables/TileService.html":{},"interfaces/WeatherData.html":{},"injectables/WeatherDataService.html":{},"interfaces/WeatherForecastData.html":{},"interfaces/WeatherHistoryByDayData.html":{},"interfaces/WeatherHistoryData.html":{},"miscellaneous/enumerations.html":{}}}],["indoorroom1",{"_index":2683,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["indoorroom2",{"_index":2684,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["indoorroom]).subscribe(results",{"_index":2624,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["indoorroomdata",{"_index":988,"title":{"interfaces/IndoorRoomData.html":{}},"body":{"interfaces/ForecastResponse.html":{},"interfaces/GraphDataSet.html":{},"interfaces/IndoorRoomData.html":{},"interfaces/IndoorRoomResponse.html":{},"components/IndoorTileViewComponent.html":{},"interfaces/OutdoorWeatherData.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenData.html":{},"interfaces/PollenResponse.html":{},"injectables/TextService.html":{},"interfaces/Tile.html":{},"interfaces/TileArrays.html":{},"injectables/TileService.html":{},"injectables/WeatherAPIService.html":{},"interfaces/WeatherData.html":{},"injectables/WeatherDataService.html":{},"interfaces/WeatherForecastData.html":{},"interfaces/WeatherHistoryByDayData.html":{},"interfaces/WeatherHistoryData.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["indoorroomresponse",{"_index":1080,"title":{"interfaces/IndoorRoomResponse.html":{}},"body":{"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/WeatherAPIService.html":{},"coverage.html":{}}}],["indoorrooms",{"_index":363,"title":{},"body":{"modules/AppRoutingModule.html":{},"interfaces/GraphDataSet.html":{},"interfaces/IndoorRoomData.html":{},"interfaces/OutdoorWeatherData.html":{},"interfaces/PollenData.html":{},"interfaces/Tile.html":{},"interfaces/TileArrays.html":{},"injectables/TileService.html":{},"interfaces/WeatherData.html":{},"interfaces/WeatherForecastData.html":{},"interfaces/WeatherHistoryByDayData.html":{},"interfaces/WeatherHistoryData.html":{}}}],["indoorroomsdata",{"_index":2586,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["indoorroomsdata(value",{"_index":2588,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["indoorroomtiles",{"_index":1541,"title":{},"body":{"components/IndoorDetailViewComponent.html":{},"injectables/TileService.html":{}}}],["indoorroomtiles(tiles",{"_index":2577,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["indoortileviewcomponent",{"_index":218,"title":{"components/IndoorTileViewComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DetailScreenComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{},"modules/ViewsModule.html":{},"coverage.html":{},"overview.html":{}}}],["indoorurl",{"_index":995,"title":{},"body":{"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["infinite",{"_index":2483,"title":{},"body":{"components/TtsPlayerElementComponent.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CardElementComponent.html":{},"interfaces/CheckTokenResponse.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"interfaces/Credentials.html":{},"components/DashboardScreenComponent.html":{},"components/DetailScreenComponent.html":{},"interfaces/ESPConfiguration.html":{},"injectables/ESPConfigurationAPIService.html":{},"components/ForecastDetailViewComponent.html":{},"interfaces/ForecastResponse.html":{},"components/ForecastTileViewComponent.html":{},"interfaces/GraphDataSet.html":{},"components/HistoryDetailViewComponent.html":{},"injectables/HistoryTileService.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"interfaces/ImageModel.html":{},"injectables/ImageService.html":{},"components/IndoorDetailViewComponent.html":{},"interfaces/IndoorRoomData.html":{},"interfaces/IndoorRoomResponse.html":{},"components/IndoorTileViewComponent.html":{},"injectables/LocalStorageService.html":{},"interfaces/LoginResponse.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"interfaces/OutdoorWeatherData.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"interfaces/OutdoorWeatherResponse.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"interfaces/PollenData.html":{},"components/PollenListElementComponent.html":{},"interfaces/PollenResponse.html":{},"components/PollenTagElementComponent.html":{},"interfaces/PollenType.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"modules/ScreensModule.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"injectables/SpeechService.html":{},"injectables/TextService.html":{},"interfaces/Tile.html":{},"interfaces/TileArrays.html":{},"injectables/TileService.html":{},"components/TtsPlayerElementComponent.html":{},"modules/UiElementsModule.html":{},"interfaces/UserContext.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{},"interfaces/UserIdentifikation.html":{},"modules/ViewsModule.html":{},"injectables/WeatherAPIService.html":{},"interfaces/WeatherData.html":{},"injectables/WeatherDataService.html":{},"interfaces/WeatherForecastData.html":{},"interfaces/WeatherHistoryByDayData.html":{},"interfaces/WeatherHistoryData.html":{}}}],["informationen",{"_index":2083,"title":{},"body":{"components/PollenflugDetailViewComponent.html":{}}}],["initial_user_context",{"_index":1624,"title":{},"body":{"injectables/LocalStorageService.html":{},"interfaces/PollenType.html":{},"interfaces/UserContext.html":{},"interfaces/UserIdentifikation.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["initial_user_identifikation",{"_index":1625,"title":{},"body":{"injectables/LocalStorageService.html":{},"interfaces/PollenType.html":{},"interfaces/UserContext.html":{},"interfaces/UserIdentifikation.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["initially",{"_index":2605,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["inject",{"_index":745,"title":{},"body":{"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{}}}],["inject(mat_dialog_data",{"_index":741,"title":{},"body":{"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{}}}],["injectable",{"_index":520,"title":{"injectables/ESPConfigurationAPIService.html":{},"injectables/HistoryTileService.html":{},"injectables/ImageService.html":{},"injectables/LocalStorageService.html":{},"injectables/SpeechService.html":{},"injectables/TextService.html":{},"injectables/TileService.html":{},"injectables/UserContextAPIService.html":{},"injectables/WeatherAPIService.html":{},"injectables/WeatherDataService.html":{}},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/ESPConfiguration.html":{},"injectables/ESPConfigurationAPIService.html":{},"interfaces/ForecastResponse.html":{},"injectables/HistoryTileService.html":{},"injectables/ImageService.html":{},"interfaces/IndoorRoomResponse.html":{},"injectables/LocalStorageService.html":{},"interfaces/LoginResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/SpeechService.html":{},"injectables/TextService.html":{},"injectables/TileService.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{},"injectables/WeatherAPIService.html":{},"injectables/WeatherDataService.html":{},"coverage.html":{}}}],["injectables",{"_index":894,"title":{},"body":{"injectables/ESPConfigurationAPIService.html":{},"injectables/HistoryTileService.html":{},"injectables/ImageService.html":{},"injectables/LocalStorageService.html":{},"injectables/SpeechService.html":{},"injectables/TextService.html":{},"injectables/TileService.html":{},"injectables/UserContextAPIService.html":{},"injectables/WeatherAPIService.html":{},"injectables/WeatherDataService.html":{},"overview.html":{}}}],["innenräumen",{"_index":1552,"title":{},"body":{"components/IndoorDetailViewComponent.html":{}}}],["innovation",{"_index":1682,"title":{},"body":{"components/LoginViewComponent.html":{},"index.html":{}}}],["input",{"_index":391,"title":{},"body":{"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"injectables/TextService.html":{},"components/TtsPlayerElementComponent.html":{}}}],["input[type=range",{"_index":2123,"title":{},"body":{"components/ProgressChartElementComponent.html":{},"components/SliderElementComponent.html":{}}}],["input[type=range]:focus",{"_index":2125,"title":{},"body":{"components/ProgressChartElementComponent.html":{},"components/SliderElementComponent.html":{}}}],["inputdate",{"_index":1376,"title":{},"body":{"injectables/HistoryTileService.html":{}}}],["inputdate.getdate",{"_index":1366,"title":{},"body":{"injectables/HistoryTileService.html":{}}}],["inputdate.getmonth",{"_index":1365,"title":{},"body":{"injectables/HistoryTileService.html":{}}}],["inputs",{"_index":379,"title":{},"body":{"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/NavBarElementComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{}}}],["insertion",{"_index":633,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/LoginResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{}}}],["intensität",{"_index":2049,"title":{},"body":{"components/PollenflugDetailViewComponent.html":{}}}],["intensiver",{"_index":924,"title":{},"body":{"components/ForecastDetailViewComponent.html":{}}}],["interaction",{"_index":2108,"title":{},"body":{"components/ProgressChartElementComponent.html":{}}}],["interessiert",{"_index":918,"title":{},"body":{"components/ForecastDetailViewComponent.html":{}}}],["interface",{"_index":507,"title":{"interfaces/CheckTokenResponse.html":{},"interfaces/Credentials.html":{},"interfaces/ESPConfiguration.html":{},"interfaces/ForecastResponse.html":{},"interfaces/GraphDataSet.html":{},"interfaces/ImageModel.html":{},"interfaces/IndoorRoomData.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/LoginResponse.html":{},"interfaces/OutdoorWeatherData.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenData.html":{},"interfaces/PollenResponse.html":{},"interfaces/PollenType.html":{},"interfaces/Tile.html":{},"interfaces/TileArrays.html":{},"interfaces/UserContext.html":{},"interfaces/UserContextResponse.html":{},"interfaces/UserIdentifikation.html":{},"interfaces/WeatherData.html":{},"interfaces/WeatherForecastData.html":{},"interfaces/WeatherHistoryByDayData.html":{},"interfaces/WeatherHistoryData.html":{}},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/Credentials.html":{},"interfaces/ESPConfiguration.html":{},"injectables/ESPConfigurationAPIService.html":{},"interfaces/ForecastResponse.html":{},"interfaces/GraphDataSet.html":{},"interfaces/ImageModel.html":{},"interfaces/IndoorRoomData.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/LoginResponse.html":{},"interfaces/OutdoorWeatherData.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenData.html":{},"interfaces/PollenResponse.html":{},"interfaces/PollenType.html":{},"interfaces/Tile.html":{},"interfaces/TileArrays.html":{},"injectables/TileService.html":{},"interfaces/UserContext.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{},"interfaces/UserIdentifikation.html":{},"injectables/WeatherAPIService.html":{},"interfaces/WeatherData.html":{},"interfaces/WeatherForecastData.html":{},"interfaces/WeatherHistoryByDayData.html":{},"interfaces/WeatherHistoryData.html":{},"coverage.html":{}}}],["interfaces",{"_index":509,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/Credentials.html":{},"interfaces/ESPConfiguration.html":{},"interfaces/ForecastResponse.html":{},"interfaces/GraphDataSet.html":{},"interfaces/ImageModel.html":{},"interfaces/IndoorRoomData.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/LoginResponse.html":{},"interfaces/OutdoorWeatherData.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenData.html":{},"interfaces/PollenResponse.html":{},"interfaces/PollenType.html":{},"interfaces/Tile.html":{},"interfaces/TileArrays.html":{},"injectables/TileService.html":{},"interfaces/UserContext.html":{},"interfaces/UserContextResponse.html":{},"interfaces/UserIdentifikation.html":{},"interfaces/WeatherData.html":{},"interfaces/WeatherForecastData.html":{},"interfaces/WeatherHistoryByDayData.html":{},"interfaces/WeatherHistoryData.html":{},"overview.html":{}}}],["inverted",{"_index":728,"title":{},"body":{"components/CheckboxSwitcherElementComponent.html":{},"components/OutdoorWeatherViewComponent.html":{}}}],["io",{"_index":2766,"title":{},"body":{"index.html":{}}}],["isbackpossible",{"_index":1179,"title":{},"body":{"components/HistoryDetailViewComponent.html":{}}}],["isforwardpossible",{"_index":1180,"title":{},"body":{"components/HistoryDetailViewComponent.html":{}}}],["ismenuhidden",{"_index":1728,"title":{},"body":{"components/MenuButtonElementComponent.html":{}}}],["isolationsfähigkeit",{"_index":1854,"title":{},"body":{"components/OutdoorWeatherDetailViewComponent.html":{}}}],["isoutputrunning",{"_index":2179,"title":{},"body":{"injectables/SpeechService.html":{}}}],["ist",{"_index":579,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/ESPConfiguration.html":{},"injectables/ESPConfigurationAPIService.html":{},"components/ForecastDetailViewComponent.html":{},"injectables/HistoryTileService.html":{},"components/IndoorDetailViewComponent.html":{},"interfaces/LoginResponse.html":{},"components/PollenflugDetailViewComponent.html":{},"injectables/TextService.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{}}}],["item",{"_index":1326,"title":{},"body":{"injectables/HistoryTileService.html":{},"injectables/LocalStorageService.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"injectables/TileService.html":{}}}],["item.humidity",{"_index":1339,"title":{},"body":{"injectables/HistoryTileService.html":{}}}],["item.id",{"_index":1092,"title":{},"body":{"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["item.loadrating",{"_index":1096,"title":{},"body":{"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["item.pollenname",{"_index":1094,"title":{},"body":{"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["item.roomid",{"_index":2368,"title":{},"body":{"injectables/TileService.html":{}}}],["item.temperature",{"_index":1338,"title":{},"body":{"injectables/HistoryTileService.html":{}}}],["item.timestamp",{"_index":1334,"title":{},"body":{"injectables/HistoryTileService.html":{}}}],["item.timestamp.getdate",{"_index":1328,"title":{},"body":{"injectables/HistoryTileService.html":{}}}],["item.timestamp.gethours",{"_index":1345,"title":{},"body":{"injectables/HistoryTileService.html":{}}}],["item.timestamp.getmonth",{"_index":1330,"title":{},"body":{"injectables/HistoryTileService.html":{}}}],["items",{"_index":435,"title":{},"body":{"components/BackButtonElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/DashboardScreenComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/RegistrationViewComponent.html":{}}}],["ja",{"_index":1024,"title":{},"body":{"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["jahreszeit",{"_index":1274,"title":{},"body":{"components/HistoryDetailViewComponent.html":{}}}],["jahrtausenden",{"_index":921,"title":{},"body":{"components/ForecastDetailViewComponent.html":{},"components/HistoryDetailViewComponent.html":{}}}],["jahrzehnte",{"_index":1263,"title":{},"body":{"components/HistoryDetailViewComponent.html":{}}}],["januar','februar','märz','april','mai','juni','juli','august','september','oktober','november','dezember",{"_index":1400,"title":{},"body":{"injectables/HistoryTileService.html":{},"miscellaneous/variables.html":{}}}],["jede",{"_index":795,"title":{},"body":{"components/ConfigurationTileViewComponent.html":{}}}],["json.parse(disableopenapevalue",{"_index":1640,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["json.parse(objectstring",{"_index":1632,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["json.stringify(object",{"_index":1628,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["json.stringify(value",{"_index":1634,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["justify",{"_index":437,"title":{},"body":{"components/BackButtonElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuElementComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{}}}],["kalenderwoche",{"_index":1354,"title":{},"body":{"injectables/HistoryTileService.html":{}}}],["kann",{"_index":1568,"title":{},"body":{"components/IndoorDetailViewComponent.html":{},"interfaces/PollenType.html":{},"components/PollenflugDetailViewComponent.html":{},"interfaces/UserContext.html":{},"interfaces/UserIdentifikation.html":{}}}],["keine",{"_index":1995,"title":{},"body":{"components/PollenTagElementComponent.html":{}}}],["key",{"_index":1653,"title":{},"body":{"injectables/LocalStorageService.html":{},"miscellaneous/variables.html":{}}}],["keyframes",{"_index":1722,"title":{},"body":{"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/TtsPlayerElementComponent.html":{}}}],["klare",{"_index":2306,"title":{},"body":{"injectables/TextService.html":{}}}],["kleidung",{"_index":1830,"title":{},"body":{"components/OutdoorWeatherDetailViewComponent.html":{}}}],["klimagröße",{"_index":1272,"title":{},"body":{"components/HistoryDetailViewComponent.html":{}}}],["klimamodelle",{"_index":1247,"title":{},"body":{"components/HistoryDetailViewComponent.html":{}}}],["know",{"_index":1237,"title":{},"body":{"components/HistoryDetailViewComponent.html":{},"components/IndoorDetailViewComponent.html":{}}}],["kombiniert",{"_index":1861,"title":{},"body":{"components/OutdoorWeatherDetailViewComponent.html":{}}}],["kommen",{"_index":1819,"title":{},"body":{"components/OutdoorWeatherDetailViewComponent.html":{},"components/PollenflugDetailViewComponent.html":{}}}],["konfiguration",{"_index":1784,"title":{},"body":{"components/MenuElementComponent.html":{}}}],["konfigurieren",{"_index":816,"title":{},"body":{"components/ConfigurationViewComponent.html":{}}}],["konsistent",{"_index":2262,"title":{},"body":{"injectables/TextService.html":{}}}],["konvertiert",{"_index":2007,"title":{},"body":{"interfaces/PollenType.html":{},"interfaces/UserContext.html":{},"interfaces/UserIdentifikation.html":{}}}],["krankheitssymptome",{"_index":1578,"title":{},"body":{"components/IndoorDetailViewComponent.html":{}}}],["krankmachen",{"_index":1569,"title":{},"body":{"components/IndoorDetailViewComponent.html":{}}}],["kreuzreaktionen",{"_index":2047,"title":{},"body":{"components/PollenflugDetailViewComponent.html":{}}}],["kälteempfindung",{"_index":1859,"title":{},"body":{"components/OutdoorWeatherDetailViewComponent.html":{}}}],["label",{"_index":415,"title":{},"body":{"components/BackButtonElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"interfaces/GraphDataSet.html":{},"injectables/HistoryTileService.html":{},"components/HistoryTileViewComponent.html":{},"interfaces/IndoorRoomData.html":{},"components/MenuButtonElementComponent.html":{},"interfaces/OutdoorWeatherData.html":{},"components/PersonalizationSettingsViewComponent.html":{},"interfaces/PollenData.html":{},"components/SliderElementComponent.html":{},"interfaces/Tile.html":{},"interfaces/TileArrays.html":{},"interfaces/WeatherData.html":{},"interfaces/WeatherForecastData.html":{},"interfaces/WeatherHistoryByDayData.html":{},"interfaces/WeatherHistoryData.html":{}}}],["label.motion",{"_index":1740,"title":{},"body":{"components/MenuButtonElementComponent.html":{}}}],["landwirtschaft",{"_index":943,"title":{},"body":{"components/ForecastDetailViewComponent.html":{}}}],["langsam",{"_index":1834,"title":{},"body":{"components/OutdoorWeatherDetailViewComponent.html":{}}}],["language",{"_index":2020,"title":{},"body":{"interfaces/PollenType.html":{},"interfaces/UserContext.html":{},"interfaces/UserIdentifikation.html":{},"miscellaneous/enumerations.html":{}}}],["lastdate",{"_index":1318,"title":{},"body":{"injectables/HistoryTileService.html":{}}}],["lastdate.getdate",{"_index":1346,"title":{},"body":{"injectables/HistoryTileService.html":{}}}],["lastdate.gethours",{"_index":1342,"title":{},"body":{"injectables/HistoryTileService.html":{}}}],["lastdate.getmonth",{"_index":1329,"title":{},"body":{"injectables/HistoryTileService.html":{}}}],["lasthour",{"_index":1341,"title":{},"body":{"injectables/HistoryTileService.html":{}}}],["lastweek",{"_index":1320,"title":{},"body":{"injectables/HistoryTileService.html":{}}}],["layout",{"_index":2160,"title":{},"body":{"components/SettingsScreenComponent.html":{}}}],["layoutmodule",{"_index":2158,"title":{},"body":{"modules/ScreensModule.html":{}}}],["lazy",{"_index":2548,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["leave",{"_index":1775,"title":{},"body":{"components/MenuElementComponent.html":{},"miscellaneous/variables.html":{}}}],["left",{"_index":178,"title":{},"body":{"components/AppComponent.html":{},"components/CardElementComponent.html":{},"components/DashboardScreenComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/TtsPlayerElementComponent.html":{},"miscellaneous/variables.html":{}}}],["legend",{"_index":180,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DetailScreenComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"modules/ScreensModule.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{},"modules/UiElementsModule.html":{},"modules/ViewsModule.html":{},"overview.html":{}}}],["lehren",{"_index":1565,"title":{},"body":{"components/IndoorDetailViewComponent.html":{}}}],["leicht",{"_index":2263,"title":{},"body":{"injectables/TextService.html":{}}}],["leistungsfähigkeit",{"_index":1561,"title":{},"body":{"components/IndoorDetailViewComponent.html":{}}}],["lernen",{"_index":1564,"title":{},"body":{"components/IndoorDetailViewComponent.html":{}}}],["letter",{"_index":444,"title":{},"body":{"components/BackButtonElementComponent.html":{},"components/CardElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/OutdoorWeatherViewComponent.html":{}}}],["library",{"_index":1298,"title":{},"body":{"injectables/HistoryTileService.html":{}}}],["liegen",{"_index":2295,"title":{},"body":{"injectables/TextService.html":{}}}],["liegt",{"_index":2275,"title":{},"body":{"injectables/TextService.html":{}}}],["light",{"_index":423,"title":{},"body":{"components/BackButtonElementComponent.html":{},"interfaces/CheckTokenResponse.html":{},"components/CheckboxSwitcherElementComponent.html":{},"interfaces/ImageModel.html":{},"interfaces/LoginResponse.html":{},"components/MenuElementComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"interfaces/PollenType.html":{},"interfaces/UserContext.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{},"interfaces/UserIdentifikation.html":{},"miscellaneous/enumerations.html":{}}}],["light.png",{"_index":1758,"title":{},"body":{"components/MenuElementComponent.html":{}}}],["ligth",{"_index":141,"title":{},"body":{"components/AppComponent.html":{}}}],["linear",{"_index":1517,"title":{},"body":{"injectables/ImageService.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/TtsPlayerElementComponent.html":{},"miscellaneous/variables.html":{}}}],["list",{"_index":249,"title":{},"body":{"components/AppComponent.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DetailScreenComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{},"modules/UiElementsModule.html":{},"coverage.html":{}}}],["listen",{"_index":2637,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["listenforstop",{"_index":2406,"title":{},"body":{"components/TtsPlayerElementComponent.html":{}}}],["listenforstop(speechservice",{"_index":2409,"title":{},"body":{"components/TtsPlayerElementComponent.html":{}}}],["listentoscrollevent",{"_index":1872,"title":{},"body":{"components/OutdoorWeatherViewComponent.html":{}}}],["listentothemechange",{"_index":133,"title":{},"body":{"components/AppComponent.html":{}}}],["listtile",{"_index":2358,"title":{},"body":{"injectables/TileService.html":{}}}],["literal",{"_index":1464,"title":{},"body":{"injectables/ImageService.html":{},"components/OutdoorWeatherViewComponent.html":{}}}],["little",{"_index":2416,"title":{},"body":{"components/TtsPlayerElementComponent.html":{}}}],["live",{"_index":460,"title":{},"body":{"components/CardElementComponent.html":{}}}],["load",{"_index":1611,"title":{},"body":{"injectables/LocalStorageService.html":{},"injectables/WeatherDataService.html":{}}}],["loadad",{"_index":1001,"title":{},"body":{"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["loadconfigurations",{"_index":805,"title":{},"body":{"components/ConfigurationViewComponent.html":{}}}],["loaddata",{"_index":829,"title":{},"body":{"components/DashboardScreenComponent.html":{}}}],["loaddefaultfontsize",{"_index":118,"title":{},"body":{"components/AppComponent.html":{}}}],["loaded",{"_index":2606,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["loadespconfigs",{"_index":887,"title":{},"body":{"interfaces/ESPConfiguration.html":{},"injectables/ESPConfigurationAPIService.html":{}}}],["loadforecast",{"_index":1009,"title":{},"body":{"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["loadforecastdata",{"_index":901,"title":{},"body":{"components/ForecastDetailViewComponent.html":{}}}],["loadhistorydatasubject",{"_index":2516,"title":{},"body":{"injectables/WeatherAPIService.html":{}}}],["loadhistorydatasubject(enddate",{"_index":1033,"title":{},"body":{"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["loadindoorroomdata",{"_index":1019,"title":{},"body":{"interfaces/ForecastResponse.html":{},"components/IndoorDetailViewComponent.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["loading",{"_index":2604,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["loadmonthfromhistory(oldesthistorydate",{"_index":2649,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["loadmorehistorydata",{"_index":2532,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["loadoutdoorweather",{"_index":1003,"title":{},"body":{"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"components/OutdoorWeatherViewComponent.html":{},"interfaces/PollenResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["loadoutdoorweatherdata",{"_index":1815,"title":{},"body":{"components/OutdoorWeatherDetailViewComponent.html":{}}}],["loadpollen",{"_index":1015,"title":{},"body":{"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["loadpollentiles",{"_index":2028,"title":{},"body":{"components/PollenflugDetailViewComponent.html":{}}}],["loadpollentypes",{"_index":652,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/LoginResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{}}}],["loadrating",{"_index":1102,"title":{},"body":{"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["loadreducemotionvalue",{"_index":830,"title":{},"body":{"components/DashboardScreenComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{}}}],["loadusercontext",{"_index":124,"title":{},"body":{"components/AppComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"injectables/UserContextAPIService.html":{}}}],["loadusercontext(token",{"_index":643,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/LoginResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{}}}],["loadweatherdata",{"_index":2615,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["loadweatherhistorydata",{"_index":1181,"title":{},"body":{"components/HistoryDetailViewComponent.html":{}}}],["local",{"_index":1603,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["localstorage.clear",{"_index":1643,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["localstorage.getitem(key",{"_index":1648,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["localstorage.removeitem(key",{"_index":1651,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["localstorage.setitem(key",{"_index":1645,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["localstorageservice",{"_index":1600,"title":{"injectables/LocalStorageService.html":{}},"body":{"injectables/LocalStorageService.html":{},"coverage.html":{}}}],["location",{"_index":417,"title":{},"body":{"components/BackButtonElementComponent.html":{},"interfaces/ForecastResponse.html":{},"interfaces/GraphDataSet.html":{},"interfaces/IndoorRoomData.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherData.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenData.html":{},"interfaces/PollenResponse.html":{},"injectables/TextService.html":{},"interfaces/Tile.html":{},"interfaces/TileArrays.html":{},"injectables/WeatherAPIService.html":{},"interfaces/WeatherData.html":{},"interfaces/WeatherForecastData.html":{},"interfaces/WeatherHistoryByDayData.html":{},"interfaces/WeatherHistoryData.html":{},"miscellaneous/variables.html":{}}}],["location_name",{"_index":1104,"title":{},"body":{"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["locationlabel",{"_index":1700,"title":{},"body":{"components/MenuBarElementComponent.html":{}}}],["login",{"_index":220,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CardElementComponent.html":{},"interfaces/CheckTokenResponse.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DetailScreenComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"injectables/LocalStorageService.html":{},"interfaces/LoginResponse.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{},"modules/ViewsModule.html":{},"miscellaneous/variables.html":{}}}],["logindisabled",{"_index":1928,"title":{},"body":{"components/PersonalizationSettingsViewComponent.html":{}}}],["loginform",{"_index":1658,"title":{},"body":{"components/LoginViewComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{}}}],["loginresponse",{"_index":674,"title":{"interfaces/LoginResponse.html":{}},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/LoginResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{},"coverage.html":{}}}],["logintoopenape",{"_index":1801,"title":{},"body":{"components/OpenAPELoginTileViewComponent.html":{}}}],["logintoopenape(username",{"_index":1802,"title":{},"body":{"components/OpenAPELoginTileViewComponent.html":{}}}],["loginurl",{"_index":532,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/LoginResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{}}}],["loginviewcomponent",{"_index":219,"title":{"components/LoginViewComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DetailScreenComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{},"modules/ViewsModule.html":{},"coverage.html":{},"overview.html":{}}}],["logo",{"_index":1691,"title":{},"body":{"components/LoginViewComponent.html":{}}}],["logout",{"_index":1745,"title":{},"body":{"components/MenuElementComponent.html":{}}}],["logouticon",{"_index":1743,"title":{},"body":{"components/MenuElementComponent.html":{}}}],["logs",{"_index":1608,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["low",{"_index":1141,"title":{},"body":{"interfaces/GraphDataSet.html":{},"interfaces/IndoorRoomData.html":{},"interfaces/OutdoorWeatherData.html":{},"interfaces/PollenData.html":{},"interfaces/Tile.html":{},"interfaces/TileArrays.html":{},"interfaces/WeatherData.html":{},"interfaces/WeatherForecastData.html":{},"interfaces/WeatherHistoryByDayData.html":{},"interfaces/WeatherHistoryData.html":{},"miscellaneous/enumerations.html":{}}}],["lower",{"_index":2137,"title":{},"body":{"components/ProgressChartElementComponent.html":{},"components/SliderElementComponent.html":{},"injectables/TileService.html":{}}}],["luft",{"_index":1841,"title":{},"body":{"components/OutdoorWeatherDetailViewComponent.html":{}}}],["luftfeuchtigkeit",{"_index":1594,"title":{},"body":{"components/IndoorTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"injectables/TextService.html":{}}}],["luftqualität",{"_index":2274,"title":{},"body":{"injectables/TextService.html":{}}}],["lufttemperatur",{"_index":1827,"title":{},"body":{"components/OutdoorWeatherDetailViewComponent.html":{}}}],["länger",{"_index":936,"title":{},"body":{"components/ForecastDetailViewComponent.html":{}}}],["lässt",{"_index":1863,"title":{},"body":{"components/OutdoorWeatherDetailViewComponent.html":{},"components/PollenflugDetailViewComponent.html":{}}}],["lüftung",{"_index":1587,"title":{},"body":{"components/IndoorDetailViewComponent.html":{}}}],["main",{"_index":168,"title":{},"body":{"components/AppComponent.html":{},"components/OutdoorWeatherViewComponent.html":{}}}],["make",{"_index":1154,"title":{},"body":{"interfaces/GraphDataSet.html":{},"interfaces/IndoorRoomData.html":{},"interfaces/OutdoorWeatherData.html":{},"interfaces/PollenData.html":{},"interfaces/Tile.html":{},"interfaces/TileArrays.html":{},"interfaces/WeatherData.html":{},"interfaces/WeatherForecastData.html":{},"interfaces/WeatherHistoryByDayData.html":{},"interfaces/WeatherHistoryData.html":{}}}],["man",{"_index":938,"title":{},"body":{"components/ForecastDetailViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{}}}],["map",{"_index":2009,"title":{},"body":{"interfaces/PollenType.html":{},"interfaces/UserContext.html":{},"interfaces/UserIdentifikation.html":{}}}],["margin",{"_index":404,"title":{},"body":{"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PollenTagElementComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{}}}],["mat_dialog_data",{"_index":751,"title":{},"body":{"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{}}}],["matbuttontoggleappearance",{"_index":1205,"title":{},"body":{"components/HistoryDetailViewComponent.html":{}}}],["matching",{"_index":268,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CardElementComponent.html":{},"interfaces/CheckTokenResponse.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"interfaces/Credentials.html":{},"components/DashboardScreenComponent.html":{},"components/DetailScreenComponent.html":{},"interfaces/ESPConfiguration.html":{},"injectables/ESPConfigurationAPIService.html":{},"components/ForecastDetailViewComponent.html":{},"interfaces/ForecastResponse.html":{},"components/ForecastTileViewComponent.html":{},"interfaces/GraphDataSet.html":{},"components/HistoryDetailViewComponent.html":{},"injectables/HistoryTileService.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"interfaces/ImageModel.html":{},"injectables/ImageService.html":{},"components/IndoorDetailViewComponent.html":{},"interfaces/IndoorRoomData.html":{},"interfaces/IndoorRoomResponse.html":{},"components/IndoorTileViewComponent.html":{},"injectables/LocalStorageService.html":{},"interfaces/LoginResponse.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"interfaces/OutdoorWeatherData.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"interfaces/OutdoorWeatherResponse.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"interfaces/PollenData.html":{},"components/PollenListElementComponent.html":{},"interfaces/PollenResponse.html":{},"components/PollenTagElementComponent.html":{},"interfaces/PollenType.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"modules/ScreensModule.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"injectables/SpeechService.html":{},"injectables/TextService.html":{},"interfaces/Tile.html":{},"interfaces/TileArrays.html":{},"injectables/TileService.html":{},"components/TtsPlayerElementComponent.html":{},"modules/UiElementsModule.html":{},"interfaces/UserContext.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{},"interfaces/UserIdentifikation.html":{},"modules/ViewsModule.html":{},"injectables/WeatherAPIService.html":{},"interfaces/WeatherData.html":{},"injectables/WeatherDataService.html":{},"interfaces/WeatherForecastData.html":{},"interfaces/WeatherHistoryByDayData.html":{},"interfaces/WeatherHistoryData.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["matdialog",{"_index":750,"title":{},"body":{"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{}}}],["matdialogmodule",{"_index":2514,"title":{},"body":{"modules/ViewsModule.html":{}}}],["matdialogref",{"_index":736,"title":{},"body":{"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{}}}],["math.ceil((((date.valueof",{"_index":1377,"title":{},"body":{"injectables/HistoryTileService.html":{}}}],["math.round(humidityaverage",{"_index":1396,"title":{},"body":{"injectables/HistoryTileService.html":{}}}],["math.round(tempaverage",{"_index":1395,"title":{},"body":{"injectables/HistoryTileService.html":{}}}],["max",{"_index":1909,"title":{},"body":{"components/OutdoorWeatherViewComponent.html":{}}}],["maxtemperature",{"_index":1068,"title":{},"body":{"interfaces/ForecastResponse.html":{},"interfaces/GraphDataSet.html":{},"interfaces/IndoorRoomData.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherData.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenData.html":{},"interfaces/PollenResponse.html":{},"injectables/TextService.html":{},"interfaces/Tile.html":{},"interfaces/TileArrays.html":{},"injectables/WeatherAPIService.html":{},"interfaces/WeatherData.html":{},"interfaces/WeatherForecastData.html":{},"interfaces/WeatherHistoryByDayData.html":{},"interfaces/WeatherHistoryData.html":{},"miscellaneous/variables.html":{}}}],["maybe",{"_index":1158,"title":{},"body":{"interfaces/GraphDataSet.html":{},"interfaces/IndoorRoomData.html":{},"interfaces/OutdoorWeatherData.html":{},"components/PersonalizationSettingsViewComponent.html":{},"interfaces/PollenData.html":{},"interfaces/Tile.html":{},"interfaces/TileArrays.html":{},"interfaces/WeatherData.html":{},"interfaces/WeatherForecastData.html":{},"interfaces/WeatherHistoryByDayData.html":{},"interfaces/WeatherHistoryData.html":{}}}],["media",{"_index":480,"title":{},"body":{"components/CardElementComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{}}}],["media(max",{"_index":1720,"title":{},"body":{"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/OutdoorWeatherViewComponent.html":{}}}],["media(min",{"_index":873,"title":{},"body":{"components/DashboardScreenComponent.html":{},"components/MenuBarElementComponent.html":{},"components/OutdoorWeatherViewComponent.html":{}}}],["media(prefers",{"_index":1915,"title":{},"body":{"components/OutdoorWeatherViewComponent.html":{}}}],["mehr",{"_index":2031,"title":{},"body":{"components/PollenflugDetailViewComponent.html":{}}}],["mehrere",{"_index":1025,"title":{},"body":{"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["men",{"_index":1737,"title":{},"body":{"components/MenuButtonElementComponent.html":{}}}],["mensch",{"_index":1546,"title":{},"body":{"components/IndoorDetailViewComponent.html":{}}}],["menschen",{"_index":919,"title":{},"body":{"components/ForecastDetailViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{}}}],["menu",{"_index":222,"title":{},"body":{"components/AppComponent.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DetailScreenComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{},"modules/UiElementsModule.html":{}}}],["menubarelementcomponent",{"_index":221,"title":{"components/MenuBarElementComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DetailScreenComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{},"modules/UiElementsModule.html":{},"coverage.html":{},"overview.html":{}}}],["menubuttonelementcomponent",{"_index":224,"title":{"components/MenuButtonElementComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DetailScreenComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{},"modules/UiElementsModule.html":{},"coverage.html":{},"overview.html":{}}}],["menuelementcomponent",{"_index":225,"title":{"components/MenuElementComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DetailScreenComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{},"modules/UiElementsModule.html":{},"coverage.html":{},"overview.html":{}}}],["message",{"_index":22,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CheckTokenResponse.html":{},"interfaces/LoginResponse.html":{},"components/LoginViewComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/RegistrationViewComponent.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{}}}],["metadata",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DetailScreenComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{}}}],["methods",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DetailScreenComponent.html":{},"injectables/ESPConfigurationAPIService.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"injectables/HistoryTileService.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"injectables/ImageService.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"injectables/LocalStorageService.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"injectables/SpeechService.html":{},"injectables/TextService.html":{},"injectables/TileService.html":{},"components/TtsPlayerElementComponent.html":{},"injectables/UserContextAPIService.html":{},"injectables/WeatherAPIService.html":{},"injectables/WeatherDataService.html":{}}}],["middle",{"_index":492,"title":{},"body":{"components/CardElementComponent.html":{},"interfaces/GraphDataSet.html":{},"interfaces/IndoorRoomData.html":{},"interfaces/OutdoorWeatherData.html":{},"interfaces/PollenData.html":{},"interfaces/Tile.html":{},"interfaces/TileArrays.html":{},"interfaces/WeatherData.html":{},"interfaces/WeatherForecastData.html":{},"interfaces/WeatherHistoryByDayData.html":{},"interfaces/WeatherHistoryData.html":{},"miscellaneous/enumerations.html":{}}}],["min",{"_index":170,"title":{},"body":{"components/AppComponent.html":{},"components/CardElementComponent.html":{},"components/LoginViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/SettingsScreenComponent.html":{}}}],["mintemperature",{"_index":1070,"title":{},"body":{"interfaces/ForecastResponse.html":{},"interfaces/GraphDataSet.html":{},"interfaces/IndoorRoomData.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherData.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenData.html":{},"interfaces/PollenResponse.html":{},"injectables/TextService.html":{},"interfaces/Tile.html":{},"interfaces/TileArrays.html":{},"injectables/WeatherAPIService.html":{},"interfaces/WeatherData.html":{},"interfaces/WeatherForecastData.html":{},"interfaces/WeatherHistoryByDayData.html":{},"interfaces/WeatherHistoryData.html":{},"miscellaneous/variables.html":{}}}],["minute",{"_index":796,"title":{},"body":{"components/ConfigurationTileViewComponent.html":{}}}],["minuten",{"_index":798,"title":{},"body":{"components/ConfigurationTileViewComponent.html":{}}}],["miscellaneous",{"_index":2758,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":1264,"title":{},"body":{"components/HistoryDetailViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"injectables/TextService.html":{}}}],["mittel",{"_index":1990,"title":{},"body":{"components/PollenTagElementComponent.html":{}}}],["mittlere",{"_index":2281,"title":{},"body":{"injectables/TextService.html":{}}}],["mittlerer",{"_index":1832,"title":{},"body":{"components/OutdoorWeatherDetailViewComponent.html":{}}}],["mixin",{"_index":2110,"title":{},"body":{"components/ProgressChartElementComponent.html":{},"components/SliderElementComponent.html":{}}}],["mobile",{"_index":1719,"title":{},"body":{"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/OutdoorWeatherViewComponent.html":{}}}],["mockdaten",{"_index":2004,"title":{},"body":{"interfaces/PollenType.html":{},"interfaces/UserContext.html":{},"interfaces/UserIdentifikation.html":{}}}],["mode",{"_index":150,"title":{},"body":{"components/AppComponent.html":{}}}],["model",{"_index":513,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/ESPConfiguration.html":{},"injectables/ESPConfigurationAPIService.html":{},"interfaces/ForecastResponse.html":{},"injectables/ImageService.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/LoginResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"components/SliderElementComponent.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["model/image",{"_index":1471,"title":{},"body":{"injectables/ImageService.html":{}}}],["model/mock",{"_index":985,"title":{},"body":{"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["model/user",{"_index":81,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CheckTokenResponse.html":{},"injectables/ImageService.html":{},"injectables/LocalStorageService.html":{},"interfaces/LoginResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{}}}],["model/weather",{"_index":990,"title":{},"body":{"interfaces/ForecastResponse.html":{},"injectables/HistoryTileService.html":{},"injectables/ImageService.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"components/PollenflugDetailViewComponent.html":{},"injectables/TextService.html":{},"injectables/TileService.html":{},"injectables/WeatherAPIService.html":{},"injectables/WeatherDataService.html":{}}}],["moderately",{"_index":2247,"title":{},"body":{"injectables/TextService.html":{}}}],["module",{"_index":270,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ScreensModule.html":{},"modules/UiElementsModule.html":{},"modules/ViewsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ScreensModule.html":{},"modules/UiElementsModule.html":{},"modules/ViewsModule.html":{},"overview.html":{}}}],["modules",{"_index":272,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ScreensModule.html":{},"modules/UiElementsModule.html":{},"modules/ViewsModule.html":{},"modules.html":{},"overview.html":{}}}],["moment",{"_index":2299,"title":{},"body":{"injectables/TextService.html":{}}}],["monat",{"_index":1234,"title":{},"body":{"components/HistoryDetailViewComponent.html":{}}}],["mond",{"_index":2308,"title":{},"body":{"injectables/TextService.html":{}}}],["month",{"_index":1059,"title":{},"body":{"interfaces/ForecastResponse.html":{},"components/HistoryDetailViewComponent.html":{},"injectables/HistoryTileService.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/WeatherAPIService.html":{},"injectables/WeatherDataService.html":{},"miscellaneous/enumerations.html":{}}}],["months",{"_index":1398,"title":{},"body":{"injectables/HistoryTileService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["months[date.getmonth",{"_index":1361,"title":{},"body":{"injectables/HistoryTileService.html":{}}}],["more",{"_index":2549,"title":{},"body":{"injectables/WeatherDataService.html":{},"index.html":{}}}],["motion",{"_index":876,"title":{},"body":{"components/DashboardScreenComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/OutdoorWeatherViewComponent.html":{}}}],["move",{"_index":1148,"title":{},"body":{"interfaces/GraphDataSet.html":{},"interfaces/IndoorRoomData.html":{},"interfaces/OutdoorWeatherData.html":{},"interfaces/PollenData.html":{},"interfaces/Tile.html":{},"interfaces/TileArrays.html":{},"interfaces/WeatherData.html":{},"interfaces/WeatherForecastData.html":{},"interfaces/WeatherHistoryByDayData.html":{},"interfaces/WeatherHistoryData.html":{}}}],["moz",{"_index":1689,"title":{},"body":{"components/LoginViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/SliderElementComponent.html":{}}}],["ms",{"_index":2135,"title":{},"body":{"components/ProgressChartElementComponent.html":{},"components/SliderElementComponent.html":{}}}],["multiple",{"_index":2011,"title":{},"body":{"interfaces/PollenType.html":{},"interfaces/UserContext.html":{},"interfaces/UserIdentifikation.html":{}}}],["möglich",{"_index":1027,"title":{},"body":{"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["nach",{"_index":2054,"title":{},"body":{"components/PollenflugDetailViewComponent.html":{}}}],["nahrungsmitteln",{"_index":2048,"title":{},"body":{"components/PollenflugDetailViewComponent.html":{}}}],["name",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DetailScreenComponent.html":{},"injectables/ESPConfigurationAPIService.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"injectables/HistoryTileService.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"injectables/ImageService.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"injectables/LocalStorageService.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"injectables/SpeechService.html":{},"injectables/TextService.html":{},"injectables/TileService.html":{},"components/TtsPlayerElementComponent.html":{},"injectables/UserContextAPIService.html":{},"injectables/WeatherAPIService.html":{},"injectables/WeatherDataService.html":{},"index.html":{}}}],["nav",{"_index":227,"title":{},"body":{"components/AppComponent.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DetailScreenComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{},"modules/UiElementsModule.html":{}}}],["navbar",{"_index":818,"title":{},"body":{"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DetailScreenComponent.html":{},"components/MenuBarElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/RegistrationViewComponent.html":{}}}],["navbarelementcomponent",{"_index":226,"title":{"components/NavBarElementComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DetailScreenComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{},"modules/UiElementsModule.html":{},"coverage.html":{},"overview.html":{}}}],["navigate",{"_index":2777,"title":{},"body":{"index.html":{}}}],["ndern",{"_index":773,"title":{},"body":{"components/ConfigurationTilePopUpDialogView.html":{}}}],["neben",{"_index":1241,"title":{},"body":{"components/HistoryDetailViewComponent.html":{}}}],["neblig",{"_index":2305,"title":{},"body":{"injectables/TextService.html":{}}}],["need",{"_index":1704,"title":{},"body":{"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{}}}],["needed",{"_index":155,"title":{},"body":{"components/AppComponent.html":{},"injectables/WeatherDataService.html":{}}}],["needs",{"_index":458,"title":{},"body":{"components/CardElementComponent.html":{}}}],["network",{"_index":529,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/ESPConfiguration.html":{},"injectables/ESPConfigurationAPIService.html":{},"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/LoginResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{},"injectables/WeatherAPIService.html":{},"injectables/WeatherDataService.html":{}}}],["new",{"_index":555,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"interfaces/ESPConfiguration.html":{},"injectables/ESPConfigurationAPIService.html":{},"interfaces/ForecastResponse.html":{},"injectables/HistoryTileService.html":{},"injectables/ImageService.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/LoginResponse.html":{},"components/LoginViewComponent.html":{},"components/MenuElementComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"interfaces/OutdoorWeatherResponse.html":{},"components/PersonalizationSettingsViewComponent.html":{},"interfaces/PollenResponse.html":{},"interfaces/PollenType.html":{},"components/RegistrationViewComponent.html":{},"components/SliderElementComponent.html":{},"injectables/SpeechService.html":{},"interfaces/UserContext.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{},"interfaces/UserIdentifikation.html":{},"injectables/WeatherAPIService.html":{},"injectables/WeatherDataService.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["ng",{"_index":2774,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["ngmodule",{"_index":292,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/ScreensModule.html":{},"modules/UiElementsModule.html":{},"modules/ViewsModule.html":{}}}],["ngonchanges",{"_index":30,"title":{},"body":{"components/AppComponent.html":{}}}],["ngoninit",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DetailScreenComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{}}}],["ngx",{"_index":311,"title":{},"body":{"modules/AppModule.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"modules/ScreensModule.html":{},"modules/ViewsModule.html":{},"dependencies.html":{}}}],["ngxspinnermodule",{"_index":310,"title":{},"body":{"modules/AppModule.html":{},"modules/ScreensModule.html":{},"modules/ViewsModule.html":{}}}],["ngxspinnerservice",{"_index":806,"title":{},"body":{"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{}}}],["nicht",{"_index":963,"title":{},"body":{"components/ForecastDetailViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/LoginViewComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/RegistrationViewComponent.html":{}}}],["nichts",{"_index":815,"title":{},"body":{"components/ConfigurationViewComponent.html":{}}}],["niederschlag",{"_index":944,"title":{},"body":{"components/ForecastDetailViewComponent.html":{}}}],["niedrige",{"_index":2280,"title":{},"body":{"injectables/TextService.html":{}}}],["night",{"_index":1168,"title":{},"body":{"interfaces/GraphDataSet.html":{},"injectables/ImageService.html":{},"interfaces/IndoorRoomData.html":{},"interfaces/OutdoorWeatherData.html":{},"components/OutdoorWeatherViewComponent.html":{},"interfaces/PollenData.html":{},"injectables/TextService.html":{},"interfaces/Tile.html":{},"interfaces/TileArrays.html":{},"interfaces/WeatherData.html":{},"interfaces/WeatherForecastData.html":{},"interfaces/WeatherHistoryByDayData.html":{},"interfaces/WeatherHistoryData.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["nightdark",{"_index":1536,"title":{},"body":{"injectables/ImageService.html":{},"miscellaneous/variables.html":{}}}],["noch",{"_index":935,"title":{},"body":{"components/ForecastDetailViewComponent.html":{},"components/IndoorDetailViewComponent.html":{}}}],["none",{"_index":431,"title":{},"body":{"components/BackButtonElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/SliderElementComponent.html":{}}}],["noon",{"_index":1167,"title":{},"body":{"interfaces/GraphDataSet.html":{},"injectables/ImageService.html":{},"interfaces/IndoorRoomData.html":{},"components/LoginViewComponent.html":{},"interfaces/OutdoorWeatherData.html":{},"components/OutdoorWeatherViewComponent.html":{},"interfaces/PollenData.html":{},"interfaces/Tile.html":{},"interfaces/TileArrays.html":{},"interfaces/WeatherData.html":{},"interfaces/WeatherForecastData.html":{},"interfaces/WeatherHistoryByDayData.html":{},"interfaces/WeatherHistoryData.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["noondark",{"_index":1529,"title":{},"body":{"injectables/ImageService.html":{},"miscellaneous/variables.html":{}}}],["not(input",{"_index":1697,"title":{},"body":{"components/LoginViewComponent.html":{}}}],["nowrap",{"_index":1282,"title":{},"body":{"components/HistoryDetailViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PollenTagElementComponent.html":{},"components/TtsPlayerElementComponent.html":{}}}],["null",{"_index":1647,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["number",{"_index":129,"title":{},"body":{"components/AppComponent.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"interfaces/CheckTokenResponse.html":{},"interfaces/ESPConfiguration.html":{},"injectables/ESPConfigurationAPIService.html":{},"interfaces/ForecastResponse.html":{},"interfaces/GraphDataSet.html":{},"components/HistoryDetailViewComponent.html":{},"injectables/HistoryTileService.html":{},"components/HumidityTileViewComponent.html":{},"interfaces/IndoorRoomData.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/LoginResponse.html":{},"interfaces/OutdoorWeatherData.html":{},"interfaces/OutdoorWeatherResponse.html":{},"components/PersonalizationSettingsViewComponent.html":{},"interfaces/PollenData.html":{},"interfaces/PollenResponse.html":{},"interfaces/PollenType.html":{},"components/ProgressChartElementComponent.html":{},"components/SliderElementComponent.html":{},"injectables/TextService.html":{},"interfaces/Tile.html":{},"interfaces/TileArrays.html":{},"injectables/TileService.html":{},"interfaces/UserContext.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{},"interfaces/UserIdentifikation.html":{},"injectables/WeatherAPIService.html":{},"interfaces/WeatherData.html":{},"interfaces/WeatherForecastData.html":{},"interfaces/WeatherHistoryByDayData.html":{},"interfaces/WeatherHistoryData.html":{}}}],["numberofpollen",{"_index":1929,"title":{},"body":{"components/PersonalizationSettingsViewComponent.html":{}}}],["numberofthemes",{"_index":1930,"title":{},"body":{"components/PersonalizationSettingsViewComponent.html":{}}}],["numbervalueaccessor",{"_index":2171,"title":{},"body":{"components/SliderElementComponent.html":{}}}],["nur",{"_index":964,"title":{},"body":{"components/ForecastDetailViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{}}}],["nutzername",{"_index":1683,"title":{},"body":{"components/LoginViewComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/RegistrationViewComponent.html":{}}}],["object",{"_index":588,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/ESPConfiguration.html":{},"injectables/ESPConfigurationAPIService.html":{},"interfaces/ForecastResponse.html":{},"injectables/HistoryTileService.html":{},"components/HistoryTileViewComponent.html":{},"interfaces/IndoorRoomResponse.html":{},"injectables/LocalStorageService.html":{},"interfaces/LoginResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/TextService.html":{},"injectables/TileService.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{},"injectables/WeatherAPIService.html":{},"miscellaneous/variables.html":{}}}],["object.keys(themes).length",{"_index":1955,"title":{},"body":{"components/PersonalizationSettingsViewComponent.html":{}}}],["objects",{"_index":1287,"title":{},"body":{"injectables/HistoryTileService.html":{},"injectables/TextService.html":{}}}],["objectstring",{"_index":1627,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["observable",{"_index":75,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CheckTokenResponse.html":{},"interfaces/ESPConfiguration.html":{},"injectables/ESPConfigurationAPIService.html":{},"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/LoginResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{},"injectables/WeatherAPIService.html":{},"injectables/WeatherDataService.html":{}}}],["observable((observer",{"_index":556,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/ESPConfiguration.html":{},"injectables/ESPConfigurationAPIService.html":{},"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/LoginResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["observable.subscribe(data",{"_index":2646,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["observe",{"_index":559,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"injectables/ImageService.html":{},"interfaces/LoginResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{}}}],["observe(['(min",{"_index":111,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardScreenComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{}}}],["observe(['(prefers",{"_index":703,"title":{},"body":{"components/CheckboxSwitcherElementComponent.html":{},"injectables/ImageService.html":{}}}],["observer.complete",{"_index":587,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/ESPConfiguration.html":{},"injectables/ESPConfigurationAPIService.html":{},"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/LoginResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["observer.error(\"an",{"_index":648,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/LoginResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{}}}],["observer.error(\"delete",{"_index":631,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/LoginResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{}}}],["observer.error(\"ein",{"_index":577,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/ESPConfiguration.html":{},"injectables/ESPConfigurationAPIService.html":{},"interfaces/LoginResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{}}}],["observer.error(\"post",{"_index":623,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/LoginResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{}}}],["observer.error(body.message",{"_index":575,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/LoginResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{}}}],["observer.next",{"_index":569,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/LoginResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["observer.next([indoordata",{"_index":1032,"title":{},"body":{"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["observer.next(body",{"_index":893,"title":{},"body":{"interfaces/ESPConfiguration.html":{},"injectables/ESPConfigurationAPIService.html":{}}}],["observer.next(data",{"_index":654,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/ESPConfiguration.html":{},"injectables/ESPConfigurationAPIService.html":{},"interfaces/LoginResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{}}}],["observer.next(data.success",{"_index":641,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/LoginResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{}}}],["observer.next(false",{"_index":642,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/LoginResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{}}}],["observer.next(forecastdata",{"_index":1014,"title":{},"body":{"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["observer.next(outdoordata",{"_index":1008,"title":{},"body":{"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["observer.next(pollendata",{"_index":1018,"title":{},"body":{"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["observer.next(this.createusercontextfromserverresponse(context",{"_index":647,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/LoginResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{}}}],["observer.next(this.createusercontextfromserverresponse(response",{"_index":601,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/LoginResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{}}}],["observer.next(true",{"_index":606,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/LoginResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{}}}],["observer.next({'datapoints",{"_index":1046,"title":{},"body":{"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["occured",{"_index":649,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/LoginResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{}}}],["oder",{"_index":959,"title":{},"body":{"components/ForecastDetailViewComponent.html":{}}}],["of(forecast",{"_index":1010,"title":{},"body":{"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["of(indoorairquality",{"_index":1021,"title":{},"body":{"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["of(outdoorweather",{"_index":1005,"title":{},"body":{"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["of(pollen",{"_index":1016,"title":{},"body":{"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["of(weatherhistory",{"_index":1036,"title":{},"body":{"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["offenbar",{"_index":1579,"title":{},"body":{"components/IndoorDetailViewComponent.html":{}}}],["oft",{"_index":1572,"title":{},"body":{"components/IndoorDetailViewComponent.html":{}}}],["oftmals",{"_index":2046,"title":{},"body":{"components/PollenflugDetailViewComponent.html":{}}}],["ohne",{"_index":1687,"title":{},"body":{"components/LoginViewComponent.html":{}}}],["ok",{"_index":1808,"title":{},"body":{"components/OpenAPELoginTileViewComponent.html":{}}}],["oldesthistorydate",{"_index":2552,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["onboarding",{"_index":229,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DetailScreenComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"modules/ScreensModule.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{}}}],["onboardingscreencomponent",{"_index":228,"title":{"components/OnboardingScreenComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DetailScreenComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"modules/ScreensModule.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{},"coverage.html":{},"overview.html":{}}}],["onclickdone",{"_index":1969,"title":{},"body":{"components/PersonalizationViewComponent.html":{}}}],["onclickpersonalization",{"_index":1659,"title":{},"body":{"components/LoginViewComponent.html":{}}}],["onclickregistration",{"_index":1660,"title":{},"body":{"components/LoginViewComponent.html":{}}}],["one",{"_index":868,"title":{},"body":{"components/DashboardScreenComponent.html":{},"injectables/WeatherDataService.html":{}}}],["oninit",{"_index":373,"title":{},"body":{"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DetailScreenComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{}}}],["onnoclick",{"_index":733,"title":{},"body":{"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{}}}],["onpause",{"_index":2407,"title":{},"body":{"components/TtsPlayerElementComponent.html":{}}}],["onplay",{"_index":2408,"title":{},"body":{"components/TtsPlayerElementComponent.html":{}}}],["onsubmit",{"_index":734,"title":{},"body":{"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/RegistrationViewComponent.html":{}}}],["opacity",{"_index":1772,"title":{},"body":{"components/MenuElementComponent.html":{},"components/TtsPlayerElementComponent.html":{},"miscellaneous/variables.html":{}}}],["open",{"_index":231,"title":{},"body":{"components/AppComponent.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DetailScreenComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"injectables/LocalStorageService.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{},"modules/ViewsModule.html":{}}}],["openapelogintileviewcomponent",{"_index":230,"title":{"components/OpenAPELoginTileViewComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DetailScreenComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{},"modules/ViewsModule.html":{},"coverage.html":{},"overview.html":{}}}],["openapepassword",{"_index":597,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/LoginResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{}}}],["openapeurl",{"_index":549,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/LoginResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{}}}],["openapeuser",{"_index":596,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/LoginResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{}}}],["openconfigurationsettings",{"_index":1746,"title":{},"body":{"components/MenuElementComponent.html":{}}}],["opendialog",{"_index":756,"title":{},"body":{"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{}}}],["openmenu",{"_index":1730,"title":{},"body":{"components/MenuButtonElementComponent.html":{}}}],["openpersonalizationsettings",{"_index":1747,"title":{},"body":{"components/MenuElementComponent.html":{}}}],["optional",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"injectables/ESPConfigurationAPIService.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"injectables/HistoryTileService.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"interfaces/ImageModel.html":{},"injectables/ImageService.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"injectables/LocalStorageService.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SliderElementComponent.html":{},"injectables/SpeechService.html":{},"injectables/TextService.html":{},"injectables/TileService.html":{},"components/TtsPlayerElementComponent.html":{},"injectables/UserContextAPIService.html":{},"injectables/WeatherAPIService.html":{},"injectables/WeatherDataService.html":{}}}],["orange",{"_index":1992,"title":{},"body":{"components/PollenTagElementComponent.html":{},"components/PollenflugSmallTileComponent.html":{}}}],["orchid",{"_index":788,"title":{},"body":{"components/ConfigurationTilePopUpDialogView.html":{}}}],["order",{"_index":2320,"title":{},"body":{"injectables/TileService.html":{},"injectables/WeatherDataService.html":{}}}],["orderd",{"_index":2327,"title":{},"body":{"injectables/TileService.html":{}}}],["ordered",{"_index":2325,"title":{},"body":{"injectables/TileService.html":{}}}],["orderitemsin(tilesarray",{"_index":2399,"title":{},"body":{"injectables/TileService.html":{}}}],["ort",{"_index":958,"title":{},"body":{"components/ForecastDetailViewComponent.html":{}}}],["out",{"_index":288,"title":{},"body":{"modules/AppModule.html":{},"injectables/LocalStorageService.html":{},"components/MenuElementComponent.html":{},"modules/ScreensModule.html":{},"modules/UiElementsModule.html":{},"modules/ViewsModule.html":{},"index.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["outdoor",{"_index":234,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DetailScreenComponent.html":{},"components/ForecastDetailViewComponent.html":{},"interfaces/ForecastResponse.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"interfaces/IndoorRoomResponse.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"interfaces/OutdoorWeatherResponse.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenListElementComponent.html":{},"interfaces/PollenResponse.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"injectables/TileService.html":{},"components/TtsPlayerElementComponent.html":{},"modules/ViewsModule.html":{},"injectables/WeatherAPIService.html":{},"injectables/WeatherDataService.html":{}}}],["outdoordata",{"_index":826,"title":{},"body":{"components/DashboardScreenComponent.html":{},"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["outdoortext",{"_index":848,"title":{},"body":{"components/DashboardScreenComponent.html":{}}}],["outdoorurl",{"_index":993,"title":{},"body":{"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["outdoorwea3the3r114",{"_index":2685,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["outdoorweathe3r114",{"_index":2686,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["outdoorweather",{"_index":983,"title":{},"body":{"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"interfaces/OutdoorWeatherResponse.html":{},"components/OutdoorWeatherViewComponent.html":{},"interfaces/PollenResponse.html":{},"injectables/TileService.html":{},"injectables/WeatherAPIService.html":{},"injectables/WeatherDataService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["outdoorweather.maxtemperature",{"_index":1904,"title":{},"body":{"components/OutdoorWeatherViewComponent.html":{}}}],["outdoorweather.mintemperature",{"_index":1905,"title":{},"body":{"components/OutdoorWeatherViewComponent.html":{}}}],["outdoorweather.temperature",{"_index":1903,"title":{},"body":{"components/OutdoorWeatherViewComponent.html":{}}}],["outdoorweather10",{"_index":2687,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["outdoorweather11",{"_index":2688,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["outdoorweather110",{"_index":2689,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["outdoorweather112",{"_index":2690,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["outdoorweather113",{"_index":2691,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["outdoorweather114",{"_index":2692,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["outdoorweather12",{"_index":2693,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["outdoorweather13",{"_index":2694,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["outdoorweather14",{"_index":2695,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["outdoorweather2",{"_index":2696,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["outdoorweather3",{"_index":2697,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["outdoorweather321",{"_index":2698,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["outdoorweather4",{"_index":2699,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["outdoorweather41",{"_index":2700,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["outdoorweatherdata",{"_index":392,"title":{"interfaces/OutdoorWeatherData.html":{}},"body":{"components/ApparentTemperatureTileViewComponent.html":{},"components/DashboardScreenComponent.html":{},"interfaces/ForecastResponse.html":{},"interfaces/GraphDataSet.html":{},"injectables/HistoryTileService.html":{},"components/HumidityTileViewComponent.html":{},"interfaces/IndoorRoomData.html":{},"interfaces/IndoorRoomResponse.html":{},"components/MenuBarElementComponent.html":{},"interfaces/OutdoorWeatherData.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"interfaces/OutdoorWeatherResponse.html":{},"components/OutdoorWeatherViewComponent.html":{},"interfaces/PollenData.html":{},"interfaces/PollenResponse.html":{},"injectables/TextService.html":{},"interfaces/Tile.html":{},"interfaces/TileArrays.html":{},"injectables/TileService.html":{},"injectables/WeatherAPIService.html":{},"interfaces/WeatherData.html":{},"injectables/WeatherDataService.html":{},"interfaces/WeatherForecastData.html":{},"interfaces/WeatherHistoryByDayData.html":{},"interfaces/WeatherHistoryData.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["outdoorweatherdata(value",{"_index":2601,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["outdoorweatherdata.apparenttemperature",{"_index":402,"title":{},"body":{"components/ApparentTemperatureTileViewComponent.html":{}}}],["outdoorweatherdata.humidity",{"_index":1450,"title":{},"body":{"components/HumidityTileViewComponent.html":{}}}],["outdoorweatherdetailviewcomponent",{"_index":233,"title":{"components/OutdoorWeatherDetailViewComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DetailScreenComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{},"modules/ViewsModule.html":{},"coverage.html":{},"overview.html":{}}}],["outdoorweatherresponse",{"_index":1055,"title":{"interfaces/OutdoorWeatherResponse.html":{}},"body":{"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/WeatherAPIService.html":{},"coverage.html":{}}}],["outdoorweatherviewcomponent",{"_index":236,"title":{"components/OutdoorWeatherViewComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DetailScreenComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{},"modules/ViewsModule.html":{},"coverage.html":{},"overview.html":{}}}],["outlet",{"_index":57,"title":{},"body":{"components/AppComponent.html":{},"components/OnboardingScreenComponent.html":{}}}],["outlet.activatedroutedata",{"_index":98,"title":{},"body":{"components/AppComponent.html":{},"components/OnboardingScreenComponent.html":{}}}],["outlet.activatedroutedata['animationstate",{"_index":99,"title":{},"body":{"components/AppComponent.html":{},"components/OnboardingScreenComponent.html":{}}}],["outline",{"_index":786,"title":{},"body":{"components/ConfigurationTilePopUpDialogView.html":{},"components/ProgressChartElementComponent.html":{},"components/SliderElementComponent.html":{}}}],["output",{"_index":695,"title":{},"body":{"components/CheckboxSwitcherElementComponent.html":{},"components/MenuElementComponent.html":{},"components/SliderElementComponent.html":{},"injectables/SpeechService.html":{}}}],["outputs",{"_index":683,"title":{},"body":{"components/CheckboxSwitcherElementComponent.html":{},"components/MenuElementComponent.html":{},"components/SliderElementComponent.html":{}}}],["overview",{"_index":2793,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["p",{"_index":483,"title":{},"body":{"components/CardElementComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/MenuElementComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PollenTagElementComponent.html":{},"components/ProgressChartElementComponent.html":{}}}],["paar",{"_index":2249,"title":{},"body":{"injectables/TextService.html":{}}}],["package",{"_index":2744,"title":{"dependencies.html":{}},"body":{}}],["padding",{"_index":173,"title":{},"body":{"components/AppComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DetailScreenComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{}}}],["padding)/2",{"_index":780,"title":{},"body":{"components/ConfigurationTilePopUpDialogView.html":{},"components/PollenListElementComponent.html":{}}}],["page",{"_index":2796,"title":{},"body":{"index.html":{}}}],["param",{"_index":659,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/ForecastResponse.html":{},"injectables/HistoryTileService.html":{},"injectables/ImageService.html":{},"interfaces/IndoorRoomResponse.html":{},"injectables/LocalStorageService.html":{},"interfaces/LoginResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/SpeechService.html":{},"injectables/TextService.html":{},"injectables/TileService.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["parameters",{"_index":43,"title":{},"body":{"components/AppComponent.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"injectables/ESPConfigurationAPIService.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"injectables/HistoryTileService.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"injectables/ImageService.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"injectables/LocalStorageService.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SliderElementComponent.html":{},"injectables/SpeechService.html":{},"injectables/TextService.html":{},"injectables/TileService.html":{},"components/TtsPlayerElementComponent.html":{},"injectables/UserContextAPIService.html":{},"injectables/WeatherAPIService.html":{},"injectables/WeatherDataService.html":{}}}],["params",{"_index":618,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/LoginResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{}}}],["parent",{"_index":2375,"title":{},"body":{"injectables/TileService.html":{}}}],["part",{"_index":1887,"title":{},"body":{"components/OutdoorWeatherViewComponent.html":{}}}],["partly",{"_index":1507,"title":{},"body":{"injectables/ImageService.html":{},"injectables/TextService.html":{}}}],["password",{"_index":558,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/Credentials.html":{},"interfaces/LoginResponse.html":{},"components/LoginViewComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/RegistrationViewComponent.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{}}}],["password\":\"admin",{"_index":163,"title":{},"body":{"components/AppComponent.html":{}}}],["password).then((data",{"_index":1672,"title":{},"body":{"components/LoginViewComponent.html":{},"components/RegistrationViewComponent.html":{}}}],["password).then(result",{"_index":1805,"title":{},"body":{"components/OpenAPELoginTileViewComponent.html":{}}}],["passwort",{"_index":1684,"title":{},"body":{"components/LoginViewComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/RegistrationViewComponent.html":{}}}],["path",{"_index":360,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/ImageService.html":{},"components/TtsPlayerElementComponent.html":{}}}],["pathmatch",{"_index":365,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["people",{"_index":2015,"title":{},"body":{"interfaces/PollenType.html":{},"interfaces/UserContext.html":{},"interfaces/UserIdentifikation.html":{}}}],["per",{"_index":1307,"title":{},"body":{"injectables/HistoryTileService.html":{}}}],["pers",{"_index":1763,"title":{},"body":{"components/MenuElementComponent.html":{}}}],["personalisierung",{"_index":1783,"title":{},"body":{"components/MenuElementComponent.html":{}}}],["personalization",{"_index":238,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DetailScreenComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{},"modules/ViewsModule.html":{},"miscellaneous/variables.html":{}}}],["personalizationsettingsviewcomponent",{"_index":237,"title":{"components/PersonalizationSettingsViewComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DetailScreenComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{},"modules/ViewsModule.html":{},"coverage.html":{},"overview.html":{}}}],["personalizationviewcomponent",{"_index":240,"title":{"components/PersonalizationViewComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DetailScreenComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{},"modules/ViewsModule.html":{},"coverage.html":{},"overview.html":{}}}],["perspective(1px",{"_index":495,"title":{},"body":{"components/CardElementComponent.html":{}}}],["pflanzenentwicklung",{"_index":2073,"title":{},"body":{"components/PollenflugDetailViewComponent.html":{}}}],["place",{"_index":459,"title":{},"body":{"components/CardElementComponent.html":{}}}],["play",{"_index":2405,"title":{},"body":{"components/TtsPlayerElementComponent.html":{}}}],["player",{"_index":264,"title":{},"body":{"components/AppComponent.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DetailScreenComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{},"modules/UiElementsModule.html":{},"coverage.html":{}}}],["png",{"_index":1505,"title":{},"body":{"injectables/ImageService.html":{}}}],["pointer",{"_index":717,"title":{},"body":{"components/CheckboxSwitcherElementComponent.html":{},"components/MenuElementComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/SliderElementComponent.html":{}}}],["polle",{"_index":632,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/LoginResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{}}}],["pollen",{"_index":248,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CardElementComponent.html":{},"interfaces/CheckTokenResponse.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DetailScreenComponent.html":{},"components/ForecastDetailViewComponent.html":{},"interfaces/ForecastResponse.html":{},"components/ForecastTileViewComponent.html":{},"interfaces/GraphDataSet.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"interfaces/IndoorRoomData.html":{},"interfaces/IndoorRoomResponse.html":{},"components/IndoorTileViewComponent.html":{},"interfaces/LoginResponse.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"interfaces/OutdoorWeatherData.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"interfaces/OutdoorWeatherResponse.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"interfaces/PollenData.html":{},"components/PollenListElementComponent.html":{},"interfaces/PollenResponse.html":{},"components/PollenTagElementComponent.html":{},"interfaces/PollenType.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"injectables/TextService.html":{},"interfaces/Tile.html":{},"interfaces/TileArrays.html":{},"injectables/TileService.html":{},"components/TtsPlayerElementComponent.html":{},"modules/UiElementsModule.html":{},"interfaces/UserContext.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{},"interfaces/UserIdentifikation.html":{},"injectables/WeatherAPIService.html":{},"interfaces/WeatherData.html":{},"injectables/WeatherDataService.html":{},"interfaces/WeatherForecastData.html":{},"interfaces/WeatherHistoryByDayData.html":{},"interfaces/WeatherHistoryData.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["pollen.push",{"_index":1091,"title":{},"body":{"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["pollen.today",{"_index":2384,"title":{},"body":{"injectables/TileService.html":{}}}],["pollen/all",{"_index":544,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/LoginResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["pollenallergiker",{"_index":2035,"title":{},"body":{"components/PollenflugDetailViewComponent.html":{}}}],["pollenallergikers",{"_index":2067,"title":{},"body":{"components/PollenflugDetailViewComponent.html":{}}}],["pollenbelastung",{"_index":2086,"title":{},"body":{"components/PollenflugDetailViewComponent.html":{}}}],["pollendata",{"_index":987,"title":{"interfaces/PollenData.html":{}},"body":{"interfaces/ForecastResponse.html":{},"interfaces/GraphDataSet.html":{},"components/HumidityTileViewComponent.html":{},"interfaces/IndoorRoomData.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherData.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenData.html":{},"interfaces/PollenResponse.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"injectables/TextService.html":{},"interfaces/Tile.html":{},"interfaces/TileArrays.html":{},"injectables/TileService.html":{},"injectables/WeatherAPIService.html":{},"interfaces/WeatherData.html":{},"injectables/WeatherDataService.html":{},"interfaces/WeatherForecastData.html":{},"interfaces/WeatherHistoryByDayData.html":{},"interfaces/WeatherHistoryData.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["pollendata(value",{"_index":2583,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["pollendata.filter((item",{"_index":2357,"title":{},"body":{"injectables/TileService.html":{}}}],["pollendata.find(dataitem",{"_index":2351,"title":{},"body":{"injectables/TileService.html":{}}}],["pollendataarray",{"_index":2232,"title":{},"body":{"injectables/TextService.html":{}}}],["pollendataarray.foreach(element",{"_index":2234,"title":{},"body":{"injectables/TextService.html":{}}}],["pollenflug",{"_index":242,"title":{},"body":{"components/AppComponent.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DetailScreenComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{},"modules/ViewsModule.html":{}}}],["pollenflugdetailviewcomponent",{"_index":241,"title":{"components/PollenflugDetailViewComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DetailScreenComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{},"modules/ViewsModule.html":{},"coverage.html":{},"overview.html":{}}}],["pollenflugsmalltilecomponent",{"_index":243,"title":{"components/PollenflugSmallTileComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DetailScreenComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{},"modules/ViewsModule.html":{},"coverage.html":{},"overview.html":{}}}],["pollenflugtileviewcomponent",{"_index":246,"title":{"components/PollenflugTileViewComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DetailScreenComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{},"modules/ViewsModule.html":{},"coverage.html":{},"overview.html":{}}}],["pollenid",{"_index":628,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/LoginResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{}}}],["pollenitem",{"_index":2350,"title":{},"body":{"injectables/TileService.html":{}}}],["pollenitem.pollenname",{"_index":2354,"title":{},"body":{"injectables/TileService.html":{}}}],["pollenkonzentration",{"_index":2062,"title":{},"body":{"components/PollenflugDetailViewComponent.html":{}}}],["pollenlist",{"_index":1135,"title":{},"body":{"interfaces/GraphDataSet.html":{},"interfaces/IndoorRoomData.html":{},"interfaces/OutdoorWeatherData.html":{},"interfaces/PollenData.html":{},"interfaces/Tile.html":{},"interfaces/TileArrays.html":{},"injectables/TileService.html":{},"interfaces/WeatherData.html":{},"interfaces/WeatherForecastData.html":{},"interfaces/WeatherHistoryByDayData.html":{},"interfaces/WeatherHistoryData.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["pollenlistelementcomponent",{"_index":247,"title":{"components/PollenListElementComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DetailScreenComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{},"modules/UiElementsModule.html":{},"coverage.html":{},"overview.html":{}}}],["pollenname",{"_index":1093,"title":{},"body":{"interfaces/ForecastResponse.html":{},"interfaces/GraphDataSet.html":{},"interfaces/IndoorRoomData.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherData.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenData.html":{},"interfaces/PollenResponse.html":{},"interfaces/PollenType.html":{},"interfaces/Tile.html":{},"interfaces/TileArrays.html":{},"interfaces/UserContext.html":{},"interfaces/UserIdentifikation.html":{},"injectables/WeatherAPIService.html":{},"interfaces/WeatherData.html":{},"interfaces/WeatherForecastData.html":{},"interfaces/WeatherHistoryByDayData.html":{},"interfaces/WeatherHistoryData.html":{},"miscellaneous/variables.html":{}}}],["pollenresponse",{"_index":1087,"title":{"interfaces/PollenResponse.html":{}},"body":{"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/WeatherAPIService.html":{},"coverage.html":{}}}],["pollensmall",{"_index":1134,"title":{},"body":{"interfaces/GraphDataSet.html":{},"interfaces/IndoorRoomData.html":{},"interfaces/OutdoorWeatherData.html":{},"interfaces/PollenData.html":{},"interfaces/Tile.html":{},"interfaces/TileArrays.html":{},"interfaces/WeatherData.html":{},"interfaces/WeatherForecastData.html":{},"interfaces/WeatherHistoryByDayData.html":{},"interfaces/WeatherHistoryData.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["pollensmall2",{"_index":2701,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["pollentagelementcomponent",{"_index":250,"title":{"components/PollenTagElementComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DetailScreenComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{},"modules/UiElementsModule.html":{},"coverage.html":{},"overview.html":{}}}],["pollentiles",{"_index":2025,"title":{},"body":{"components/PollenflugDetailViewComponent.html":{},"injectables/TileService.html":{}}}],["pollentiles(tiles",{"_index":2573,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["pollentype",{"_index":522,"title":{"interfaces/PollenType.html":{}},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/LoginResponse.html":{},"components/PersonalizationSettingsViewComponent.html":{},"interfaces/PollenType.html":{},"interfaces/UserContext.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{},"interfaces/UserIdentifikation.html":{},"coverage.html":{}}}],["popup",{"_index":202,"title":{},"body":{"components/AppComponent.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DetailScreenComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{}}}],["position",{"_index":1123,"title":{},"body":{"components/ForecastTileViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/TtsPlayerElementComponent.html":{},"miscellaneous/variables.html":{}}}],["postcode",{"_index":1077,"title":{},"body":{"interfaces/ForecastResponse.html":{},"interfaces/GraphDataSet.html":{},"interfaces/IndoorRoomData.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherData.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenData.html":{},"interfaces/PollenResponse.html":{},"interfaces/Tile.html":{},"interfaces/TileArrays.html":{},"injectables/WeatherAPIService.html":{},"interfaces/WeatherData.html":{},"interfaces/WeatherForecastData.html":{},"interfaces/WeatherHistoryByDayData.html":{},"interfaces/WeatherHistoryData.html":{},"miscellaneous/variables.html":{}}}],["postespconfiguration",{"_index":895,"title":{},"body":{"injectables/ESPConfigurationAPIService.html":{}}}],["postespconfiguration(configuration",{"_index":890,"title":{},"body":{"interfaces/ESPConfiguration.html":{},"injectables/ESPConfigurationAPIService.html":{}}}],["postistokenvalid",{"_index":2491,"title":{},"body":{"injectables/UserContextAPIService.html":{}}}],["postistokenvalid(token",{"_index":637,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/LoginResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{}}}],["postlogin",{"_index":2492,"title":{},"body":{"injectables/UserContextAPIService.html":{}}}],["postlogin(password",{"_index":552,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/LoginResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{}}}],["postloginopenape",{"_index":2493,"title":{},"body":{"injectables/UserContextAPIService.html":{}}}],["postloginopenape(username",{"_index":589,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/LoginResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{}}}],["postpolletousercontext",{"_index":2494,"title":{},"body":{"injectables/UserContextAPIService.html":{}}}],["postpolletousercontext(userid",{"_index":634,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/LoginResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{}}}],["postregister",{"_index":2495,"title":{},"body":{"injectables/UserContextAPIService.html":{}}}],["postregister(password",{"_index":603,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/LoginResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{}}}],["prefered",{"_index":1301,"title":{},"body":{"injectables/HistoryTileService.html":{},"injectables/ImageService.html":{},"components/OutdoorWeatherViewComponent.html":{}}}],["preference",{"_index":1721,"title":{},"body":{"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/OutdoorWeatherViewComponent.html":{}}}],["preferredpollen",{"_index":2346,"title":{},"body":{"injectables/TileService.html":{}}}],["preferredpollen.foreach(item",{"_index":2349,"title":{},"body":{"injectables/TileService.html":{}}}],["prefers",{"_index":874,"title":{},"body":{"components/DashboardScreenComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{}}}],["prepareroute",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"components/OnboardingScreenComponent.html":{}}}],["prepareroute(outlet",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"components/OnboardingScreenComponent.html":{}}}],["pressable",{"_index":381,"title":{},"body":{"components/ApparentTemperatureTileViewComponent.html":{},"components/CardElementComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{}}}],["pressable:active",{"_index":487,"title":{},"body":{"components/CardElementComponent.html":{}}}],["pressed",{"_index":488,"title":{},"body":{"components/CardElementComponent.html":{}}}],["pressure",{"_index":1103,"title":{},"body":{"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["prioritiy",{"_index":2372,"title":{},"body":{"injectables/TileService.html":{}}}],["priority",{"_index":1142,"title":{},"body":{"interfaces/GraphDataSet.html":{},"interfaces/IndoorRoomData.html":{},"interfaces/OutdoorWeatherData.html":{},"interfaces/PollenData.html":{},"interfaces/Tile.html":{},"interfaces/TileArrays.html":{},"injectables/TileService.html":{},"interfaces/WeatherData.html":{},"interfaces/WeatherForecastData.html":{},"interfaces/WeatherHistoryByDayData.html":{},"interfaces/WeatherHistoryData.html":{},"miscellaneous/variables.html":{}}}],["private",{"_index":89,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CheckTokenResponse.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"interfaces/ESPConfiguration.html":{},"injectables/ESPConfigurationAPIService.html":{},"components/ForecastDetailViewComponent.html":{},"interfaces/ForecastResponse.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"injectables/HistoryTileService.html":{},"injectables/ImageService.html":{},"components/IndoorDetailViewComponent.html":{},"interfaces/IndoorRoomResponse.html":{},"injectables/LocalStorageService.html":{},"interfaces/LoginResponse.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuElementComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"interfaces/OutdoorWeatherResponse.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"interfaces/PollenResponse.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/RegistrationViewComponent.html":{},"injectables/SpeechService.html":{},"injectables/TileService.html":{},"components/TtsPlayerElementComponent.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{},"injectables/WeatherAPIService.html":{},"injectables/WeatherDataService.html":{}}}],["problem",{"_index":1966,"title":{},"body":{"components/PersonalizationSettingsViewComponent.html":{}}}],["prod",{"_index":2788,"title":{},"body":{"index.html":{}}}],["production",{"_index":2790,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["progid:dximagetransform.microsoft.gradient(startcolorstr=\"#21994a\",endcolorstr=\"#ff0000\",gradienttype=1",{"_index":2117,"title":{},"body":{"components/ProgressChartElementComponent.html":{}}}],["progid:dximagetransform.microsoft.gradient(startcolorstr=\"#61c2d8\",endcolorstr=\"#437ddb\",gradienttype=1",{"_index":1522,"title":{},"body":{"injectables/ImageService.html":{},"components/LoginViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"miscellaneous/variables.html":{}}}],["progid:dximagetransform.microsoft.gradient(startcolorstr=\"#d861cc\",endcolorstr=\"#4643db\",gradienttype=1",{"_index":1528,"title":{},"body":{"injectables/ImageService.html":{},"components/OutdoorWeatherViewComponent.html":{},"miscellaneous/variables.html":{}}}],["progid:dximagetransform.microsoft.gradient(startcolorstr=\"#ee453b\",endcolorstr=\"#a4096e\",gradienttype=1",{"_index":1525,"title":{},"body":{"injectables/ImageService.html":{},"components/OutdoorWeatherViewComponent.html":{},"miscellaneous/variables.html":{}}}],["prognose",{"_index":950,"title":{},"body":{"components/ForecastDetailViewComponent.html":{}}}],["progress",{"_index":253,"title":{},"body":{"components/AppComponent.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DetailScreenComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{},"modules/UiElementsModule.html":{}}}],["progresschartelementcomponent",{"_index":252,"title":{"components/ProgressChartElementComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DetailScreenComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{},"modules/UiElementsModule.html":{},"coverage.html":{},"overview.html":{}}}],["project",{"_index":2767,"title":{},"body":{"index.html":{}}}],["pronounciation",{"_index":2284,"title":{},"body":{"injectables/TextService.html":{}}}],["properties",{"_index":20,"title":{},"body":{"components/AppComponent.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CardElementComponent.html":{},"interfaces/CheckTokenResponse.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"interfaces/Credentials.html":{},"components/DashboardScreenComponent.html":{},"components/DetailScreenComponent.html":{},"interfaces/ESPConfiguration.html":{},"components/ForecastDetailViewComponent.html":{},"interfaces/ForecastResponse.html":{},"components/ForecastTileViewComponent.html":{},"interfaces/GraphDataSet.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"interfaces/ImageModel.html":{},"components/IndoorDetailViewComponent.html":{},"interfaces/IndoorRoomData.html":{},"interfaces/IndoorRoomResponse.html":{},"components/IndoorTileViewComponent.html":{},"interfaces/LoginResponse.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"interfaces/OutdoorWeatherData.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"interfaces/OutdoorWeatherResponse.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"interfaces/PollenData.html":{},"interfaces/PollenResponse.html":{},"components/PollenTagElementComponent.html":{},"interfaces/PollenType.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"interfaces/Tile.html":{},"interfaces/TileArrays.html":{},"components/TtsPlayerElementComponent.html":{},"interfaces/UserContext.html":{},"interfaces/UserContextResponse.html":{},"interfaces/UserIdentifikation.html":{},"interfaces/WeatherForecastData.html":{},"interfaces/WeatherHistoryByDayData.html":{},"interfaces/WeatherHistoryData.html":{}}}],["property",{"_index":502,"title":{},"body":{"components/CardElementComponent.html":{}}}],["prophylaxe",{"_index":2079,"title":{},"body":{"components/PollenflugDetailViewComponent.html":{}}}],["providedin",{"_index":530,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/ESPConfiguration.html":{},"injectables/ESPConfigurationAPIService.html":{},"interfaces/ForecastResponse.html":{},"injectables/HistoryTileService.html":{},"injectables/ImageService.html":{},"interfaces/IndoorRoomResponse.html":{},"injectables/LocalStorageService.html":{},"interfaces/LoginResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/SpeechService.html":{},"injectables/TextService.html":{},"injectables/TileService.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{},"injectables/WeatherAPIService.html":{},"injectables/WeatherDataService.html":{}}}],["providers",{"_index":276,"title":{},"body":{"modules/AppModule.html":{},"modules/ScreensModule.html":{},"modules/UiElementsModule.html":{},"modules/ViewsModule.html":{},"overview.html":{}}}],["proxy",{"_index":2837,"title":{},"body":{"miscellaneous/variables.html":{}}}],["public",{"_index":412,"title":{},"body":{"components/BackButtonElementComponent.html":{},"interfaces/CheckTokenResponse.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/DetailScreenComponent.html":{},"interfaces/ESPConfiguration.html":{},"injectables/ESPConfigurationAPIService.html":{},"interfaces/ForecastResponse.html":{},"injectables/HistoryTileService.html":{},"injectables/ImageService.html":{},"interfaces/IndoorRoomResponse.html":{},"injectables/LocalStorageService.html":{},"interfaces/LoginResponse.html":{},"components/MenuElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"interfaces/OutdoorWeatherResponse.html":{},"components/PersonalizationSettingsViewComponent.html":{},"interfaces/PollenResponse.html":{},"components/PollenTagElementComponent.html":{},"injectables/SpeechService.html":{},"injectables/TextService.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{},"injectables/WeatherAPIService.html":{},"injectables/WeatherDataService.html":{}}}],["putsaveusercontext",{"_index":2496,"title":{},"body":{"injectables/UserContextAPIService.html":{}}}],["putsaveusercontext(userid",{"_index":608,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/LoginResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{}}}],["quality",{"_index":2268,"title":{},"body":{"injectables/TextService.html":{}}}],["query(':enter",{"_index":2841,"title":{},"body":{"miscellaneous/variables.html":{}}}],["query(':leave",{"_index":2843,"title":{},"body":{"miscellaneous/variables.html":{}}}],["query1",{"_index":135,"title":{},"body":{"components/AppComponent.html":{}}}],["query1.addeventlistener",{"_index":142,"title":{},"body":{"components/AppComponent.html":{}}}],["query2",{"_index":140,"title":{},"body":{"components/AppComponent.html":{}}}],["query2.addeventlistener",{"_index":146,"title":{},"body":{"components/AppComponent.html":{}}}],["radius",{"_index":467,"title":{},"body":{"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/MenuElementComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{}}}],["rain",{"_index":1485,"title":{},"body":{"injectables/ImageService.html":{},"injectables/TextService.html":{}}}],["rainy",{"_index":1508,"title":{},"body":{"injectables/ImageService.html":{},"injectables/TextService.html":{},"miscellaneous/variables.html":{}}}],["range",{"_index":2133,"title":{},"body":{"components/ProgressChartElementComponent.html":{},"components/SliderElementComponent.html":{}}}],["raster",{"_index":1256,"title":{},"body":{"components/HistoryDetailViewComponent.html":{}}}],["raum",{"_index":2075,"title":{},"body":{"components/PollenflugDetailViewComponent.html":{}}}],["raumes",{"_index":1588,"title":{},"body":{"components/IndoorDetailViewComponent.html":{}}}],["raumluft",{"_index":1567,"title":{},"body":{"components/IndoorDetailViewComponent.html":{}}}],["raumluftqualität",{"_index":1554,"title":{},"body":{"components/IndoorDetailViewComponent.html":{}}}],["raumname",{"_index":772,"title":{},"body":{"components/ConfigurationTilePopUpDialogView.html":{}}}],["räumliches",{"_index":1255,"title":{},"body":{"components/HistoryDetailViewComponent.html":{}}}],["reactiveformsmodule",{"_index":2513,"title":{},"body":{"modules/ViewsModule.html":{}}}],["read",{"_index":2176,"title":{},"body":{"injectables/SpeechService.html":{},"injectables/TextService.html":{}}}],["readable",{"_index":1350,"title":{},"body":{"injectables/HistoryTileService.html":{},"injectables/TextService.html":{},"miscellaneous/variables.html":{}}}],["readaloud",{"_index":2227,"title":{},"body":{"injectables/TextService.html":{}}}],["reaktionen",{"_index":1850,"title":{},"body":{"components/OutdoorWeatherDetailViewComponent.html":{},"components/PollenflugDetailViewComponent.html":{}}}],["red",{"_index":1435,"title":{},"body":{"components/HistoryTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/RegistrationViewComponent.html":{}}}],["redirectto",{"_index":364,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["reduce",{"_index":870,"title":{},"body":{"components/DashboardScreenComponent.html":{}}}],["reduced",{"_index":875,"title":{},"body":{"components/DashboardScreenComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/OutdoorWeatherViewComponent.html":{}}}],["reducemotion",{"_index":616,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"components/DashboardScreenComponent.html":{},"interfaces/LoginResponse.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"interfaces/PollenType.html":{},"interfaces/UserContext.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{},"interfaces/UserIdentifikation.html":{},"miscellaneous/variables.html":{}}}],["reducemotionvalue",{"_index":852,"title":{},"body":{"components/DashboardScreenComponent.html":{},"components/MenuButtonElementComponent.html":{}}}],["reference",{"_index":2795,"title":{},"body":{"index.html":{}}}],["regelmäßiges",{"_index":1254,"title":{},"body":{"components/HistoryDetailViewComponent.html":{}}}],["regen",{"_index":2265,"title":{},"body":{"injectables/TextService.html":{}}}],["region",{"_index":1273,"title":{},"body":{"components/HistoryDetailViewComponent.html":{}}}],["regional",{"_index":2071,"title":{},"body":{"components/PollenflugDetailViewComponent.html":{}}}],["register",{"_index":317,"title":{},"body":{"modules/AppModule.html":{},"interfaces/CheckTokenResponse.html":{},"interfaces/LoginResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{}}}],["registerforusercontextchange",{"_index":2639,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["registerurl",{"_index":535,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/LoginResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{}}}],["registerwhenstable:30000",{"_index":327,"title":{},"body":{"modules/AppModule.html":{}}}],["registration",{"_index":256,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DetailScreenComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{},"modules/ViewsModule.html":{},"miscellaneous/variables.html":{}}}],["registrationform",{"_index":2141,"title":{},"body":{"components/RegistrationViewComponent.html":{}}}],["registrationstrategy",{"_index":326,"title":{},"body":{"modules/AppModule.html":{}}}],["registrationviewcomponent",{"_index":255,"title":{"components/RegistrationViewComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DetailScreenComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{},"modules/ViewsModule.html":{},"coverage.html":{},"overview.html":{}}}],["registrieren",{"_index":1685,"title":{},"body":{"components/LoginViewComponent.html":{}}}],["regnen",{"_index":2254,"title":{},"body":{"injectables/TextService.html":{}}}],["regnet",{"_index":2300,"title":{},"body":{"injectables/TextService.html":{}}}],["relative",{"_index":1124,"title":{},"body":{"components/ForecastTileViewComponent.html":{},"miscellaneous/variables.html":{}}}],["relevance",{"_index":2328,"title":{},"body":{"injectables/TileService.html":{}}}],["reload",{"_index":154,"title":{},"body":{"components/AppComponent.html":{},"components/HistoryDetailViewComponent.html":{},"injectables/WeatherDataService.html":{},"index.html":{}}}],["reloaddata",{"_index":1702,"title":{},"body":{"components/MenuBarElementComponent.html":{},"injectables/WeatherDataService.html":{}}}],["reloadtiles",{"_index":2533,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["remove",{"_index":1649,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["removeitem(key:string",{"_index":1650,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["rename",{"_index":1599,"title":{},"body":{"components/IndoorTileViewComponent.html":{}}}],["renderer",{"_index":47,"title":{},"body":{"components/AppComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{}}}],["renderer2",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{}}}],["repeatedpassword",{"_index":2143,"title":{},"body":{"components/RegistrationViewComponent.html":{}}}],["required",{"_index":1147,"title":{},"body":{"interfaces/GraphDataSet.html":{},"interfaces/IndoorRoomData.html":{},"interfaces/OutdoorWeatherData.html":{},"interfaces/PollenData.html":{},"interfaces/Tile.html":{},"interfaces/TileArrays.html":{},"interfaces/WeatherData.html":{},"interfaces/WeatherForecastData.html":{},"interfaces/WeatherHistoryByDayData.html":{},"interfaces/WeatherHistoryData.html":{}}}],["res[\"message",{"_index":167,"title":{},"body":{"components/AppComponent.html":{}}}],["reset",{"_index":287,"title":{},"body":{"modules/AppModule.html":{},"modules/ScreensModule.html":{},"modules/UiElementsModule.html":{},"modules/ViewsModule.html":{},"overview.html":{}}}],["response",{"_index":516,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/ESPConfiguration.html":{},"injectables/ESPConfigurationAPIService.html":{},"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/LoginResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["response.apparenttemperature",{"_index":1075,"title":{},"body":{"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["response.body",{"_index":562,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/ESPConfiguration.html":{},"injectables/ESPConfigurationAPIService.html":{},"interfaces/LoginResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{}}}],["response.foreach(item",{"_index":1090,"title":{},"body":{"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["response.gasval",{"_index":1084,"title":{},"body":{"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["response.humidity",{"_index":1071,"title":{},"body":{"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["response.id",{"_index":1082,"title":{},"body":{"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["response.location",{"_index":1078,"title":{},"body":{"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["response.location_name",{"_index":1076,"title":{},"body":{"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["response.statustext",{"_index":564,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/ESPConfiguration.html":{},"injectables/ESPConfigurationAPIService.html":{},"interfaces/LoginResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{}}}],["response.subscribe",{"_index":630,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/LoginResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{}}}],["response.subscribe((response",{"_index":560,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/ESPConfiguration.html":{},"injectables/ESPConfigurationAPIService.html":{},"interfaces/LoginResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{}}}],["response.subscribe(context",{"_index":645,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/LoginResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{}}}],["response.subscribe(data",{"_index":640,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/ESPConfiguration.html":{},"injectables/ESPConfigurationAPIService.html":{},"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/LoginResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["response.temperature",{"_index":1067,"title":{},"body":{"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["response.timestamp",{"_index":1056,"title":{},"body":{"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["response.trend",{"_index":1099,"title":{},"body":{"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["response.weather",{"_index":1073,"title":{},"body":{"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["response.weatherdescription",{"_index":1100,"title":{},"body":{"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["response.weathericon",{"_index":1101,"title":{},"body":{"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["responsive",{"_index":866,"title":{},"body":{"components/DashboardScreenComponent.html":{},"components/HistoryTileViewComponent.html":{}}}],["result",{"_index":267,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CardElementComponent.html":{},"interfaces/CheckTokenResponse.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"interfaces/Credentials.html":{},"components/DashboardScreenComponent.html":{},"components/DetailScreenComponent.html":{},"interfaces/ESPConfiguration.html":{},"injectables/ESPConfigurationAPIService.html":{},"components/ForecastDetailViewComponent.html":{},"interfaces/ForecastResponse.html":{},"components/ForecastTileViewComponent.html":{},"interfaces/GraphDataSet.html":{},"components/HistoryDetailViewComponent.html":{},"injectables/HistoryTileService.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"interfaces/ImageModel.html":{},"injectables/ImageService.html":{},"components/IndoorDetailViewComponent.html":{},"interfaces/IndoorRoomData.html":{},"interfaces/IndoorRoomResponse.html":{},"components/IndoorTileViewComponent.html":{},"injectables/LocalStorageService.html":{},"interfaces/LoginResponse.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"interfaces/OutdoorWeatherData.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"interfaces/OutdoorWeatherResponse.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"interfaces/PollenData.html":{},"components/PollenListElementComponent.html":{},"interfaces/PollenResponse.html":{},"components/PollenTagElementComponent.html":{},"interfaces/PollenType.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"modules/ScreensModule.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"injectables/SpeechService.html":{},"injectables/TextService.html":{},"interfaces/Tile.html":{},"interfaces/TileArrays.html":{},"injectables/TileService.html":{},"components/TtsPlayerElementComponent.html":{},"modules/UiElementsModule.html":{},"interfaces/UserContext.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{},"interfaces/UserIdentifikation.html":{},"modules/ViewsModule.html":{},"injectables/WeatherAPIService.html":{},"interfaces/WeatherData.html":{},"injectables/WeatherDataService.html":{},"interfaces/WeatherForecastData.html":{},"interfaces/WeatherHistoryByDayData.html":{},"interfaces/WeatherHistoryData.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["result.dashboard",{"_index":2643,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["result.error",{"_index":1807,"title":{},"body":{"components/OpenAPELoginTileViewComponent.html":{}}}],["result.indoorrooms",{"_index":2645,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["result.pollen",{"_index":2644,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["results",{"_index":269,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CardElementComponent.html":{},"interfaces/CheckTokenResponse.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"interfaces/Credentials.html":{},"components/DashboardScreenComponent.html":{},"components/DetailScreenComponent.html":{},"interfaces/ESPConfiguration.html":{},"injectables/ESPConfigurationAPIService.html":{},"components/ForecastDetailViewComponent.html":{},"interfaces/ForecastResponse.html":{},"components/ForecastTileViewComponent.html":{},"interfaces/GraphDataSet.html":{},"components/HistoryDetailViewComponent.html":{},"injectables/HistoryTileService.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"interfaces/ImageModel.html":{},"injectables/ImageService.html":{},"components/IndoorDetailViewComponent.html":{},"interfaces/IndoorRoomData.html":{},"interfaces/IndoorRoomResponse.html":{},"components/IndoorTileViewComponent.html":{},"injectables/LocalStorageService.html":{},"interfaces/LoginResponse.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"interfaces/OutdoorWeatherData.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"interfaces/OutdoorWeatherResponse.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"interfaces/PollenData.html":{},"components/PollenListElementComponent.html":{},"interfaces/PollenResponse.html":{},"components/PollenTagElementComponent.html":{},"interfaces/PollenType.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"modules/ScreensModule.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"injectables/SpeechService.html":{},"injectables/TextService.html":{},"interfaces/Tile.html":{},"interfaces/TileArrays.html":{},"injectables/TileService.html":{},"components/TtsPlayerElementComponent.html":{},"modules/UiElementsModule.html":{},"interfaces/UserContext.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{},"interfaces/UserIdentifikation.html":{},"modules/ViewsModule.html":{},"injectables/WeatherAPIService.html":{},"interfaces/WeatherData.html":{},"injectables/WeatherDataService.html":{},"interfaces/WeatherForecastData.html":{},"interfaces/WeatherHistoryByDayData.html":{},"interfaces/WeatherHistoryData.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["results[0",{"_index":2626,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["results[1",{"_index":2628,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["results[2",{"_index":2630,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["results[3",{"_index":2632,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["results[4",{"_index":2634,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["return",{"_index":97,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CheckTokenResponse.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/DashboardScreenComponent.html":{},"interfaces/ESPConfiguration.html":{},"injectables/ESPConfigurationAPIService.html":{},"interfaces/ForecastResponse.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"injectables/HistoryTileService.html":{},"injectables/ImageService.html":{},"interfaces/IndoorRoomResponse.html":{},"injectables/LocalStorageService.html":{},"interfaces/LoginResponse.html":{},"components/MenuElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"interfaces/OutdoorWeatherResponse.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"interfaces/PollenResponse.html":{},"components/PollenTagElementComponent.html":{},"components/RegistrationViewComponent.html":{},"injectables/SpeechService.html":{},"injectables/TextService.html":{},"injectables/TileService.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{},"injectables/WeatherAPIService.html":{},"injectables/WeatherDataService.html":{}}}],["returnobservable",{"_index":554,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/ESPConfiguration.html":{},"injectables/ESPConfigurationAPIService.html":{},"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/LoginResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["returns",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CardElementComponent.html":{},"interfaces/CheckTokenResponse.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DetailScreenComponent.html":{},"interfaces/ESPConfiguration.html":{},"injectables/ESPConfigurationAPIService.html":{},"components/ForecastDetailViewComponent.html":{},"interfaces/ForecastResponse.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"injectables/HistoryTileService.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"injectables/ImageService.html":{},"components/IndoorDetailViewComponent.html":{},"interfaces/IndoorRoomResponse.html":{},"components/IndoorTileViewComponent.html":{},"injectables/LocalStorageService.html":{},"interfaces/LoginResponse.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"interfaces/OutdoorWeatherResponse.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenListElementComponent.html":{},"interfaces/PollenResponse.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"injectables/SpeechService.html":{},"injectables/TextService.html":{},"injectables/TileService.html":{},"components/TtsPlayerElementComponent.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{},"injectables/WeatherAPIService.html":{},"injectables/WeatherDataService.html":{}}}],["rgb(216,97,204",{"_index":1919,"title":{},"body":{"components/OutdoorWeatherViewComponent.html":{}}}],["rgb(238,69,59",{"_index":1918,"title":{},"body":{"components/OutdoorWeatherViewComponent.html":{}}}],["rgb(33,153,74",{"_index":2111,"title":{},"body":{"components/ProgressChartElementComponent.html":{}}}],["rgb(97,194,216",{"_index":1688,"title":{},"body":{"components/LoginViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{}}}],["rgba(0",{"_index":499,"title":{},"body":{"components/CardElementComponent.html":{}}}],["rgba(0,0,0",{"_index":784,"title":{},"body":{"components/ConfigurationTilePopUpDialogView.html":{}}}],["rgba(0,0,0,1",{"_index":1539,"title":{},"body":{"injectables/ImageService.html":{},"miscellaneous/variables.html":{}}}],["rgba(0,0,255,0.1",{"_index":1441,"title":{},"body":{"components/HistoryTileViewComponent.html":{}}}],["rgba(108,10,72,1",{"_index":1535,"title":{},"body":{"injectables/ImageService.html":{},"miscellaneous/variables.html":{}}}],["rgba(119,48,112,1",{"_index":1537,"title":{},"body":{"injectables/ImageService.html":{},"miscellaneous/variables.html":{}}}],["rgba(151,208,255,1",{"_index":1532,"title":{},"body":{"injectables/ImageService.html":{},"miscellaneous/variables.html":{}}}],["rgba(152,152,191,1",{"_index":1538,"title":{},"body":{"injectables/ImageService.html":{},"miscellaneous/variables.html":{}}}],["rgba(164,9,110,1",{"_index":1524,"title":{},"body":{"injectables/ImageService.html":{},"components/OutdoorWeatherViewComponent.html":{},"miscellaneous/variables.html":{}}}],["rgba(20,27,87,1",{"_index":1531,"title":{},"body":{"injectables/ImageService.html":{},"miscellaneous/variables.html":{}}}],["rgba(212,108,102,1",{"_index":1534,"title":{},"body":{"injectables/ImageService.html":{},"miscellaneous/variables.html":{}}}],["rgba(216,97,204,1",{"_index":1526,"title":{},"body":{"injectables/ImageService.html":{},"components/OutdoorWeatherViewComponent.html":{},"miscellaneous/variables.html":{}}}],["rgba(238,69,59,1",{"_index":1523,"title":{},"body":{"injectables/ImageService.html":{},"components/OutdoorWeatherViewComponent.html":{},"miscellaneous/variables.html":{}}}],["rgba(255,0,0,0.1",{"_index":1437,"title":{},"body":{"components/HistoryTileViewComponent.html":{}}}],["rgba(255,0,0,1",{"_index":2116,"title":{},"body":{"components/ProgressChartElementComponent.html":{}}}],["rgba(255,230,0,0.9883801424050633",{"_index":2114,"title":{},"body":{"components/ProgressChartElementComponent.html":{}}}],["rgba(33,153,74,1",{"_index":2113,"title":{},"body":{"components/ProgressChartElementComponent.html":{}}}],["rgba(67,125,219,1",{"_index":1520,"title":{},"body":{"injectables/ImageService.html":{},"components/LoginViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"miscellaneous/variables.html":{}}}],["rgba(70,67,219,1",{"_index":1527,"title":{},"body":{"injectables/ImageService.html":{},"components/OutdoorWeatherViewComponent.html":{},"miscellaneous/variables.html":{}}}],["rgba(97,194,216,1",{"_index":1519,"title":{},"body":{"injectables/ImageService.html":{},"components/LoginViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"miscellaneous/variables.html":{}}}],["right",{"_index":176,"title":{},"body":{"components/AppComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CardElementComponent.html":{},"components/DashboardScreenComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/TtsPlayerElementComponent.html":{},"miscellaneous/variables.html":{}}}],["rinminase/ng",{"_index":1423,"title":{},"body":{"components/HistoryTileViewComponent.html":{},"modules/ViewsModule.html":{},"dependencies.html":{}}}],["rising",{"_index":2257,"title":{},"body":{"injectables/TextService.html":{}}}],["roggen",{"_index":2702,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["room",{"_index":1105,"title":{},"body":{"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/TextService.html":{},"injectables/TileService.html":{},"injectables/WeatherAPIService.html":{},"injectables/WeatherDataService.html":{}}}],["room.airquality",{"_index":2377,"title":{},"body":{"injectables/TileService.html":{}}}],["roomid",{"_index":1081,"title":{},"body":{"interfaces/ForecastResponse.html":{},"interfaces/GraphDataSet.html":{},"interfaces/IndoorRoomData.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherData.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenData.html":{},"interfaces/PollenResponse.html":{},"interfaces/Tile.html":{},"interfaces/TileArrays.html":{},"injectables/WeatherAPIService.html":{},"interfaces/WeatherData.html":{},"interfaces/WeatherForecastData.html":{},"interfaces/WeatherHistoryByDayData.html":{},"interfaces/WeatherHistoryData.html":{},"miscellaneous/variables.html":{}}}],["roomname",{"_index":880,"title":{},"body":{"interfaces/ESPConfiguration.html":{},"injectables/ESPConfigurationAPIService.html":{},"interfaces/ForecastResponse.html":{},"interfaces/GraphDataSet.html":{},"interfaces/IndoorRoomData.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherData.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenData.html":{},"interfaces/PollenResponse.html":{},"interfaces/Tile.html":{},"interfaces/TileArrays.html":{},"injectables/WeatherAPIService.html":{},"interfaces/WeatherData.html":{},"interfaces/WeatherForecastData.html":{},"interfaces/WeatherHistoryByDayData.html":{},"interfaces/WeatherHistoryData.html":{},"miscellaneous/variables.html":{}}}],["root",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CheckTokenResponse.html":{},"interfaces/ESPConfiguration.html":{},"injectables/ESPConfigurationAPIService.html":{},"interfaces/ForecastResponse.html":{},"injectables/HistoryTileService.html":{},"injectables/ImageService.html":{},"interfaces/IndoorRoomResponse.html":{},"injectables/LocalStorageService.html":{},"interfaces/LoginResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/SpeechService.html":{},"injectables/TextService.html":{},"injectables/TileService.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{},"injectables/WeatherAPIService.html":{},"injectables/WeatherDataService.html":{}}}],["root'},{'name",{"_index":190,"title":{},"body":{"components/AppComponent.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DetailScreenComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{}}}],["round",{"_index":1278,"title":{},"body":{"components/HistoryDetailViewComponent.html":{}}}],["route",{"_index":78,"title":{},"body":{"components/AppComponent.html":{},"components/OnboardingScreenComponent.html":{}}}],["router",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuElementComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/RegistrationViewComponent.html":{}}}],["routermodule",{"_index":330,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/ScreensModule.html":{},"modules/ViewsModule.html":{}}}],["routermodule.forroot(routes",{"_index":367,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routeroutlet",{"_index":55,"title":{},"body":{"components/AppComponent.html":{},"components/OnboardingScreenComponent.html":{}}}],["routes",{"_index":331,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"interfaces/CheckTokenResponse.html":{},"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/LoginResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{},"injectables/WeatherAPIService.html":{},"overview.html":{},"routes.html":{}}}],["routetransitionanimations",{"_index":77,"title":{},"body":{"components/AppComponent.html":{},"components/OnboardingScreenComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["routing.module",{"_index":301,"title":{},"body":{"modules/AppModule.html":{},"modules/ScreensModule.html":{}}}],["routing.module.ts",{"_index":329,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["row",{"_index":1284,"title":{},"body":{"components/HistoryDetailViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuElementComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/TtsPlayerElementComponent.html":{}}}],["run",{"_index":2773,"title":{},"body":{"index.html":{}}}],["runnable",{"_index":2126,"title":{},"body":{"components/ProgressChartElementComponent.html":{},"components/SliderElementComponent.html":{}}}],["running",{"_index":2185,"title":{},"body":{"injectables/SpeechService.html":{}}}],["rxjs",{"_index":76,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CheckTokenResponse.html":{},"interfaces/ESPConfiguration.html":{},"injectables/ESPConfigurationAPIService.html":{},"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/LoginResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{},"injectables/WeatherAPIService.html":{},"injectables/WeatherDataService.html":{},"dependencies.html":{}}}],["räume",{"_index":1026,"title":{},"body":{"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["räumen",{"_index":1581,"title":{},"body":{"components/IndoorDetailViewComponent.html":{}}}],["sage",{"_index":2366,"title":{},"body":{"injectables/TileService.html":{}}}],["same",{"_index":1159,"title":{},"body":{"interfaces/GraphDataSet.html":{},"interfaces/IndoorRoomData.html":{},"interfaces/OutdoorWeatherData.html":{},"interfaces/PollenData.html":{},"interfaces/Tile.html":{},"interfaces/TileArrays.html":{},"interfaces/WeatherData.html":{},"interfaces/WeatherForecastData.html":{},"interfaces/WeatherHistoryByDayData.html":{},"interfaces/WeatherHistoryData.html":{}}}],["satelliten",{"_index":1265,"title":{},"body":{"components/HistoryDetailViewComponent.html":{}}}],["save",{"_index":624,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"injectables/LocalStorageService.html":{},"interfaces/LoginResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{}}}],["savepollenurl",{"_index":547,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/LoginResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{}}}],["saveusercontexturl",{"_index":541,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/LoginResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{}}}],["saving",{"_index":607,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/LoginResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{}}}],["scaffolding",{"_index":2781,"title":{},"body":{"index.html":{}}}],["scale(0.97",{"_index":506,"title":{},"body":{"components/CardElementComponent.html":{}}}],["schatten",{"_index":1836,"title":{},"body":{"components/OutdoorWeatherDetailViewComponent.html":{}}}],["scheint",{"_index":813,"title":{},"body":{"components/ConfigurationViewComponent.html":{},"injectables/TextService.html":{}}}],["scheme",{"_index":138,"title":{},"body":{"components/AppComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"injectables/ImageService.html":{}}}],["schlafzimmer",{"_index":2703,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["schlafzimmer.roomid",{"_index":2810,"title":{},"body":{"miscellaneous/variables.html":{}}}],["schlafzimmer2",{"_index":2704,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["schlecht",{"_index":2266,"title":{},"body":{"injectables/TextService.html":{}}}],["schlechte",{"_index":1566,"title":{},"body":{"components/IndoorDetailViewComponent.html":{}}}],["schlechter",{"_index":2255,"title":{},"body":{"injectables/TextService.html":{}}}],["schmurx",{"_index":160,"title":{},"body":{"components/AppComponent.html":{}}}],["schmurx.subscribe((res",{"_index":164,"title":{},"body":{"components/AppComponent.html":{}}}],["schneit",{"_index":2311,"title":{},"body":{"injectables/TextService.html":{}}}],["schon",{"_index":106,"title":{},"body":{"components/AppComponent.html":{},"components/HistoryDetailViewComponent.html":{}}}],["schriftgröße",{"_index":1896,"title":{},"body":{"components/OutdoorWeatherViewComponent.html":{}}}],["schwanken",{"_index":2076,"title":{},"body":{"components/PollenflugDetailViewComponent.html":{}}}],["screen",{"_index":104,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DetailScreenComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/SettingsScreenComponent.html":{},"injectables/TileService.html":{}}}],["screen'},{'name",{"_index":206,"title":{},"body":{"components/AppComponent.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DetailScreenComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{}}}],["screen.component",{"_index":334,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/ScreensModule.html":{}}}],["screen.component.html",{"_index":824,"title":{},"body":{"components/DashboardScreenComponent.html":{},"components/DetailScreenComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/SettingsScreenComponent.html":{}}}],["screen.component.scss",{"_index":823,"title":{},"body":{"components/DashboardScreenComponent.html":{},"components/DetailScreenComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/SettingsScreenComponent.html":{}}}],["screen.component.ts",{"_index":822,"title":{},"body":{"components/DashboardScreenComponent.html":{},"components/DetailScreenComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/SettingsScreenComponent.html":{},"coverage.html":{}}}],["screen.component.ts:13",{"_index":879,"title":{},"body":{"components/DetailScreenComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/SettingsScreenComponent.html":{}}}],["screen.component.ts:16",{"_index":840,"title":{},"body":{"components/DashboardScreenComponent.html":{}}}],["screen.component.ts:17",{"_index":837,"title":{},"body":{"components/DashboardScreenComponent.html":{},"components/OnboardingScreenComponent.html":{}}}],["screen.component.ts:18",{"_index":839,"title":{},"body":{"components/DashboardScreenComponent.html":{}}}],["screen.component.ts:19",{"_index":841,"title":{},"body":{"components/DashboardScreenComponent.html":{}}}],["screen.component.ts:20",{"_index":838,"title":{},"body":{"components/DashboardScreenComponent.html":{},"components/OnboardingScreenComponent.html":{}}}],["screen.component.ts:21",{"_index":842,"title":{},"body":{"components/DashboardScreenComponent.html":{}}}],["screen.component.ts:25",{"_index":833,"title":{},"body":{"components/DashboardScreenComponent.html":{}}}],["screen.component.ts:33",{"_index":836,"title":{},"body":{"components/DashboardScreenComponent.html":{}}}],["screen.component.ts:51",{"_index":835,"title":{},"body":{"components/DashboardScreenComponent.html":{}}}],["screen.component.ts:59",{"_index":834,"title":{},"body":{"components/DashboardScreenComponent.html":{}}}],["screen.component.ts:9",{"_index":878,"title":{},"body":{"components/DetailScreenComponent.html":{},"components/SettingsScreenComponent.html":{}}}],["screen/dashboard",{"_index":333,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/DashboardScreenComponent.html":{},"modules/ScreensModule.html":{},"coverage.html":{}}}],["screen/detail",{"_index":336,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/DetailScreenComponent.html":{},"modules/ScreensModule.html":{},"coverage.html":{}}}],["screen/onboarding",{"_index":338,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/OnboardingScreenComponent.html":{},"modules/ScreensModule.html":{},"coverage.html":{}}}],["screen/settings",{"_index":340,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/ScreensModule.html":{},"components/SettingsScreenComponent.html":{},"coverage.html":{}}}],["screens",{"_index":479,"title":{},"body":{"components/CardElementComponent.html":{}}}],["screensmodule",{"_index":283,"title":{"modules/ScreensModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ScreensModule.html":{},"modules.html":{},"overview.html":{}}}],["scroll",{"_index":1883,"title":{},"body":{"components/OutdoorWeatherViewComponent.html":{}}}],["scrolling",{"_index":2019,"title":{},"body":{"interfaces/PollenType.html":{},"interfaces/UserContext.html":{},"interfaces/UserIdentifikation.html":{}}}],["scrollpositionrestoration",{"_index":368,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["scrolls",{"_index":1886,"title":{},"body":{"components/OutdoorWeatherViewComponent.html":{}}}],["scrollvalue",{"_index":1890,"title":{},"body":{"components/OutdoorWeatherViewComponent.html":{}}}],["seapressure",{"_index":977,"title":{},"body":{"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["secondary",{"_index":447,"title":{},"body":{"components/BackButtonElementComponent.html":{},"components/CardElementComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/PollenListElementComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/TtsPlayerElementComponent.html":{}}}],["seconds",{"_index":322,"title":{},"body":{"modules/AppModule.html":{}}}],["sehr",{"_index":2052,"title":{},"body":{"components/PollenflugDetailViewComponent.html":{}}}],["sein",{"_index":1028,"title":{},"body":{"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["seit",{"_index":920,"title":{},"body":{"components/ForecastDetailViewComponent.html":{},"components/HistoryDetailViewComponent.html":{}}}],["selectedtimeinterval",{"_index":1174,"title":{},"body":{"components/HistoryDetailViewComponent.html":{}}}],["selectinterval",{"_index":1182,"title":{},"body":{"components/HistoryDetailViewComponent.html":{}}}],["selector",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DetailScreenComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{}}}],["selects",{"_index":2638,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["selfvoicingenabled",{"_index":612,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/LoginResponse.html":{},"interfaces/PollenType.html":{},"interfaces/UserContext.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{},"interfaces/UserIdentifikation.html":{},"miscellaneous/variables.html":{}}}],["serve",{"_index":2775,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["server",{"_index":658,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/LoginResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{},"injectables/WeatherAPIService.html":{},"injectables/WeatherDataService.html":{},"index.html":{}}}],["service",{"_index":526,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/ESPConfiguration.html":{},"injectables/ESPConfigurationAPIService.html":{},"interfaces/ForecastResponse.html":{},"injectables/HistoryTileService.html":{},"injectables/ImageService.html":{},"interfaces/IndoorRoomResponse.html":{},"injectables/LocalStorageService.html":{},"interfaces/LoginResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/SpeechService.html":{},"injectables/TextService.html":{},"injectables/TileService.html":{},"components/TtsPlayerElementComponent.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{},"injectables/WeatherAPIService.html":{},"injectables/WeatherDataService.html":{}}}],["services/user",{"_index":72,"title":{},"body":{"components/AppComponent.html":{}}}],["serviceworker",{"_index":318,"title":{},"body":{"modules/AppModule.html":{}}}],["serviceworkermodule",{"_index":305,"title":{},"body":{"modules/AppModule.html":{}}}],["serviceworkermodule.register('ngsw",{"_index":313,"title":{},"body":{"modules/AppModule.html":{}}}],["set",{"_index":399,"title":{},"body":{"components/ApparentTemperatureTileViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"injectables/LocalStorageService.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"injectables/WeatherDataService.html":{}}}],["setdata(data",{"_index":390,"title":{},"body":{"components/ApparentTemperatureTileViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{}}}],["setdefaultfontsize(fontsize",{"_index":128,"title":{},"body":{"components/AppComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{}}}],["setdisablelogin(value",{"_index":1622,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["setfontsize",{"_index":1931,"title":{},"body":{"components/PersonalizationSettingsViewComponent.html":{}}}],["setfontsize(value",{"_index":1943,"title":{},"body":{"components/PersonalizationSettingsViewComponent.html":{}}}],["setgraphtype(type",{"_index":1421,"title":{},"body":{"components/HistoryTileViewComponent.html":{}}}],["setindex(value",{"_index":1202,"title":{},"body":{"components/HistoryDetailViewComponent.html":{}}}],["setitem(key",{"_index":1644,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["sets",{"_index":461,"title":{},"body":{"components/CardElementComponent.html":{}}}],["setter",{"_index":2566,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["settimeout",{"_index":2420,"title":{},"body":{"components/TtsPlayerElementComponent.html":{}}}],["setting",{"_index":1757,"title":{},"body":{"components/MenuElementComponent.html":{}}}],["settings",{"_index":239,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DetailScreenComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"interfaces/PollenType.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"modules/ScreensModule.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{},"interfaces/UserContext.html":{},"interfaces/UserIdentifikation.html":{},"modules/ViewsModule.html":{},"coverage.html":{}}}],["settingsicon",{"_index":1744,"title":{},"body":{"components/MenuElementComponent.html":{}}}],["settingsscreencomponent",{"_index":257,"title":{"components/SettingsScreenComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DetailScreenComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"modules/ScreensModule.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{},"coverage.html":{},"overview.html":{}}}],["setusercontext(object",{"_index":1612,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["setuserid(value",{"_index":1616,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["setvalue(value",{"_index":1980,"title":{},"body":{"components/PollenTagElementComponent.html":{}}}],["shadow",{"_index":498,"title":{},"body":{"components/CardElementComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{}}}],["shared/styles",{"_index":1712,"title":{},"body":{"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/TtsPlayerElementComponent.html":{}}}],["show",{"_index":1300,"title":{},"body":{"injectables/HistoryTileService.html":{},"injectables/TileService.html":{}}}],["shown",{"_index":2557,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["showweatherdescription",{"_index":1868,"title":{},"body":{"components/OutdoorWeatherViewComponent.html":{}}}],["shrink",{"_index":489,"title":{},"body":{"components/CardElementComponent.html":{},"components/OutdoorWeatherViewComponent.html":{}}}],["shrinked",{"_index":1917,"title":{},"body":{"components/OutdoorWeatherViewComponent.html":{}}}],["sich",{"_index":966,"title":{},"body":{"components/ForecastDetailViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"injectables/TextService.html":{}}}],["sicht",{"_index":2307,"title":{},"body":{"injectables/TextService.html":{}}}],["signifikant",{"_index":1268,"title":{},"body":{"components/HistoryDetailViewComponent.html":{}}}],["simple",{"_index":259,"title":{},"body":{"components/AppComponent.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DetailScreenComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{},"modules/ViewsModule.html":{}}}],["simpletileviewcomponent",{"_index":258,"title":{"components/SimpleTileViewComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DetailScreenComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{},"modules/ViewsModule.html":{},"coverage.html":{},"overview.html":{}}}],["sind",{"_index":930,"title":{},"body":{"components/ForecastDetailViewComponent.html":{},"interfaces/ForecastResponse.html":{},"components/IndoorDetailViewComponent.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"components/PollenflugDetailViewComponent.html":{},"injectables/WeatherAPIService.html":{}}}],["sinnvoll",{"_index":2080,"title":{},"body":{"components/PollenflugDetailViewComponent.html":{}}}],["size",{"_index":132,"title":{},"body":{"components/AppComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CardElementComponent.html":{},"components/DashboardScreenComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{}}}],["sleet",{"_index":1487,"title":{},"body":{"injectables/ImageService.html":{},"injectables/TextService.html":{}}}],["slider",{"_index":261,"title":{},"body":{"components/AppComponent.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DetailScreenComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{},"modules/UiElementsModule.html":{}}}],["sliderelementcomponent",{"_index":260,"title":{"components/SliderElementComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DetailScreenComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{},"modules/UiElementsModule.html":{},"coverage.html":{},"overview.html":{}}}],["small",{"_index":244,"title":{},"body":{"components/AppComponent.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DetailScreenComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{},"modules/ViewsModule.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["smalltile",{"_index":2353,"title":{},"body":{"injectables/TileService.html":{}}}],["smarthome",{"_index":1681,"title":{},"body":{"components/LoginViewComponent.html":{},"index.html":{}}}],["snow",{"_index":2310,"title":{},"body":{"injectables/TextService.html":{}}}],["so','mo','di','mi','do','fr','sa",{"_index":1399,"title":{},"body":{"injectables/HistoryTileService.html":{},"miscellaneous/variables.html":{}}}],["solid",{"_index":471,"title":{},"body":{"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuElementComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{}}}],["sollen",{"_index":1023,"title":{},"body":{"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["solve",{"_index":1965,"title":{},"body":{"components/PersonalizationSettingsViewComponent.html":{}}}],["sondern",{"_index":970,"title":{},"body":{"components/ForecastDetailViewComponent.html":{}}}],["sonne",{"_index":1838,"title":{},"body":{"components/OutdoorWeatherDetailViewComponent.html":{},"injectables/TextService.html":{}}}],["sonnenstrahlen",{"_index":2253,"title":{},"body":{"injectables/TextService.html":{}}}],["sonnig",{"_index":2248,"title":{},"body":{"injectables/TextService.html":{}}}],["soon",{"_index":319,"title":{},"body":{"modules/AppModule.html":{}}}],["sort",{"_index":1283,"title":{},"body":{"components/HistoryDetailViewComponent.html":{}}}],["sorted",{"_index":1305,"title":{},"body":{"injectables/HistoryTileService.html":{}}}],["sortierung",{"_index":1232,"title":{},"body":{"components/HistoryDetailViewComponent.html":{}}}],["sound",{"_index":2431,"title":{},"body":{"components/TtsPlayerElementComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CardElementComponent.html":{},"interfaces/CheckTokenResponse.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"interfaces/Credentials.html":{},"components/DashboardScreenComponent.html":{},"components/DetailScreenComponent.html":{},"interfaces/ESPConfiguration.html":{},"injectables/ESPConfigurationAPIService.html":{},"components/ForecastDetailViewComponent.html":{},"interfaces/ForecastResponse.html":{},"components/ForecastTileViewComponent.html":{},"interfaces/GraphDataSet.html":{},"components/HistoryDetailViewComponent.html":{},"injectables/HistoryTileService.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"interfaces/ImageModel.html":{},"injectables/ImageService.html":{},"components/IndoorDetailViewComponent.html":{},"interfaces/IndoorRoomData.html":{},"interfaces/IndoorRoomResponse.html":{},"components/IndoorTileViewComponent.html":{},"injectables/LocalStorageService.html":{},"interfaces/LoginResponse.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"interfaces/OutdoorWeatherData.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"interfaces/OutdoorWeatherResponse.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"interfaces/PollenData.html":{},"components/PollenListElementComponent.html":{},"interfaces/PollenResponse.html":{},"components/PollenTagElementComponent.html":{},"interfaces/PollenType.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"modules/ScreensModule.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"injectables/SpeechService.html":{},"injectables/TextService.html":{},"interfaces/Tile.html":{},"interfaces/TileArrays.html":{},"injectables/TileService.html":{},"components/TtsPlayerElementComponent.html":{},"modules/UiElementsModule.html":{},"interfaces/UserContext.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{},"interfaces/UserIdentifikation.html":{},"modules/ViewsModule.html":{},"injectables/WeatherAPIService.html":{},"interfaces/WeatherData.html":{},"injectables/WeatherDataService.html":{},"interfaces/WeatherForecastData.html":{},"interfaces/WeatherHistoryByDayData.html":{},"interfaces/WeatherHistoryData.html":{},"index.html":{}}}],["sowie",{"_index":1853,"title":{},"body":{"components/OutdoorWeatherDetailViewComponent.html":{},"components/PollenflugDetailViewComponent.html":{}}}],["space",{"_index":775,"title":{},"body":{"components/ConfigurationTilePopUpDialogView.html":{},"components/DashboardScreenComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuElementComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/ProgressChartElementComponent.html":{}}}],["spacing",{"_index":445,"title":{},"body":{"components/BackButtonElementComponent.html":{},"components/CardElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/OutdoorWeatherViewComponent.html":{}}}],["span",{"_index":720,"title":{},"body":{"components/CheckboxSwitcherElementComponent.html":{},"components/MenuElementComponent.html":{}}}],["speech",{"_index":2175,"title":{},"body":{"injectables/SpeechService.html":{},"injectables/TextService.html":{}}}],["speechservice",{"_index":2173,"title":{"injectables/SpeechService.html":{}},"body":{"injectables/SpeechService.html":{},"components/TtsPlayerElementComponent.html":{},"coverage.html":{}}}],["speechsynthesisutterance(text",{"_index":2194,"title":{},"body":{"injectables/SpeechService.html":{}}}],["spinner",{"_index":312,"title":{},"body":{"modules/AppModule.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"modules/ScreensModule.html":{},"modules/ViewsModule.html":{},"dependencies.html":{}}}],["später",{"_index":584,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/ESPConfiguration.html":{},"injectables/ESPConfigurationAPIService.html":{},"interfaces/LoginResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{}}}],["src",{"_index":1467,"title":{},"body":{"injectables/ImageService.html":{}}}],["src/.../card",{"_index":2760,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../environment.prod.ts",{"_index":2806,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":2807,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../history",{"_index":2762,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["src/.../image.service.ts",{"_index":2808,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../local",{"_index":2805,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../route",{"_index":2809,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../user",{"_index":2763,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["src/.../weather.mock.ts",{"_index":2804,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../weather.ts",{"_index":2761,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/app",{"_index":328,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/ScreensModule.html":{}}}],["src/app/app.component.ts",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:18",{"_index":67,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:19",{"_index":68,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:20",{"_index":65,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:21",{"_index":42,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:29",{"_index":53,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:37",{"_index":52,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:41",{"_index":56,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:45",{"_index":48,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:95",{"_index":63,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:96",{"_index":51,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":289,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/components/screens/dashboard",{"_index":821,"title":{},"body":{"components/DashboardScreenComponent.html":{},"coverage.html":{}}}],["src/app/components/screens/detail",{"_index":877,"title":{},"body":{"components/DetailScreenComponent.html":{},"coverage.html":{}}}],["src/app/components/screens/onboarding",{"_index":1798,"title":{},"body":{"components/OnboardingScreenComponent.html":{},"coverage.html":{}}}],["src/app/components/screens/screens.module.ts",{"_index":2155,"title":{},"body":{"modules/ScreensModule.html":{}}}],["src/app/components/screens/settings",{"_index":2159,"title":{},"body":{"components/SettingsScreenComponent.html":{},"coverage.html":{}}}],["src/app/components/ui",{"_index":405,"title":{},"body":{"components/BackButtonElementComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{},"modules/UiElementsModule.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/components/views/apparent",{"_index":369,"title":{},"body":{"components/ApparentTemperatureTileViewComponent.html":{},"coverage.html":{}}}],["src/app/components/views/configuration",{"_index":731,"title":{},"body":{"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"coverage.html":{}}}],["src/app/components/views/forecast",{"_index":900,"title":{},"body":{"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"coverage.html":{}}}],["src/app/components/views/history",{"_index":1170,"title":{},"body":{"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/components/views/humidity",{"_index":1446,"title":{},"body":{"components/HumidityTileViewComponent.html":{},"coverage.html":{}}}],["src/app/components/views/indoor",{"_index":1540,"title":{},"body":{"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"coverage.html":{}}}],["src/app/components/views/login",{"_index":1657,"title":{},"body":{"components/LoginViewComponent.html":{},"coverage.html":{}}}],["src/app/components/views/open",{"_index":1799,"title":{},"body":{"components/OpenAPELoginTileViewComponent.html":{},"coverage.html":{}}}],["src/app/components/views/outdoor",{"_index":1810,"title":{},"body":{"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"coverage.html":{}}}],["src/app/components/views/personalization",{"_index":1921,"title":{},"body":{"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"coverage.html":{}}}],["src/app/components/views/pollenflug",{"_index":2024,"title":{},"body":{"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"coverage.html":{}}}],["src/app/components/views/registration",{"_index":2140,"title":{},"body":{"components/RegistrationViewComponent.html":{},"coverage.html":{}}}],["src/app/components/views/simple",{"_index":2161,"title":{},"body":{"components/SimpleTileViewComponent.html":{},"coverage.html":{}}}],["src/app/components/views/views.module.ts",{"_index":2511,"title":{},"body":{"modules/ViewsModule.html":{}}}],["src/app/model/credentials.ts",{"_index":820,"title":{},"body":{"interfaces/Credentials.html":{},"coverage.html":{}}}],["src/app/model/image",{"_index":429,"title":{},"body":{"components/BackButtonElementComponent.html":{},"components/MenuElementComponent.html":{}}}],["src/app/model/image.ts",{"_index":1451,"title":{},"body":{"interfaces/ImageModel.html":{},"coverage.html":{}}}],["src/app/model/mock",{"_index":2674,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/model/user",{"_index":696,"title":{},"body":{"components/CheckboxSwitcherElementComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"interfaces/PollenType.html":{},"components/TtsPlayerElementComponent.html":{},"interfaces/UserContext.html":{},"interfaces/UserIdentifikation.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["src/app/model/weather",{"_index":394,"title":{},"body":{"components/ApparentTemperatureTileViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/SimpleTileViewComponent.html":{}}}],["src/app/model/weather.ts",{"_index":1126,"title":{},"body":{"interfaces/GraphDataSet.html":{},"interfaces/IndoorRoomData.html":{},"interfaces/OutdoorWeatherData.html":{},"interfaces/PollenData.html":{},"interfaces/Tile.html":{},"interfaces/TileArrays.html":{},"interfaces/WeatherData.html":{},"interfaces/WeatherForecastData.html":{},"interfaces/WeatherHistoryByDayData.html":{},"interfaces/WeatherHistoryData.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/route",{"_index":2709,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/services/api/esp",{"_index":748,"title":{},"body":{"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"interfaces/ESPConfiguration.html":{},"injectables/ESPConfigurationAPIService.html":{},"coverage.html":{}}}],["src/app/services/api/user",{"_index":510,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/LoginResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{},"coverage.html":{}}}],["src/app/services/api/weather",{"_index":976,"title":{},"body":{"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/WeatherAPIService.html":{},"coverage.html":{}}}],["src/app/services/history",{"_index":1203,"title":{},"body":{"components/HistoryDetailViewComponent.html":{},"injectables/HistoryTileService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/services/image.service",{"_index":428,"title":{},"body":{"components/BackButtonElementComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/MenuElementComponent.html":{},"components/OutdoorWeatherViewComponent.html":{}}}],["src/app/services/image.service.ts",{"_index":1452,"title":{},"body":{"injectables/ImageService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/services/image.service.ts:20",{"_index":1457,"title":{},"body":{"injectables/ImageService.html":{}}}],["src/app/services/image.service.ts:34",{"_index":1466,"title":{},"body":{"injectables/ImageService.html":{}}}],["src/app/services/image.service.ts:60",{"_index":1459,"title":{},"body":{"injectables/ImageService.html":{}}}],["src/app/services/image.service.ts:92",{"_index":1470,"title":{},"body":{"injectables/ImageService.html":{}}}],["src/app/services/local",{"_index":1601,"title":{},"body":{"injectables/LocalStorageService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/services/speech.service",{"_index":2410,"title":{},"body":{"components/TtsPlayerElementComponent.html":{}}}],["src/app/services/speech.service.ts",{"_index":2174,"title":{},"body":{"injectables/SpeechService.html":{},"coverage.html":{}}}],["src/app/services/speech.service.ts:13",{"_index":2182,"title":{},"body":{"injectables/SpeechService.html":{}}}],["src/app/services/speech.service.ts:22",{"_index":2187,"title":{},"body":{"injectables/SpeechService.html":{}}}],["src/app/services/speech.service.ts:36",{"_index":2188,"title":{},"body":{"injectables/SpeechService.html":{}}}],["src/app/services/speech.service.ts:43",{"_index":2183,"title":{},"body":{"injectables/SpeechService.html":{}}}],["src/app/services/text.service",{"_index":845,"title":{},"body":{"components/DashboardScreenComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PollenflugDetailViewComponent.html":{}}}],["src/app/services/text.service.ts",{"_index":2202,"title":{},"body":{"injectables/TextService.html":{},"coverage.html":{}}}],["src/app/services/text.service.ts:105",{"_index":2215,"title":{},"body":{"injectables/TextService.html":{}}}],["src/app/services/text.service.ts:137",{"_index":2217,"title":{},"body":{"injectables/TextService.html":{}}}],["src/app/services/text.service.ts:14",{"_index":2210,"title":{},"body":{"injectables/TextService.html":{}}}],["src/app/services/text.service.ts:156",{"_index":2221,"title":{},"body":{"injectables/TextService.html":{}}}],["src/app/services/text.service.ts:187",{"_index":2219,"title":{},"body":{"injectables/TextService.html":{}}}],["src/app/services/text.service.ts:215",{"_index":2226,"title":{},"body":{"injectables/TextService.html":{}}}],["src/app/services/text.service.ts:24",{"_index":2223,"title":{},"body":{"injectables/TextService.html":{}}}],["src/app/services/text.service.ts:61",{"_index":2212,"title":{},"body":{"injectables/TextService.html":{}}}],["src/app/services/tile.service.ts",{"_index":2317,"title":{},"body":{"injectables/TileService.html":{},"coverage.html":{}}}],["src/app/services/tile.service.ts:16",{"_index":2322,"title":{},"body":{"injectables/TileService.html":{}}}],["src/app/services/tile.service.ts:31",{"_index":2324,"title":{},"body":{"injectables/TileService.html":{}}}],["src/app/services/user",{"_index":697,"title":{},"body":{"components/CheckboxSwitcherElementComponent.html":{},"components/DashboardScreenComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/RegistrationViewComponent.html":{},"components/TtsPlayerElementComponent.html":{},"coverage.html":{}}}],["src/app/services/weather",{"_index":843,"title":{},"body":{"components/DashboardScreenComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"injectables/WeatherDataService.html":{},"coverage.html":{}}}],["src/environments/environment",{"_index":521,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/ESPConfiguration.html":{},"injectables/ESPConfigurationAPIService.html":{},"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/LoginResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["src/environments/environment.prod.ts",{"_index":2740,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":2741,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["stable",{"_index":320,"title":{},"body":{"modules/AppModule.html":{}}}],["stark",{"_index":941,"title":{},"body":{"components/ForecastDetailViewComponent.html":{},"components/PollenflugDetailViewComponent.html":{}}}],["start",{"_index":803,"title":{},"body":{"components/ConfigurationTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"injectables/SpeechService.html":{}}}],["started",{"_index":2765,"title":{"index.html":{}},"body":{"miscellaneous/variables.html":{}}}],["startoutput",{"_index":2180,"title":{},"body":{"injectables/SpeechService.html":{}}}],["startoutput(text",{"_index":2186,"title":{},"body":{"injectables/SpeechService.html":{}}}],["state.matches",{"_index":115,"title":{},"body":{"components/AppComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/DashboardScreenComponent.html":{},"injectables/ImageService.html":{},"components/OutdoorWeatherDetailViewComponent.html":{}}}],["statements",{"_index":2662,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":563,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/ESPConfiguration.html":{},"injectables/ESPConfigurationAPIService.html":{},"interfaces/LoginResponse.html":{},"components/LoginViewComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/PollenTagElementComponent.html":{},"components/RegistrationViewComponent.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{}}}],["steady",{"_index":2261,"title":{},"body":{"injectables/TextService.html":{},"miscellaneous/variables.html":{}}}],["steigend",{"_index":2258,"title":{},"body":{"injectables/TextService.html":{}}}],["stellen",{"_index":2088,"title":{},"body":{"components/PollenflugDetailViewComponent.html":{}}}],["stimmt",{"_index":2148,"title":{},"body":{"components/RegistrationViewComponent.html":{}}}],["stll",{"_index":2184,"title":{},"body":{"injectables/SpeechService.html":{}}}],["stop",{"_index":2189,"title":{},"body":{"injectables/SpeechService.html":{}}}],["stopoutput",{"_index":2181,"title":{},"body":{"injectables/SpeechService.html":{}}}],["storage",{"_index":1604,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["storage.service.ts",{"_index":1602,"title":{},"body":{"injectables/LocalStorageService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["storage.service.ts:18",{"_index":1613,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["storage.service.ts:27",{"_index":1610,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["storage.service.ts:41",{"_index":1617,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["storage.service.ts:50",{"_index":1615,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["storage.service.ts:62",{"_index":1619,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["storage.service.ts:75",{"_index":1623,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["storage.service.ts:77",{"_index":1606,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["storage.service.ts:84",{"_index":1607,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["stored",{"_index":2551,"title":{},"body":{"injectables/WeatherDataService.html":{},"index.html":{}}}],["strahlungsintensität",{"_index":1852,"title":{},"body":{"components/OutdoorWeatherDetailViewComponent.html":{}}}],["stretch",{"_index":863,"title":{},"body":{"components/DashboardScreenComponent.html":{},"components/LoginViewComponent.html":{},"components/RegistrationViewComponent.html":{}}}],["string",{"_index":62,"title":{},"body":{"components/AppComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CardElementComponent.html":{},"interfaces/CheckTokenResponse.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"interfaces/Credentials.html":{},"interfaces/ESPConfiguration.html":{},"injectables/ESPConfigurationAPIService.html":{},"interfaces/ForecastResponse.html":{},"components/ForecastTileViewComponent.html":{},"interfaces/GraphDataSet.html":{},"components/HistoryDetailViewComponent.html":{},"injectables/HistoryTileService.html":{},"components/HistoryTileViewComponent.html":{},"interfaces/ImageModel.html":{},"injectables/ImageService.html":{},"interfaces/IndoorRoomData.html":{},"interfaces/IndoorRoomResponse.html":{},"injectables/LocalStorageService.html":{},"interfaces/LoginResponse.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"interfaces/OutdoorWeatherData.html":{},"interfaces/OutdoorWeatherResponse.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"interfaces/PollenData.html":{},"components/PollenListElementComponent.html":{},"interfaces/PollenResponse.html":{},"components/PollenTagElementComponent.html":{},"interfaces/PollenType.html":{},"components/RegistrationViewComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"injectables/SpeechService.html":{},"injectables/TextService.html":{},"interfaces/Tile.html":{},"interfaces/TileArrays.html":{},"injectables/TileService.html":{},"components/TtsPlayerElementComponent.html":{},"interfaces/UserContext.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{},"interfaces/UserIdentifikation.html":{},"injectables/WeatherAPIService.html":{},"interfaces/WeatherData.html":{},"interfaces/WeatherForecastData.html":{},"interfaces/WeatherHistoryByDayData.html":{},"interfaces/WeatherHistoryData.html":{},"miscellaneous/variables.html":{}}}],["stroke",{"_index":450,"title":{},"body":{"components/BackButtonElementComponent.html":{},"components/HistoryDetailViewComponent.html":{}}}],["structure",{"_index":1150,"title":{},"body":{"interfaces/GraphDataSet.html":{},"interfaces/IndoorRoomData.html":{},"interfaces/OutdoorWeatherData.html":{},"interfaces/PollenData.html":{},"interfaces/Tile.html":{},"interfaces/TileArrays.html":{},"interfaces/WeatherData.html":{},"interfaces/WeatherForecastData.html":{},"interfaces/WeatherHistoryByDayData.html":{},"interfaces/WeatherHistoryData.html":{}}}],["stuttgart",{"_index":1153,"title":{},"body":{"interfaces/GraphDataSet.html":{},"interfaces/IndoorRoomData.html":{},"interfaces/OutdoorWeatherData.html":{},"interfaces/PollenData.html":{},"interfaces/Tile.html":{},"interfaces/TileArrays.html":{},"interfaces/WeatherData.html":{},"interfaces/WeatherForecastData.html":{},"interfaces/WeatherHistoryByDayData.html":{},"interfaces/WeatherHistoryData.html":{},"miscellaneous/variables.html":{}}}],["style",{"_index":1768,"title":{},"body":{"components/MenuElementComponent.html":{},"miscellaneous/variables.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DetailScreenComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{}}}],["styleurls",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DetailScreenComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{}}}],["stärke",{"_index":2060,"title":{},"body":{"components/PollenflugDetailViewComponent.html":{}}}],["subject",{"_index":2539,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["subjects",{"_index":2561,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["subscribe((state",{"_index":114,"title":{},"body":{"components/AppComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/DashboardScreenComponent.html":{},"injectables/ImageService.html":{},"components/OutdoorWeatherDetailViewComponent.html":{}}}],["subscribe(data",{"_index":120,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardScreenComponent.html":{},"components/ForecastDetailViewComponent.html":{},"interfaces/ForecastResponse.html":{},"components/IndoorDetailViewComponent.html":{},"interfaces/IndoorRoomResponse.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"interfaces/OutdoorWeatherResponse.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"interfaces/PollenResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["subscribe(outdoorweather",{"_index":1880,"title":{},"body":{"components/OutdoorWeatherViewComponent.html":{}}}],["subtitle",{"_index":451,"title":{},"body":{"components/CardElementComponent.html":{},"components/SimpleTileViewComponent.html":{}}}],["success",{"_index":517,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/LoginResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{}}}],["successful",{"_index":602,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/LoginResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{}}}],["suiteable",{"_index":1462,"title":{},"body":{"injectables/ImageService.html":{}}}],["sunny",{"_index":1503,"title":{},"body":{"injectables/ImageService.html":{},"injectables/TextService.html":{}}}],["sunny_cloudy",{"_index":1506,"title":{},"body":{"injectables/ImageService.html":{}}}],["support",{"_index":2797,"title":{},"body":{"modules.html":{}}}],["surface",{"_index":469,"title":{},"body":{"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/MenuElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/TtsPlayerElementComponent.html":{}}}],["svg",{"_index":1714,"title":{},"body":{"components/MenuBarElementComponent.html":{},"modules.html":{}}}],["svg.motion",{"_index":1725,"title":{},"body":{"components/MenuBarElementComponent.html":{}}}],["switch",{"_index":153,"title":{},"body":{"components/AppComponent.html":{},"components/HistoryTileViewComponent.html":{},"injectables/ImageService.html":{},"components/PersonalizationSettingsViewComponent.html":{},"injectables/TextService.html":{},"injectables/TileService.html":{}}}],["switch(element.type",{"_index":2230,"title":{},"body":{"injectables/TextService.html":{}}}],["switch(theme",{"_index":667,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/LoginResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{}}}],["switch(usercontexttheme",{"_index":1476,"title":{},"body":{"injectables/ImageService.html":{}}}],["switch(value",{"_index":1983,"title":{},"body":{"components/PollenTagElementComponent.html":{}}}],["switch(weather",{"_index":2298,"title":{},"body":{"injectables/TextService.html":{}}}],["switcher",{"_index":199,"title":{},"body":{"components/AppComponent.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DetailScreenComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{},"modules/UiElementsModule.html":{},"coverage.html":{}}}],["symptomatik",{"_index":2061,"title":{},"body":{"components/PollenflugDetailViewComponent.html":{}}}],["symptome",{"_index":2038,"title":{},"body":{"components/PollenflugDetailViewComponent.html":{}}}],["synth",{"_index":2190,"title":{},"body":{"injectables/SpeechService.html":{}}}],["synthesiser",{"_index":2178,"title":{},"body":{"injectables/SpeechService.html":{}}}],["system",{"_index":1510,"title":{},"body":{"injectables/ImageService.html":{}}}],["systemtheme",{"_index":698,"title":{},"body":{"components/CheckboxSwitcherElementComponent.html":{},"injectables/ImageService.html":{}}}],["systemthemebreakpointobserver",{"_index":702,"title":{},"body":{"components/CheckboxSwitcherElementComponent.html":{},"injectables/ImageService.html":{}}}],["table",{"_index":2743,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":2742,"title":{},"body":{"coverage.html":{}}}],["tag",{"_index":251,"title":{},"body":{"components/AppComponent.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DetailScreenComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{},"modules/UiElementsModule.html":{},"coverage.html":{}}}],["tages",{"_index":1551,"title":{},"body":{"components/IndoorDetailViewComponent.html":{},"injectables/TextService.html":{}}}],["tatsächlich",{"_index":962,"title":{},"body":{"components/ForecastDetailViewComponent.html":{}}}],["tatsächliche",{"_index":1822,"title":{},"body":{"components/OutdoorWeatherDetailViewComponent.html":{}}}],["temp",{"_index":1598,"title":{},"body":{"components/IndoorTileViewComponent.html":{}}}],["tempaverage",{"_index":1389,"title":{},"body":{"injectables/HistoryTileService.html":{}}}],["temperatur",{"_index":945,"title":{},"body":{"components/ForecastDetailViewComponent.html":{},"interfaces/GraphDataSet.html":{},"interfaces/IndoorRoomData.html":{},"components/IndoorTileViewComponent.html":{},"interfaces/OutdoorWeatherData.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"interfaces/PollenData.html":{},"interfaces/Tile.html":{},"interfaces/TileArrays.html":{},"interfaces/WeatherData.html":{},"interfaces/WeatherForecastData.html":{},"interfaces/WeatherHistoryByDayData.html":{},"interfaces/WeatherHistoryData.html":{}}}],["temperature",{"_index":187,"title":{},"body":{"components/AppComponent.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DetailScreenComponent.html":{},"components/ForecastDetailViewComponent.html":{},"interfaces/ForecastResponse.html":{},"components/ForecastTileViewComponent.html":{},"interfaces/GraphDataSet.html":{},"components/HistoryDetailViewComponent.html":{},"injectables/HistoryTileService.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"interfaces/IndoorRoomData.html":{},"interfaces/IndoorRoomResponse.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"interfaces/OutdoorWeatherData.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"interfaces/OutdoorWeatherResponse.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"interfaces/PollenData.html":{},"components/PollenListElementComponent.html":{},"interfaces/PollenResponse.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"injectables/TextService.html":{},"interfaces/Tile.html":{},"interfaces/TileArrays.html":{},"components/TtsPlayerElementComponent.html":{},"modules/ViewsModule.html":{},"injectables/WeatherAPIService.html":{},"interfaces/WeatherData.html":{},"interfaces/WeatherForecastData.html":{},"interfaces/WeatherHistoryByDayData.html":{},"interfaces/WeatherHistoryData.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["temperatureaverage",{"_index":1130,"title":{},"body":{"interfaces/GraphDataSet.html":{},"injectables/HistoryTileService.html":{},"interfaces/IndoorRoomData.html":{},"interfaces/OutdoorWeatherData.html":{},"interfaces/PollenData.html":{},"interfaces/Tile.html":{},"interfaces/TileArrays.html":{},"interfaces/WeatherData.html":{},"interfaces/WeatherForecastData.html":{},"interfaces/WeatherHistoryByDayData.html":{},"interfaces/WeatherHistoryData.html":{}}}],["temperaturedata",{"_index":1380,"title":{},"body":{"injectables/HistoryTileService.html":{}}}],["temperaturedata.length",{"_index":1390,"title":{},"body":{"injectables/HistoryTileService.html":{}}}],["temperaturedata.reduce(function",{"_index":1384,"title":{},"body":{"injectables/HistoryTileService.html":{}}}],["temperaturedata.reverse",{"_index":1392,"title":{},"body":{"injectables/HistoryTileService.html":{}}}],["temperaturedatapoints",{"_index":1131,"title":{},"body":{"interfaces/GraphDataSet.html":{},"injectables/HistoryTileService.html":{},"interfaces/IndoorRoomData.html":{},"interfaces/OutdoorWeatherData.html":{},"interfaces/PollenData.html":{},"interfaces/Tile.html":{},"interfaces/TileArrays.html":{},"interfaces/WeatherData.html":{},"interfaces/WeatherForecastData.html":{},"interfaces/WeatherHistoryByDayData.html":{},"interfaces/WeatherHistoryData.html":{}}}],["temperaturedatapoints.push(math.round(averagetemperature",{"_index":1331,"title":{},"body":{"injectables/HistoryTileService.html":{}}}],["temperaturempfinden",{"_index":1824,"title":{},"body":{"components/OutdoorWeatherDetailViewComponent.html":{}}}],["temperaturesumofweek",{"_index":1324,"title":{},"body":{"injectables/HistoryTileService.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DetailScreenComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{}}}],["templateurl",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DetailScreenComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{}}}],["tempsum",{"_index":1383,"title":{},"body":{"injectables/HistoryTileService.html":{}}}],["tendenz",{"_index":2036,"title":{},"body":{"components/PollenflugDetailViewComponent.html":{},"injectables/TextService.html":{}}}],["test",{"_index":1002,"title":{},"body":{"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["testdata",{"_index":2834,"title":{},"body":{"miscellaneous/variables.html":{}}}],["text",{"_index":721,"title":{},"body":{"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SliderElementComponent.html":{},"injectables/SpeechService.html":{},"injectables/TextService.html":{},"components/TtsPlayerElementComponent.html":{}}}],["textservice",{"_index":832,"title":{"injectables/TextService.html":{}},"body":{"components/DashboardScreenComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"injectables/TextService.html":{},"coverage.html":{}}}],["textvalue",{"_index":1977,"title":{},"body":{"components/PollenTagElementComponent.html":{},"components/PollenflugSmallTileComponent.html":{}}}],["theme",{"_index":609,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"components/HistoryTileViewComponent.html":{},"interfaces/LoginResponse.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"interfaces/PollenType.html":{},"interfaces/UserContext.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{},"interfaces/UserIdentifikation.html":{},"miscellaneous/variables.html":{}}}],["themes",{"_index":64,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CheckTokenResponse.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/HistoryTileViewComponent.html":{},"injectables/ImageService.html":{},"interfaces/LoginResponse.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"interfaces/PollenType.html":{},"interfaces/UserContext.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{},"interfaces/UserIdentifikation.html":{},"miscellaneous/enumerations.html":{}}}],["themes.automatic",{"_index":673,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"components/CheckboxSwitcherElementComponent.html":{},"injectables/ImageService.html":{},"interfaces/LoginResponse.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"interfaces/PollenType.html":{},"interfaces/UserContext.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{},"interfaces/UserIdentifikation.html":{},"miscellaneous/variables.html":{}}}],["themes.dark",{"_index":669,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"components/CheckboxSwitcherElementComponent.html":{},"injectables/ImageService.html":{},"interfaces/LoginResponse.html":{},"components/PersonalizationSettingsViewComponent.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{}}}],["themes.highcontrast",{"_index":672,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"components/CheckboxSwitcherElementComponent.html":{},"injectables/ImageService.html":{},"interfaces/LoginResponse.html":{},"components/PersonalizationSettingsViewComponent.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{}}}],["themes.light",{"_index":670,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/HistoryTileViewComponent.html":{},"injectables/ImageService.html":{},"interfaces/LoginResponse.html":{},"components/PersonalizationSettingsViewComponent.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{}}}],["themes[index",{"_index":1958,"title":{},"body":{"components/PersonalizationSettingsViewComponent.html":{}}}],["themes[this.getthemetypeat(index",{"_index":1960,"title":{},"body":{"components/PersonalizationSettingsViewComponent.html":{}}}],["themes[usercontext.theme",{"_index":610,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/LoginResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{}}}],["themesstring",{"_index":1957,"title":{},"body":{"components/PersonalizationSettingsViewComponent.html":{}}}],["themestype",{"_index":1922,"title":{},"body":{"components/PersonalizationSettingsViewComponent.html":{}}}],["themetype",{"_index":23,"title":{},"body":{"components/AppComponent.html":{},"components/OutdoorWeatherViewComponent.html":{}}}],["theoretisch",{"_index":1029,"title":{},"body":{"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["this._apparenttemperature",{"_index":401,"title":{},"body":{"components/ApparentTemperatureTileViewComponent.html":{}}}],["this._dashboardtiles",{"_index":2654,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["this._dashboardtiles.next(tiles",{"_index":2571,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["this._dataset",{"_index":1429,"title":{},"body":{"components/HistoryTileViewComponent.html":{}}}],["this._forecast",{"_index":1115,"title":{},"body":{"components/ForecastTileViewComponent.html":{}}}],["this._forecast?.weathericon",{"_index":1117,"title":{},"body":{"components/ForecastTileViewComponent.html":{}}}],["this._forecastdata",{"_index":2657,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["this._forecastdata.getvalue",{"_index":2591,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["this._forecastdata.next(value",{"_index":2593,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["this._graphtype",{"_index":1425,"title":{},"body":{"components/HistoryTileViewComponent.html":{}}}],["this._historydata",{"_index":2656,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["this._historydata.getvalue",{"_index":2596,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["this._historydata.next(value",{"_index":2598,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["this._humidity",{"_index":1449,"title":{},"body":{"components/HumidityTileViewComponent.html":{}}}],["this._index",{"_index":1210,"title":{},"body":{"components/HistoryDetailViewComponent.html":{}}}],["this._indoorroom",{"_index":1591,"title":{},"body":{"components/IndoorTileViewComponent.html":{}}}],["this._indoorroomsdata.getvalue",{"_index":2587,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["this._indoorroomsdata.next(value",{"_index":2589,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["this._indoorroomtiles",{"_index":2658,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["this._indoorroomtiles.next(tiles",{"_index":2578,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["this._outdoorweatherdata",{"_index":2655,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["this._outdoorweatherdata.getvalue",{"_index":2600,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["this._outdoorweatherdata.next(value",{"_index":2602,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["this._pollen",{"_index":2100,"title":{},"body":{"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{}}}],["this._pollendata.getvalue",{"_index":2582,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["this._pollendata.next(value",{"_index":2584,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["this._pollentiles",{"_index":2659,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["this._pollentiles.next(tiles",{"_index":2574,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["this._value",{"_index":1981,"title":{},"body":{"components/PollenTagElementComponent.html":{}}}],["this._weatherhistory",{"_index":1217,"title":{},"body":{"components/HistoryDetailViewComponent.html":{}}}],["this.addtileto(dashboard",{"_index":2344,"title":{},"body":{"injectables/TileService.html":{}}}],["this.addtileto(indoorroom",{"_index":2370,"title":{},"body":{"injectables/TileService.html":{}}}],["this.addtileto(pollen",{"_index":2356,"title":{},"body":{"injectables/TileService.html":{}}}],["this.baseurlicons",{"_index":1477,"title":{},"body":{"injectables/ImageService.html":{}}}],["this.baseurlweather",{"_index":1501,"title":{},"body":{"injectables/ImageService.html":{}}}],["this.breakpointobserver",{"_index":110,"title":{},"body":{"components/AppComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/DashboardScreenComponent.html":{},"injectables/ImageService.html":{},"components/OutdoorWeatherDetailViewComponent.html":{}}}],["this.chartcolors",{"_index":1428,"title":{},"body":{"components/HistoryTileViewComponent.html":{}}}],["this.chartlabels",{"_index":1442,"title":{},"body":{"components/HistoryTileViewComponent.html":{}}}],["this.checkedimage",{"_index":711,"title":{},"body":{"components/CheckboxSwitcherElementComponent.html":{}}}],["this.closeevent.emit",{"_index":1779,"title":{},"body":{"components/MenuElementComponent.html":{}}}],["this.colorvalue",{"_index":1988,"title":{},"body":{"components/PollenTagElementComponent.html":{}}}],["this.createforecasttext(forecastdata",{"_index":2240,"title":{},"body":{"injectables/TextService.html":{}}}],["this.createforecasttile(forecast",{"_index":2333,"title":{},"body":{"injectables/TileService.html":{}}}],["this.createhistorytile(history",{"_index":2334,"title":{},"body":{"injectables/TileService.html":{}}}],["this.createindoorroomdatafromserverresponse(data",{"_index":1031,"title":{},"body":{"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["this.createindoorroomtext(indoorarray",{"_index":2238,"title":{},"body":{"injectables/TextService.html":{}}}],["this.createindoorroomtiles(indoorroom",{"_index":2335,"title":{},"body":{"injectables/TileService.html":{}}}],["this.createoutdoorforecastdatafromserverresponse(data",{"_index":1013,"title":{},"body":{"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["this.createoutdoorweatherdatafromserverresponse(data",{"_index":1007,"title":{},"body":{"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["this.createoutdoorweatherdatafromserverresponse(element",{"_index":1044,"title":{},"body":{"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["this.createoutdoorweathertiles(outdoorweather",{"_index":2332,"title":{},"body":{"injectables/TileService.html":{}}}],["this.createpollendatafromserverresponse(data",{"_index":1017,"title":{},"body":{"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["this.createpollentext(element",{"_index":2235,"title":{},"body":{"injectables/TextService.html":{}}}],["this.createpollentext(pollendata",{"_index":2242,"title":{},"body":{"injectables/TextService.html":{}}}],["this.createpollentiles(pollen",{"_index":2336,"title":{},"body":{"injectables/TileService.html":{}}}],["this.createserverfriendlydate(begindate",{"_index":1039,"title":{},"body":{"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["this.createserverfriendlydate(enddate",{"_index":1041,"title":{},"body":{"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["this.createusercontextfromserverresponse(body.usercontext",{"_index":574,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/LoginResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{}}}],["this.createweathertext(weather",{"_index":2296,"title":{},"body":{"injectables/TextService.html":{}}}],["this.dashboardtiles",{"_index":856,"title":{},"body":{"components/DashboardScreenComponent.html":{},"injectables/WeatherDataService.html":{}}}],["this.dataset",{"_index":1221,"title":{},"body":{"components/HistoryDetailViewComponent.html":{}}}],["this.dataset.length",{"_index":1212,"title":{},"body":{"components/HistoryDetailViewComponent.html":{}}}],["this.dataset[this.index].humidityaverage",{"_index":1230,"title":{},"body":{"components/HistoryDetailViewComponent.html":{}}}],["this.dataset[this.index].temperatureaverage",{"_index":1229,"title":{},"body":{"components/HistoryDetailViewComponent.html":{}}}],["this.desktop",{"_index":116,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardScreenComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{}}}],["this.desktopbreakpointobserver",{"_index":93,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardScreenComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{}}}],["this.dialog.open(configurationtilepopupdialogview",{"_index":757,"title":{},"body":{"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{}}}],["this.dialogref.close",{"_index":770,"title":{},"body":{"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{}}}],["this.dialogref.close(this.name.value",{"_index":771,"title":{},"body":{"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{}}}],["this.emojiname",{"_index":1986,"title":{},"body":{"components/PollenTagElementComponent.html":{}}}],["this.error",{"_index":1670,"title":{},"body":{"components/LoginViewComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/RegistrationViewComponent.html":{}}}],["this.espconfiguration.roomname",{"_index":762,"title":{},"body":{"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{}}}],["this.espconfiguration?.roomname",{"_index":759,"title":{},"body":{"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{}}}],["this.espconfigurations",{"_index":811,"title":{},"body":{"components/ConfigurationViewComponent.html":{}}}],["this.espconfigurationservice.loadespconfigs().subscribe((data",{"_index":810,"title":{},"body":{"components/ConfigurationViewComponent.html":{}}}],["this.espconfigurationservice.postespconfiguration(this.espconfiguration).subscribe((data",{"_index":766,"title":{},"body":{"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{}}}],["this.forecast",{"_index":909,"title":{},"body":{"components/ForecastDetailViewComponent.html":{}}}],["this.forecastdata",{"_index":2629,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["this.formbuilder.group",{"_index":1664,"title":{},"body":{"components/LoginViewComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/RegistrationViewComponent.html":{}}}],["this.getdatestringfromdate(lastdate",{"_index":1343,"title":{},"body":{"injectables/HistoryTileService.html":{}}}],["this.getdaytime",{"_index":1490,"title":{},"body":{"injectables/ImageService.html":{}}}],["this.getindexoftilein(tilesarray",{"_index":2392,"title":{},"body":{"injectables/TileService.html":{}}}],["this.getitem(disable_login_identifier",{"_index":1638,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["this.getitem(user_context_identifier",{"_index":1631,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["this.getitem(user_identifikation",{"_index":1636,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["this.getlocation",{"_index":1706,"title":{},"body":{"components/MenuBarElementComponent.html":{}}}],["this.getprioritiyof(data",{"_index":2341,"title":{},"body":{"injectables/TileService.html":{}}}],["this.getprioritiyof(item",{"_index":2369,"title":{},"body":{"injectables/TileService.html":{}}}],["this.getprioritiyof(pollendata",{"_index":2359,"title":{},"body":{"injectables/TileService.html":{}}}],["this.getprioritiyof(pollenitem",{"_index":2355,"title":{},"body":{"injectables/TileService.html":{}}}],["this.getthemetypefromserverresponse(usercontext.theme",{"_index":662,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/LoginResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{}}}],["this.getusercontext",{"_index":1946,"title":{},"body":{"components/PersonalizationSettingsViewComponent.html":{}}}],["this.getweeknumber(item.timestamp",{"_index":1336,"title":{},"body":{"injectables/HistoryTileService.html":{}}}],["this.getweeknumber(lastdate",{"_index":1321,"title":{},"body":{"injectables/HistoryTileService.html":{}}}],["this.getweekstringfromweeknumber(lastweek",{"_index":1322,"title":{},"body":{"injectables/HistoryTileService.html":{}}}],["this.historydata",{"_index":2631,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["this.historytileservice.gethistorydatasetdaysperweekfrom(this._weatherhistory",{"_index":1224,"title":{},"body":{"components/HistoryDetailViewComponent.html":{}}}],["this.historytileservice.gethistorydatasethoursperdayfrom(data",{"_index":2363,"title":{},"body":{"injectables/TileService.html":{}}}],["this.historytileservice.gethistorydatasethoursperdayfrom(this._weatherhistory",{"_index":1222,"title":{},"body":{"components/HistoryDetailViewComponent.html":{}}}],["this.http.post(\"http://localhost:4201/v1/auth/login",{"_index":161,"title":{},"body":{"components/AppComponent.html":{}}}],["this.httpclient.delete(this.deletepollenurl",{"_index":629,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/LoginResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{}}}],["this.httpclient.get(this.allconfigs",{"_index":888,"title":{},"body":{"interfaces/ESPConfiguration.html":{},"injectables/ESPConfigurationAPIService.html":{}}}],["this.httpclient.get(this.allpollentypesurl",{"_index":653,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/LoginResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["this.httpclient.get(this.checktokenurl",{"_index":639,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/LoginResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{}}}],["this.httpclient.get(this.currentusercontexturl",{"_index":644,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/LoginResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{}}}],["this.httpclient.get(this.forecasturl).subscribe(data",{"_index":1011,"title":{},"body":{"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["this.httpclient.get(this.indoorurl).subscribe(data",{"_index":1030,"title":{},"body":{"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["this.httpclient.get(this.outdoorurl).subscribe(data",{"_index":1006,"title":{},"body":{"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["this.httpclient.post(this.changeconfig",{"_index":891,"title":{},"body":{"interfaces/ESPConfiguration.html":{},"injectables/ESPConfigurationAPIService.html":{}}}],["this.httpclient.post(this.historyurl",{"_index":1037,"title":{},"body":{"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["this.httpclient.post(this.loginurl",{"_index":557,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/LoginResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{}}}],["this.httpclient.post(this.openapeurl",{"_index":595,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/LoginResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{}}}],["this.httpclient.post(this.registerurl",{"_index":604,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/LoginResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{}}}],["this.httpclient.post(this.savepollenurl",{"_index":635,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/LoginResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{}}}],["this.httpclient.put(this.saveusercontexturl",{"_index":621,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/LoginResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{}}}],["this.imageservice.getgradientstylefor(this.outdoorweather?.weather",{"_index":1881,"title":{},"body":{"components/OutdoorWeatherViewComponent.html":{}}}],["this.imageservice.getweathericonstring(iconstring",{"_index":1118,"title":{},"body":{"components/ForecastTileViewComponent.html":{}}}],["this.imageservice.getweathericonstring(this.outdoorweather?.weather",{"_index":1882,"title":{},"body":{"components/OutdoorWeatherViewComponent.html":{}}}],["this.index",{"_index":1218,"title":{},"body":{"components/HistoryDetailViewComponent.html":{}}}],["this.indoorroomsdata",{"_index":2633,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["this.indoorroomtiles",{"_index":1545,"title":{},"body":{"components/IndoorDetailViewComponent.html":{},"injectables/WeatherDataService.html":{}}}],["this.ismenuhidden",{"_index":1733,"title":{},"body":{"components/MenuButtonElementComponent.html":{}}}],["this.label",{"_index":713,"title":{},"body":{"components/CheckboxSwitcherElementComponent.html":{}}}],["this.listenforstop(service",{"_index":2421,"title":{},"body":{"components/TtsPlayerElementComponent.html":{}}}],["this.listenforstop(this.speechservice",{"_index":2415,"title":{},"body":{"components/TtsPlayerElementComponent.html":{}}}],["this.listentoscrollevent",{"_index":1877,"title":{},"body":{"components/OutdoorWeatherViewComponent.html":{}}}],["this.listentothemechange",{"_index":92,"title":{},"body":{"components/AppComponent.html":{}}}],["this.loadconfigurations",{"_index":808,"title":{},"body":{"components/ConfigurationViewComponent.html":{}}}],["this.loaddata",{"_index":851,"title":{},"body":{"components/DashboardScreenComponent.html":{}}}],["this.loaddefaultfontsize",{"_index":90,"title":{},"body":{"components/AppComponent.html":{}}}],["this.loadforecastdata",{"_index":907,"title":{},"body":{"components/ForecastDetailViewComponent.html":{}}}],["this.loadindoorroomdata",{"_index":1543,"title":{},"body":{"components/IndoorDetailViewComponent.html":{}}}],["this.loadmonthfromhistory(new",{"_index":2620,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["this.loadoutdoorweather",{"_index":1876,"title":{},"body":{"components/OutdoorWeatherViewComponent.html":{}}}],["this.loadoutdoorweatherdata",{"_index":1814,"title":{},"body":{"components/OutdoorWeatherDetailViewComponent.html":{}}}],["this.loadpollentiles",{"_index":2027,"title":{},"body":{"components/PollenflugDetailViewComponent.html":{}}}],["this.loadreducemotionvalue",{"_index":850,"title":{},"body":{"components/DashboardScreenComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{}}}],["this.loadusercontext",{"_index":91,"title":{},"body":{"components/AppComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"injectables/ImageService.html":{},"components/OutdoorWeatherViewComponent.html":{}}}],["this.loadweatherdata",{"_index":2609,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["this.loadweatherhistorydata",{"_index":1215,"title":{},"body":{"components/HistoryDetailViewComponent.html":{}}}],["this.location.back",{"_index":430,"title":{},"body":{"components/BackButtonElementComponent.html":{}}}],["this.locationlabel",{"_index":1708,"title":{},"body":{"components/MenuBarElementComponent.html":{}}}],["this.loginform.get(\"password\")?.value",{"_index":1669,"title":{},"body":{"components/LoginViewComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{}}}],["this.loginform.get(\"username\")?.value",{"_index":1668,"title":{},"body":{"components/LoginViewComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{}}}],["this.logintoopenape(username",{"_index":1803,"title":{},"body":{"components/OpenAPELoginTileViewComponent.html":{}}}],["this.message",{"_index":166,"title":{},"body":{"components/AppComponent.html":{}}}],["this.oldesthistorydate",{"_index":2616,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["this.orderitemsin(tilesarray",{"_index":2389,"title":{},"body":{"injectables/TileService.html":{}}}],["this.outdoordata",{"_index":860,"title":{},"body":{"components/DashboardScreenComponent.html":{}}}],["this.outdoorweather",{"_index":1817,"title":{},"body":{"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{}}}],["this.outdoorweatherdata",{"_index":2625,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["this.play",{"_index":2411,"title":{},"body":{"components/TtsPlayerElementComponent.html":{}}}],["this.pollendata",{"_index":2627,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["this.pollentiles",{"_index":2030,"title":{},"body":{"components/PollenflugDetailViewComponent.html":{},"injectables/WeatherDataService.html":{}}}],["this.reducemotion",{"_index":854,"title":{},"body":{"components/DashboardScreenComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{}}}],["this.registerforusercontextchange",{"_index":2610,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["this.registrationform.get(\"password\")?.value",{"_index":2145,"title":{},"body":{"components/RegistrationViewComponent.html":{}}}],["this.registrationform.get(\"repeatedpassword\")?.value",{"_index":2146,"title":{},"body":{"components/RegistrationViewComponent.html":{}}}],["this.registrationform.get(\"username\")?.value",{"_index":2144,"title":{},"body":{"components/RegistrationViewComponent.html":{}}}],["this.reload",{"_index":1214,"title":{},"body":{"components/HistoryDetailViewComponent.html":{}}}],["this.reloadtiles",{"_index":2635,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["this.renderer.setstyle(document.body",{"_index":130,"title":{},"body":{"components/AppComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{}}}],["this.router.navigatebyurl('/dashboard",{"_index":100,"title":{},"body":{"components/AppComponent.html":{},"components/LoginViewComponent.html":{},"components/PersonalizationViewComponent.html":{}}}],["this.router.navigatebyurl('/onboarding/login",{"_index":1949,"title":{},"body":{"components/PersonalizationSettingsViewComponent.html":{}}}],["this.router.navigatebyurl('/onboarding/personalization",{"_index":1678,"title":{},"body":{"components/LoginViewComponent.html":{},"components/RegistrationViewComponent.html":{}}}],["this.router.navigatebyurl('/onboarding/registration",{"_index":1676,"title":{},"body":{"components/LoginViewComponent.html":{}}}],["this.router.navigatebyurl('/settings/configuration",{"_index":1781,"title":{},"body":{"components/MenuElementComponent.html":{}}}],["this.router.navigatebyurl('/settings/personalization",{"_index":1780,"title":{},"body":{"components/MenuElementComponent.html":{}}}],["this.setdefaultfontsize(fontsize",{"_index":123,"title":{},"body":{"components/AppComponent.html":{}}}],["this.setdefaultfontsize(this.usercontextdata.fontsize",{"_index":1953,"title":{},"body":{"components/PersonalizationSettingsViewComponent.html":{}}}],["this.setitem(disable_login_identifier",{"_index":1642,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["this.setitem(user_context_identifier",{"_index":1629,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["this.setitem(user_identifikation",{"_index":1635,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["this.showweatherdescription",{"_index":1899,"title":{},"body":{"components/OutdoorWeatherViewComponent.html":{}}}],["this.speechservice.startoutput(text",{"_index":2414,"title":{},"body":{"components/TtsPlayerElementComponent.html":{}}}],["this.speechservice.stopoutput",{"_index":2412,"title":{},"body":{"components/TtsPlayerElementComponent.html":{}}}],["this.spinner.hide",{"_index":812,"title":{},"body":{"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{}}}],["this.spinner.show",{"_index":809,"title":{},"body":{"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{}}}],["this.synth.cancel",{"_index":2198,"title":{},"body":{"injectables/SpeechService.html":{}}}],["this.synth.resume",{"_index":2200,"title":{},"body":{"injectables/SpeechService.html":{}}}],["this.synth.speak(utterthis",{"_index":2199,"title":{},"body":{"injectables/SpeechService.html":{}}}],["this.synth.speaking",{"_index":2201,"title":{},"body":{"injectables/SpeechService.html":{}}}],["this.systemtheme",{"_index":704,"title":{},"body":{"components/CheckboxSwitcherElementComponent.html":{},"injectables/ImageService.html":{}}}],["this.systemthemebreakpointobserver",{"_index":699,"title":{},"body":{"components/CheckboxSwitcherElementComponent.html":{},"injectables/ImageService.html":{}}}],["this.textservice.createforecasttext(this._forecast",{"_index":1120,"title":{},"body":{"components/ForecastTileViewComponent.html":{}}}],["this.textservice.createforecasttext(this.forecast",{"_index":906,"title":{},"body":{"components/ForecastDetailViewComponent.html":{}}}],["this.textservice.createforecasttitle(this._forecast",{"_index":1119,"title":{},"body":{"components/ForecastTileViewComponent.html":{}}}],["this.textservice.createoutdoortext(this.outdoordata",{"_index":849,"title":{},"body":{"components/DashboardScreenComponent.html":{}}}],["this.textservice.createoutdoortext(this.outdoorweather",{"_index":1813,"title":{},"body":{"components/OutdoorWeatherDetailViewComponent.html":{}}}],["this.textservice.createtextfromtilesarray(this.dashboardtiles",{"_index":847,"title":{},"body":{"components/DashboardScreenComponent.html":{}}}],["this.textservice.createtextfromtilesarray(this.indoorroomtiles",{"_index":1542,"title":{},"body":{"components/IndoorDetailViewComponent.html":{}}}],["this.textservice.createtextfromtilesarray(this.pollentiles",{"_index":2026,"title":{},"body":{"components/PollenflugDetailViewComponent.html":{}}}],["this.textservice.createweathertext(this.outdoorweather.weather",{"_index":1902,"title":{},"body":{"components/OutdoorWeatherViewComponent.html":{}}}],["this.textvalue",{"_index":1984,"title":{},"body":{"components/PollenTagElementComponent.html":{}}}],["this.theme",{"_index":1878,"title":{},"body":{"components/OutdoorWeatherViewComponent.html":{}}}],["this.tileservice.createtiles(outdoorweatherdata",{"_index":2642,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["this.toggled.emit(!this.value",{"_index":700,"title":{},"body":{"components/CheckboxSwitcherElementComponent.html":{}}}],["this.ttstextgeneratorfunction",{"_index":2413,"title":{},"body":{"components/TtsPlayerElementComponent.html":{}}}],["this.uncheckedimagedark",{"_index":709,"title":{},"body":{"components/CheckboxSwitcherElementComponent.html":{}}}],["this.uncheckedimagelight",{"_index":710,"title":{},"body":{"components/CheckboxSwitcherElementComponent.html":{}}}],["this.updatechartdata(this.chartdata",{"_index":1427,"title":{},"body":{"components/HistoryTileViewComponent.html":{}}}],["this.updateconfiguration",{"_index":764,"title":{},"body":{"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{}}}],["this.usercontext",{"_index":126,"title":{},"body":{"components/AppComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"injectables/ImageService.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/TtsPlayerElementComponent.html":{}}}],["this.usercontext?.theme",{"_index":706,"title":{},"body":{"components/CheckboxSwitcherElementComponent.html":{},"injectables/ImageService.html":{}}}],["this.usercontextdata",{"_index":1950,"title":{},"body":{"components/PersonalizationSettingsViewComponent.html":{}}}],["this.usercontextservice.disablelogin",{"_index":1677,"title":{},"body":{"components/LoginViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{}}}],["this.usercontextservice.fontsize",{"_index":1951,"title":{},"body":{"components/PersonalizationSettingsViewComponent.html":{}}}],["this.usercontextservice.getpollenvalueat(index",{"_index":1962,"title":{},"body":{"components/PersonalizationSettingsViewComponent.html":{}}}],["this.usercontextservice.getusercontextsubject",{"_index":119,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardScreenComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{}}}],["this.usercontextservice.getusercontextsubject().subscribe",{"_index":2640,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["this.usercontextservice.getusercontextsubject().subscribe(data",{"_index":701,"title":{},"body":{"components/CheckboxSwitcherElementComponent.html":{},"components/TtsPlayerElementComponent.html":{}}}],["this.usercontextservice.login(username",{"_index":1671,"title":{},"body":{"components/LoginViewComponent.html":{}}}],["this.usercontextservice.logintoopenape(username",{"_index":1804,"title":{},"body":{"components/OpenAPELoginTileViewComponent.html":{}}}],["this.usercontextservice.logout",{"_index":1675,"title":{},"body":{"components/LoginViewComponent.html":{},"components/MenuElementComponent.html":{}}}],["this.usercontextservice.pollen",{"_index":2347,"title":{},"body":{"injectables/TileService.html":{}}}],["this.usercontextservice.pollentypes.length",{"_index":1961,"title":{},"body":{"components/PersonalizationSettingsViewComponent.html":{}}}],["this.usercontextservice.pollentypes[index].pollenname",{"_index":1963,"title":{},"body":{"components/PersonalizationSettingsViewComponent.html":{}}}],["this.usercontextservice.refreshusercontextifneeded().subscribe",{"_index":125,"title":{},"body":{"components/AppComponent.html":{}}}],["this.usercontextservice.refreshusercontextifneeded().subscribe((data",{"_index":1947,"title":{},"body":{"components/PersonalizationSettingsViewComponent.html":{}}}],["this.usercontextservice.register(username",{"_index":2150,"title":{},"body":{"components/RegistrationViewComponent.html":{}}}],["this.usercontextservice.tooglepollenvalueat(index",{"_index":1964,"title":{},"body":{"components/PersonalizationSettingsViewComponent.html":{}}}],["this.usercontextservice.userloggedin",{"_index":1778,"title":{},"body":{"components/MenuElementComponent.html":{}}}],["this.valuechanged.emit(event.target.value",{"_index":2172,"title":{},"body":{"components/SliderElementComponent.html":{}}}],["this.weahterdataservice.getoutdoorweatherdatasubject().subscribe(data",{"_index":1816,"title":{},"body":{"components/OutdoorWeatherDetailViewComponent.html":{}}}],["this.weatherapiservice.loadforecast",{"_index":2619,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["this.weatherapiservice.loadindoorroomdata",{"_index":2622,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["this.weatherapiservice.loadoutdoorweather",{"_index":2617,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["this.weatherapiservice.loadpollen",{"_index":2618,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["this.weatherdataservice.getdashboardtilessubject",{"_index":855,"title":{},"body":{"components/DashboardScreenComponent.html":{}}}],["this.weatherdataservice.getforecastdatasubject",{"_index":908,"title":{},"body":{"components/ForecastDetailViewComponent.html":{}}}],["this.weatherdataservice.gethistorydatasubject().subscribe(data",{"_index":1216,"title":{},"body":{"components/HistoryDetailViewComponent.html":{}}}],["this.weatherdataservice.getindoortilessubject",{"_index":1544,"title":{},"body":{"components/IndoorDetailViewComponent.html":{}}}],["this.weatherdataservice.getoutdoorweatherdatasubject",{"_index":859,"title":{},"body":{"components/DashboardScreenComponent.html":{},"components/MenuBarElementComponent.html":{},"components/OutdoorWeatherViewComponent.html":{}}}],["this.weatherdataservice.getpollentilessubject().subscribe(data",{"_index":2029,"title":{},"body":{"components/PollenflugDetailViewComponent.html":{}}}],["this.weatherdataservice.loadmorehistorydata().subscribe(data",{"_index":1213,"title":{},"body":{"components/HistoryDetailViewComponent.html":{}}}],["this.weatherdataservice.reloaddata",{"_index":1711,"title":{},"body":{"components/MenuBarElementComponent.html":{}}}],["three",{"_index":2331,"title":{},"body":{"injectables/TileService.html":{}}}],["through",{"_index":2568,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["thumb",{"_index":2118,"title":{},"body":{"components/ProgressChartElementComponent.html":{},"components/SliderElementComponent.html":{}}}],["thunderstorm",{"_index":1489,"title":{},"body":{"injectables/ImageService.html":{},"injectables/TextService.html":{}}}],["tile",{"_index":188,"title":{"interfaces/Tile.html":{}},"body":{"components/AppComponent.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DetailScreenComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"interfaces/GraphDataSet.html":{},"components/HistoryDetailViewComponent.html":{},"injectables/HistoryTileService.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"interfaces/IndoorRoomData.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"interfaces/OutdoorWeatherData.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"interfaces/PollenData.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"injectables/TextService.html":{},"interfaces/Tile.html":{},"interfaces/TileArrays.html":{},"injectables/TileService.html":{},"components/TtsPlayerElementComponent.html":{},"modules/ViewsModule.html":{},"interfaces/WeatherData.html":{},"injectables/WeatherDataService.html":{},"interfaces/WeatherForecastData.html":{},"interfaces/WeatherHistoryByDayData.html":{},"interfaces/WeatherHistoryData.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["tile'},{'name",{"_index":245,"title":{},"body":{"components/AppComponent.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DetailScreenComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{}}}],["tile.component",{"_index":2512,"title":{},"body":{"modules/ViewsModule.html":{}}}],["tile.component.html",{"_index":2092,"title":{},"body":{"components/PollenflugSmallTileComponent.html":{}}}],["tile.component.scss",{"_index":2091,"title":{},"body":{"components/PollenflugSmallTileComponent.html":{}}}],["tile.component.ts",{"_index":2090,"title":{},"body":{"components/PollenflugSmallTileComponent.html":{},"coverage.html":{}}}],["tile.component.ts:11",{"_index":2097,"title":{},"body":{"components/PollenflugSmallTileComponent.html":{}}}],["tile.component.ts:12",{"_index":2096,"title":{},"body":{"components/PollenflugSmallTileComponent.html":{}}}],["tile.component.ts:14",{"_index":2095,"title":{},"body":{"components/PollenflugSmallTileComponent.html":{}}}],["tile.component.ts:17",{"_index":2099,"title":{},"body":{"components/PollenflugSmallTileComponent.html":{}}}],["tile.component.ts:18",{"_index":2094,"title":{},"body":{"components/PollenflugSmallTileComponent.html":{}}}],["tile.component.ts:22",{"_index":2098,"title":{},"body":{"components/PollenflugSmallTileComponent.html":{}}}],["tile.id",{"_index":2393,"title":{},"body":{"injectables/TileService.html":{}}}],["tile.service",{"_index":1204,"title":{},"body":{"components/HistoryDetailViewComponent.html":{},"injectables/TileService.html":{},"injectables/WeatherDataService.html":{}}}],["tile.service.ts",{"_index":1286,"title":{},"body":{"injectables/HistoryTileService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["tile.service.ts:12",{"_index":1290,"title":{},"body":{"injectables/HistoryTileService.html":{}}}],["tile.service.ts:24",{"_index":1292,"title":{},"body":{"injectables/HistoryTileService.html":{}}}],["tile.service.ts:92",{"_index":1309,"title":{},"body":{"injectables/HistoryTileService.html":{}}}],["tile/pollenflug",{"_index":2089,"title":{},"body":{"components/PollenflugSmallTileComponent.html":{},"modules/ViewsModule.html":{},"coverage.html":{}}}],["tilearrays",{"_index":1136,"title":{"interfaces/TileArrays.html":{}},"body":{"interfaces/GraphDataSet.html":{},"interfaces/IndoorRoomData.html":{},"interfaces/OutdoorWeatherData.html":{},"interfaces/PollenData.html":{},"interfaces/Tile.html":{},"interfaces/TileArrays.html":{},"injectables/TileService.html":{},"interfaces/WeatherData.html":{},"interfaces/WeatherForecastData.html":{},"interfaces/WeatherHistoryByDayData.html":{},"interfaces/WeatherHistoryData.html":{},"coverage.html":{}}}],["tilepriority",{"_index":1137,"title":{},"body":{"interfaces/GraphDataSet.html":{},"interfaces/IndoorRoomData.html":{},"interfaces/OutdoorWeatherData.html":{},"interfaces/PollenData.html":{},"interfaces/Tile.html":{},"interfaces/TileArrays.html":{},"injectables/TileService.html":{},"interfaces/WeatherData.html":{},"interfaces/WeatherForecastData.html":{},"interfaces/WeatherHistoryByDayData.html":{},"interfaces/WeatherHistoryData.html":{},"miscellaneous/enumerations.html":{}}}],["tilepriority.high",{"_index":2385,"title":{},"body":{"injectables/TileService.html":{}}}],["tilepriority.important",{"_index":2379,"title":{},"body":{"injectables/TileService.html":{}}}],["tilepriority.low",{"_index":2380,"title":{},"body":{"injectables/TileService.html":{},"miscellaneous/variables.html":{}}}],["tilepriority.middle",{"_index":2386,"title":{},"body":{"injectables/TileService.html":{}}}],["tiles",{"_index":2224,"title":{},"body":{"injectables/TextService.html":{},"injectables/TileService.html":{},"injectables/WeatherDataService.html":{}}}],["tilesarray.findindex(element",{"_index":2397,"title":{},"body":{"injectables/TileService.html":{}}}],["tilesarray.push(tile",{"_index":2388,"title":{},"body":{"injectables/TileService.html":{}}}],["tilesarray.sort((a",{"_index":2400,"title":{},"body":{"injectables/TileService.html":{}}}],["tilesarray[indexintilesarray",{"_index":2395,"title":{},"body":{"injectables/TileService.html":{}}}],["tilesarrays",{"_index":2329,"title":{},"body":{"injectables/TileService.html":{}}}],["tileservice",{"_index":2316,"title":{"injectables/TileService.html":{}},"body":{"injectables/TileService.html":{},"injectables/WeatherDataService.html":{},"coverage.html":{}}}],["tilestext",{"_index":846,"title":{},"body":{"components/DashboardScreenComponent.html":{}}}],["tiletype",{"_index":827,"title":{},"body":{"components/DashboardScreenComponent.html":{},"interfaces/GraphDataSet.html":{},"interfaces/IndoorRoomData.html":{},"interfaces/OutdoorWeatherData.html":{},"interfaces/PollenData.html":{},"components/PollenflugDetailViewComponent.html":{},"injectables/TextService.html":{},"interfaces/Tile.html":{},"interfaces/TileArrays.html":{},"injectables/TileService.html":{},"interfaces/WeatherData.html":{},"interfaces/WeatherForecastData.html":{},"interfaces/WeatherHistoryByDayData.html":{},"interfaces/WeatherHistoryData.html":{},"miscellaneous/enumerations.html":{}}}],["tiletype.apparenttemperature",{"_index":2343,"title":{},"body":{"injectables/TileService.html":{}}}],["tiletype.forecast",{"_index":2239,"title":{},"body":{"injectables/TextService.html":{},"injectables/TileService.html":{},"miscellaneous/variables.html":{}}}],["tiletype.history",{"_index":2364,"title":{},"body":{"injectables/TileService.html":{}}}],["tiletype.humidity",{"_index":2340,"title":{},"body":{"injectables/TileService.html":{}}}],["tiletype.indoorroom",{"_index":2236,"title":{},"body":{"injectables/TextService.html":{},"injectables/TileService.html":{},"miscellaneous/variables.html":{}}}],["tiletype.pollenlist",{"_index":2231,"title":{},"body":{"injectables/TextService.html":{},"injectables/TileService.html":{},"miscellaneous/variables.html":{}}}],["tiletype.pollensmall",{"_index":2241,"title":{},"body":{"injectables/TextService.html":{},"injectables/TileService.html":{},"miscellaneous/variables.html":{}}}],["tiletype[item.type",{"_index":861,"title":{},"body":{"components/DashboardScreenComponent.html":{},"components/PollenflugDetailViewComponent.html":{}}}],["time",{"_index":1063,"title":{},"body":{"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/WeatherAPIService.html":{},"injectables/WeatherDataService.html":{}}}],["timeinterval",{"_index":1200,"title":{},"body":{"components/HistoryDetailViewComponent.html":{},"miscellaneous/enumerations.html":{}}}],["timeinterval.day",{"_index":1198,"title":{},"body":{"components/HistoryDetailViewComponent.html":{}}}],["timeinterval.month",{"_index":1225,"title":{},"body":{"components/HistoryDetailViewComponent.html":{}}}],["timeinterval.week",{"_index":1223,"title":{},"body":{"components/HistoryDetailViewComponent.html":{}}}],["timeintervaltype",{"_index":1175,"title":{},"body":{"components/HistoryDetailViewComponent.html":{}}}],["timestamp",{"_index":1072,"title":{},"body":{"interfaces/ForecastResponse.html":{},"interfaces/GraphDataSet.html":{},"interfaces/IndoorRoomData.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherData.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenData.html":{},"interfaces/PollenResponse.html":{},"interfaces/Tile.html":{},"interfaces/TileArrays.html":{},"injectables/WeatherAPIService.html":{},"interfaces/WeatherData.html":{},"interfaces/WeatherForecastData.html":{},"interfaces/WeatherHistoryByDayData.html":{},"interfaces/WeatherHistoryData.html":{},"miscellaneous/variables.html":{}}}],["timestampd",{"_index":978,"title":{},"body":{"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["timestring",{"_index":1051,"title":{},"body":{"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["title",{"_index":24,"title":{},"body":{"components/AppComponent.html":{},"components/CardElementComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/SimpleTileViewComponent.html":{},"injectables/TextService.html":{}}}],["titlelabel",{"_index":1797,"title":{},"body":{"components/NavBarElementComponent.html":{}}}],["tobt",{"_index":2315,"title":{},"body":{"injectables/TextService.html":{}}}],["todate",{"_index":2652,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["today",{"_index":1095,"title":{},"body":{"interfaces/ForecastResponse.html":{},"interfaces/GraphDataSet.html":{},"interfaces/IndoorRoomData.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherData.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenData.html":{},"interfaces/PollenResponse.html":{},"interfaces/Tile.html":{},"interfaces/TileArrays.html":{},"injectables/WeatherAPIService.html":{},"interfaces/WeatherData.html":{},"interfaces/WeatherForecastData.html":{},"interfaces/WeatherHistoryByDayData.html":{},"interfaces/WeatherHistoryData.html":{},"miscellaneous/variables.html":{}}}],["todo",{"_index":1144,"title":{},"body":{"interfaces/GraphDataSet.html":{},"interfaces/IndoorRoomData.html":{},"interfaces/OutdoorWeatherData.html":{},"interfaces/PollenData.html":{},"interfaces/PollenType.html":{},"interfaces/Tile.html":{},"interfaces/TileArrays.html":{},"interfaces/UserContext.html":{},"interfaces/UserIdentifikation.html":{},"interfaces/WeatherData.html":{},"interfaces/WeatherForecastData.html":{},"interfaces/WeatherHistoryByDayData.html":{},"interfaces/WeatherHistoryData.html":{}}}],["toggle",{"_index":1207,"title":{},"body":{"components/HistoryDetailViewComponent.html":{}}}],["togglecheckbox",{"_index":679,"title":{},"body":{"components/CheckboxSwitcherElementComponent.html":{}}}],["toggled",{"_index":684,"title":{},"body":{"components/CheckboxSwitcherElementComponent.html":{}}}],["togglepollenvalueat",{"_index":1932,"title":{},"body":{"components/PersonalizationSettingsViewComponent.html":{}}}],["togglepollenvalueat(index",{"_index":1944,"title":{},"body":{"components/PersonalizationSettingsViewComponent.html":{}}}],["token",{"_index":515,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"injectables/LocalStorageService.html":{},"interfaces/LoginResponse.html":{},"interfaces/PollenType.html":{},"interfaces/UserContext.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{},"interfaces/UserIdentifikation.html":{},"miscellaneous/variables.html":{}}}],["tomorrow",{"_index":1097,"title":{},"body":{"interfaces/ForecastResponse.html":{},"interfaces/GraphDataSet.html":{},"interfaces/IndoorRoomData.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherData.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenData.html":{},"interfaces/PollenResponse.html":{},"interfaces/Tile.html":{},"interfaces/TileArrays.html":{},"injectables/WeatherAPIService.html":{},"interfaces/WeatherData.html":{},"interfaces/WeatherForecastData.html":{},"interfaces/WeatherHistoryByDayData.html":{},"interfaces/WeatherHistoryData.html":{},"miscellaneous/variables.html":{}}}],["top",{"_index":175,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DetailScreenComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{},"miscellaneous/variables.html":{}}}],["track",{"_index":2127,"title":{},"body":{"components/ProgressChartElementComponent.html":{},"components/SliderElementComponent.html":{}}}],["traditionellen",{"_index":1259,"title":{},"body":{"components/HistoryDetailViewComponent.html":{}}}],["transform",{"_index":494,"title":{},"body":{"components/CardElementComponent.html":{}}}],["transition",{"_index":79,"title":{},"body":{"components/AppComponent.html":{},"components/CardElementComponent.html":{},"components/MenuElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["transition('dashboard",{"_index":2840,"title":{},"body":{"miscellaneous/variables.html":{}}}],["transition('detail",{"_index":2846,"title":{},"body":{"miscellaneous/variables.html":{}}}],["transition('personalization",{"_index":2847,"title":{},"body":{"miscellaneous/variables.html":{}}}],["translatez(0",{"_index":496,"title":{},"body":{"components/CardElementComponent.html":{}}}],["transmissionfrequency",{"_index":881,"title":{},"body":{"interfaces/ESPConfiguration.html":{},"injectables/ESPConfigurationAPIService.html":{}}}],["transparent",{"_index":2122,"title":{},"body":{"components/ProgressChartElementComponent.html":{},"components/SliderElementComponent.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DetailScreenComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{}}}],["treffen",{"_index":1866,"title":{},"body":{"components/OutdoorWeatherDetailViewComponent.html":{}}}],["trend",{"_index":979,"title":{},"body":{"interfaces/ForecastResponse.html":{},"interfaces/GraphDataSet.html":{},"components/HistoryDetailViewComponent.html":{},"interfaces/IndoorRoomData.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherData.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenData.html":{},"interfaces/PollenResponse.html":{},"injectables/TextService.html":{},"interfaces/Tile.html":{},"interfaces/TileArrays.html":{},"injectables/WeatherAPIService.html":{},"interfaces/WeatherData.html":{},"interfaces/WeatherForecastData.html":{},"interfaces/WeatherHistoryByDayData.html":{},"interfaces/WeatherHistoryData.html":{},"miscellaneous/variables.html":{}}}],["trigger",{"_index":1767,"title":{},"body":{"components/MenuElementComponent.html":{},"injectables/WeatherDataService.html":{}}}],["trigger('triggername",{"_index":2839,"title":{},"body":{"miscellaneous/variables.html":{}}}],["triggerd",{"_index":2018,"title":{},"body":{"interfaces/PollenType.html":{},"interfaces/UserContext.html":{},"interfaces/UserIdentifikation.html":{}}}],["true",{"_index":117,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardScreenComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"injectables/SpeechService.html":{},"components/TtsPlayerElementComponent.html":{},"miscellaneous/variables.html":{}}}],["truth",{"_index":2564,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["tslib",{"_index":2754,"title":{},"body":{"dependencies.html":{}}}],["tts",{"_index":263,"title":{},"body":{"components/AppComponent.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DetailScreenComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{},"modules/UiElementsModule.html":{}}}],["ttsplayerelementcomponent",{"_index":262,"title":{"components/TtsPlayerElementComponent.html":{}},"body":{"components/AppComponent.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DetailScreenComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{},"modules/UiElementsModule.html":{},"coverage.html":{},"overview.html":{}}}],["ttstextgeneratorfunction",{"_index":828,"title":{},"body":{"components/DashboardScreenComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/TtsPlayerElementComponent.html":{}}}],["type",{"_index":46,"title":{},"body":{"components/AppComponent.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CardElementComponent.html":{},"interfaces/CheckTokenResponse.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"interfaces/Credentials.html":{},"components/DashboardScreenComponent.html":{},"components/DetailScreenComponent.html":{},"interfaces/ESPConfiguration.html":{},"injectables/ESPConfigurationAPIService.html":{},"components/ForecastDetailViewComponent.html":{},"interfaces/ForecastResponse.html":{},"components/ForecastTileViewComponent.html":{},"interfaces/GraphDataSet.html":{},"components/HistoryDetailViewComponent.html":{},"injectables/HistoryTileService.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"interfaces/ImageModel.html":{},"injectables/ImageService.html":{},"components/IndoorDetailViewComponent.html":{},"interfaces/IndoorRoomData.html":{},"interfaces/IndoorRoomResponse.html":{},"components/IndoorTileViewComponent.html":{},"injectables/LocalStorageService.html":{},"interfaces/LoginResponse.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"interfaces/OutdoorWeatherData.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"interfaces/OutdoorWeatherResponse.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"interfaces/PollenData.html":{},"components/PollenListElementComponent.html":{},"interfaces/PollenResponse.html":{},"components/PollenTagElementComponent.html":{},"interfaces/PollenType.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"injectables/SpeechService.html":{},"injectables/TextService.html":{},"interfaces/Tile.html":{},"interfaces/TileArrays.html":{},"injectables/TileService.html":{},"components/TtsPlayerElementComponent.html":{},"interfaces/UserContext.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{},"interfaces/UserIdentifikation.html":{},"injectables/WeatherAPIService.html":{},"interfaces/WeatherData.html":{},"injectables/WeatherDataService.html":{},"interfaces/WeatherForecastData.html":{},"interfaces/WeatherHistoryByDayData.html":{},"interfaces/WeatherHistoryData.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["types",{"_index":650,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/LoginResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{}}}],["täglich",{"_index":2081,"title":{},"body":{"components/PollenflugDetailViewComponent.html":{}}}],["uhr",{"_index":1352,"title":{},"body":{"injectables/HistoryTileService.html":{}}}],["ui",{"_index":395,"title":{},"body":{"components/ApparentTemperatureTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"modules/ScreensModule.html":{},"components/SimpleTileViewComponent.html":{},"modules/ViewsModule.html":{}}}],["uielementsmodule",{"_index":284,"title":{"modules/UiElementsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ScreensModule.html":{},"modules/UiElementsModule.html":{},"modules/ViewsModule.html":{},"modules.html":{},"overview.html":{}}}],["um",{"_index":2003,"title":{},"body":{"interfaces/PollenType.html":{},"interfaces/UserContext.html":{},"interfaces/UserIdentifikation.html":{}}}],["umbenennen",{"_index":794,"title":{},"body":{"components/ConfigurationTileViewComponent.html":{}}}],["umgerechnet",{"_index":1257,"title":{},"body":{"components/HistoryDetailViewComponent.html":{}}}],["uncheckedimagedark",{"_index":681,"title":{},"body":{"components/CheckboxSwitcherElementComponent.html":{}}}],["uncheckedimagelight",{"_index":682,"title":{},"body":{"components/CheckboxSwitcherElementComponent.html":{}}}],["und",{"_index":922,"title":{},"body":{"components/ForecastDetailViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"injectables/TextService.html":{}}}],["undefined",{"_index":691,"title":{},"body":{"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"injectables/ImageService.html":{},"components/LoginViewComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/RegistrationViewComponent.html":{},"injectables/TextService.html":{},"injectables/WeatherDataService.html":{}}}],["underline",{"_index":1695,"title":{},"body":{"components/LoginViewComponent.html":{}}}],["understandable",{"_index":1047,"title":{},"body":{"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["unterschiedlich",{"_index":2053,"title":{},"body":{"components/PollenflugDetailViewComponent.html":{}}}],["unterschiedlicher",{"_index":2072,"title":{},"body":{"components/PollenflugDetailViewComponent.html":{}}}],["unterschiedlichster",{"_index":1577,"title":{},"body":{"components/IndoorDetailViewComponent.html":{}}}],["until",{"_index":2612,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["updatechartdata",{"_index":1409,"title":{},"body":{"components/HistoryTileViewComponent.html":{}}}],["updatechartdata(chartdataset",{"_index":1412,"title":{},"body":{"components/HistoryTileViewComponent.html":{}}}],["updateconfiguration",{"_index":765,"title":{},"body":{"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{}}}],["updatet",{"_index":889,"title":{},"body":{"interfaces/ESPConfiguration.html":{},"injectables/ESPConfigurationAPIService.html":{}}}],["upper",{"_index":2138,"title":{},"body":{"components/ProgressChartElementComponent.html":{},"components/SliderElementComponent.html":{}}}],["use",{"_index":527,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/ESPConfiguration.html":{},"injectables/ESPConfigurationAPIService.html":{},"interfaces/ForecastResponse.html":{},"interfaces/GraphDataSet.html":{},"injectables/HistoryTileService.html":{},"injectables/ImageService.html":{},"interfaces/IndoorRoomData.html":{},"interfaces/IndoorRoomResponse.html":{},"injectables/LocalStorageService.html":{},"interfaces/LoginResponse.html":{},"interfaces/OutdoorWeatherData.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenData.html":{},"interfaces/PollenResponse.html":{},"injectables/SpeechService.html":{},"injectables/TextService.html":{},"interfaces/Tile.html":{},"interfaces/TileArrays.html":{},"injectables/TileService.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{},"injectables/WeatherAPIService.html":{},"interfaces/WeatherData.html":{},"injectables/WeatherDataService.html":{},"interfaces/WeatherForecastData.html":{},"interfaces/WeatherHistoryByDayData.html":{},"interfaces/WeatherHistoryData.html":{},"index.html":{}}}],["used",{"_index":2319,"title":{},"body":{"injectables/TileService.html":{}}}],["user",{"_index":524,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/GraphDataSet.html":{},"injectables/ImageService.html":{},"interfaces/IndoorRoomData.html":{},"injectables/LocalStorageService.html":{},"interfaces/LoginResponse.html":{},"interfaces/OutdoorWeatherData.html":{},"components/OutdoorWeatherViewComponent.html":{},"interfaces/PollenData.html":{},"components/ProgressChartElementComponent.html":{},"interfaces/Tile.html":{},"interfaces/TileArrays.html":{},"injectables/TileService.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{},"interfaces/WeatherData.html":{},"injectables/WeatherDataService.html":{},"interfaces/WeatherForecastData.html":{},"interfaces/WeatherHistoryByDayData.html":{},"interfaces/WeatherHistoryData.html":{},"miscellaneous/variables.html":{}}}],["user/currentuser",{"_index":540,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/LoginResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{}}}],["user/loadopenapesettingsandsave",{"_index":550,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/LoginResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{}}}],["user/register",{"_index":536,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/LoginResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{}}}],["user/save",{"_index":542,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/LoginResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{}}}],["user_context_identifier",{"_index":1655,"title":{},"body":{"injectables/LocalStorageService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["user_identifikation",{"_index":1654,"title":{},"body":{"injectables/LocalStorageService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["usercontext",{"_index":26,"title":{"interfaces/UserContext.html":{}},"body":{"components/AppComponent.html":{},"interfaces/CheckTokenResponse.html":{},"components/CheckboxSwitcherElementComponent.html":{},"injectables/ImageService.html":{},"injectables/LocalStorageService.html":{},"interfaces/LoginResponse.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"interfaces/PollenType.html":{},"components/TtsPlayerElementComponent.html":{},"interfaces/UserContext.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{},"interfaces/UserIdentifikation.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["usercontext(object",{"_index":1626,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["usercontext.doventilationreminder",{"_index":615,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/LoginResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{}}}],["usercontext.fontsize",{"_index":611,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/LoginResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{}}}],["usercontext.pollen",{"_index":663,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/LoginResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{}}}],["usercontext.reducemotion",{"_index":617,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/LoginResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{}}}],["usercontext.selfvoicingenabled",{"_index":613,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/LoginResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{}}}],["usercontextapiservice",{"_index":531,"title":{"injectables/UserContextAPIService.html":{}},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/LoginResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{},"coverage.html":{}}}],["usercontextdata",{"_index":1923,"title":{},"body":{"components/PersonalizationSettingsViewComponent.html":{}}}],["usercontextresponse",{"_index":661,"title":{"interfaces/UserContextResponse.html":{}},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/LoginResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{},"coverage.html":{}}}],["usercontextservice",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/DashboardScreenComponent.html":{},"injectables/ImageService.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/RegistrationViewComponent.html":{},"injectables/TileService.html":{},"components/TtsPlayerElementComponent.html":{},"injectables/WeatherDataService.html":{},"coverage.html":{}}}],["usercontexttheme",{"_index":705,"title":{},"body":{"components/CheckboxSwitcherElementComponent.html":{},"injectables/ImageService.html":{}}}],["usercontstringext",{"_index":2192,"title":{},"body":{"injectables/SpeechService.html":{}}}],["userid",{"_index":570,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"injectables/LocalStorageService.html":{},"interfaces/LoginResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{}}}],["userid(value",{"_index":1633,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["userid.id",{"_index":620,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/LoginResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{}}}],["userid.token",{"_index":594,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/LoginResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{}}}],["useridentifikation",{"_index":523,"title":{"interfaces/UserIdentifikation.html":{}},"body":{"interfaces/CheckTokenResponse.html":{},"injectables/LocalStorageService.html":{},"interfaces/LoginResponse.html":{},"interfaces/PollenType.html":{},"interfaces/UserContext.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{},"interfaces/UserIdentifikation.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userloggedin",{"_index":1749,"title":{},"body":{"components/MenuElementComponent.html":{}}}],["username",{"_index":553,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/Credentials.html":{},"interfaces/LoginResponse.html":{},"components/LoginViewComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/RegistrationViewComponent.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{}}}],["username\":\"admin",{"_index":162,"title":{},"body":{"components/AppComponent.html":{}}}],["users",{"_index":2012,"title":{},"body":{"interfaces/PollenType.html":{},"interfaces/UserContext.html":{},"interfaces/UserIdentifikation.html":{}}}],["uses",{"_index":2550,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["using",{"_index":1296,"title":{},"body":{"injectables/HistoryTileService.html":{},"miscellaneous/variables.html":{}}}],["utterthis",{"_index":2193,"title":{},"body":{"injectables/SpeechService.html":{}}}],["utterthis.lang",{"_index":2195,"title":{},"body":{"injectables/SpeechService.html":{}}}],["utterthis.pitch",{"_index":2196,"title":{},"body":{"injectables/SpeechService.html":{}}}],["utterthis.rate",{"_index":2197,"title":{},"body":{"injectables/SpeechService.html":{}}}],["valid",{"_index":636,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/LoginResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{}}}],["validators",{"_index":1666,"title":{},"body":{"components/LoginViewComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/RegistrationViewComponent.html":{}}}],["validators.minlength(2",{"_index":1665,"title":{},"body":{"components/LoginViewComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/RegistrationViewComponent.html":{}}}],["validdate",{"_index":1065,"title":{},"body":{"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["value",{"_index":60,"title":{},"body":{"components/AppComponent.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/DashboardScreenComponent.html":{},"components/DetailScreenComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"injectables/LocalStorageService.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"injectables/TextService.html":{},"components/TtsPlayerElementComponent.html":{},"miscellaneous/variables.html":{}}}],["value(value",{"_index":1982,"title":{},"body":{"components/PollenTagElementComponent.html":{}}}],["valuechanged",{"_index":2166,"title":{},"body":{"components/SliderElementComponent.html":{}}}],["values",{"_index":463,"title":{},"body":{"components/CardElementComponent.html":{}}}],["var",{"_index":159,"title":{},"body":{"components/AppComponent.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DetailScreenComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{}}}],["variable",{"_index":1884,"title":{},"body":{"components/OutdoorWeatherViewComponent.html":{},"coverage.html":{}}}],["variables",{"_index":2803,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["verbunden",{"_index":1582,"title":{},"body":{"components/IndoorDetailViewComponent.html":{},"components/PollenflugDetailViewComponent.html":{}}}],["vereinzelt",{"_index":2309,"title":{},"body":{"injectables/TextService.html":{}}}],["vereinzelten",{"_index":2252,"title":{},"body":{"injectables/TextService.html":{}}}],["verfügung",{"_index":2087,"title":{},"body":{"components/PollenflugDetailViewComponent.html":{}}}],["vergangenen",{"_index":1262,"title":{},"body":{"components/HistoryDetailViewComponent.html":{}}}],["verlaufe",{"_index":2245,"title":{},"body":{"injectables/TextService.html":{}}}],["version",{"_index":2213,"title":{},"body":{"injectables/TextService.html":{},"index.html":{}}}],["versuche",{"_index":582,"title":{},"body":{"interfaces/CheckTokenResponse.html":{},"interfaces/ESPConfiguration.html":{},"injectables/ESPConfigurationAPIService.html":{},"components/ForecastDetailViewComponent.html":{},"interfaces/LoginResponse.html":{},"injectables/UserContextAPIService.html":{},"interfaces/UserContextResponse.html":{}}}],["vertical",{"_index":491,"title":{},"body":{"components/CardElementComponent.html":{}}}],["vestibular",{"_index":2016,"title":{},"body":{"interfaces/PollenType.html":{},"interfaces/UserContext.html":{},"interfaces/UserIdentifikation.html":{}}}],["vielzahl",{"_index":1576,"title":{},"body":{"components/IndoorDetailViewComponent.html":{}}}],["view",{"_index":374,"title":{},"body":{"components/ApparentTemperatureTileViewComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SimpleTileViewComponent.html":{}}}],["view'},{'name",{"_index":189,"title":{},"body":{"components/AppComponent.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DetailScreenComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{}}}],["view.component",{"_index":343,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/HistoryDetailViewComponent.html":{},"modules/ViewsModule.html":{}}}],["view.component.html",{"_index":376,"title":{},"body":{"components/ApparentTemperatureTileViewComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SimpleTileViewComponent.html":{}}}],["view.component.scss",{"_index":375,"title":{},"body":{"components/ApparentTemperatureTileViewComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SimpleTileViewComponent.html":{}}}],["view.component.ts",{"_index":371,"title":{},"body":{"components/ApparentTemperatureTileViewComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SimpleTileViewComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["view.component.ts:10",{"_index":2103,"title":{},"body":{"components/PollenflugTileViewComponent.html":{}}}],["view.component.ts:102",{"_index":1188,"title":{},"body":{"components/HistoryDetailViewComponent.html":{}}}],["view.component.ts:11",{"_index":386,"title":{},"body":{"components/ApparentTemperatureTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/SimpleTileViewComponent.html":{}}}],["view.component.ts:12",{"_index":385,"title":{},"body":{"components/ApparentTemperatureTileViewComponent.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/LoginViewComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SimpleTileViewComponent.html":{}}}],["view.component.ts:13",{"_index":903,"title":{},"body":{"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/SimpleTileViewComponent.html":{}}}],["view.component.ts:14",{"_index":384,"title":{},"body":{"components/ApparentTemperatureTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PollenflugDetailViewComponent.html":{}}}],["view.component.ts:15",{"_index":793,"title":{},"body":{"components/ConfigurationTileViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/SimpleTileViewComponent.html":{}}}],["view.component.ts:16",{"_index":1590,"title":{},"body":{"components/IndoorTileViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenflugTileViewComponent.html":{}}}],["view.component.ts:17",{"_index":790,"title":{},"body":{"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/LoginViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/RegistrationViewComponent.html":{}}}],["view.component.ts:18",{"_index":388,"title":{},"body":{"components/ApparentTemperatureTileViewComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/SimpleTileViewComponent.html":{}}}],["view.component.ts:19",{"_index":383,"title":{},"body":{"components/ApparentTemperatureTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{}}}],["view.component.ts:20",{"_index":791,"title":{},"body":{"components/ConfigurationTileViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PollenflugTileViewComponent.html":{}}}],["view.component.ts:21",{"_index":807,"title":{},"body":{"components/ConfigurationViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PollenflugDetailViewComponent.html":{}}}],["view.component.ts:22",{"_index":904,"title":{},"body":{"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{}}}],["view.component.ts:23",{"_index":387,"title":{},"body":{"components/ApparentTemperatureTileViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/RegistrationViewComponent.html":{}}}],["view.component.ts:25",{"_index":1113,"title":{},"body":{"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{}}}],["view.component.ts:26",{"_index":1663,"title":{},"body":{"components/LoginViewComponent.html":{}}}],["view.component.ts:27",{"_index":2142,"title":{},"body":{"components/RegistrationViewComponent.html":{}}}],["view.component.ts:28",{"_index":1196,"title":{},"body":{"components/HistoryDetailViewComponent.html":{}}}],["view.component.ts:29",{"_index":1416,"title":{},"body":{"components/HistoryTileViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{}}}],["view.component.ts:30",{"_index":1114,"title":{},"body":{"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{}}}],["view.component.ts:31",{"_index":1199,"title":{},"body":{"components/HistoryDetailViewComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{}}}],["view.component.ts:32",{"_index":1185,"title":{},"body":{"components/HistoryDetailViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{}}}],["view.component.ts:34",{"_index":1112,"title":{},"body":{"components/ForecastTileViewComponent.html":{},"components/HistoryTileViewComponent.html":{}}}],["view.component.ts:35",{"_index":792,"title":{},"body":{"components/ConfigurationTileViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{}}}],["view.component.ts:37",{"_index":1193,"title":{},"body":{"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{}}}],["view.component.ts:38",{"_index":1420,"title":{},"body":{"components/HistoryTileViewComponent.html":{}}}],["view.component.ts:41",{"_index":1192,"title":{},"body":{"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{}}}],["view.component.ts:42",{"_index":1419,"title":{},"body":{"components/HistoryTileViewComponent.html":{}}}],["view.component.ts:43",{"_index":1410,"title":{},"body":{"components/HistoryTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{}}}],["view.component.ts:44",{"_index":1942,"title":{},"body":{"components/PersonalizationSettingsViewComponent.html":{}}}],["view.component.ts:47",{"_index":1411,"title":{},"body":{"components/HistoryTileViewComponent.html":{}}}],["view.component.ts:48",{"_index":1195,"title":{},"body":{"components/HistoryDetailViewComponent.html":{},"components/LoginViewComponent.html":{}}}],["view.component.ts:49",{"_index":1415,"title":{},"body":{"components/HistoryTileViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{}}}],["view.component.ts:50",{"_index":1873,"title":{},"body":{"components/OutdoorWeatherViewComponent.html":{}}}],["view.component.ts:51",{"_index":737,"title":{},"body":{"components/ConfigurationTilePopUpDialogView.html":{}}}],["view.component.ts:53",{"_index":1194,"title":{},"body":{"components/HistoryDetailViewComponent.html":{}}}],["view.component.ts:54",{"_index":743,"title":{},"body":{"components/ConfigurationTilePopUpDialogView.html":{},"components/OutdoorWeatherViewComponent.html":{}}}],["view.component.ts:55",{"_index":742,"title":{},"body":{"components/ConfigurationTilePopUpDialogView.html":{}}}],["view.component.ts:57",{"_index":738,"title":{},"body":{"components/ConfigurationTilePopUpDialogView.html":{}}}],["view.component.ts:59",{"_index":1875,"title":{},"body":{"components/OutdoorWeatherViewComponent.html":{}}}],["view.component.ts:60",{"_index":1938,"title":{},"body":{"components/PersonalizationSettingsViewComponent.html":{}}}],["view.component.ts:61",{"_index":739,"title":{},"body":{"components/ConfigurationTilePopUpDialogView.html":{}}}],["view.component.ts:64",{"_index":1941,"title":{},"body":{"components/PersonalizationSettingsViewComponent.html":{}}}],["view.component.ts:69",{"_index":1936,"title":{},"body":{"components/PersonalizationSettingsViewComponent.html":{}}}],["view.component.ts:70",{"_index":1187,"title":{},"body":{"components/HistoryDetailViewComponent.html":{}}}],["view.component.ts:73",{"_index":1934,"title":{},"body":{"components/PersonalizationSettingsViewComponent.html":{}}}],["view.component.ts:76",{"_index":1191,"title":{},"body":{"components/HistoryDetailViewComponent.html":{}}}],["view.component.ts:77",{"_index":1945,"title":{},"body":{"components/PersonalizationSettingsViewComponent.html":{}}}],["view.component.ts:80",{"_index":1874,"title":{},"body":{"components/OutdoorWeatherViewComponent.html":{}}}],["view.component.ts:81",{"_index":1940,"title":{},"body":{"components/PersonalizationSettingsViewComponent.html":{}}}],["view.component.ts:83",{"_index":1186,"title":{},"body":{"components/HistoryDetailViewComponent.html":{}}}],["view.component.ts:89",{"_index":1190,"title":{},"body":{"components/HistoryDetailViewComponent.html":{}}}],["view.component.ts:9",{"_index":1970,"title":{},"body":{"components/PersonalizationViewComponent.html":{}}}],["view.component.ts:96",{"_index":1189,"title":{},"body":{"components/HistoryDetailViewComponent.html":{}}}],["view/apparent",{"_index":370,"title":{},"body":{"components/ApparentTemperatureTileViewComponent.html":{},"modules/ViewsModule.html":{},"coverage.html":{}}}],["view/configuration",{"_index":342,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"modules/ViewsModule.html":{},"coverage.html":{}}}],["view/forecast",{"_index":345,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"modules/ViewsModule.html":{},"coverage.html":{}}}],["view/history",{"_index":347,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"modules/ViewsModule.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["view/humidity",{"_index":1447,"title":{},"body":{"components/HumidityTileViewComponent.html":{},"modules/ViewsModule.html":{},"coverage.html":{}}}],["view/indoor",{"_index":349,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"modules/ViewsModule.html":{},"coverage.html":{}}}],["view/login",{"_index":351,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/LoginViewComponent.html":{},"modules/ViewsModule.html":{},"coverage.html":{}}}],["view/open",{"_index":1800,"title":{},"body":{"components/OpenAPELoginTileViewComponent.html":{},"modules/ViewsModule.html":{},"coverage.html":{}}}],["view/outdoor",{"_index":353,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"modules/ViewsModule.html":{},"coverage.html":{}}}],["view/personalization",{"_index":355,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"modules/ViewsModule.html":{},"coverage.html":{}}}],["view/pollenflug",{"_index":357,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugTileViewComponent.html":{},"modules/ViewsModule.html":{},"coverage.html":{}}}],["view/registration",{"_index":359,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/RegistrationViewComponent.html":{},"modules/ViewsModule.html":{},"coverage.html":{}}}],["view/simple",{"_index":2162,"title":{},"body":{"components/SimpleTileViewComponent.html":{},"modules/ViewsModule.html":{},"coverage.html":{}}}],["views/views.module",{"_index":2157,"title":{},"body":{"modules/ScreensModule.html":{}}}],["viewsmodule",{"_index":285,"title":{"modules/ViewsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ScreensModule.html":{},"modules/ViewsModule.html":{},"modules.html":{},"overview.html":{}}}],["void",{"_index":50,"title":{},"body":{"components/AppComponent.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DetailScreenComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/IndoorTileViewComponent.html":{},"injectables/LocalStorageService.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"injectables/SpeechService.html":{},"injectables/TileService.html":{},"components/TtsPlayerElementComponent.html":{},"injectables/WeatherDataService.html":{}}}],["von",{"_index":148,"title":{},"body":{"components/AppComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/PollenflugDetailViewComponent.html":{}}}],["vorausschauende",{"_index":2078,"title":{},"body":{"components/PollenflugDetailViewComponent.html":{}}}],["voraussetzung",{"_index":1584,"title":{},"body":{"components/IndoorDetailViewComponent.html":{}}}],["vorhersage",{"_index":912,"title":{},"body":{"components/ForecastDetailViewComponent.html":{}}}],["vorherzusagen",{"_index":929,"title":{},"body":{"components/ForecastDetailViewComponent.html":{}}}],["waits",{"_index":2611,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["waren",{"_index":947,"title":{},"body":{"components/ForecastDetailViewComponent.html":{}}}],["wasserdampfgehalt",{"_index":1840,"title":{},"body":{"components/OutdoorWeatherDetailViewComponent.html":{}}}],["way",{"_index":1295,"title":{},"body":{"injectables/HistoryTileService.html":{},"components/PersonalizationSettingsViewComponent.html":{},"injectables/TileService.html":{}}}],["während",{"_index":1261,"title":{},"body":{"components/HistoryDetailViewComponent.html":{}}}],["weahter",{"_index":2545,"title":{},"body":{"injectables/WeatherDataService.html":{}}}],["weahterdataservice",{"_index":1812,"title":{},"body":{"components/OutdoorWeatherDetailViewComponent.html":{}}}],["weahterhistorydata",{"_index":1294,"title":{},"body":{"injectables/HistoryTileService.html":{}}}],["weahther",{"_index":1463,"title":{},"body":{"injectables/ImageService.html":{}}}],["weather",{"_index":235,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/ApparentTemperatureTileViewComponent.html":{},"components/BackButtonElementComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/DetailScreenComponent.html":{},"components/ForecastDetailViewComponent.html":{},"interfaces/ForecastResponse.html":{},"components/ForecastTileViewComponent.html":{},"interfaces/GraphDataSet.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"injectables/ImageService.html":{},"components/IndoorDetailViewComponent.html":{},"interfaces/IndoorRoomData.html":{},"interfaces/IndoorRoomResponse.html":{},"components/IndoorTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OnboardingScreenComponent.html":{},"components/OpenAPELoginTileViewComponent.html":{},"interfaces/OutdoorWeatherData.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"interfaces/OutdoorWeatherResponse.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PersonalizationViewComponent.html":{},"interfaces/PollenData.html":{},"components/PollenListElementComponent.html":{},"interfaces/PollenResponse.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SettingsScreenComponent.html":{},"components/SimpleTileViewComponent.html":{},"components/SliderElementComponent.html":{},"injectables/TextService.html":{},"interfaces/Tile.html":{},"interfaces/TileArrays.html":{},"injectables/TileService.html":{},"components/TtsPlayerElementComponent.html":{},"modules/ViewsModule.html":{},"injectables/WeatherAPIService.html":{},"interfaces/WeatherData.html":{},"injectables/WeatherDataService.html":{},"interfaces/WeatherForecastData.html":{},"interfaces/WeatherHistoryByDayData.html":{},"interfaces/WeatherHistoryData.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["weatherapiservice",{"_index":992,"title":{"injectables/WeatherAPIService.html":{}},"body":{"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/WeatherAPIService.html":{},"injectables/WeatherDataService.html":{},"coverage.html":{}}}],["weatherdata",{"_index":393,"title":{"interfaces/WeatherData.html":{}},"body":{"components/ApparentTemperatureTileViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/ForecastTileViewComponent.html":{},"interfaces/GraphDataSet.html":{},"components/HistoryTileViewComponent.html":{},"components/HumidityTileViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"interfaces/IndoorRoomData.html":{},"components/IndoorTileViewComponent.html":{},"interfaces/OutdoorWeatherData.html":{},"interfaces/PollenData.html":{},"components/PollenflugDetailViewComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/PollenflugTileViewComponent.html":{},"components/SimpleTileViewComponent.html":{},"injectables/TextService.html":{},"interfaces/Tile.html":{},"interfaces/TileArrays.html":{},"injectables/TileService.html":{},"interfaces/WeatherData.html":{},"injectables/WeatherDataService.html":{},"interfaces/WeatherForecastData.html":{},"interfaces/WeatherHistoryByDayData.html":{},"interfaces/WeatherHistoryData.html":{},"coverage.html":{}}}],["weatherdataservice",{"_index":831,"title":{"injectables/WeatherDataService.html":{}},"body":{"components/DashboardScreenComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"injectables/WeatherDataService.html":{},"coverage.html":{}}}],["weatherdescription",{"_index":980,"title":{},"body":{"interfaces/ForecastResponse.html":{},"interfaces/GraphDataSet.html":{},"interfaces/IndoorRoomData.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherData.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenData.html":{},"interfaces/PollenResponse.html":{},"interfaces/Tile.html":{},"interfaces/TileArrays.html":{},"injectables/WeatherAPIService.html":{},"interfaces/WeatherData.html":{},"interfaces/WeatherForecastData.html":{},"interfaces/WeatherHistoryByDayData.html":{},"interfaces/WeatherHistoryData.html":{},"miscellaneous/variables.html":{}}}],["weatherforecastdata",{"_index":905,"title":{"interfaces/WeatherForecastData.html":{}},"body":{"components/ForecastDetailViewComponent.html":{},"interfaces/ForecastResponse.html":{},"components/ForecastTileViewComponent.html":{},"interfaces/GraphDataSet.html":{},"interfaces/IndoorRoomData.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherData.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenData.html":{},"interfaces/PollenResponse.html":{},"injectables/TextService.html":{},"interfaces/Tile.html":{},"interfaces/TileArrays.html":{},"injectables/TileService.html":{},"injectables/WeatherAPIService.html":{},"interfaces/WeatherData.html":{},"injectables/WeatherDataService.html":{},"interfaces/WeatherForecastData.html":{},"interfaces/WeatherHistoryByDayData.html":{},"interfaces/WeatherHistoryData.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["weatherhistory",{"_index":984,"title":{},"body":{"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/WeatherAPIService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["weatherhistorybyday",{"_index":2705,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["weatherhistorybydaydata",{"_index":1163,"title":{"interfaces/WeatherHistoryByDayData.html":{}},"body":{"interfaces/GraphDataSet.html":{},"interfaces/IndoorRoomData.html":{},"interfaces/OutdoorWeatherData.html":{},"interfaces/PollenData.html":{},"interfaces/Tile.html":{},"interfaces/TileArrays.html":{},"interfaces/WeatherData.html":{},"interfaces/WeatherForecastData.html":{},"interfaces/WeatherHistoryByDayData.html":{},"interfaces/WeatherHistoryData.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["weatherhistorydata",{"_index":989,"title":{"interfaces/WeatherHistoryData.html":{}},"body":{"interfaces/ForecastResponse.html":{},"interfaces/GraphDataSet.html":{},"components/HistoryDetailViewComponent.html":{},"injectables/HistoryTileService.html":{},"interfaces/IndoorRoomData.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherData.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenData.html":{},"interfaces/PollenResponse.html":{},"interfaces/Tile.html":{},"interfaces/TileArrays.html":{},"injectables/TileService.html":{},"injectables/WeatherAPIService.html":{},"interfaces/WeatherData.html":{},"injectables/WeatherDataService.html":{},"interfaces/WeatherForecastData.html":{},"interfaces/WeatherHistoryByDayData.html":{},"interfaces/WeatherHistoryData.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["weatherhistorydata.datapoints",{"_index":1312,"title":{},"body":{"injectables/HistoryTileService.html":{}}}],["weatherhistorydata.datapoints.length",{"_index":1311,"title":{},"body":{"injectables/HistoryTileService.html":{}}}],["weathericon",{"_index":981,"title":{},"body":{"interfaces/ForecastResponse.html":{},"interfaces/GraphDataSet.html":{},"interfaces/IndoorRoomData.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherData.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenData.html":{},"interfaces/PollenResponse.html":{},"interfaces/Tile.html":{},"interfaces/TileArrays.html":{},"injectables/WeatherAPIService.html":{},"interfaces/WeatherData.html":{},"interfaces/WeatherForecastData.html":{},"interfaces/WeatherHistoryByDayData.html":{},"interfaces/WeatherHistoryData.html":{},"miscellaneous/variables.html":{}}}],["weatherio",{"_index":1679,"title":{},"body":{"components/LoginViewComponent.html":{}}}],["weathertype",{"_index":1500,"title":{},"body":{"injectables/ImageService.html":{}}}],["webkit",{"_index":493,"title":{},"body":{"components/CardElementComponent.html":{},"components/LoginViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/SliderElementComponent.html":{}}}],["week",{"_index":1231,"title":{},"body":{"components/HistoryDetailViewComponent.html":{},"injectables/HistoryTileService.html":{},"miscellaneous/enumerations.html":{}}}],["weekday",{"_index":1355,"title":{},"body":{"injectables/HistoryTileService.html":{}}}],["weight",{"_index":442,"title":{},"body":{"components/BackButtonElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/IndoorTileViewComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/OutdoorWeatherViewComponent.html":{}}}],["weiter",{"_index":1686,"title":{},"body":{"components/LoginViewComponent.html":{},"components/PollenflugDetailViewComponent.html":{}}}],["wenn",{"_index":105,"title":{},"body":{"components/AppComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/PollenflugDetailViewComponent.html":{}}}],["werden",{"_index":1245,"title":{},"body":{"components/HistoryDetailViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"interfaces/PollenType.html":{},"injectables/TextService.html":{},"interfaces/UserContext.html":{},"interfaces/UserIdentifikation.html":{}}}],["wert",{"_index":1893,"title":{},"body":{"components/OutdoorWeatherViewComponent.html":{}}}],["wetter",{"_index":928,"title":{},"body":{"components/ForecastDetailViewComponent.html":{},"components/HistoryDetailViewComponent.html":{}}}],["wetteraufzeichnung",{"_index":1239,"title":{},"body":{"components/HistoryDetailViewComponent.html":{}}}],["wetterbeobachtung",{"_index":1238,"title":{},"body":{"components/HistoryDetailViewComponent.html":{}}}],["wetterentwicklung",{"_index":917,"title":{},"body":{"components/ForecastDetailViewComponent.html":{}}}],["wettererscheinungen",{"_index":965,"title":{},"body":{"components/ForecastDetailViewComponent.html":{}}}],["wetterradaren",{"_index":1266,"title":{},"body":{"components/HistoryDetailViewComponent.html":{}}}],["wetters",{"_index":2074,"title":{},"body":{"components/PollenflugDetailViewComponent.html":{}}}],["wetterstation",{"_index":66,"title":{},"body":{"components/AppComponent.html":{},"injectables/LocalStorageService.html":{},"miscellaneous/variables.html":{}}}],["wetterstationen",{"_index":1244,"title":{},"body":{"components/HistoryDetailViewComponent.html":{}}}],["wettervorhersage",{"_index":949,"title":{},"body":{"components/ForecastDetailViewComponent.html":{}}}],["wettervorhersagen",{"_index":1820,"title":{},"body":{"components/OutdoorWeatherDetailViewComponent.html":{}}}],["whichever",{"_index":323,"title":{},"body":{"modules/AppModule.html":{}}}],["white",{"_index":779,"title":{},"body":{"components/ConfigurationTilePopUpDialogView.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/PollenTagElementComponent.html":{}}}],["wichtig",{"_index":1313,"title":{},"body":{"injectables/HistoryTileService.html":{}}}],["wichtige",{"_index":1583,"title":{},"body":{"components/IndoorDetailViewComponent.html":{}}}],["width",{"_index":112,"title":{},"body":{"components/AppComponent.html":{},"components/CardElementComponent.html":{},"components/CheckboxSwitcherElementComponent.html":{},"components/ConfigurationTilePopUpDialogView.html":{},"components/ConfigurationTileViewComponent.html":{},"components/DashboardScreenComponent.html":{},"components/ForecastTileViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/HistoryTileViewComponent.html":{},"components/LoginViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/MenuButtonElementComponent.html":{},"components/MenuElementComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PollenListElementComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugSmallTileComponent.html":{},"components/ProgressChartElementComponent.html":{},"components/RegistrationViewComponent.html":{},"components/SliderElementComponent.html":{},"components/TtsPlayerElementComponent.html":{},"miscellaneous/variables.html":{}}}],["wie",{"_index":940,"title":{},"body":{"components/ForecastDetailViewComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"injectables/TextService.html":{}}}],["wieder",{"_index":2008,"title":{},"body":{"interfaces/PollenType.html":{},"interfaces/UserContext.html":{},"interfaces/UserIdentifikation.html":{}}}],["wiederholen",{"_index":2151,"title":{},"body":{"components/RegistrationViewComponent.html":{}}}],["wind",{"_index":1486,"title":{},"body":{"injectables/ImageService.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"injectables/TextService.html":{}}}],["windgeschwindigkeit",{"_index":1851,"title":{},"body":{"components/OutdoorWeatherDetailViewComponent.html":{}}}],["windig",{"_index":2301,"title":{},"body":{"injectables/TextService.html":{}}}],["window.addeventlistener('scroll",{"_index":1888,"title":{},"body":{"components/OutdoorWeatherViewComponent.html":{}}}],["window.location.reload",{"_index":145,"title":{},"body":{"components/AppComponent.html":{}}}],["window.matchmedia(\"(prefers",{"_index":136,"title":{},"body":{"components/AppComponent.html":{}}}],["window.pageyoffset",{"_index":1891,"title":{},"body":{"components/OutdoorWeatherViewComponent.html":{}}}],["window.speechsynthesis",{"_index":2191,"title":{},"body":{"injectables/SpeechService.html":{}}}],["windstille",{"_index":1833,"title":{},"body":{"components/OutdoorWeatherDetailViewComponent.html":{}}}],["winter",{"_index":1845,"title":{},"body":{"components/OutdoorWeatherDetailViewComponent.html":{}}}],["wir",{"_index":95,"title":{},"body":{"components/AppComponent.html":{},"interfaces/ForecastResponse.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["wird",{"_index":971,"title":{},"body":{"components/ForecastDetailViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"injectables/TextService.html":{}}}],["wissenschaftlich",{"_index":1571,"title":{},"body":{"components/IndoorDetailViewComponent.html":{}}}],["without",{"_index":1302,"title":{},"body":{"injectables/HistoryTileService.html":{}}}],["wlan",{"_index":1156,"title":{},"body":{"interfaces/GraphDataSet.html":{},"interfaces/IndoorRoomData.html":{},"interfaces/OutdoorWeatherData.html":{},"interfaces/PollenData.html":{},"interfaces/Tile.html":{},"interfaces/TileArrays.html":{},"interfaces/WeatherData.html":{},"interfaces/WeatherForecastData.html":{},"interfaces/WeatherHistoryByDayData.html":{},"interfaces/WeatherHistoryData.html":{}}}],["woche",{"_index":1233,"title":{},"body":{"components/HistoryDetailViewComponent.html":{}}}],["woher",{"_index":1818,"title":{},"body":{"components/OutdoorWeatherDetailViewComponent.html":{}}}],["wohl",{"_index":814,"title":{},"body":{"components/ConfigurationViewComponent.html":{}}}],["wohlbefinden",{"_index":1560,"title":{},"body":{"components/IndoorDetailViewComponent.html":{}}}],["wohnzimmer",{"_index":2706,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["wohnzimmer2",{"_index":2707,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["wolken",{"_index":2250,"title":{},"body":{"injectables/TextService.html":{}}}],["wolkenlos",{"_index":2246,"title":{},"body":{"injectables/TextService.html":{}}}],["word",{"_index":722,"title":{},"body":{"components/CheckboxSwitcherElementComponent.html":{}}}],["worker",{"_index":307,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["worker.js",{"_index":314,"title":{},"body":{"modules/AppModule.html":{}}}],["worsening",{"_index":1509,"title":{},"body":{"injectables/ImageService.html":{},"injectables/TextService.html":{}}}],["wrap",{"_index":723,"title":{},"body":{"components/CheckboxSwitcherElementComponent.html":{},"components/DashboardScreenComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/MenuBarElementComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"components/PersonalizationSettingsViewComponent.html":{},"components/PollenTagElementComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"components/TtsPlayerElementComponent.html":{}}}],["wurde",{"_index":1260,"title":{},"body":{"components/HistoryDetailViewComponent.html":{}}}],["wärmebalance",{"_index":1865,"title":{},"body":{"components/OutdoorWeatherDetailViewComponent.html":{}}}],["wärmebelastung",{"_index":1858,"title":{},"body":{"components/OutdoorWeatherDetailViewComponent.html":{}}}],["xaxislabel",{"_index":1132,"title":{},"body":{"interfaces/GraphDataSet.html":{},"injectables/HistoryTileService.html":{},"interfaces/IndoorRoomData.html":{},"interfaces/OutdoorWeatherData.html":{},"interfaces/PollenData.html":{},"interfaces/Tile.html":{},"interfaces/TileArrays.html":{},"interfaces/WeatherData.html":{},"interfaces/WeatherForecastData.html":{},"interfaces/WeatherHistoryByDayData.html":{},"interfaces/WeatherHistoryData.html":{}}}],["xaxislabels",{"_index":1323,"title":{},"body":{"injectables/HistoryTileService.html":{}}}],["xaxislabels.push(this.gethourstring(lasthour",{"_index":1347,"title":{},"body":{"injectables/HistoryTileService.html":{}}}],["xaxislabels.push(this.getweekdaystringfromdate(lastdate",{"_index":1333,"title":{},"body":{"injectables/HistoryTileService.html":{}}}],["xaxislabels.reverse",{"_index":1394,"title":{},"body":{"injectables/HistoryTileService.html":{}}}],["year",{"_index":1057,"title":{},"body":{"interfaces/ForecastResponse.html":{},"injectables/HistoryTileService.html":{},"interfaces/IndoorRoomResponse.html":{},"interfaces/OutdoorWeatherResponse.html":{},"interfaces/PollenResponse.html":{},"injectables/WeatherAPIService.html":{}}}],["yearstart",{"_index":1370,"title":{},"body":{"injectables/HistoryTileService.html":{}}}],["yearstart.valueof",{"_index":1373,"title":{},"body":{"injectables/HistoryTileService.html":{}}}],["yellow",{"_index":1989,"title":{},"body":{"components/PollenTagElementComponent.html":{}}}],["yield",{"_index":1991,"title":{},"body":{"components/PollenTagElementComponent.html":{}}}],["z",{"_index":1715,"title":{},"body":{"components/MenuBarElementComponent.html":{},"components/MenuElementComponent.html":{},"components/NavBarElementComponent.html":{},"components/OutdoorWeatherViewComponent.html":{},"miscellaneous/variables.html":{}}}],["zeit",{"_index":956,"title":{},"body":{"components/ForecastDetailViewComponent.html":{},"components/IndoorDetailViewComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"injectables/TextService.html":{}}}],["zeitraum",{"_index":1275,"title":{},"body":{"components/HistoryDetailViewComponent.html":{}}}],["ziel",{"_index":948,"title":{},"body":{"components/ForecastDetailViewComponent.html":{}}}],["zone.js",{"_index":2756,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":286,"title":{},"body":{"modules/AppModule.html":{},"modules/ScreensModule.html":{},"modules/UiElementsModule.html":{},"modules/ViewsModule.html":{},"overview.html":{}}}],["zu",{"_index":102,"title":{},"body":{"components/AppComponent.html":{},"components/ConfigurationViewComponent.html":{},"components/ForecastDetailViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"interfaces/PollenType.html":{},"components/PollenflugDetailViewComponent.html":{},"interfaces/UserContext.html":{},"interfaces/UserIdentifikation.html":{}}}],["zukünftigen",{"_index":916,"title":{},"body":{"components/ForecastDetailViewComponent.html":{}}}],["zunehmend",{"_index":2037,"title":{},"body":{"components/PollenflugDetailViewComponent.html":{}}}],["zunehmender",{"_index":926,"title":{},"body":{"components/ForecastDetailViewComponent.html":{}}}],["zur",{"_index":911,"title":{},"body":{"components/ForecastDetailViewComponent.html":{},"components/HistoryDetailViewComponent.html":{},"components/OutdoorWeatherDetailViewComponent.html":{},"components/PollenflugDetailViewComponent.html":{},"injectables/TextService.html":{}}}],["zurückreichen",{"_index":937,"title":{},"body":{"components/ForecastDetailViewComponent.html":{}}}],["zusammenhang",{"_index":2058,"title":{},"body":{"components/PollenflugDetailViewComponent.html":{}}}],["zusammenhänge",{"_index":1570,"title":{},"body":{"components/IndoorDetailViewComponent.html":{}}}],["zusätzlich",{"_index":1258,"title":{},"body":{"components/HistoryDetailViewComponent.html":{}}}],["zustandes",{"_index":952,"title":{},"body":{"components/ForecastDetailViewComponent.html":{}}}],["zwischen",{"_index":2059,"title":{},"body":{"components/PollenflugDetailViewComponent.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                desktop\n                            \n                            \n                                message\n                            \n                            \n                                ThemeType\n                            \n                            \n                                title\n                            \n                            \n                                    Optional\n                                userContext\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clickedOutdoorWeatherView\n                            \n                            \n                                clickMe\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                prepareRoute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(renderer: Renderer2, userContextService: UserContextService, http: HttpClient, breakpointObserver: BreakpointObserver, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        renderer\n                                                  \n                                                        \n                                                                        Renderer2\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userContextService\n                                                  \n                                                        \n                                                                        UserContextService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        breakpointObserver\n                                                  \n                                                        \n                                                                    BreakpointObserver\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clickedOutdoorWeatherView\n                        \n                        \n                    \n                \n            \n            \n                \nclickedOutdoorWeatherView()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            clickMe\n                        \n                        \n                    \n                \n            \n            \n                \nclickMe()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:96\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            prepareRoute\n                        \n                        \n                    \n                \n            \n            \n                \nprepareRoute(outlet: RouterOutlet)\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    outlet\n                                    \n                                                RouterOutlet\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            desktop\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            message\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : \"\"\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:95\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ThemeType\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : Themes\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'wetterstation'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            userContext\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserContext\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/app.component.ts:19\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Renderer2 } from '@angular/core';\nimport { RouterOutlet } from '@angular/router';\nimport { UserContextService } from './services/user-context.service';\nimport { HttpClient } from \"@angular/common/http\";\nimport { Observable } from 'rxjs';\nimport { routeTransitionAnimations } from './route-transition-animation';\nimport { Themes, UserContext } from './model/user-context';\nimport { Router } from '@angular/router';\nimport { BreakpointObserver, BreakpointState} from '@angular/cdk/layout';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n  animations: [routeTransitionAnimations],\n})\nexport class AppComponent {\n  title = 'wetterstation';\n  userContext?: UserContext\n  ThemeType = Themes;\n  desktop: boolean = false;\n\n  constructor(private renderer: Renderer2,\n              private userContextService: UserContextService,\n              private http: HttpClient,\n              private breakpointObserver: BreakpointObserver,\n              private router: Router) { }\n\n  ngOnInit(): void {\n    this.loadDefaultFontSize();\n    this.loadUserContext();\n    this.listenToThemeChange();  \n    this.desktopBreakpointObserver();\n  }\n\n\n  ngOnChanges(): void {\n    this.loadDefaultFontSize() // Brauchen wir das?\n  }\n\n  prepareRoute(outlet: RouterOutlet) {\n    return outlet && outlet.activatedRouteData && outlet.activatedRouteData['animationState'];\n  }\n\n  clickedOutdoorWeatherView() {\n    this.router.navigateByUrl('/dashboard'); //FIXME: Zu detail screen wenn schon in Dashboard ansicht\n  }\n\n  private desktopBreakpointObserver() {\n    this.breakpointObserver\n    .observe(['(min-width: 770px)'])\n    .subscribe((state: BreakpointState) => {\n      if (state.matches) {\n        this.desktop = true;\n      } else {\n        this.desktop = false;\n      }\n    });\n  }\n\n  private loadDefaultFontSize() {\n    this.userContextService.getUserContextSubject()\n    .subscribe(data => {\n      let fontSize = data.fontSize\n      this.setDefaultFontSize(fontSize);\n      });\n  }\n\n  private loadUserContext() {\n    this.userContextService.refreshUserContextIfNeeded().subscribe();\n    this.userContextService.getUserContextSubject()\n    .subscribe(data => this.userContext = data);\n  }\n\n  private setDefaultFontSize(fontSize: number) {\n    this.renderer.setStyle(document.body, \"font-size\", fontSize + \"%\");  \n  }\n\n  private listenToThemeChange(){\n    const query1 = window.matchMedia(\"(prefers-color-scheme: dark)\")\n    const query2 = window.matchMedia(\"(prefers-color-scheme: ligth)\")\n\n    query1.addEventListener( \"change\", (e) => {\n      window.location.reload();\n    });\n    query2.addEventListener( \"change\", (e) => {\n      window.location.reload();\n    });\n\n    // FIXME: Bug wenn von Explizit Dark Mode auf Autoatic Mode switch -> Reload needed!\n  }\n  \n  //Dummy - delete all below\n  \n  message: string = \"\";\n  clickMe(): void{\n    var schmurx : Observable = this.http.post(\"http://localhost:4201/v1/auth/login\", {\"username\":\"admin\", \"password\":\"admin\"});\n    \n    schmurx.subscribe((res) => {\n      console.log(res);\n      this.message = res[\"message\"]\n    })\n  }\n}\n\n    \n\n    \n        \n  \n    \n  \n  \n  \n  \n  \n\n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                .main-container {\n    min-height: 100vh;\n}\n.container {\n    // padding: var(--border-padding-top) var(--border-padding-right) 0 var(--border-padding-left);\n    background-color: var(--background);\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                '\n    var COMPONENTS = [{'name': 'ApparentTemperatureTileViewComponent', 'selector': 'app-apparent-temperature-tile-view'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BackButtonElementComponent', 'selector': 'app-back-button-element'},{'name': 'CardElementComponent', 'selector': 'card-element'},{'name': 'CheckboxSwitcherElementComponent', 'selector': 'app-checkbox-switcher-element'},{'name': 'ConfigurationTilePopUpDialogView', 'selector': 'configuration-tile-popup-view'},{'name': 'ConfigurationTileViewComponent', 'selector': 'app-configuration-tile-view'},{'name': 'ConfigurationViewComponent', 'selector': 'app-configuration-view'},{'name': 'DashboardScreenComponent', 'selector': 'app-dashboard-screen'},{'name': 'DetailScreenComponent', 'selector': 'app-detail-screen'},{'name': 'ForecastDetailViewComponent', 'selector': 'app-forecast-detail-view'},{'name': 'ForecastTileViewComponent', 'selector': 'app-forecast-tile-view'},{'name': 'HistoryDetailViewComponent', 'selector': 'app-history-detail-view'},{'name': 'HistoryTileViewComponent', 'selector': 'app-history-tile-view'},{'name': 'HumidityTileViewComponent', 'selector': 'app-humidity-tile-view'},{'name': 'IndoorDetailViewComponent', 'selector': 'app-indoor-detail-view'},{'name': 'IndoorTileViewComponent', 'selector': 'app-indoor-tile-view'},{'name': 'LoginViewComponent', 'selector': 'app-login-view'},{'name': 'MenuBarElementComponent', 'selector': 'app-menu-bar-element'},{'name': 'MenuButtonElementComponent', 'selector': 'app-menu-button-element'},{'name': 'MenuElementComponent', 'selector': 'app-menu-element'},{'name': 'NavBarElementComponent', 'selector': 'app-nav-bar-element'},{'name': 'OnboardingScreenComponent', 'selector': 'app-onboarding-screen'},{'name': 'OpenAPELoginTileViewComponent', 'selector': 'app-open-apelogin-tile-view'},{'name': 'OutdoorWeatherDetailViewComponent', 'selector': 'app-outdoor-weather-detail-view'},{'name': 'OutdoorWeatherViewComponent', 'selector': 'app-outdoor-weather-view'},{'name': 'PersonalizationSettingsViewComponent', 'selector': 'app-personalization-settings-view'},{'name': 'PersonalizationViewComponent', 'selector': 'app-personalization-view'},{'name': 'PollenflugDetailViewComponent', 'selector': 'app-pollenflug-detail-view'},{'name': 'PollenflugSmallTileComponent', 'selector': 'app-pollenflug-small-tile'},{'name': 'PollenflugTileViewComponent', 'selector': 'app-pollenflug-tile-view'},{'name': 'PollenListElementComponent', 'selector': 'app-pollen-list-element'},{'name': 'PollenTagElementComponent', 'selector': 'app-pollen-tag-element'},{'name': 'ProgressChartElementComponent', 'selector': 'app-progress-chart-element'},{'name': 'RegistrationViewComponent', 'selector': 'app-registration-view'},{'name': 'SettingsScreenComponent', 'selector': 'app-settings-screen'},{'name': 'SimpleTileViewComponent', 'selector': 'app-simple-tile-view'},{'name': 'SliderElementComponent', 'selector': 'app-slider-element'},{'name': 'TtsPlayerElementComponent', 'selector': 'app-tts-player-element'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nScreensModule\n\nScreensModule\n\nAppModule -->\n\nScreensModule->AppModule\n\n\n\n\n\nUiElementsModule\n\nUiElementsModule\n\nAppModule -->\n\nUiElementsModule->AppModule\n\n\n\n\n\nViewsModule\n\nViewsModule\n\nAppModule -->\n\nViewsModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                            ScreensModule\n                        \n                        \n                            UiElementsModule\n                        \n                        \n                            ViewsModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { HttpClientModule } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { UiElementsModule } from './components/ui-elements/ui-elements.module';\nimport { ScreensModule } from './components/screens/screens.module';\nimport { ViewsModule } from './components/views/views.module';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { ServiceWorkerModule } from '@angular/service-worker';\nimport { environment } from '../environments/environment';\nimport { NgxSpinnerModule } from \"ngx-spinner\";\n\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    UiElementsModule,\n    ScreensModule,\n    ViewsModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    NgxSpinnerModule,\n    ServiceWorkerModule.register('ngsw-worker.js', {\n      enabled: environment.production,\n      // Register the ServiceWorker as soon as the app is stable\n      // or after 30 seconds (whichever comes first).\n      registrationStrategy: 'registerWhenStable:30000'\n    }),\n  ],\n  providers: [\n    \n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { DashboardScreenComponent } from './components/screens/dashboard-screen/dashboard-screen.component';\nimport { DetailScreenComponent } from './components/screens/detail-screen/detail-screen.component';\nimport { OnboardingScreenComponent } from './components/screens/onboarding-screen/onboarding-screen.component';\nimport { SettingsScreenComponent } from './components/screens/settings-screen/settings-screen.component';\nimport { ConfigurationViewComponent } from './components/views/configuration-view/configuration-view.component';\nimport { ForecastDetailViewComponent } from './components/views/forecast-detail-view/forecast-detail-view.component';\nimport { HistoryDetailViewComponent } from './components/views/history-detail-view/history-detail-view.component';\nimport { IndoorDetailViewComponent } from './components/views/indoor-detail-view/indoor-detail-view.component';\nimport { LoginViewComponent } from './components/views/login-view/login-view.component';\nimport { OutdoorWeatherDetailViewComponent } from './components/views/outdoor-weather-detail-view/outdoor-weather-detail-view.component';\nimport { PersonalizationSettingsViewComponent } from './components/views/personalization-settings-view/personalization-settings-view.component';\nimport { PersonalizationViewComponent } from './components/views/personalization-view/personalization-view.component';\nimport { PollenflugDetailViewComponent } from './components/views/pollenflug-detail-view/pollenflug-detail-view.component';\nimport { RegistrationViewComponent } from './components/views/registration-view/registration-view.component';\n\nconst routes: Routes = [\n  { path: 'dashboard', \n    component: DashboardScreenComponent, \n    data: { animationState: 'Dashboard' }\n  },\n  { path: 'detail', \n    component: DetailScreenComponent,  \n    children: [\n      {\n        path: 'indoorrooms',\n        component: IndoorDetailViewComponent, \n      },\n      {\n        path: 'forecast',\n        component: ForecastDetailViewComponent, \n      },\n      {\n        path: 'pollen',\n        component: PollenflugDetailViewComponent, \n      },\n      {\n        path: 'history',\n        component: HistoryDetailViewComponent, \n      },\n      {\n        path: 'outdoor',\n        component: OutdoorWeatherDetailViewComponent, \n      },\n    ], \n    data: { animationState: 'Detail' }\n  },\n  { path: 'settings', \n    component: SettingsScreenComponent, \n    children: [\n      {\n        path: 'configuration',\n        component: ConfigurationViewComponent, \n      },\n      {\n        path: 'personalization',\n        component: PersonalizationViewComponent, \n      },\n    ], \n    data: { animationState: 'Detail' }\n  },\n  { path: 'onboarding', \n    component: OnboardingScreenComponent, \n    children: [\n      {\n        path: 'login',\n        component: LoginViewComponent, \n        data: { animationState: 'Login' }\n      },\n      {\n        path: 'registration',\n        component: RegistrationViewComponent, \n        data: { animationState: 'Registration' }\n      },\n      {\n        path: 'personalization',\n        component: PersonalizationViewComponent, \n        data: { animationState: 'Personalization' }\n      },\n    ], \n    data: { animationState: 'Detail' }\n  },\n  { path: '', redirectTo: '/dashboard', pathMatch: 'full' },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, \n    { scrollPositionRestoration: 'top' }\n    )],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ApparentTemperatureTileViewComponent.html":{"url":"components/ApparentTemperatureTileViewComponent.html","title":"component - ApparentTemperatureTileViewComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ApparentTemperatureTileViewComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/views/apparent-temperature-tile-view/apparent-temperature-tile-view.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-apparent-temperature-tile-view\n            \n\n            \n                styleUrls\n                ./apparent-temperature-tile-view.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./apparent-temperature-tile-view.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                _apparentTemperature\n                            \n                            \n                                cardSizeType\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                hideSubtitle\n                            \n                            \n                                pressable\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    data\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/views/apparent-temperature-tile-view/apparent-temperature-tile-view.component.ts:19\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        data\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/views/apparent-temperature-tile-view/apparent-temperature-tile-view.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        hideSubtitle\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/views/apparent-temperature-tile-view/apparent-temperature-tile-view.component.ts:12\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        pressable\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/views/apparent-temperature-tile-view/apparent-temperature-tile-view.component.ts:11\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/views/apparent-temperature-tile-view/apparent-temperature-tile-view.component.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            _apparentTemperature\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/views/apparent-temperature-tile-view/apparent-temperature-tile-view.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cardSizeType\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : CardSize\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/views/apparent-temperature-tile-view/apparent-temperature-tile-view.component.ts:19\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        data\n                    \n                \n\n\n                \n                    \n                        setdata(data)\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/views/apparent-temperature-tile-view/apparent-temperature-tile-view.component.ts:14\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            data\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { OutdoorWeatherData, WeatherData } from 'src/app/model/weather';\nimport { CardSize } from '../../ui-elements/card-element/card-element.component';\n\n@Component({\n  selector: 'app-apparent-temperature-tile-view',\n  templateUrl: './apparent-temperature-tile-view.component.html',\n  styleUrls: ['./apparent-temperature-tile-view.component.scss']\n})\nexport class ApparentTemperatureTileViewComponent implements OnInit {\n  @Input() pressable: boolean = false;\n  @Input() hideSubtitle = false;\n  @Input()\n  set data(data: WeatherData) {\n    let outdoorWeatherData = data as OutdoorWeatherData\n    this._apparentTemperature = outdoorWeatherData.apparentTemperature;\n  }\n  _apparentTemperature?: number;\n  cardSizeType = CardSize;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        \n    \n        {{_apparentTemperature}}°  \n    \n\n    \n\n    \n                \n                    ./apparent-temperature-tile-view.component.scss\n                \n                h1 {\n    margin: 0;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{_apparentTemperature}}°      '\n    var COMPONENTS = [{'name': 'ApparentTemperatureTileViewComponent', 'selector': 'app-apparent-temperature-tile-view'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BackButtonElementComponent', 'selector': 'app-back-button-element'},{'name': 'CardElementComponent', 'selector': 'card-element'},{'name': 'CheckboxSwitcherElementComponent', 'selector': 'app-checkbox-switcher-element'},{'name': 'ConfigurationTilePopUpDialogView', 'selector': 'configuration-tile-popup-view'},{'name': 'ConfigurationTileViewComponent', 'selector': 'app-configuration-tile-view'},{'name': 'ConfigurationViewComponent', 'selector': 'app-configuration-view'},{'name': 'DashboardScreenComponent', 'selector': 'app-dashboard-screen'},{'name': 'DetailScreenComponent', 'selector': 'app-detail-screen'},{'name': 'ForecastDetailViewComponent', 'selector': 'app-forecast-detail-view'},{'name': 'ForecastTileViewComponent', 'selector': 'app-forecast-tile-view'},{'name': 'HistoryDetailViewComponent', 'selector': 'app-history-detail-view'},{'name': 'HistoryTileViewComponent', 'selector': 'app-history-tile-view'},{'name': 'HumidityTileViewComponent', 'selector': 'app-humidity-tile-view'},{'name': 'IndoorDetailViewComponent', 'selector': 'app-indoor-detail-view'},{'name': 'IndoorTileViewComponent', 'selector': 'app-indoor-tile-view'},{'name': 'LoginViewComponent', 'selector': 'app-login-view'},{'name': 'MenuBarElementComponent', 'selector': 'app-menu-bar-element'},{'name': 'MenuButtonElementComponent', 'selector': 'app-menu-button-element'},{'name': 'MenuElementComponent', 'selector': 'app-menu-element'},{'name': 'NavBarElementComponent', 'selector': 'app-nav-bar-element'},{'name': 'OnboardingScreenComponent', 'selector': 'app-onboarding-screen'},{'name': 'OpenAPELoginTileViewComponent', 'selector': 'app-open-apelogin-tile-view'},{'name': 'OutdoorWeatherDetailViewComponent', 'selector': 'app-outdoor-weather-detail-view'},{'name': 'OutdoorWeatherViewComponent', 'selector': 'app-outdoor-weather-view'},{'name': 'PersonalizationSettingsViewComponent', 'selector': 'app-personalization-settings-view'},{'name': 'PersonalizationViewComponent', 'selector': 'app-personalization-view'},{'name': 'PollenflugDetailViewComponent', 'selector': 'app-pollenflug-detail-view'},{'name': 'PollenflugSmallTileComponent', 'selector': 'app-pollenflug-small-tile'},{'name': 'PollenflugTileViewComponent', 'selector': 'app-pollenflug-tile-view'},{'name': 'PollenListElementComponent', 'selector': 'app-pollen-list-element'},{'name': 'PollenTagElementComponent', 'selector': 'app-pollen-tag-element'},{'name': 'ProgressChartElementComponent', 'selector': 'app-progress-chart-element'},{'name': 'RegistrationViewComponent', 'selector': 'app-registration-view'},{'name': 'SettingsScreenComponent', 'selector': 'app-settings-screen'},{'name': 'SimpleTileViewComponent', 'selector': 'app-simple-tile-view'},{'name': 'SliderElementComponent', 'selector': 'app-slider-element'},{'name': 'TtsPlayerElementComponent', 'selector': 'app-tts-player-element'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ApparentTemperatureTileViewComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BackButtonElementComponent.html":{"url":"components/BackButtonElementComponent.html","title":"component - BackButtonElementComponent","body":"\n                   \n\n\n\n\n\n  Components\n  BackButtonElementComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/ui-elements/back-button-element/back-button-element.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-back-button-element\n            \n\n            \n                styleUrls\n                ./back-button-element.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./back-button-element.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                backIconModel\n                            \n                            \n                                    Public\n                                imageService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                goBack\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                label\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(location: Location, imageService: ImageService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/ui-elements/back-button-element/back-button-element.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        location\n                                                  \n                                                        \n                                                                        Location\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        imageService\n                                                  \n                                                        \n                                                                        ImageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/ui-elements/back-button-element/back-button-element.component.ts:12\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            goBack\n                        \n                        \n                    \n                \n            \n            \n                \ngoBack()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/ui-elements/back-button-element/back-button-element.component.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/ui-elements/back-button-element/back-button-element.component.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            backIconModel\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ImageModel\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    light: \"back-button.svg\",\n    dark: \"back-button.svg\",\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/ui-elements/back-button-element/back-button-element.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            imageService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ImageService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/ui-elements/back-button-element/back-button-element.component.ts:18\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { Location } from '@angular/common';\nimport { ImageService } from 'src/app/services/image.service';\nimport { ImageModel } from 'src/app/model/image';\n\n@Component({\n  selector: 'app-back-button-element',\n  templateUrl: './back-button-element.component.html',\n  styleUrls: ['./back-button-element.component.scss']\n})\nexport class BackButtonElementComponent implements OnInit {\n  @Input() label?: string;\n  backIconModel: ImageModel = {\n    light: \"back-button.svg\",\n    dark: \"back-button.svg\",\n  }\n  constructor(private location: Location,\n    public imageService: ImageService) { }\n\n  ngOnInit(): void {\n  }\n\n  goBack(): void {\n    this.location.back();\n  }\n\n}\n\n    \n\n    \n        \n    \n    \n        {{label}}\n    \n\n    \n\n    \n                \n                    ./back-button-element.component.scss\n                \n                .back-button {\n    margin: 0;\n    padding: 0;\n    border: none;\n\n    display: flex;\n    align-items: center;\n    justify-content: center;\n}\n\n.back-image {\n    padding-right: 10px;\n    height: 1.7em; \n}\n\n.back-label {\n    font-weight: 700;\n    letter-spacing: 0.05em;\n    color: var(--secondary);\n}\n\nbutton {\n    font-size: 1.0em;\n}\n\n.back-image * {\n    fill: var(--secondary);\n    stroke: var(--secondary);\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                {{label}}    '\n    var COMPONENTS = [{'name': 'ApparentTemperatureTileViewComponent', 'selector': 'app-apparent-temperature-tile-view'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BackButtonElementComponent', 'selector': 'app-back-button-element'},{'name': 'CardElementComponent', 'selector': 'card-element'},{'name': 'CheckboxSwitcherElementComponent', 'selector': 'app-checkbox-switcher-element'},{'name': 'ConfigurationTilePopUpDialogView', 'selector': 'configuration-tile-popup-view'},{'name': 'ConfigurationTileViewComponent', 'selector': 'app-configuration-tile-view'},{'name': 'ConfigurationViewComponent', 'selector': 'app-configuration-view'},{'name': 'DashboardScreenComponent', 'selector': 'app-dashboard-screen'},{'name': 'DetailScreenComponent', 'selector': 'app-detail-screen'},{'name': 'ForecastDetailViewComponent', 'selector': 'app-forecast-detail-view'},{'name': 'ForecastTileViewComponent', 'selector': 'app-forecast-tile-view'},{'name': 'HistoryDetailViewComponent', 'selector': 'app-history-detail-view'},{'name': 'HistoryTileViewComponent', 'selector': 'app-history-tile-view'},{'name': 'HumidityTileViewComponent', 'selector': 'app-humidity-tile-view'},{'name': 'IndoorDetailViewComponent', 'selector': 'app-indoor-detail-view'},{'name': 'IndoorTileViewComponent', 'selector': 'app-indoor-tile-view'},{'name': 'LoginViewComponent', 'selector': 'app-login-view'},{'name': 'MenuBarElementComponent', 'selector': 'app-menu-bar-element'},{'name': 'MenuButtonElementComponent', 'selector': 'app-menu-button-element'},{'name': 'MenuElementComponent', 'selector': 'app-menu-element'},{'name': 'NavBarElementComponent', 'selector': 'app-nav-bar-element'},{'name': 'OnboardingScreenComponent', 'selector': 'app-onboarding-screen'},{'name': 'OpenAPELoginTileViewComponent', 'selector': 'app-open-apelogin-tile-view'},{'name': 'OutdoorWeatherDetailViewComponent', 'selector': 'app-outdoor-weather-detail-view'},{'name': 'OutdoorWeatherViewComponent', 'selector': 'app-outdoor-weather-view'},{'name': 'PersonalizationSettingsViewComponent', 'selector': 'app-personalization-settings-view'},{'name': 'PersonalizationViewComponent', 'selector': 'app-personalization-view'},{'name': 'PollenflugDetailViewComponent', 'selector': 'app-pollenflug-detail-view'},{'name': 'PollenflugSmallTileComponent', 'selector': 'app-pollenflug-small-tile'},{'name': 'PollenflugTileViewComponent', 'selector': 'app-pollenflug-tile-view'},{'name': 'PollenListElementComponent', 'selector': 'app-pollen-list-element'},{'name': 'PollenTagElementComponent', 'selector': 'app-pollen-tag-element'},{'name': 'ProgressChartElementComponent', 'selector': 'app-progress-chart-element'},{'name': 'RegistrationViewComponent', 'selector': 'app-registration-view'},{'name': 'SettingsScreenComponent', 'selector': 'app-settings-screen'},{'name': 'SimpleTileViewComponent', 'selector': 'app-simple-tile-view'},{'name': 'SliderElementComponent', 'selector': 'app-slider-element'},{'name': 'TtsPlayerElementComponent', 'selector': 'app-tts-player-element'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'BackButtonElementComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CardElementComponent.html":{"url":"components/CardElementComponent.html","title":"component - CardElementComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CardElementComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/ui-elements/card-element/card-element.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                card-element\n            \n\n            \n                styleUrls\n                ./card-element.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./card-element.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                CardSize\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                cardSize\n                            \n                            \n                                hideSubtitle\n                            \n                            \n                                pressable\n                            \n                            \n                                subtitle\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/ui-elements/card-element/card-element.component.ts:14\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        cardSize\n                    \n                \n                \n                    \n                        Type :         CardSize\n\n                    \n                \n                \n                    \n                        Default value : CardSize.auto\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/ui-elements/card-element/card-element.component.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        hideSubtitle\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/ui-elements/card-element/card-element.component.ts:12\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        pressable\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/ui-elements/card-element/card-element.component.ts:11\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        subtitle\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/ui-elements/card-element/card-element.component.ts:10\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        title\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/ui-elements/card-element/card-element.component.ts:9\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/ui-elements/card-element/card-element.component.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            CardSize\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : CardSize\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/ui-elements/card-element/card-element.component.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'card-element',\n  templateUrl: './card-element.component.html',\n  styleUrls: ['./card-element.component.scss']\n})\nexport class CardElementComponent implements OnInit {\n  @Input() title?: string;\n  @Input() subtitle?: string;\n  @Input() pressable: boolean = false;\n  @Input() hideSubtitle: boolean = false;\n  @Input() cardSize: CardSize = CardSize.auto\n  CardSize = CardSize; // Enum\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n// FIXME: needs a place to live\nexport enum CardSize {\n  small, // Sets the size of the card to fixed small values\n  auto // Card grows on his own behalf\n}\n\n    \n\n    \n        \n    \n        {{subtitle}}\n        {{title}}\n        \n    \n\n    \n\n    \n                \n                    ./card-element.component.scss\n                \n                .container {\n    border-radius: var(--corner-radius);\n    background-color: var(--surface);\n    padding: var(--padding);\n    margin: var(--padding) 0 0 0;\n    width: auto;\n    height: auto;\n    border: 1px solid var(--border);\n}\n\n.flex-child-container {\n    width: calc((100vw - var(--border-padding-left) - var(--border-padding-right)));\n}\n\n.flex-child-container.small {\n    width: calc(((100vw) - var(--border-padding-left) - var(--border-padding-right)) / 2 - var(--padding) / 2);\n}\n\n// CSS for big screens\n@media (min-width: 1000px) {\n    .flex-child-container {\n        width: calc((100vw - var(--border-padding-left) - var(--border-padding-right)) / 2 - var(--padding) / 2);\n    }\n    \n    .flex-child-container.small {\n        width: calc(((100vw) - var(--border-padding-left) - var(--border-padding-right)) / 4 - var(--padding) / 2);\n    }\n}\n\np {\n    color: var(--secondary);\n    letter-spacing: var(--letter-spacing);\n}\n\nh3 {\n    margin-top: calc(var(--padding) / 4);\n    margin-bottom: calc(var(--padding) / 2);\n}\n\n.pressable:active {\n    background-color: var(--pressed);\n}\n\n.shrink-on-hover {\n    vertical-align: middle;\n    -webkit-transform: perspective(1px) translateZ(0);\n    transform: perspective(1px) translateZ(0);\n    box-shadow: 0 0 1px rgba(0, 0, 0, 0);\n    -webkit-transition-duration: 0.3s;\n    transition-duration: 0.3s;\n    -webkit-transition-property: transform;\n    transition-property: transform;\n  }\n.shrink-on-hover:hover, .shrink-on-hover:focus, .shrink-on-hover:active {\n    -webkit-transform: scale(0.97);\n    transform: scale(0.97);\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{subtitle}}        {{title}}            '\n    var COMPONENTS = [{'name': 'ApparentTemperatureTileViewComponent', 'selector': 'app-apparent-temperature-tile-view'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BackButtonElementComponent', 'selector': 'app-back-button-element'},{'name': 'CardElementComponent', 'selector': 'card-element'},{'name': 'CheckboxSwitcherElementComponent', 'selector': 'app-checkbox-switcher-element'},{'name': 'ConfigurationTilePopUpDialogView', 'selector': 'configuration-tile-popup-view'},{'name': 'ConfigurationTileViewComponent', 'selector': 'app-configuration-tile-view'},{'name': 'ConfigurationViewComponent', 'selector': 'app-configuration-view'},{'name': 'DashboardScreenComponent', 'selector': 'app-dashboard-screen'},{'name': 'DetailScreenComponent', 'selector': 'app-detail-screen'},{'name': 'ForecastDetailViewComponent', 'selector': 'app-forecast-detail-view'},{'name': 'ForecastTileViewComponent', 'selector': 'app-forecast-tile-view'},{'name': 'HistoryDetailViewComponent', 'selector': 'app-history-detail-view'},{'name': 'HistoryTileViewComponent', 'selector': 'app-history-tile-view'},{'name': 'HumidityTileViewComponent', 'selector': 'app-humidity-tile-view'},{'name': 'IndoorDetailViewComponent', 'selector': 'app-indoor-detail-view'},{'name': 'IndoorTileViewComponent', 'selector': 'app-indoor-tile-view'},{'name': 'LoginViewComponent', 'selector': 'app-login-view'},{'name': 'MenuBarElementComponent', 'selector': 'app-menu-bar-element'},{'name': 'MenuButtonElementComponent', 'selector': 'app-menu-button-element'},{'name': 'MenuElementComponent', 'selector': 'app-menu-element'},{'name': 'NavBarElementComponent', 'selector': 'app-nav-bar-element'},{'name': 'OnboardingScreenComponent', 'selector': 'app-onboarding-screen'},{'name': 'OpenAPELoginTileViewComponent', 'selector': 'app-open-apelogin-tile-view'},{'name': 'OutdoorWeatherDetailViewComponent', 'selector': 'app-outdoor-weather-detail-view'},{'name': 'OutdoorWeatherViewComponent', 'selector': 'app-outdoor-weather-view'},{'name': 'PersonalizationSettingsViewComponent', 'selector': 'app-personalization-settings-view'},{'name': 'PersonalizationViewComponent', 'selector': 'app-personalization-view'},{'name': 'PollenflugDetailViewComponent', 'selector': 'app-pollenflug-detail-view'},{'name': 'PollenflugSmallTileComponent', 'selector': 'app-pollenflug-small-tile'},{'name': 'PollenflugTileViewComponent', 'selector': 'app-pollenflug-tile-view'},{'name': 'PollenListElementComponent', 'selector': 'app-pollen-list-element'},{'name': 'PollenTagElementComponent', 'selector': 'app-pollen-tag-element'},{'name': 'ProgressChartElementComponent', 'selector': 'app-progress-chart-element'},{'name': 'RegistrationViewComponent', 'selector': 'app-registration-view'},{'name': 'SettingsScreenComponent', 'selector': 'app-settings-screen'},{'name': 'SimpleTileViewComponent', 'selector': 'app-simple-tile-view'},{'name': 'SliderElementComponent', 'selector': 'app-slider-element'},{'name': 'TtsPlayerElementComponent', 'selector': 'app-tts-player-element'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CardElementComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CheckTokenResponse.html":{"url":"interfaces/CheckTokenResponse.html","title":"interface - CheckTokenResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CheckTokenResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/api/user-context-api.service.ts\n        \n\n            \n                Description\n            \n            \n                Model of the check token response\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        message\n                                \n                                \n                                        success\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        success\n                                    \n                                \n                                \n                                    \n                                        success:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { PollenType, Themes, UserContext, UserIdentifikation } from '../../model/user-context';\n\n/**\n * User context api service injectable\n * \n * Use this service to access the network. It implements all routes for \n * user context data\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserContextAPIService {\n  private loginURL = environment.baseURL + 'auth/login';\n  private registerURL = environment.baseURL + 'user/register';\n  private checkTokenURL = environment.baseURL + 'auth/checkToken';\n  private currentUserContextURL = environment.baseURL + 'user/currentUser';\n  private saveUserContextURL = environment.baseURL + 'user/save';\n  private allPollenTypesURL = environment.baseURL + 'pollen/all';\n  private deletePollenURL = environment.baseURL + 'allergies/delete';\n  private savePollenURL = environment.baseURL + 'allergies/save';\n  private openAPEURL = environment.baseURL + 'user/loadOpenAPESettingsAndSave';\n\n  constructor(private httpClient: HttpClient) { }\n\n  /**\n   * @returns an observable with the user identifikation and the user context\n   */\n  public postLogin(password: string, username: string): Observable {\n    let returnObservable = new Observable((observer) => {\n      let response = this.httpClient.post(this.loginURL, \n                                                        {username: username, password: password}, {observe: 'response'});\n      response.subscribe((response) => {\n        let body = response.body\n        let status = response.statusText\n        console.log(status);\n\n        if(body){\n          if(body.success) {\n            console.log(this.createUserContextFromServerResponse(body.userContext));\n            observer.next({\n              userID: {\n                token: body.token,\n                id: body.userContext.id\n              },\n              userContext: this.createUserContextFromServerResponse(body.userContext)\n            });\n          } else {\n            observer.error(body.message);\n          }\n        }\n      },\n      (error)=> {\n        observer.error(\"Ein Fehler ist aufgetreten. Bitte versuche es später erneut. \");\n        console.log(error);\n        observer.complete();\n      },() => {\n        observer.complete();\n      });\n    }\n  );\n  return returnObservable;\n  }\n\n  /**\n   * @returns an observable with an user context object\n   */\n  public postLoginOpenAPE(username: string, password: string, userID: UserIdentifikation): Observable {\n    let returnObservable = new Observable((observer) => {\n      let httpOptions = {\n        headers: new HttpHeaders({ 'Authorization': 'Bearer ' + userID.token }),\n      };\n      let response = this.httpClient.post(this.openAPEURL, \n                                                              {openApeUser: username, openApePassword: password}, httpOptions);\n      response.subscribe((response) => {\n    \n        console.log(response);\n\n        if(response){\n            console.log(this.createUserContextFromServerResponse(response));\n            observer.next(this.createUserContextFromServerResponse(response));\n        }\n      },\n      (error)=> {\n        observer.error(\"Ein Fehler ist aufgetreten. Bitte versuche es später erneut. \");\n        console.log(error);\n        observer.complete();\n      },() => {\n        observer.complete();\n      });\n    }\n  );\n  return returnObservable;\n  }\n\n  /**\n   * @returns an observable with a boolean if the register was successful or not\n   */\n  public postRegister(password: string, username: string): Observable {\n    let returnObservable = new Observable((observer) => {\n      let response = this.httpClient.post(this.registerURL, \n                                                              {username: username, password: password}, {observe: 'response'});\n      response.subscribe((response) => {\n        let body = response.body\n        let status = response.statusText\n        console.log(status);\n\n        if(body){\n          if(body.id) {\n            observer.next(true);\n          } else {\n            observer.error(\"Ein Fehler ist aufgetreten. Bitte versuche es später erneut\");\n          }\n        }\n      },\n      (error)=> {\n        observer.error(\"Ein Fehler ist aufgetreten. Bitte versuche es später erneut\");\n        console.log(error);\n        observer.complete();\n      },\n      () => {\n        observer.complete();\n      });\n    }\n  );\n  return returnObservable;\n  }\n\n  /**\n   * @returns an observable with a boolean if the saving user context was successful or not\n   */\n  public putSaveUserContext(userID: UserIdentifikation, userContext: UserContext): Observable{\n    let body = {\n      theme: Themes[userContext.theme],\n      fontSize: userContext.fontSize,\n      selfVoicingEnabled: userContext.selfVoicingEnabled,\n      doVentilationReminder: userContext.doVentilationReminder,\n      reduceMotion: userContext.reduceMotion\n    }\n    let httpOptions = {\n      headers: new HttpHeaders({ 'Authorization': 'Bearer ' + userID.token }),\n      params: new HttpParams().set('id', userID.id + ''),\n    };\n    let returnObservable = new Observable((observer) => {\n      let response = this.httpClient.put(this.saveUserContextURL, body, httpOptions);\n      response.subscribe((response) => {\n        let body = response\n        if(body && body.id) {\n          observer.next(true);\n        } else {\n          observer.error(\"POST - SAVE USER CONTEXT - Ein Fehler ist aufgetreten.\");\n        }\n      },\n      (error)=> {\n        observer.error(\"POST - SAVE USER CONTEXT - Ein Fehler ist aufgetreten.\");\n        console.log(error);\n        observer.complete();\n      }, \n      () => {\n        observer.complete();\n      });\n      console.log(response);\n\n    });\n    return returnObservable;\n  }\n\n  /**\n   * @returns an observable with a boolean if the deletion user context was successful or not\n   */\n  public deletePolleFromUserContext(userID: UserIdentifikation, pollenID: number): Observable  {\n    let body = {\n      userID: userID.id,\n      pollenID: pollenID\n    }\n    let httpOptions = {\n      headers: new HttpHeaders({ 'Authorization': 'Bearer ' + userID.token }), body: body\n    };\n    let returnObservable = new Observable((observer) => {\n      let response = this.httpClient.delete(this.deletePollenURL, httpOptions);\n      response.subscribe(() => {\n        observer.next(true);\n      },\n      (error) => {\n        observer.error(\"DELETE - Polle\");\n        console.log(error);\n        observer.complete();\n      }, \n      () => {\n        observer.complete();\n      });\n\n    });\n    return returnObservable;\n  }\n\n  /**\n   * @returns an observable with a boolean if the insertion was successful or not\n   */\n  public postPolleToUserContext(userID: UserIdentifikation, pollenID: number): Observable {\n    let body = {\n      userID: userID.id,\n      pollenID: pollenID\n    }\n    let httpOptions = {\n      headers: new HttpHeaders({ 'Authorization': 'Bearer ' + userID.token }),\n    };\n    let returnObservable = new Observable((observer) => {\n      let response = this.httpClient.post(this.savePollenURL, body, httpOptions);\n      response.subscribe(() => {\n        observer.next(true);\n      },\n      (error)=> {\n        observer.error(\"DELETE - Polle\");\n        console.log(error);\n        observer.complete();\n      }, \n      () => {\n        observer.complete();\n      });\n      console.log(response);\n\n    });\n    return returnObservable;\n  }\n  /**\n   * @returns an observable with a boolean if the token is valid or not\n   */\n  public postIsTokenValid(token: string): Observable {\n    let returnObservable = new Observable((observer) => {\n      let httpOptions = {\n        headers: new HttpHeaders({ 'Authorization': 'Bearer ' + token })\n      };\n\n      console.log(httpOptions);\n      let response = this.httpClient.get(this.checkTokenURL, httpOptions);\n      response.subscribe(data => {\n        observer.next(data.success);\n        observer.complete();\n      }, \n      () => {\n        observer.next(false);\n        observer.complete();\n      })\n    });\n    return returnObservable;\n  }\n\n  /**\n   * @returns an observable with an user context object\n   */\n  public loadUserContext(token: string): Observable{\n    let returnObservable = new Observable((observer) => {\n      let httpOptions = {\n        headers: new HttpHeaders({ 'Authorization': 'Bearer ' + token })\n      };\n      let response = this.httpClient.get(this.currentUserContextURL, httpOptions);\n      response.subscribe(context => {\n        console.log(this.createUserContextFromServerResponse(context));\n        observer.next(this.createUserContextFromServerResponse(context));\n        observer.complete();\n      }, \n      () => {\n        observer.error(\"An error occured\")\n        observer.complete();\n      })\n    });\n    return returnObservable;\n  }\n\n  /**\n   * @returns an observable with pollen types array\n   */\n  public loadPollenTypes(): Observable{\n    let returnObservable = new Observable((observer) => {\n      let response = this.httpClient.get(this.allPollenTypesURL);\n      response.subscribe(data => {\n        observer.next(data);\n      });\n    });\n    return returnObservable\n  }\n\n  /**\n   * Helper function to create user context object from server response.\n   * @param userContext \n   * @returns an user context object\n   */\n  private createUserContextFromServerResponse(userContext: UserContextResponse): UserContext {\n    return {\n      theme: this.getThemeTypeFromServerResponse(userContext.theme),\n      fontSize: userContext.fontSize,\n      pollen: userContext.pollen, \n      doVentilationReminder: userContext.doVentilationReminder,\n      reduceMotion: userContext.reduceMotion,\n      selfVoicingEnabled: userContext.selfVoicingEnabled\n    }\n  }\n\n  /**\n   * Helper function to convert theme String to Theme type\n   * @return the converted Theme\n   */\n  private getThemeTypeFromServerResponse(theme: string): Themes {\n    switch(theme) {\n      case \"Dark\": return Themes.Dark;\n      case \"Light\": return Themes.Light;\n      case \"HighContrast\": return Themes.HighContrast;\n      default: return Themes.Automatic;\n    }\n  }\n}\n\n/**\n * Model of the login response\n */\ninterface LoginResponse {\n  success: boolean,\n  message: string,\n  userContext: UserContextResponse,\n  token: string,\n}\n\n/**\n * Model of the user context response\n */\ninterface UserContextResponse {\n  id: number,\n  username: string,\n  theme: string,\n  fontSize: number,\n  selfVoicingEnabled: boolean,\n  doVentilationReminder: boolean,\n  reduceMotion: boolean,\n  pollen: string[]\n}\n\n/**\n * Model of the check token response\n */\ninterface CheckTokenResponse {\n  success: boolean,\n  message: string,\n}\n\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CheckboxSwitcherElementComponent.html":{"url":"components/CheckboxSwitcherElementComponent.html","title":"component - CheckboxSwitcherElementComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CheckboxSwitcherElementComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/ui-elements/checkbox-switcher-element/checkbox-switcher-element.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-checkbox-switcher-element\n            \n\n            \n                styleUrls\n                ./checkbox-switcher-element.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./checkbox-switcher-element.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getCheckedImageSrc\n                            \n                            \n                                getUncheckedImageSrc\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                toggleCheckbox\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                checkedImage\n                            \n                            \n                                label\n                            \n                            \n                                unCheckedImageDark\n                            \n                            \n                                unCheckedImageLight\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                toggled\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userContextService: UserContextService, breakpointObserver: BreakpointObserver)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/ui-elements/checkbox-switcher-element/checkbox-switcher-element.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userContextService\n                                                  \n                                                        \n                                                                        UserContextService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        breakpointObserver\n                                                  \n                                                        \n                                                                    BreakpointObserver\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        checkedImage\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/ui-elements/checkbox-switcher-element/checkbox-switcher-element.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/ui-elements/checkbox-switcher-element/checkbox-switcher-element.component.ts:12\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        unCheckedImageDark\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/ui-elements/checkbox-switcher-element/checkbox-switcher-element.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        unCheckedImageLight\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/ui-elements/checkbox-switcher-element/checkbox-switcher-element.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/ui-elements/checkbox-switcher-element/checkbox-switcher-element.component.ts:13\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        toggled\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/ui-elements/checkbox-switcher-element/checkbox-switcher-element.component.ts:17\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getCheckedImageSrc\n                        \n                        \n                    \n                \n            \n            \n                \ngetCheckedImageSrc()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/ui-elements/checkbox-switcher-element/checkbox-switcher-element.component.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     string | undefined\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getUncheckedImageSrc\n                        \n                        \n                    \n                \n            \n            \n                \ngetUncheckedImageSrc()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/ui-elements/checkbox-switcher-element/checkbox-switcher-element.component.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     string | undefined\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/ui-elements/checkbox-switcher-element/checkbox-switcher-element.component.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toggleCheckbox\n                        \n                        \n                    \n                \n            \n            \n                \ntoggleCheckbox()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/ui-elements/checkbox-switcher-element/checkbox-switcher-element.component.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { BreakpointObserver, BreakpointState } from '@angular/cdk/layout';\nimport { Component, Input, OnInit, Output, EventEmitter } from '@angular/core';\nimport { Themes, UserContext } from 'src/app/model/user-context';\nimport { UserContextService } from 'src/app/services/user-context.service';\n\n@Component({\n  selector: 'app-checkbox-switcher-element',\n  templateUrl: './checkbox-switcher-element.component.html',\n  styleUrls: ['./checkbox-switcher-element.component.scss']\n})\nexport class CheckboxSwitcherElementComponent implements OnInit {\n  @Input() label?: string;\n  @Input() value?: boolean;\n  @Input() checkedImage?: string\n  @Input() unCheckedImageLight?: string;\n  @Input() unCheckedImageDark?: string;\n  @Output() toggled = new EventEmitter();\n  private userContext?: UserContext\n  private systemTheme = Themes.Light\n\n  constructor(private userContextService: UserContextService,               \n    private breakpointObserver: BreakpointObserver,\n    ) { }\n\n  ngOnInit(): void {\n    this.loadUserContext();\n    this.systemThemeBreakpointObserver();\n  }\n\n  toggleCheckbox() {\n    this.toggled.emit(!this.value);\n  }\n  private loadUserContext() {\n    this.userContextService.getUserContextSubject().subscribe(data => this.userContext = data);\n  }\n\n  private systemThemeBreakpointObserver() {\n    this.breakpointObserver\n    .observe(['(prefers-color-scheme: light)'])\n    .subscribe((state: BreakpointState) => {\n      if (state.matches) {\n        this.systemTheme = Themes.Light;\n      } else {\n        this.systemTheme = Themes.Dark;\n      }\n    });\n  }\n\n  getUncheckedImageSrc(): string | undefined {\n    let userContextTheme = this.userContext?.theme\n    if(userContextTheme == Themes.Automatic) {\n      if(this.systemTheme == Themes.Dark) {\n        return this.unCheckedImageDark\n      } else {\n        return this.unCheckedImageLight\n      }\n    } \n    if(userContextTheme == Themes.Dark || userContextTheme == Themes.HighContrast ) {\n      return this.unCheckedImageDark\n    }\n    return this.unCheckedImageLight\n  }\n\n  getCheckedImageSrc(): string | undefined {\n    let userContextTheme = this.userContext?.theme\n    if(userContextTheme == Themes.HighContrast ) {\n      if (this.checkedImage)\n      return this.checkedImage + \"-black\"\n    }\n    return this.checkedImage \n  }\n\n\n}\n\n    \n\n    \n        \n    \n    \n\n    {{this.label}}\n\n    \n\n    \n                \n                    ./checkbox-switcher-element.component.scss\n                \n                .container {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n  margin: var(--padding) 0 0 0;\n\n  border-radius: var(--corner-radius);\n  background-color: var(--surface);\n  height: 12em;\n  width: 10.3em;\n  border: 1px solid var(--border);\n}\n\nspan {\n  color: var(--text);\n  word-wrap: break-word;\n  text-align: center;\n  margin-top: 0.7em;\n  font-weight: 700;\n}\n\n.container.checked {\n  background-color: var(--accent);\n\n  span {\n    color: var(--inverted);\n  }\n}\n\n.icon {\n  height: 2.5em;\n}\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{this.label}}'\n    var COMPONENTS = [{'name': 'ApparentTemperatureTileViewComponent', 'selector': 'app-apparent-temperature-tile-view'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BackButtonElementComponent', 'selector': 'app-back-button-element'},{'name': 'CardElementComponent', 'selector': 'card-element'},{'name': 'CheckboxSwitcherElementComponent', 'selector': 'app-checkbox-switcher-element'},{'name': 'ConfigurationTilePopUpDialogView', 'selector': 'configuration-tile-popup-view'},{'name': 'ConfigurationTileViewComponent', 'selector': 'app-configuration-tile-view'},{'name': 'ConfigurationViewComponent', 'selector': 'app-configuration-view'},{'name': 'DashboardScreenComponent', 'selector': 'app-dashboard-screen'},{'name': 'DetailScreenComponent', 'selector': 'app-detail-screen'},{'name': 'ForecastDetailViewComponent', 'selector': 'app-forecast-detail-view'},{'name': 'ForecastTileViewComponent', 'selector': 'app-forecast-tile-view'},{'name': 'HistoryDetailViewComponent', 'selector': 'app-history-detail-view'},{'name': 'HistoryTileViewComponent', 'selector': 'app-history-tile-view'},{'name': 'HumidityTileViewComponent', 'selector': 'app-humidity-tile-view'},{'name': 'IndoorDetailViewComponent', 'selector': 'app-indoor-detail-view'},{'name': 'IndoorTileViewComponent', 'selector': 'app-indoor-tile-view'},{'name': 'LoginViewComponent', 'selector': 'app-login-view'},{'name': 'MenuBarElementComponent', 'selector': 'app-menu-bar-element'},{'name': 'MenuButtonElementComponent', 'selector': 'app-menu-button-element'},{'name': 'MenuElementComponent', 'selector': 'app-menu-element'},{'name': 'NavBarElementComponent', 'selector': 'app-nav-bar-element'},{'name': 'OnboardingScreenComponent', 'selector': 'app-onboarding-screen'},{'name': 'OpenAPELoginTileViewComponent', 'selector': 'app-open-apelogin-tile-view'},{'name': 'OutdoorWeatherDetailViewComponent', 'selector': 'app-outdoor-weather-detail-view'},{'name': 'OutdoorWeatherViewComponent', 'selector': 'app-outdoor-weather-view'},{'name': 'PersonalizationSettingsViewComponent', 'selector': 'app-personalization-settings-view'},{'name': 'PersonalizationViewComponent', 'selector': 'app-personalization-view'},{'name': 'PollenflugDetailViewComponent', 'selector': 'app-pollenflug-detail-view'},{'name': 'PollenflugSmallTileComponent', 'selector': 'app-pollenflug-small-tile'},{'name': 'PollenflugTileViewComponent', 'selector': 'app-pollenflug-tile-view'},{'name': 'PollenListElementComponent', 'selector': 'app-pollen-list-element'},{'name': 'PollenTagElementComponent', 'selector': 'app-pollen-tag-element'},{'name': 'ProgressChartElementComponent', 'selector': 'app-progress-chart-element'},{'name': 'RegistrationViewComponent', 'selector': 'app-registration-view'},{'name': 'SettingsScreenComponent', 'selector': 'app-settings-screen'},{'name': 'SimpleTileViewComponent', 'selector': 'app-simple-tile-view'},{'name': 'SliderElementComponent', 'selector': 'app-slider-element'},{'name': 'TtsPlayerElementComponent', 'selector': 'app-tts-player-element'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CheckboxSwitcherElementComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ConfigurationTilePopUpDialogView.html":{"url":"components/ConfigurationTilePopUpDialogView.html","title":"component - ConfigurationTilePopUpDialogView","body":"\n                   \n\n\n\n\n\n  Components\n  ConfigurationTilePopUpDialogView\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/views/configuration-tile-view/configuration-tile-view.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                configuration-tile-popup-view\n            \n\n            \n                styleUrls\n                ./configuration-tile-popup-view.component.scss\n            \n\n\n\n            \n                templateUrl\n                configuration-tile-popup-view.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onNoClick\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, data: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/views/configuration-tile-view/configuration-tile-view.component.ts:51\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onNoClick\n                        \n                        \n                    \n                \n            \n            \n                \nonNoClick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/views/configuration-tile-view/configuration-tile-view.component.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSubmit\n                        \n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/views/configuration-tile-view/configuration-tile-view.component.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            data\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Inject(MAT_DIALOG_DATA)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/views/configuration-tile-view/configuration-tile-view.component.ts:55\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialogRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         MatDialogRef\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/views/configuration-tile-view/configuration-tile-view.component.ts:54\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new FormControl('')\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/views/configuration-tile-view/configuration-tile-view.component.ts:51\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Inject, Input, OnInit } from '@angular/core';\nimport { ESPConfiguration, ESPConfigurationAPIService } from 'src/app/services/api/esp-configuration-api.service';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { FormControl } from '@angular/forms'; \n\n@Component({\n  selector: 'app-configuration-tile-view',\n  templateUrl: './configuration-tile-view.component.html',\n  styleUrls: ['./configuration-tile-view.component.scss']\n})\nexport class ConfigurationTileViewComponent implements OnInit {\n  @Input() espConfiguration?: ESPConfiguration\n  \n  constructor(private espConfigurationService: ESPConfigurationAPIService,\n    public dialog: MatDialog) { }\n\n  ngOnInit(): void {\n  }\n\n  openDialog(): void {\n    const dialogRef = this.dialog.open(ConfigurationTilePopUpDialogView, {\n      width: '300px',\n      data: this.espConfiguration?.roomName\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if(this.espConfiguration && result !== undefined && result !== '') {\n        this.espConfiguration.roomName  = result;  \n        console.log(\"re\", result, this.espConfiguration.roomName);\n        this.updateConfiguration();\n      }\n    });\n  }\n\n  updateConfiguration() {\n    if(this.espConfiguration) {\n      this.espConfigurationService.postESPConfiguration(this.espConfiguration).subscribe((data) => {\n        console.log(\"changed data\", data)\n        //FIXME -> console.log entfernen\n      })\n    }\n  }\n}\n\n@Component({\n  selector: 'configuration-tile-popup-view',\n  templateUrl: 'configuration-tile-popup-view.component.html',\n  styleUrls: ['./configuration-tile-popup-view.component.scss']\n})\nexport class ConfigurationTilePopUpDialogView {\n  name = new FormControl('');\n\n  constructor(\n    public dialogRef: MatDialogRef,\n    @Inject(MAT_DIALOG_DATA) public data: string) {}\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  onSubmit(): void {\n    this.dialogRef.close(this.name.value)\n  }\n}\n\n    \n\n    \n        \n    Raumname ändern\n    \n        \n            Raumname\n        \n        \n            \n                \n                Abbrechen\n            \n    \n   \n\n    \n\n    \n                \n                    ./configuration-tile-popup-view.component.scss\n                \n                .container {\n    \n}\n\n.button-container{\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    align-content: space-between;\n  }\n\n.b1, .b2 {\n    border-radius: var(--corner-radius);\n    color: white;\n    padding: calc(var(--padding)/2);\n}\n\n.b2 {\n    margin: 0;\n    background-color: #4480DB;\n}\n\n.b1 {\n    margin-top: 20px;\n}\n\n.input-field{\n    background-color: rgba(0,0,0, .25);\n    outline: none;\n    caret-color: orchid;\n}\n\n \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Raumname ändern                        Raumname                                                            Abbrechen                   '\n    var COMPONENTS = [{'name': 'ApparentTemperatureTileViewComponent', 'selector': 'app-apparent-temperature-tile-view'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BackButtonElementComponent', 'selector': 'app-back-button-element'},{'name': 'CardElementComponent', 'selector': 'card-element'},{'name': 'CheckboxSwitcherElementComponent', 'selector': 'app-checkbox-switcher-element'},{'name': 'ConfigurationTilePopUpDialogView', 'selector': 'configuration-tile-popup-view'},{'name': 'ConfigurationTileViewComponent', 'selector': 'app-configuration-tile-view'},{'name': 'ConfigurationViewComponent', 'selector': 'app-configuration-view'},{'name': 'DashboardScreenComponent', 'selector': 'app-dashboard-screen'},{'name': 'DetailScreenComponent', 'selector': 'app-detail-screen'},{'name': 'ForecastDetailViewComponent', 'selector': 'app-forecast-detail-view'},{'name': 'ForecastTileViewComponent', 'selector': 'app-forecast-tile-view'},{'name': 'HistoryDetailViewComponent', 'selector': 'app-history-detail-view'},{'name': 'HistoryTileViewComponent', 'selector': 'app-history-tile-view'},{'name': 'HumidityTileViewComponent', 'selector': 'app-humidity-tile-view'},{'name': 'IndoorDetailViewComponent', 'selector': 'app-indoor-detail-view'},{'name': 'IndoorTileViewComponent', 'selector': 'app-indoor-tile-view'},{'name': 'LoginViewComponent', 'selector': 'app-login-view'},{'name': 'MenuBarElementComponent', 'selector': 'app-menu-bar-element'},{'name': 'MenuButtonElementComponent', 'selector': 'app-menu-button-element'},{'name': 'MenuElementComponent', 'selector': 'app-menu-element'},{'name': 'NavBarElementComponent', 'selector': 'app-nav-bar-element'},{'name': 'OnboardingScreenComponent', 'selector': 'app-onboarding-screen'},{'name': 'OpenAPELoginTileViewComponent', 'selector': 'app-open-apelogin-tile-view'},{'name': 'OutdoorWeatherDetailViewComponent', 'selector': 'app-outdoor-weather-detail-view'},{'name': 'OutdoorWeatherViewComponent', 'selector': 'app-outdoor-weather-view'},{'name': 'PersonalizationSettingsViewComponent', 'selector': 'app-personalization-settings-view'},{'name': 'PersonalizationViewComponent', 'selector': 'app-personalization-view'},{'name': 'PollenflugDetailViewComponent', 'selector': 'app-pollenflug-detail-view'},{'name': 'PollenflugSmallTileComponent', 'selector': 'app-pollenflug-small-tile'},{'name': 'PollenflugTileViewComponent', 'selector': 'app-pollenflug-tile-view'},{'name': 'PollenListElementComponent', 'selector': 'app-pollen-list-element'},{'name': 'PollenTagElementComponent', 'selector': 'app-pollen-tag-element'},{'name': 'ProgressChartElementComponent', 'selector': 'app-progress-chart-element'},{'name': 'RegistrationViewComponent', 'selector': 'app-registration-view'},{'name': 'SettingsScreenComponent', 'selector': 'app-settings-screen'},{'name': 'SimpleTileViewComponent', 'selector': 'app-simple-tile-view'},{'name': 'SliderElementComponent', 'selector': 'app-slider-element'},{'name': 'TtsPlayerElementComponent', 'selector': 'app-tts-player-element'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ConfigurationTilePopUpDialogView'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ConfigurationTileViewComponent.html":{"url":"components/ConfigurationTileViewComponent.html","title":"component - ConfigurationTileViewComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ConfigurationTileViewComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/views/configuration-tile-view/configuration-tile-view.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-configuration-tile-view\n            \n\n            \n                styleUrls\n                ./configuration-tile-view.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./configuration-tile-view.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dialog\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                openDialog\n                            \n                            \n                                updateConfiguration\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                espConfiguration\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(espConfigurationService: ESPConfigurationAPIService, dialog: MatDialog)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/views/configuration-tile-view/configuration-tile-view.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        espConfigurationService\n                                                  \n                                                        \n                                                                        ESPConfigurationAPIService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        espConfiguration\n                    \n                \n                \n                    \n                        Type :         ESPConfiguration\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/views/configuration-tile-view/configuration-tile-view.component.ts:12\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/views/configuration-tile-view/configuration-tile-view.component.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openDialog\n                        \n                        \n                    \n                \n            \n            \n                \nopenDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/views/configuration-tile-view/configuration-tile-view.component.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateConfiguration\n                        \n                        \n                    \n                \n            \n            \n                \nupdateConfiguration()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/views/configuration-tile-view/configuration-tile-view.component.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            dialog\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MatDialog\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/views/configuration-tile-view/configuration-tile-view.component.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Inject, Input, OnInit } from '@angular/core';\nimport { ESPConfiguration, ESPConfigurationAPIService } from 'src/app/services/api/esp-configuration-api.service';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { FormControl } from '@angular/forms'; \n\n@Component({\n  selector: 'app-configuration-tile-view',\n  templateUrl: './configuration-tile-view.component.html',\n  styleUrls: ['./configuration-tile-view.component.scss']\n})\nexport class ConfigurationTileViewComponent implements OnInit {\n  @Input() espConfiguration?: ESPConfiguration\n  \n  constructor(private espConfigurationService: ESPConfigurationAPIService,\n    public dialog: MatDialog) { }\n\n  ngOnInit(): void {\n  }\n\n  openDialog(): void {\n    const dialogRef = this.dialog.open(ConfigurationTilePopUpDialogView, {\n      width: '300px',\n      data: this.espConfiguration?.roomName\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if(this.espConfiguration && result !== undefined && result !== '') {\n        this.espConfiguration.roomName  = result;  \n        console.log(\"re\", result, this.espConfiguration.roomName);\n        this.updateConfiguration();\n      }\n    });\n  }\n\n  updateConfiguration() {\n    if(this.espConfiguration) {\n      this.espConfigurationService.postESPConfiguration(this.espConfiguration).subscribe((data) => {\n        console.log(\"changed data\", data)\n        //FIXME -> console.log entfernen\n      })\n    }\n  }\n}\n\n@Component({\n  selector: 'configuration-tile-popup-view',\n  templateUrl: 'configuration-tile-popup-view.component.html',\n  styleUrls: ['./configuration-tile-popup-view.component.scss']\n})\nexport class ConfigurationTilePopUpDialogView {\n  name = new FormControl('');\n\n  constructor(\n    public dialogRef: MatDialogRef,\n    @Inject(MAT_DIALOG_DATA) public data: string) {}\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  onSubmit(): void {\n    this.dialogRef.close(this.name.value)\n  }\n}\n\n    \n\n    \n        \n    \n        \n            Umbenennen\n\n            \n                Jede Minute\n                Alle 2 Minuten\n                Alle 5 Minuten\n                Alle 7 Minuten\n                Alle 10 Minuten\n            \n        \n    \n\n\n    \n\n    \n                \n                    ./configuration-tile-view.component.scss\n                \n                .btn {\n    color: var(--text);\n    text-align: start;\n}\n\n.flex-container {\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-start;\n    align-content: flex-start;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        Umbenennen                            Jede Minute                Alle 2 Minuten                Alle 5 Minuten                Alle 7 Minuten                Alle 10 Minuten                        '\n    var COMPONENTS = [{'name': 'ApparentTemperatureTileViewComponent', 'selector': 'app-apparent-temperature-tile-view'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BackButtonElementComponent', 'selector': 'app-back-button-element'},{'name': 'CardElementComponent', 'selector': 'card-element'},{'name': 'CheckboxSwitcherElementComponent', 'selector': 'app-checkbox-switcher-element'},{'name': 'ConfigurationTilePopUpDialogView', 'selector': 'configuration-tile-popup-view'},{'name': 'ConfigurationTileViewComponent', 'selector': 'app-configuration-tile-view'},{'name': 'ConfigurationViewComponent', 'selector': 'app-configuration-view'},{'name': 'DashboardScreenComponent', 'selector': 'app-dashboard-screen'},{'name': 'DetailScreenComponent', 'selector': 'app-detail-screen'},{'name': 'ForecastDetailViewComponent', 'selector': 'app-forecast-detail-view'},{'name': 'ForecastTileViewComponent', 'selector': 'app-forecast-tile-view'},{'name': 'HistoryDetailViewComponent', 'selector': 'app-history-detail-view'},{'name': 'HistoryTileViewComponent', 'selector': 'app-history-tile-view'},{'name': 'HumidityTileViewComponent', 'selector': 'app-humidity-tile-view'},{'name': 'IndoorDetailViewComponent', 'selector': 'app-indoor-detail-view'},{'name': 'IndoorTileViewComponent', 'selector': 'app-indoor-tile-view'},{'name': 'LoginViewComponent', 'selector': 'app-login-view'},{'name': 'MenuBarElementComponent', 'selector': 'app-menu-bar-element'},{'name': 'MenuButtonElementComponent', 'selector': 'app-menu-button-element'},{'name': 'MenuElementComponent', 'selector': 'app-menu-element'},{'name': 'NavBarElementComponent', 'selector': 'app-nav-bar-element'},{'name': 'OnboardingScreenComponent', 'selector': 'app-onboarding-screen'},{'name': 'OpenAPELoginTileViewComponent', 'selector': 'app-open-apelogin-tile-view'},{'name': 'OutdoorWeatherDetailViewComponent', 'selector': 'app-outdoor-weather-detail-view'},{'name': 'OutdoorWeatherViewComponent', 'selector': 'app-outdoor-weather-view'},{'name': 'PersonalizationSettingsViewComponent', 'selector': 'app-personalization-settings-view'},{'name': 'PersonalizationViewComponent', 'selector': 'app-personalization-view'},{'name': 'PollenflugDetailViewComponent', 'selector': 'app-pollenflug-detail-view'},{'name': 'PollenflugSmallTileComponent', 'selector': 'app-pollenflug-small-tile'},{'name': 'PollenflugTileViewComponent', 'selector': 'app-pollenflug-tile-view'},{'name': 'PollenListElementComponent', 'selector': 'app-pollen-list-element'},{'name': 'PollenTagElementComponent', 'selector': 'app-pollen-tag-element'},{'name': 'ProgressChartElementComponent', 'selector': 'app-progress-chart-element'},{'name': 'RegistrationViewComponent', 'selector': 'app-registration-view'},{'name': 'SettingsScreenComponent', 'selector': 'app-settings-screen'},{'name': 'SimpleTileViewComponent', 'selector': 'app-simple-tile-view'},{'name': 'SliderElementComponent', 'selector': 'app-slider-element'},{'name': 'TtsPlayerElementComponent', 'selector': 'app-tts-player-element'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ConfigurationTileViewComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ConfigurationViewComponent.html":{"url":"components/ConfigurationViewComponent.html","title":"component - ConfigurationViewComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ConfigurationViewComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/views/configuration-view/configuration-view.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-configuration-view\n            \n\n            \n                styleUrls\n                ./configuration-view.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./configuration-view.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                espConfigurations\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                loadConfigurations\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(espConfigurationService: ESPConfigurationAPIService, spinner: NgxSpinnerService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/views/configuration-view/configuration-view.component.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        espConfigurationService\n                                                  \n                                                        \n                                                                        ESPConfigurationAPIService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        spinner\n                                                  \n                                                        \n                                                                    NgxSpinnerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadConfigurations\n                        \n                        \n                    \n                \n            \n            \n                \nloadConfigurations()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/views/configuration-view/configuration-view.component.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/views/configuration-view/configuration-view.component.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            espConfigurations\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ESPConfiguration[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/views/configuration-view/configuration-view.component.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { ESPConfiguration, ESPConfigurationAPIService } from 'src/app/services/api/esp-configuration-api.service';\n\n@Component({\n  selector: 'app-configuration-view',\n  templateUrl: './configuration-view.component.html',\n  styleUrls: ['./configuration-view.component.scss']\n})\nexport class ConfigurationViewComponent implements OnInit {\n  espConfigurations?: ESPConfiguration[]\n\n  constructor(\n    private espConfigurationService: ESPConfigurationAPIService,\n    private spinner: NgxSpinnerService) { }\n\n  ngOnInit(): void {\n    this.loadConfigurations();\n  }\n\n  loadConfigurations() {\n    this.spinner.show()\n    this.espConfigurationService.loadESPConfigs().subscribe((data) => {\n      this.espConfigurations = data;\n      this.spinner.hide()\n    })\n  }\n\n}\n\n    \n\n    \n        \n    \n       \n         \n            \n                \n            \n            \n                Es scheint wohl nichts zu konfigurieren zu geben... :( \n            \n        \n    \n\n\n\n\n    \n\n    \n                \n                    ./configuration-view.component.scss\n                \n                .container {\n    padding-top: var(--navbar-height);\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                        Es scheint wohl nichts zu konfigurieren zu geben... :(                         '\n    var COMPONENTS = [{'name': 'ApparentTemperatureTileViewComponent', 'selector': 'app-apparent-temperature-tile-view'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BackButtonElementComponent', 'selector': 'app-back-button-element'},{'name': 'CardElementComponent', 'selector': 'card-element'},{'name': 'CheckboxSwitcherElementComponent', 'selector': 'app-checkbox-switcher-element'},{'name': 'ConfigurationTilePopUpDialogView', 'selector': 'configuration-tile-popup-view'},{'name': 'ConfigurationTileViewComponent', 'selector': 'app-configuration-tile-view'},{'name': 'ConfigurationViewComponent', 'selector': 'app-configuration-view'},{'name': 'DashboardScreenComponent', 'selector': 'app-dashboard-screen'},{'name': 'DetailScreenComponent', 'selector': 'app-detail-screen'},{'name': 'ForecastDetailViewComponent', 'selector': 'app-forecast-detail-view'},{'name': 'ForecastTileViewComponent', 'selector': 'app-forecast-tile-view'},{'name': 'HistoryDetailViewComponent', 'selector': 'app-history-detail-view'},{'name': 'HistoryTileViewComponent', 'selector': 'app-history-tile-view'},{'name': 'HumidityTileViewComponent', 'selector': 'app-humidity-tile-view'},{'name': 'IndoorDetailViewComponent', 'selector': 'app-indoor-detail-view'},{'name': 'IndoorTileViewComponent', 'selector': 'app-indoor-tile-view'},{'name': 'LoginViewComponent', 'selector': 'app-login-view'},{'name': 'MenuBarElementComponent', 'selector': 'app-menu-bar-element'},{'name': 'MenuButtonElementComponent', 'selector': 'app-menu-button-element'},{'name': 'MenuElementComponent', 'selector': 'app-menu-element'},{'name': 'NavBarElementComponent', 'selector': 'app-nav-bar-element'},{'name': 'OnboardingScreenComponent', 'selector': 'app-onboarding-screen'},{'name': 'OpenAPELoginTileViewComponent', 'selector': 'app-open-apelogin-tile-view'},{'name': 'OutdoorWeatherDetailViewComponent', 'selector': 'app-outdoor-weather-detail-view'},{'name': 'OutdoorWeatherViewComponent', 'selector': 'app-outdoor-weather-view'},{'name': 'PersonalizationSettingsViewComponent', 'selector': 'app-personalization-settings-view'},{'name': 'PersonalizationViewComponent', 'selector': 'app-personalization-view'},{'name': 'PollenflugDetailViewComponent', 'selector': 'app-pollenflug-detail-view'},{'name': 'PollenflugSmallTileComponent', 'selector': 'app-pollenflug-small-tile'},{'name': 'PollenflugTileViewComponent', 'selector': 'app-pollenflug-tile-view'},{'name': 'PollenListElementComponent', 'selector': 'app-pollen-list-element'},{'name': 'PollenTagElementComponent', 'selector': 'app-pollen-tag-element'},{'name': 'ProgressChartElementComponent', 'selector': 'app-progress-chart-element'},{'name': 'RegistrationViewComponent', 'selector': 'app-registration-view'},{'name': 'SettingsScreenComponent', 'selector': 'app-settings-screen'},{'name': 'SimpleTileViewComponent', 'selector': 'app-simple-tile-view'},{'name': 'SliderElementComponent', 'selector': 'app-slider-element'},{'name': 'TtsPlayerElementComponent', 'selector': 'app-tts-player-element'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ConfigurationViewComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Credentials.html":{"url":"interfaces/Credentials.html","title":"interface - Credentials","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Credentials\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/credentials.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        password\n                                \n                                \n                                        username\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Credentials {\n    username: string,\n    password: string\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DashboardScreenComponent.html":{"url":"components/DashboardScreenComponent.html","title":"component - DashboardScreenComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DashboardScreenComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/screens/dashboard-screen/dashboard-screen.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-dashboard-screen\n            \n\n            \n                styleUrls\n                ./dashboard-screen.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./dashboard-screen.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                dashboardTiles\n                            \n                            \n                                desktop\n                            \n                            \n                                    Optional\n                                outdoorData\n                            \n                            \n                                reduceMotion\n                            \n                            \n                                tileType\n                            \n                            \n                                ttsTextGeneratorFunction\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                loadData\n                            \n                            \n                                loadReduceMotionValue\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userContextService: UserContextService, weatherDataService: WeatherDataService, breakpointObserver: BreakpointObserver, textService: TextService, spinner: NgxSpinnerService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/screens/dashboard-screen/dashboard-screen.component.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userContextService\n                                                  \n                                                        \n                                                                        UserContextService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        weatherDataService\n                                                  \n                                                        \n                                                                        WeatherDataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        breakpointObserver\n                                                  \n                                                        \n                                                                    BreakpointObserver\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        textService\n                                                  \n                                                        \n                                                                        TextService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        spinner\n                                                  \n                                                        \n                                                                    NgxSpinnerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadData\n                        \n                        \n                    \n                \n            \n            \n                \nloadData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/screens/dashboard-screen/dashboard-screen.component.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadReduceMotionValue\n                        \n                        \n                    \n                \n            \n            \n                \nloadReduceMotionValue()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/screens/dashboard-screen/dashboard-screen.component.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/screens/dashboard-screen/dashboard-screen.component.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            dashboardTiles\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Tile[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/screens/dashboard-screen/dashboard-screen.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            desktop\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/screens/dashboard-screen/dashboard-screen.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            outdoorData\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         OutdoorWeatherData\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/screens/dashboard-screen/dashboard-screen.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            reduceMotion\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/screens/dashboard-screen/dashboard-screen.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tileType\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : TileType\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/screens/dashboard-screen/dashboard-screen.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ttsTextGeneratorFunction\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/screens/dashboard-screen/dashboard-screen.component.ts:21\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { OutdoorWeatherData, Tile, TileType, WeatherData } from 'src/app/model/weather';\nimport { UserContextService } from 'src/app/services/user-context.service';\nimport { BreakpointObserver, BreakpointState } from '@angular/cdk/layout';\nimport { WeatherDataService } from 'src/app/services/weather-data.service';\nimport { TextService } from 'src/app/services/text.service';\nimport { NgxSpinnerService } from 'ngx-spinner';\n\n\n@Component({\n  selector: 'app-dashboard-screen',\n  templateUrl: './dashboard-screen.component.html',\n  styleUrls: ['./dashboard-screen.component.scss']\n})\nexport class DashboardScreenComponent implements OnInit {\n  reduceMotion: boolean = false;\n  dashboardTiles?: Tile[];\n  outdoorData?: OutdoorWeatherData;\n  tileType = TileType;\n  desktop: boolean = false;\n  ttsTextGeneratorFunction = () => {\n    let tilesText = this.textService.createTextFromTilesArray(this.dashboardTiles);\n    let outdoorText = this.textService.createOutdoorText(this.outdoorData);\n    return outdoorText + tilesText;\n  }\n\n  constructor(private userContextService: UserContextService,\n    private weatherDataService: WeatherDataService,\n    private breakpointObserver: BreakpointObserver,\n    private textService: TextService,\n    private spinner: NgxSpinnerService) { }\n\n  ngOnInit(): void {\n    this.loadReduceMotionValue();\n    this.loadData();\n    this.desktopBreakpointObserver(); \n  }\n\n  private desktopBreakpointObserver() {\n    this.breakpointObserver\n    .observe(['(min-width: 770px)'])\n    .subscribe((state: BreakpointState) => {\n      if (state.matches) {\n        this.desktop = true;\n      } else {\n        this.desktop = false;\n      }\n    });\n  }\n\n  loadReduceMotionValue() {\n    this.userContextService.getUserContextSubject()\n    .subscribe(data => {\n      let reduceMotionValue = data.reduceMotion;\n      this.reduceMotion = reduceMotionValue;\n    });\n  }\n\n  loadData(): void {\n    this.spinner.show()\n    this.weatherDataService.getDashboardTilesSubject()\n                      .subscribe(data => {\n                        this.dashboardTiles = data\n                        console.log(\"hide it\")\n                        if (data.length > 0) {\n                          console.log(\"hide it\")\n                          this.spinner.hide();\n                        }\n                      });\n    this.weatherDataService.getOutdoorWeatherDataSubject()\n                        .subscribe(data => {\n                          this.outdoorData = data});\n  }\n}\n\n    \n\n    \n        \n    \n    \n    \n        \n            \n            \n                \n         \n            \n                \n                    \n                    \n                \n                \n                    \n                    \n                \n                \n                    \n                    \n                \n                \n                    \n                    \n                    \n                    \n                \n                \n                    \n                    \n                    \n                    \n                \n                {{tileType[item.type]}} is not implemented yet\n            \n        \n    \n    \n\n    \n\n    \n                \n                    ./dashboard-screen.component.scss\n                \n                .card-container {\n    padding-top: calc(var(--dashboard-outdoor-weather-size) + var(--navbar-height) + var(--padding));\n    left: 0;\n    right: 0;\n}\n\n.flex-container {\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: space-between;\n    // align-items: stretch;\n}\n\n.card-container.motion-disabled {\n    padding: var(--navbar-height) 0 var(--border-padding-bottom) 0;\n}\n\n\n// Responsive design -> only one breakpoint to reduce complexity\n// css code for desktop\n@media(min-width: 770px), (prefers-reduced-motion: reduce){\n    .card-container {\n        padding-top: var(--navbar-height);\n    }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var{{tileType[item.type]}} is not implemented yet                            '\n    var COMPONENTS = [{'name': 'ApparentTemperatureTileViewComponent', 'selector': 'app-apparent-temperature-tile-view'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BackButtonElementComponent', 'selector': 'app-back-button-element'},{'name': 'CardElementComponent', 'selector': 'card-element'},{'name': 'CheckboxSwitcherElementComponent', 'selector': 'app-checkbox-switcher-element'},{'name': 'ConfigurationTilePopUpDialogView', 'selector': 'configuration-tile-popup-view'},{'name': 'ConfigurationTileViewComponent', 'selector': 'app-configuration-tile-view'},{'name': 'ConfigurationViewComponent', 'selector': 'app-configuration-view'},{'name': 'DashboardScreenComponent', 'selector': 'app-dashboard-screen'},{'name': 'DetailScreenComponent', 'selector': 'app-detail-screen'},{'name': 'ForecastDetailViewComponent', 'selector': 'app-forecast-detail-view'},{'name': 'ForecastTileViewComponent', 'selector': 'app-forecast-tile-view'},{'name': 'HistoryDetailViewComponent', 'selector': 'app-history-detail-view'},{'name': 'HistoryTileViewComponent', 'selector': 'app-history-tile-view'},{'name': 'HumidityTileViewComponent', 'selector': 'app-humidity-tile-view'},{'name': 'IndoorDetailViewComponent', 'selector': 'app-indoor-detail-view'},{'name': 'IndoorTileViewComponent', 'selector': 'app-indoor-tile-view'},{'name': 'LoginViewComponent', 'selector': 'app-login-view'},{'name': 'MenuBarElementComponent', 'selector': 'app-menu-bar-element'},{'name': 'MenuButtonElementComponent', 'selector': 'app-menu-button-element'},{'name': 'MenuElementComponent', 'selector': 'app-menu-element'},{'name': 'NavBarElementComponent', 'selector': 'app-nav-bar-element'},{'name': 'OnboardingScreenComponent', 'selector': 'app-onboarding-screen'},{'name': 'OpenAPELoginTileViewComponent', 'selector': 'app-open-apelogin-tile-view'},{'name': 'OutdoorWeatherDetailViewComponent', 'selector': 'app-outdoor-weather-detail-view'},{'name': 'OutdoorWeatherViewComponent', 'selector': 'app-outdoor-weather-view'},{'name': 'PersonalizationSettingsViewComponent', 'selector': 'app-personalization-settings-view'},{'name': 'PersonalizationViewComponent', 'selector': 'app-personalization-view'},{'name': 'PollenflugDetailViewComponent', 'selector': 'app-pollenflug-detail-view'},{'name': 'PollenflugSmallTileComponent', 'selector': 'app-pollenflug-small-tile'},{'name': 'PollenflugTileViewComponent', 'selector': 'app-pollenflug-tile-view'},{'name': 'PollenListElementComponent', 'selector': 'app-pollen-list-element'},{'name': 'PollenTagElementComponent', 'selector': 'app-pollen-tag-element'},{'name': 'ProgressChartElementComponent', 'selector': 'app-progress-chart-element'},{'name': 'RegistrationViewComponent', 'selector': 'app-registration-view'},{'name': 'SettingsScreenComponent', 'selector': 'app-settings-screen'},{'name': 'SimpleTileViewComponent', 'selector': 'app-simple-tile-view'},{'name': 'SliderElementComponent', 'selector': 'app-slider-element'},{'name': 'TtsPlayerElementComponent', 'selector': 'app-tts-player-element'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DashboardScreenComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DetailScreenComponent.html":{"url":"components/DetailScreenComponent.html","title":"component - DetailScreenComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DetailScreenComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/screens/detail-screen/detail-screen.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-detail-screen\n            \n\n            \n                styleUrls\n                ./detail-screen.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./detail-screen.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                desktop\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/screens/detail-screen/detail-screen.component.ts:9\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/screens/detail-screen/detail-screen.component.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            desktop\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/screens/detail-screen/detail-screen.component.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-detail-screen',\n  templateUrl: './detail-screen.component.html',\n  styleUrls: ['./detail-screen.component.scss'],\n})\nexport class DetailScreenComponent implements OnInit {\n  public desktop: boolean = false;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        \n    \n        \n    \n\n\n    \n\n    \n                \n                    ./detail-screen.component.scss\n                \n                .container {\n    padding-top: var(--navbar-height);\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                '\n    var COMPONENTS = [{'name': 'ApparentTemperatureTileViewComponent', 'selector': 'app-apparent-temperature-tile-view'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BackButtonElementComponent', 'selector': 'app-back-button-element'},{'name': 'CardElementComponent', 'selector': 'card-element'},{'name': 'CheckboxSwitcherElementComponent', 'selector': 'app-checkbox-switcher-element'},{'name': 'ConfigurationTilePopUpDialogView', 'selector': 'configuration-tile-popup-view'},{'name': 'ConfigurationTileViewComponent', 'selector': 'app-configuration-tile-view'},{'name': 'ConfigurationViewComponent', 'selector': 'app-configuration-view'},{'name': 'DashboardScreenComponent', 'selector': 'app-dashboard-screen'},{'name': 'DetailScreenComponent', 'selector': 'app-detail-screen'},{'name': 'ForecastDetailViewComponent', 'selector': 'app-forecast-detail-view'},{'name': 'ForecastTileViewComponent', 'selector': 'app-forecast-tile-view'},{'name': 'HistoryDetailViewComponent', 'selector': 'app-history-detail-view'},{'name': 'HistoryTileViewComponent', 'selector': 'app-history-tile-view'},{'name': 'HumidityTileViewComponent', 'selector': 'app-humidity-tile-view'},{'name': 'IndoorDetailViewComponent', 'selector': 'app-indoor-detail-view'},{'name': 'IndoorTileViewComponent', 'selector': 'app-indoor-tile-view'},{'name': 'LoginViewComponent', 'selector': 'app-login-view'},{'name': 'MenuBarElementComponent', 'selector': 'app-menu-bar-element'},{'name': 'MenuButtonElementComponent', 'selector': 'app-menu-button-element'},{'name': 'MenuElementComponent', 'selector': 'app-menu-element'},{'name': 'NavBarElementComponent', 'selector': 'app-nav-bar-element'},{'name': 'OnboardingScreenComponent', 'selector': 'app-onboarding-screen'},{'name': 'OpenAPELoginTileViewComponent', 'selector': 'app-open-apelogin-tile-view'},{'name': 'OutdoorWeatherDetailViewComponent', 'selector': 'app-outdoor-weather-detail-view'},{'name': 'OutdoorWeatherViewComponent', 'selector': 'app-outdoor-weather-view'},{'name': 'PersonalizationSettingsViewComponent', 'selector': 'app-personalization-settings-view'},{'name': 'PersonalizationViewComponent', 'selector': 'app-personalization-view'},{'name': 'PollenflugDetailViewComponent', 'selector': 'app-pollenflug-detail-view'},{'name': 'PollenflugSmallTileComponent', 'selector': 'app-pollenflug-small-tile'},{'name': 'PollenflugTileViewComponent', 'selector': 'app-pollenflug-tile-view'},{'name': 'PollenListElementComponent', 'selector': 'app-pollen-list-element'},{'name': 'PollenTagElementComponent', 'selector': 'app-pollen-tag-element'},{'name': 'ProgressChartElementComponent', 'selector': 'app-progress-chart-element'},{'name': 'RegistrationViewComponent', 'selector': 'app-registration-view'},{'name': 'SettingsScreenComponent', 'selector': 'app-settings-screen'},{'name': 'SimpleTileViewComponent', 'selector': 'app-simple-tile-view'},{'name': 'SliderElementComponent', 'selector': 'app-slider-element'},{'name': 'TtsPlayerElementComponent', 'selector': 'app-tts-player-element'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DetailScreenComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ESPConfiguration.html":{"url":"interfaces/ESPConfiguration.html","title":"interface - ESPConfiguration","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ESPConfiguration\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/api/esp-configuration-api.service.ts\n        \n\n            \n                Description\n            \n            \n                Model of ESPConfiguration response\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        id\n                                \n                                \n                                        roomName\n                                \n                                \n                                        transmissionFrequency\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        roomName\n                                    \n                                \n                                \n                                    \n                                        roomName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        transmissionFrequency\n                                    \n                                \n                                \n                                    \n                                        transmissionFrequency:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\n\n/**\n * ESP configuration api service injectable\n * \n * Use this service to access the network\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class ESPConfigurationAPIService {\n  private allConfigs = environment.baseURL + '/espconfig/all';\n  private changeConfig = environment.baseURL + '/espconfig/change';\n\n  constructor(private httpClient: HttpClient) { }\n\n  /**\n   * @returns an observable with ESPConfigurations[] object\n   */\n  public loadESPConfigs(): Observable{\n    let returnObservable = new Observable((observer) => {\n      let response = this.httpClient.get(this.allConfigs);\n      response.subscribe(data => {\n        observer.next(data);\n        observer.complete();\n      })\n    });\n    return returnObservable;\n  }\n\n  /**\n   * @returns an observable with the updatet ESPConfiguration\n   */\n  public postESPConfiguration(configuration: ESPConfiguration): Observable {\n    let returnObservable = new Observable((observer) => {\n      let response = this.httpClient.post(this.changeConfig, configuration,{observe: 'response'});\n      response.subscribe((response) => {\n        let body = response.body\n        let status = response.statusText\n        console.log(status);\n\n        if(body){\n          observer.next(body);\n          observer.complete();\n        }\n    \n        },\n        (error)=> {\n          observer.error(\"Ein Fehler ist aufgetreten. Bitte versuche es später erneut. \");\n          console.log(error);\n          observer.complete();\n        },() => {\n          observer.complete();\n        }\n      );\n    }\n  );\n  return returnObservable;\n  }\n}\n\n/**\n * Model of ESPConfiguration response\n */\nexport interface ESPConfiguration {\n  id: number,\n  roomName: string,\n  transmissionFrequency: number,\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ESPConfigurationAPIService.html":{"url":"injectables/ESPConfigurationAPIService.html","title":"injectable - ESPConfigurationAPIService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ESPConfigurationAPIService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/api/esp-configuration-api.service.ts\n        \n\n            \n                Description\n            \n            \n                ESP configuration api service injectable\nUse this service to access the network\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                loadESPConfigs\n                            \n                            \n                                    Public\n                                postESPConfiguration\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/api/esp-configuration-api.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            loadESPConfigs\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    loadESPConfigs()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/api/esp-configuration-api.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        an observable with ESPConfigurations[] object\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            postESPConfiguration\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    postESPConfiguration(configuration: ESPConfiguration)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/api/esp-configuration-api.service.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    configuration\n                                    \n                                                ESPConfiguration\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        an observable with the updatet ESPConfiguration\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\n\n/**\n * ESP configuration api service injectable\n * \n * Use this service to access the network\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class ESPConfigurationAPIService {\n  private allConfigs = environment.baseURL + '/espconfig/all';\n  private changeConfig = environment.baseURL + '/espconfig/change';\n\n  constructor(private httpClient: HttpClient) { }\n\n  /**\n   * @returns an observable with ESPConfigurations[] object\n   */\n  public loadESPConfigs(): Observable{\n    let returnObservable = new Observable((observer) => {\n      let response = this.httpClient.get(this.allConfigs);\n      response.subscribe(data => {\n        observer.next(data);\n        observer.complete();\n      })\n    });\n    return returnObservable;\n  }\n\n  /**\n   * @returns an observable with the updatet ESPConfiguration\n   */\n  public postESPConfiguration(configuration: ESPConfiguration): Observable {\n    let returnObservable = new Observable((observer) => {\n      let response = this.httpClient.post(this.changeConfig, configuration,{observe: 'response'});\n      response.subscribe((response) => {\n        let body = response.body\n        let status = response.statusText\n        console.log(status);\n\n        if(body){\n          observer.next(body);\n          observer.complete();\n        }\n    \n        },\n        (error)=> {\n          observer.error(\"Ein Fehler ist aufgetreten. Bitte versuche es später erneut. \");\n          console.log(error);\n          observer.complete();\n        },() => {\n          observer.complete();\n        }\n      );\n    }\n  );\n  return returnObservable;\n  }\n}\n\n/**\n * Model of ESPConfiguration response\n */\nexport interface ESPConfiguration {\n  id: number,\n  roomName: string,\n  transmissionFrequency: number,\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ForecastDetailViewComponent.html":{"url":"components/ForecastDetailViewComponent.html","title":"component - ForecastDetailViewComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ForecastDetailViewComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/views/forecast-detail-view/forecast-detail-view.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-forecast-detail-view\n            \n\n            \n                styleUrls\n                ./forecast-detail-view.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./forecast-detail-view.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                forecast\n                            \n                            \n                                ttsTextGeneratorFunction\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                loadForecastData\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(weatherDataService: WeatherDataService, textService: TextService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/views/forecast-detail-view/forecast-detail-view.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        weatherDataService\n                                                  \n                                                        \n                                                                        WeatherDataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        textService\n                                                  \n                                                        \n                                                                        TextService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadForecastData\n                        \n                        \n                    \n                \n            \n            \n                \nloadForecastData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/views/forecast-detail-view/forecast-detail-view.component.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/views/forecast-detail-view/forecast-detail-view.component.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            forecast\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         WeatherForecastData\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/views/forecast-detail-view/forecast-detail-view.component.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ttsTextGeneratorFunction\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/views/forecast-detail-view/forecast-detail-view.component.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { WeatherForecastData } from 'src/app/model/weather';\nimport { TextService } from 'src/app/services/text.service';\nimport { WeatherDataService } from 'src/app/services/weather-data.service';\n\n@Component({\n  selector: 'app-forecast-detail-view',\n  templateUrl: './forecast-detail-view.component.html',\n  styleUrls: ['./forecast-detail-view.component.scss']\n})\nexport class ForecastDetailViewComponent implements OnInit {\n  forecast?: WeatherForecastData;\n  ttsTextGeneratorFunction = () => this.textService.createForecastText(this.forecast)\n\n  constructor(private weatherDataService: WeatherDataService,\n    private textService: TextService) { }\n\n  ngOnInit(): void {\n    this.loadForecastData();\n  }\n\n  loadForecastData() {\n    this.weatherDataService.getForecastDataSubject()\n                        .subscribe(data => this.forecast = data);\n  }\n}\n\n    \n\n    \n        \n\n\n\n\n \nAlles zur Vorhersage\n    Die Abschätzung der zukünftigen Wetterentwicklung interessiert die Menschen seit Jahrtausenden und ist Gegenstand intensiver Erfahrung und zunehmender Forschung.\n    Versuche, das Wetter vorherzusagen, sind seit dem Altertum überliefert und dürften noch länger zurückreichen, wenn man bedenkt, wie stark Menschen – besonders in der Landwirtschaft – von Niederschlag und Temperatur abhängig waren. Ziel der Wettervorhersage ist die Prognose eines Zustandes der Atmosphäre zu einer bestimmten Zeit an einem bestimmten Ort oder in einem bestimmten Gebiet. Dabei sind tatsächlich nicht nur Wettererscheinungen, die sich am Boden auswirken, gemeint, sondern es wird die gesamte Erdatmosphäre betrachtet.\n\n\n\n\n    \n\n    \n                \n                    ./forecast-detail-view.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ' Alles zur Vorhersage    Die Abschätzung der zukünftigen Wetterentwicklung interessiert die Menschen seit Jahrtausenden und ist Gegenstand intensiver Erfahrung und zunehmender Forschung.    Versuche, das Wetter vorherzusagen, sind seit dem Altertum überliefert und dürften noch länger zurückreichen, wenn man bedenkt, wie stark Menschen – besonders in der Landwirtschaft – von Niederschlag und Temperatur abhängig waren. Ziel der Wettervorhersage ist die Prognose eines Zustandes der Atmosphäre zu einer bestimmten Zeit an einem bestimmten Ort oder in einem bestimmten Gebiet. Dabei sind tatsächlich nicht nur Wettererscheinungen, die sich am Boden auswirken, gemeint, sondern es wird die gesamte Erdatmosphäre betrachtet.'\n    var COMPONENTS = [{'name': 'ApparentTemperatureTileViewComponent', 'selector': 'app-apparent-temperature-tile-view'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BackButtonElementComponent', 'selector': 'app-back-button-element'},{'name': 'CardElementComponent', 'selector': 'card-element'},{'name': 'CheckboxSwitcherElementComponent', 'selector': 'app-checkbox-switcher-element'},{'name': 'ConfigurationTilePopUpDialogView', 'selector': 'configuration-tile-popup-view'},{'name': 'ConfigurationTileViewComponent', 'selector': 'app-configuration-tile-view'},{'name': 'ConfigurationViewComponent', 'selector': 'app-configuration-view'},{'name': 'DashboardScreenComponent', 'selector': 'app-dashboard-screen'},{'name': 'DetailScreenComponent', 'selector': 'app-detail-screen'},{'name': 'ForecastDetailViewComponent', 'selector': 'app-forecast-detail-view'},{'name': 'ForecastTileViewComponent', 'selector': 'app-forecast-tile-view'},{'name': 'HistoryDetailViewComponent', 'selector': 'app-history-detail-view'},{'name': 'HistoryTileViewComponent', 'selector': 'app-history-tile-view'},{'name': 'HumidityTileViewComponent', 'selector': 'app-humidity-tile-view'},{'name': 'IndoorDetailViewComponent', 'selector': 'app-indoor-detail-view'},{'name': 'IndoorTileViewComponent', 'selector': 'app-indoor-tile-view'},{'name': 'LoginViewComponent', 'selector': 'app-login-view'},{'name': 'MenuBarElementComponent', 'selector': 'app-menu-bar-element'},{'name': 'MenuButtonElementComponent', 'selector': 'app-menu-button-element'},{'name': 'MenuElementComponent', 'selector': 'app-menu-element'},{'name': 'NavBarElementComponent', 'selector': 'app-nav-bar-element'},{'name': 'OnboardingScreenComponent', 'selector': 'app-onboarding-screen'},{'name': 'OpenAPELoginTileViewComponent', 'selector': 'app-open-apelogin-tile-view'},{'name': 'OutdoorWeatherDetailViewComponent', 'selector': 'app-outdoor-weather-detail-view'},{'name': 'OutdoorWeatherViewComponent', 'selector': 'app-outdoor-weather-view'},{'name': 'PersonalizationSettingsViewComponent', 'selector': 'app-personalization-settings-view'},{'name': 'PersonalizationViewComponent', 'selector': 'app-personalization-view'},{'name': 'PollenflugDetailViewComponent', 'selector': 'app-pollenflug-detail-view'},{'name': 'PollenflugSmallTileComponent', 'selector': 'app-pollenflug-small-tile'},{'name': 'PollenflugTileViewComponent', 'selector': 'app-pollenflug-tile-view'},{'name': 'PollenListElementComponent', 'selector': 'app-pollen-list-element'},{'name': 'PollenTagElementComponent', 'selector': 'app-pollen-tag-element'},{'name': 'ProgressChartElementComponent', 'selector': 'app-progress-chart-element'},{'name': 'RegistrationViewComponent', 'selector': 'app-registration-view'},{'name': 'SettingsScreenComponent', 'selector': 'app-settings-screen'},{'name': 'SimpleTileViewComponent', 'selector': 'app-simple-tile-view'},{'name': 'SliderElementComponent', 'selector': 'app-slider-element'},{'name': 'TtsPlayerElementComponent', 'selector': 'app-tts-player-element'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ForecastDetailViewComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ForecastResponse.html":{"url":"interfaces/ForecastResponse.html","title":"interface - ForecastResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ForecastResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/api/weather-api.service.ts\n        \n\n            \n                Description\n            \n            \n                Model of the forecast api response\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        id\n                                \n                                \n                                        seaPressure\n                                \n                                \n                                        timestampd\n                                \n                                \n                                        trend\n                                \n                                \n                                        weatherDescription\n                                \n                                \n                                        weatherIcon\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        seaPressure\n                                    \n                                \n                                \n                                    \n                                        seaPressure:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timestampd\n                                    \n                                \n                                \n                                    \n                                        timestampd:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        trend\n                                    \n                                \n                                \n                                    \n                                        trend:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        weatherDescription\n                                    \n                                \n                                \n                                    \n                                        weatherDescription:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        weatherIcon\n                                    \n                                \n                                \n                                    \n                                        weatherIcon:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { FORECAST, INDOORAIRQUALITY, OUTDOORWEATHER, POLLEN, WEATHERHISTORY } from '../../model/mock-data/weather.mock';\nimport { OutdoorWeatherData, PollenData, IndoorRoomData, WeatherForecastData, WeatherHistoryData } from '../../model/weather';\nimport { Observable, of } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\n\n/**\n * Weather api service injectable\n * \n * Use this service to access the network. It implementes all routes \n * for the weather data.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class WeatherAPIService {\n  private outdoorURL = environment.baseURL + 'weather-data/outdoor/latest';\n  private indoorURL = environment.baseURL + 'weather-data/indoor/latest';\n  private historyURL = environment.baseURL + 'weather-data/outdoor/history';\n  private forecastURL = environment.baseURL + 'weather-data/forecast/latest';\n  private allPollenTypesURL = environment.baseURL + 'pollen/all';\n\n  constructor(private httpClient: HttpClient) { }\n\n  /**\n   * @returns an observable with the loadad OutdoorWeatherData from the api or test data\n   */\n  public loadOutdoorWeather(): Observable {\n    if (environment.testData) {\n      return of(OUTDOORWEATHER);\n    }\n    let returnObservable = new Observable((observer) => {\n        this.httpClient.get(this.outdoorURL).subscribe(data => {\n          let outdoorData = this.createOutdoorWeatherDataFromServerResponse(data);\n          observer.next(outdoorData);\n          observer.complete();\n        })\n      }\n    );\n    return returnObservable;\n  }\n\n  /**\n   * @returns an observable with the loadad WeatherForecastData from the api or test data\n   */\n  public loadForecast(): Observable {\n    if (environment.testData) {\n      return of(FORECAST);\n    }\n    let returnObservable = new Observable((observer) => {\n        this.httpClient.get(this.forecastURL).subscribe(data => {\n          let forecastData = this.createOutdoorForecastDataFromServerResponse(data);\n          observer.next(forecastData);\n          observer.complete();\n        })\n      }\n    );\n    return returnObservable;\n  }\n\n  /**\n   * @returns an observable with the loadad PollenData from the api or test data\n   */\n  public loadPollen(): Observable{\n    if (environment.testData) {\n      let pollen = of(POLLEN);\n      return pollen;\n    }\n    let returnObservable = new Observable((observer) => {\n      let response = this.httpClient.get(this.allPollenTypesURL);\n      response.subscribe(data => {\n        let pollenData = this.createPollenDataFromServerResponse(data);\n        observer.next(pollenData);\n        observer.complete();\n      },\n      (error) => {\n        console.log(error);\n        observer.next([]);\n        observer.complete();\n      })\n    });\n    return returnObservable;\n  }\n\n  /**\n   * @returns an observable with the loadad IndoorRoomData from the api or test data\n   */\n  public loadIndoorRoomData(): Observable {\n    if (environment.testData) {\n      let indoorData = of(INDOORAIRQUALITY);\n      return indoorData;\n    }\n    let returnObservable = new Observable((observer) => { // Wir brauchen hier ein Array, -> sollen ja mehrere Räume möglich sein (theoretisch...)\n        this.httpClient.get(this.indoorURL).subscribe(data => {\n          let indoorData = this.createIndoorRoomDataFromServerResponse(data);\n          observer.next([indoorData]);\n          observer.complete();\n        },\n        (error) => {\n          console.log(error);\n          observer.next([]);\n          observer.complete();\n        })\n      }\n    );\n    return returnObservable;\n  }\n\n  /**\n   * @returns an observable with the loadad WeatherHistoryData or test data\n   */\n  public loadHistoryDataSubject(endDate: Date, beginDate: Date): Observable {\n    if (environment.testData) {\n      let forecastData = of(WEATHERHISTORY);\n      return forecastData;\n    }\n    let returnObservable = new Observable((observer) => { \n        this.httpClient.post(this.historyURL,\n          {\n            'begin': this.createServerFriendlyDate(beginDate),\n            'end': this.createServerFriendlyDate(endDate)\n          })\n        .subscribe(data => {\n          let dataPoints: OutdoorWeatherData[] = data.map((element) => {\n            return this.createOutdoorWeatherDataFromServerResponse(element);\n          });\n          console.log(dataPoints);\n          observer.next({'datapoints': dataPoints});\n          observer.complete();\n        })\n      }\n    );\n    return returnObservable;\n  }\n\n  /**\n   * Helper function to convert date to string\n   * @param date \n   * @returns a date as a string which is understandable for the server\n   */\n  private createServerFriendlyDate(date: Date): string {\n    let dateString = date.toISOString().slice(0, 10);\n    let timeString = date.toTimeString().slice(0, 8);\n    return dateString + ' ' + timeString;\n  }\n\n  /**\n   * Helper function to convert the response from the server to an OutdoorWeatherData object\n   * \n   * @param response\n   * @returns OutdoorWeatherData object\n   */\n  private createOutdoorWeatherDataFromServerResponse(response: OutdoorWeatherResponse): OutdoorWeatherData {\n    const date = response.timestamp;\n    const year = date.substr(0, 4);\n    const month = date.substr(5, 2);\n    const day = date.substr(8, 2);\n    const time = date.substr(11);\n\n    const validDate = new Date(month + '/' + day + '/' + year + ' ' + time);\n\n    return {\n            temperature: response.temperature,\n            maxTemperature: -99, // Not implemented yet\n            minTemperature: -99, // Not implemented yet\n            humidity: response.humidity,\n            timestamp: validDate,\n            weather: response.weather,\n            apparentTemperature: response.apparentTemperature,\n            location: response.location_name,\n            postCode: response.location\n          }\n  }\n\n  /**\n   * Helper function to convert the response from the server to an IndoorRoomData object\n   * \n   * @param response\n   * @returns IndoorRoomData object\n   */\n  private createIndoorRoomDataFromServerResponse(response: IndoorRoomResponse): IndoorRoomData {\n    return {\n            roomID: response.id + '',\n            roomName: response.location,\n            airQuality: response.gasVal, \n            temperature: response.temperature, \n            humidity: response.humidity, \n            timestamp: new Date(response.timestamp), \n          }\n  }\n\n  /**\n   * Helper function to convert the response from the server to an PollenData[] object\n   * \n   * @param response\n   * @returns PollenData[] object\n   */\n  private createPollenDataFromServerResponse(response: PollenResponse[]): PollenData[] {\n    console.log(\"Pollen daten sind hier\", response)\n    let pollen: PollenData[] = [];\n    response.forEach(item => {\n      pollen.push({\n        id: item.id,\n        pollenName: item.pollenName,\n        today: item.loadRating,\n        tomorrow: ''\n      })\n    })\n    return pollen\n  }\n\n  /**\n   * Helper function to convert the response from the server to an WeatherForecastData object\n   * \n   * @param response\n   * @returns WeatherForecastData object\n   */\n  private createOutdoorForecastDataFromServerResponse(response: ForecastResponse): WeatherForecastData {\n    return {\n      trend: response.trend,\n      weatherDescription: response.weatherDescription, \n      weatherIcon: response.weatherIcon\n    }\n  }\n}\n\n/**\n * Model of the pollen api response\n */\ninterface PollenResponse {\n  id: number,\n  pollenName: string,\n  loadRating: string,\n}\n\n/**\n * Model of the outdoor weather api response\n */\ninterface OutdoorWeatherResponse {\n  id: number,\n  humidity: number,\n  temperature: number,\n  pressure: number,\n  location: string,\n  location_name: string,\n  timestamp: string,\n  weather: string,\n  apparentTemperature: number\n}\n\n/**\n * Model of the indoor room api response\n */\ninterface IndoorRoomResponse {\n  id: number,\n  humidity: number,\n  temperature: number,\n  pressure: number,\n  gasVal: number,\n  location: string,\n  timestamp: string,\n}\n\n/**\n * Model of the forecast api response\n */\ninterface ForecastResponse {\n  id: number,\n  trend: string,\n  weatherIcon: string,\n  weatherDescription: string,\n  seaPressure: number,\n  timestampd: string\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ForecastTileViewComponent.html":{"url":"components/ForecastTileViewComponent.html","title":"component - ForecastTileViewComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ForecastTileViewComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/views/forecast-tile-view/forecast-tile-view.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-forecast-tile-view\n            \n\n            \n                styleUrls\n                ./forecast-tile-view.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./forecast-tile-view.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                _forecast\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getForecastDescription\n                            \n                            \n                                getForecastIcon\n                            \n                            \n                                getForecastTitle\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                hideSubtitle\n                            \n                            \n                                pressable\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    data\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(imageService: ImageService, textService: TextService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/views/forecast-tile-view/forecast-tile-view.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        imageService\n                                                  \n                                                        \n                                                                        ImageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        textService\n                                                  \n                                                        \n                                                                        TextService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        data\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/views/forecast-tile-view/forecast-tile-view.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        hideSubtitle\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/views/forecast-tile-view/forecast-tile-view.component.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        pressable\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/views/forecast-tile-view/forecast-tile-view.component.ts:12\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getForecastDescription\n                        \n                        \n                    \n                \n            \n            \n                \ngetForecastDescription()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/views/forecast-tile-view/forecast-tile-view.component.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     string | undefined\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getForecastIcon\n                        \n                        \n                    \n                \n            \n            \n                \ngetForecastIcon()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/views/forecast-tile-view/forecast-tile-view.component.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     string | undefined\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getForecastTitle\n                        \n                        \n                    \n                \n            \n            \n                \ngetForecastTitle()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/views/forecast-tile-view/forecast-tile-view.component.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     string | undefined\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/views/forecast-tile-view/forecast-tile-view.component.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            _forecast\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         WeatherForecastData\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/views/forecast-tile-view/forecast-tile-view.component.ts:18\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        data\n                    \n                \n\n\n                \n                    \n                        setdata(data)\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/views/forecast-tile-view/forecast-tile-view.component.ts:15\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            data\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { WeatherData, WeatherForecastData } from 'src/app/model/weather';\nimport { ImageService } from 'src/app/services/image.service';\nimport { TextService } from 'src/app/services/text.service';\n\n@Component({\n  selector: 'app-forecast-tile-view',\n  templateUrl: './forecast-tile-view.component.html',\n  styleUrls: ['./forecast-tile-view.component.scss']\n})\nexport class ForecastTileViewComponent implements OnInit {\n  @Input() pressable: boolean = false;\n  @Input() hideSubtitle: boolean = false;\n  @Input()\n  set data(data: WeatherData) {\n    this._forecast = data as WeatherForecastData;\n  }\n  _forecast?: WeatherForecastData\n  constructor(private imageService: ImageService,\n    private textService: TextService) { }\n\n  ngOnInit(): void {\n  }\n\n  getForecastIcon(): string | undefined {\n    let iconString = this._forecast?.weatherIcon;\n    return this.imageService.getWeatherIconString(iconString);\n  }\n\n  getForecastTitle(): string | undefined {\n    return this.textService.createForecastTitle(this._forecast);\n  }\n\n  getForecastDescription(): string | undefined {\n    return this.textService.createForecastText(this._forecast);\n  }\n}\n\n    \n\n    \n        \n    \n        {{getForecastDescription()}}\n        \n\n    \n\n\n    \n\n    \n                \n                    ./forecast-tile-view.component.scss\n                \n                // .forecast-image {\n//     width: 7em;\n// }\n\n.flex-container {\n    display: flex;\n    justify-content: space-between;\n    // padding-right: calc(var(--padding) + 60px);\n}\n\n.forecast-image {\n    position: relative;\n    top: -20px;\n    height: 60px;\n    padding-left: var(--padding);\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{getForecastDescription()}}            '\n    var COMPONENTS = [{'name': 'ApparentTemperatureTileViewComponent', 'selector': 'app-apparent-temperature-tile-view'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BackButtonElementComponent', 'selector': 'app-back-button-element'},{'name': 'CardElementComponent', 'selector': 'card-element'},{'name': 'CheckboxSwitcherElementComponent', 'selector': 'app-checkbox-switcher-element'},{'name': 'ConfigurationTilePopUpDialogView', 'selector': 'configuration-tile-popup-view'},{'name': 'ConfigurationTileViewComponent', 'selector': 'app-configuration-tile-view'},{'name': 'ConfigurationViewComponent', 'selector': 'app-configuration-view'},{'name': 'DashboardScreenComponent', 'selector': 'app-dashboard-screen'},{'name': 'DetailScreenComponent', 'selector': 'app-detail-screen'},{'name': 'ForecastDetailViewComponent', 'selector': 'app-forecast-detail-view'},{'name': 'ForecastTileViewComponent', 'selector': 'app-forecast-tile-view'},{'name': 'HistoryDetailViewComponent', 'selector': 'app-history-detail-view'},{'name': 'HistoryTileViewComponent', 'selector': 'app-history-tile-view'},{'name': 'HumidityTileViewComponent', 'selector': 'app-humidity-tile-view'},{'name': 'IndoorDetailViewComponent', 'selector': 'app-indoor-detail-view'},{'name': 'IndoorTileViewComponent', 'selector': 'app-indoor-tile-view'},{'name': 'LoginViewComponent', 'selector': 'app-login-view'},{'name': 'MenuBarElementComponent', 'selector': 'app-menu-bar-element'},{'name': 'MenuButtonElementComponent', 'selector': 'app-menu-button-element'},{'name': 'MenuElementComponent', 'selector': 'app-menu-element'},{'name': 'NavBarElementComponent', 'selector': 'app-nav-bar-element'},{'name': 'OnboardingScreenComponent', 'selector': 'app-onboarding-screen'},{'name': 'OpenAPELoginTileViewComponent', 'selector': 'app-open-apelogin-tile-view'},{'name': 'OutdoorWeatherDetailViewComponent', 'selector': 'app-outdoor-weather-detail-view'},{'name': 'OutdoorWeatherViewComponent', 'selector': 'app-outdoor-weather-view'},{'name': 'PersonalizationSettingsViewComponent', 'selector': 'app-personalization-settings-view'},{'name': 'PersonalizationViewComponent', 'selector': 'app-personalization-view'},{'name': 'PollenflugDetailViewComponent', 'selector': 'app-pollenflug-detail-view'},{'name': 'PollenflugSmallTileComponent', 'selector': 'app-pollenflug-small-tile'},{'name': 'PollenflugTileViewComponent', 'selector': 'app-pollenflug-tile-view'},{'name': 'PollenListElementComponent', 'selector': 'app-pollen-list-element'},{'name': 'PollenTagElementComponent', 'selector': 'app-pollen-tag-element'},{'name': 'ProgressChartElementComponent', 'selector': 'app-progress-chart-element'},{'name': 'RegistrationViewComponent', 'selector': 'app-registration-view'},{'name': 'SettingsScreenComponent', 'selector': 'app-settings-screen'},{'name': 'SimpleTileViewComponent', 'selector': 'app-simple-tile-view'},{'name': 'SliderElementComponent', 'selector': 'app-slider-element'},{'name': 'TtsPlayerElementComponent', 'selector': 'app-tts-player-element'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ForecastTileViewComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GraphDataSet.html":{"url":"interfaces/GraphDataSet.html","title":"interface - GraphDataSet","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  GraphDataSet\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/weather.ts\n        \n\n\n            \n                Extends\n            \n            \n                        WeatherData\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        humidityAverage\n                                \n                                \n                                        humidityDataPoints\n                                \n                                \n                                        label\n                                \n                                \n                                        temperatureAverage\n                                \n                                \n                                        temperatureDataPoints\n                                \n                                \n                                        xAxisLabel\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        humidityAverage\n                                    \n                                \n                                \n                                    \n                                        humidityAverage:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        humidityDataPoints\n                                    \n                                \n                                \n                                    \n                                        humidityDataPoints:     number[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        temperatureAverage\n                                    \n                                \n                                \n                                    \n                                        temperatureAverage:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        temperatureDataPoints\n                                    \n                                \n                                \n                                    \n                                        temperatureDataPoints:     number[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        xAxisLabel\n                                    \n                                \n                                \n                                    \n                                        xAxisLabel:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface WeatherData { }\n\nexport enum TileType {\n    indoorRoom,\n    pollenSmall,\n    pollenList,\n    history,\n    forecast,\n    humidity,\n    apparentTemperature,\n}\n\nexport interface TileArrays {\n    dashboard: Tile[],\n    pollen : Tile[],\n    indoorRooms: Tile[]\n  }\n  \n\nexport enum TilePriority {\n    important, //Highest \n    high,\n    middle,\n    low,\n}\n\nexport interface Tile {\n    type: TileType;\n    data: A;\n    id: string;\n    priority: TilePriority\n}\n\nexport interface OutdoorWeatherData extends WeatherData {\n    temperature: number // in °C\n    maxTemperature: number, //TODO: external database required \"forecast\"  --> // TODO: Move to \"daily\" data structure\n    minTemperature: number, //TODO: external database required \"forecast\"  --> // TODO: Move to \"daily\" data structure\n    humidity: number, // in %\n    timestamp: Date, \n    weather: string, // TODO: external API required\n    apparentTemperature: number, // in °C ---> die \"gefühlte\" Temperatur\n    location: string, // e.g. \"Stuttgart\" TODO: Make configurable in ESP Wlan-Board\n    postCode: string,\n}\n\nexport interface WeatherForecastData extends WeatherData {\n    trend: string,\n    weatherDescription: string,\n    weatherIcon: string,\n  }\n\nexport interface PollenData extends WeatherData {\n    pollenName: string, // TODO: Maybe we should use the same Pollen enum as in user-context.ts\n    id: number,\n    today: string, // -1  3\n    tomorrow: string, // -1  3\n}\n\nexport interface IndoorRoomData extends WeatherData {\n    roomID: string,\n    roomName: string,\n    airQuality: number, // in %\n    temperature: number // in °C \n    humidity: number, // in %\n    timestamp: Date, \n}\n\nexport interface WeatherHistoryData extends WeatherData {\n    datapoints: OutdoorWeatherData[],\n}\n\nexport interface GraphDataSet extends WeatherData {\n    temperatureDataPoints: number[];\n    humidityDataPoints: number[];\n    xAxisLabel: string[];\n    label: string;\n    temperatureAverage: number;\n    humidityAverage: number;\n}\n\nexport interface WeatherHistoryByDayData extends WeatherData  {\n    averageTemperature: number, // in °C\n    averageHumidity: number, // in %\n}\n\nexport enum Daytime {\n    noon,\n    night,\n    dawn,\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HistoryDetailViewComponent.html":{"url":"components/HistoryDetailViewComponent.html","title":"component - HistoryDetailViewComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HistoryDetailViewComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/views/history-detail-view/history-detail-view.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-history-detail-view\n            \n\n            \n                styleUrls\n                ./history-detail-view.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./history-detail-view.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _index\n                            \n                            \n                                    Optional\n                                dataSet\n                            \n                            \n                                graphType\n                            \n                            \n                                selectedTimeInterval\n                            \n                            \n                                timeIntervalType\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                back\n                            \n                            \n                                forward\n                            \n                            \n                                getAverageHumidityString\n                            \n                            \n                                getAverageTempString\n                            \n                            \n                                isBackPossible\n                            \n                            \n                                isForwardPossible\n                            \n                            \n                                loadWeatherHistoryData\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                reload\n                            \n                            \n                                selectInterval\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    index\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(historyTileService: HistoryTileService, weatherDataService: WeatherDataService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/views/history-detail-view/history-detail-view.component.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        historyTileService\n                                                  \n                                                        \n                                                                        HistoryTileService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        weatherDataService\n                                                  \n                                                        \n                                                                        WeatherDataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            back\n                        \n                        \n                    \n                \n            \n            \n                \nback()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/views/history-detail-view/history-detail-view.component.ts:83\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            forward\n                        \n                        \n                    \n                \n            \n            \n                \nforward()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/views/history-detail-view/history-detail-view.component.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getAverageHumidityString\n                        \n                        \n                    \n                \n            \n            \n                \ngetAverageHumidityString()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/views/history-detail-view/history-detail-view.component.ts:102\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getAverageTempString\n                        \n                        \n                    \n                \n            \n            \n                \ngetAverageTempString()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/views/history-detail-view/history-detail-view.component.ts:96\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isBackPossible\n                        \n                        \n                    \n                \n            \n            \n                \nisBackPossible()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/views/history-detail-view/history-detail-view.component.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            isForwardPossible\n                        \n                        \n                    \n                \n            \n            \n                \nisForwardPossible()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/views/history-detail-view/history-detail-view.component.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadWeatherHistoryData\n                        \n                        \n                    \n                \n            \n            \n                \nloadWeatherHistoryData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/views/history-detail-view/history-detail-view.component.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/views/history-detail-view/history-detail-view.component.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            reload\n                        \n                        \n                    \n                \n            \n            \n                \nreload()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/views/history-detail-view/history-detail-view.component.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            selectInterval\n                        \n                        \n                    \n                \n            \n            \n                \nselectInterval()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/views/history-detail-view/history-detail-view.component.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _index\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 0\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/views/history-detail-view/history-detail-view.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            dataSet\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         GraphDataSet[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/views/history-detail-view/history-detail-view.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            graphType\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : HistoryGraphType\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/views/history-detail-view/history-detail-view.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectedTimeInterval\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : TimeInterval.day\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/views/history-detail-view/history-detail-view.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            timeIntervalType\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : TimeInterval\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/views/history-detail-view/history-detail-view.component.ts:32\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        index\n                    \n                \n\n                \n                    \n                        getindex()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/views/history-detail-view/history-detail-view.component.ts:25\n                                \n                            \n\n                \n                    \n                        setindex(value: number)\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/views/history-detail-view/history-detail-view.component.ts:17\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            number\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { GraphDataSet, WeatherHistoryData } from 'src/app/model/weather';\nimport { HistoryTileService } from 'src/app/services/history-tile.service';\nimport { WeatherDataService } from 'src/app/services/weather-data.service';\nimport { HistoryGraphType } from '../history-tile-view/history-tile-view.component';\nimport { MatButtonToggleAppearance } from '@angular/material/button-toggle'\n\n@Component({\n  selector: 'app-history-detail-view',\n  templateUrl: './history-detail-view.component.html',\n  styleUrls: ['./history-detail-view.component.scss']\n})\nexport class HistoryDetailViewComponent implements OnInit {\n  private _weatherHistory?: WeatherHistoryData\n  dataSet?: GraphDataSet[] \n  // Index\n  set index(value: number) {\n    this._index = value;\n    if(this.dataSet && !(this.dataSet.length > value + 1)) {\n      this.weatherDataService.loadMoreHistoryData().subscribe(data => {\n        this.reload();\n      });\n    }\n  }\n  get index() {\n    return this._index;\n  }\n  _index = 0;\n\n  graphType = HistoryGraphType\n  selectedTimeInterval = TimeInterval.day;\n  timeIntervalType = TimeInterval\n\n  constructor(private historyTileService: HistoryTileService,\n    private weatherDataService: WeatherDataService) { }\n\n  ngOnInit(): void {\n    this.loadWeatherHistoryData() \n  }\n\n  loadWeatherHistoryData(): void {\n    this.weatherDataService.getHistoryDataSubject().subscribe(data => {\n      this._weatherHistory = data\n      this.reload();\n    });\n  }\n\n  selectInterval() {\n    this.reload();\n    this.index = 0;\n  }\n\n  reload() {\n    if(this._weatherHistory) {\n      if(this.selectedTimeInterval == TimeInterval.day) {\n        this.dataSet = this.historyTileService.getHistoryDataSetHoursPerDayFrom(this._weatherHistory);\n        return\n      }\n      if(this.selectedTimeInterval == TimeInterval.week) {\n        this.dataSet = this.historyTileService.getHistoryDataSetDaysPerWeekFrom(this._weatherHistory);\n        return\n      }\n      if(this.selectedTimeInterval == TimeInterval.month) {\n        this.dataSet = this.historyTileService.getHistoryDataSetHoursPerDayFrom(this._weatherHistory);\n        return\n      }\n    }\n  }\n\n  forward(): void {\n    if(this.isForwardPossible()) {\n     this.index = this.index + 1;\n    }\n  }\n\n  isForwardPossible(): boolean {\n    if(this.dataSet && this.dataSet.length > this.index + 1)  {\n      return true\n    }\n    return false;\n  }\n\n  back(): void {\n    if(this.isBackPossible()) {\n      this.index = this.index - 1;\n    } \n  }\n\n  isBackPossible(): boolean {\n    if(this.index > 0) {\n      return true\n    }\n    return false;\n  }\n\n  getAverageTempString(): string {\n    if(this.dataSet){\n      return this.dataSet[this.index].temperatureAverage + \"°C\"\n    }\n    return \"\"\n  }\n  getAverageHumidityString(): string {\n    if(this.dataSet){\n      return this.dataSet[this.index].humidityAverage + \"%\"\n    }\n    return \"\"\n  }\n}\n\nenum TimeInterval {\n  day,\n  week,\n  month,\n}\n\n    \n\n    \n        \n\n    \n        Sortierung: \n        \n            Tag\n            Woche\n            Monat\n        \n    \n\n    \n        \n            \n                \n            \n        \n        {{dataSet[index].label}}\n        \n            \n                \n                    \n        \n    \n\n    \n        \n            \n            \n            \n            \n        \n        \n            \n            \n            \n            \n        \n    \n\n     \n        Good to know\n            \n                Die Wetterbeobachtung und Wetteraufzeichnung existiert schon seit Jahrtausenden. Neben den Beobachtungsdaten der Wetterstationen werden zur Bewertung der Klimamodelle häufig auch aufbereitete Daten eingesetzt, die, ausgehend von den Beobachtungen, auf ein regelmäßiges räumliches Raster umgerechnet werden. Zusätzlich zu den traditionellen Beobachtungen wurde das Wetter während der vergangenen Jahrzehnte auch mit Satelliten und Wetterradaren beobachtet.Wie signifikant ein Trend ausfällt, hängt von der betrachteten Klimagröße, der Region, der Jahreszeit und dem Zeitraum der Auswertung ab.\n            \n    \n\n    \n\n    \n                \n                    ./history-detail-view.component.scss\n                \n                .round-button * {\n    stroke: var(--text);\n}\n\n.round-button {\n    height: 50px;\n    width: 70px;\n}\n\nbutton.disabled * {\n    stroke: var(--secondary);\n}\n\n.button-container {\n    display: flex;\n    justify-content: space-between;\n    padding: 0 0 var(--padding) 0;\n    flex-wrap: nowrap;\n    align-items: center;\n}\n\n.flex-container {\n    display: flex;\n    justify-content: space-between;\n    flex-wrap: wrap;\n}\n\n.tile-container {\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-start;\n}\n\n.sort-container {\n    display: flex;\n    flex-direction: row;\n    flex-wrap: nowrap;\n    justify-content: flex-end;\n    padding-bottom: var(--padding);\n    p {\n        padding-right: 0.5em;\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Sortierung:                     Tag            Woche            Monat                                                                                {{dataSet[index].label}}                                                                                                                                                                                                                         Good to know                            Die Wetterbeobachtung und Wetteraufzeichnung existiert schon seit Jahrtausenden. Neben den Beobachtungsdaten der Wetterstationen werden zur Bewertung der Klimamodelle häufig auch aufbereitete Daten eingesetzt, die, ausgehend von den Beobachtungen, auf ein regelmäßiges räumliches Raster umgerechnet werden. Zusätzlich zu den traditionellen Beobachtungen wurde das Wetter während der vergangenen Jahrzehnte auch mit Satelliten und Wetterradaren beobachtet.Wie signifikant ein Trend ausfällt, hängt von der betrachteten Klimagröße, der Region, der Jahreszeit und dem Zeitraum der Auswertung ab.                '\n    var COMPONENTS = [{'name': 'ApparentTemperatureTileViewComponent', 'selector': 'app-apparent-temperature-tile-view'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BackButtonElementComponent', 'selector': 'app-back-button-element'},{'name': 'CardElementComponent', 'selector': 'card-element'},{'name': 'CheckboxSwitcherElementComponent', 'selector': 'app-checkbox-switcher-element'},{'name': 'ConfigurationTilePopUpDialogView', 'selector': 'configuration-tile-popup-view'},{'name': 'ConfigurationTileViewComponent', 'selector': 'app-configuration-tile-view'},{'name': 'ConfigurationViewComponent', 'selector': 'app-configuration-view'},{'name': 'DashboardScreenComponent', 'selector': 'app-dashboard-screen'},{'name': 'DetailScreenComponent', 'selector': 'app-detail-screen'},{'name': 'ForecastDetailViewComponent', 'selector': 'app-forecast-detail-view'},{'name': 'ForecastTileViewComponent', 'selector': 'app-forecast-tile-view'},{'name': 'HistoryDetailViewComponent', 'selector': 'app-history-detail-view'},{'name': 'HistoryTileViewComponent', 'selector': 'app-history-tile-view'},{'name': 'HumidityTileViewComponent', 'selector': 'app-humidity-tile-view'},{'name': 'IndoorDetailViewComponent', 'selector': 'app-indoor-detail-view'},{'name': 'IndoorTileViewComponent', 'selector': 'app-indoor-tile-view'},{'name': 'LoginViewComponent', 'selector': 'app-login-view'},{'name': 'MenuBarElementComponent', 'selector': 'app-menu-bar-element'},{'name': 'MenuButtonElementComponent', 'selector': 'app-menu-button-element'},{'name': 'MenuElementComponent', 'selector': 'app-menu-element'},{'name': 'NavBarElementComponent', 'selector': 'app-nav-bar-element'},{'name': 'OnboardingScreenComponent', 'selector': 'app-onboarding-screen'},{'name': 'OpenAPELoginTileViewComponent', 'selector': 'app-open-apelogin-tile-view'},{'name': 'OutdoorWeatherDetailViewComponent', 'selector': 'app-outdoor-weather-detail-view'},{'name': 'OutdoorWeatherViewComponent', 'selector': 'app-outdoor-weather-view'},{'name': 'PersonalizationSettingsViewComponent', 'selector': 'app-personalization-settings-view'},{'name': 'PersonalizationViewComponent', 'selector': 'app-personalization-view'},{'name': 'PollenflugDetailViewComponent', 'selector': 'app-pollenflug-detail-view'},{'name': 'PollenflugSmallTileComponent', 'selector': 'app-pollenflug-small-tile'},{'name': 'PollenflugTileViewComponent', 'selector': 'app-pollenflug-tile-view'},{'name': 'PollenListElementComponent', 'selector': 'app-pollen-list-element'},{'name': 'PollenTagElementComponent', 'selector': 'app-pollen-tag-element'},{'name': 'ProgressChartElementComponent', 'selector': 'app-progress-chart-element'},{'name': 'RegistrationViewComponent', 'selector': 'app-registration-view'},{'name': 'SettingsScreenComponent', 'selector': 'app-settings-screen'},{'name': 'SimpleTileViewComponent', 'selector': 'app-simple-tile-view'},{'name': 'SliderElementComponent', 'selector': 'app-slider-element'},{'name': 'TtsPlayerElementComponent', 'selector': 'app-tts-player-element'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HistoryDetailViewComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HistoryTileService.html":{"url":"injectables/HistoryTileService.html","title":"injectable - HistoryTileService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  HistoryTileService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/history-tile.service.ts\n        \n\n            \n                Description\n            \n            \n                History tile service injectable\nUse this service to convert WeatherHistoryData objects to GraphDataSet[ ] objects.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getHistoryDataSetDaysPerWeekFrom\n                            \n                            \n                                    Public\n                                getHistoryDataSetHoursPerDayFrom\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/history-tile.service.ts:12\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getHistoryDataSetDaysPerWeekFrom\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getHistoryDataSetDaysPerWeekFrom(weatherHistoryData: WeatherHistoryData)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/history-tile.service.ts:24\n                \n            \n\n\n            \n                \n                    Converts the datapoints of a WeahterHistoryData object to a GraphDataSet[ ] object\nIn this way all components which are using the external charts library can easily\nshow the prefered data without any further conversion. \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    weatherHistoryData\n                                    \n                                                WeatherHistoryData\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The history data object to convert \n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         GraphDataSet[]\n\n                    \n                    \n                        The history data sorted by days per week per GraphDataSet object\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getHistoryDataSetHoursPerDayFrom\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getHistoryDataSetHoursPerDayFrom(weatherHistoryData: WeatherHistoryData)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/history-tile.service.ts:92\n                \n            \n\n\n            \n                \n                    Converts the datapoints of a WeahterHistoryData object to a GraphDataSet[ ] object\nIn this way all components which are using the external charts library can easily\nshow the prefered data without any further conversion. \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    weatherHistoryData\n                                    \n                                                WeatherHistoryData\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The history data object to convert \n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         GraphDataSet[]\n\n                    \n                    \n                        The history data sorted by hours per day per GraphDataSet object\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { GraphDataSet, OutdoorWeatherData, WeatherHistoryData } from '../model/weather';\n\n/**\n * History tile service injectable\n * \n * Use this service to convert WeatherHistoryData objects to GraphDataSet[ ] objects.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class HistoryTileService {\n  constructor() { \n  }\n\n  /**\n   * Converts the datapoints of a WeahterHistoryData object to a GraphDataSet[ ] object\n   * In this way all components which are using the external charts library can easily\n   * show the prefered data without any further conversion. \n   * \n   * @param {WeatherHistoryData} weatherHistoryData  The history data object to convert \n   * @returns The history data sorted by days per week per GraphDataSet object\n   */\n  public getHistoryDataSetDaysPerWeekFrom(weatherHistoryData: WeatherHistoryData): GraphDataSet[] {\n    if (weatherHistoryData.datapoints.length > 0) {\n      let dataSet: GraphDataSet[] = []\n      let dataPoints = weatherHistoryData.datapoints\n\n      console.log( \"Hier ist es wichtig\", dataPoints);\n\n      dataPoints.sort((a, b) => {\n        return b.timestamp.getTime() - a.timestamp.getTime()\n      });\n\n      console.log(dataPoints);\n\n      let lastDate: Date = dataPoints[0].timestamp;\n      let lastWeek: number = this.getWeekNumber(lastDate);\n      let label: string = this.getWeekStringFromWeekNumber(lastWeek)\n      let temperatureDataPoints: number[]  = []; \n      let humidityDataPoints : number[] = [];\n      let xAxisLabels: string[] = [];\n      let temperatureSumOfWeek = 0\n      let humiditySumOfWeek = 0\n      let index = 0\n\n      for (const item of dataPoints) {\n        if(lastDate.getDate() > item.timestamp.getDate() || lastDate.getMonth() > item.timestamp.getMonth()) {\n          const averageTemperature = temperatureSumOfWeek / index;\n          const averageHumidity = humiditySumOfWeek / index;\n          temperatureDataPoints.push(Math.round(averageTemperature));\n          humidityDataPoints.push(Math.round(averageHumidity));\n          xAxisLabels.push(this.getWeekDayStringFromDate(lastDate))\n          index = 0;\n          temperatureSumOfWeek = 0;\n          humiditySumOfWeek = 0;\n          lastDate = item.timestamp\n          if(lastWeek > this.getWeekNumber(item.timestamp)) {\n            dataSet.push(this.createWeatherGraphDataSet(temperatureDataPoints, humidityDataPoints, xAxisLabels, label));\n            temperatureDataPoints = [];\n            humidityDataPoints = [];\n            xAxisLabels = [];\n            lastWeek = this.getWeekNumber(lastDate);\n            label = this.getWeekStringFromWeekNumber(lastWeek);\n          }\n        }\n        index = index + 1;\n        temperatureSumOfWeek = temperatureSumOfWeek + item.temperature;\n        humiditySumOfWeek = humiditySumOfWeek + item.humidity;\n      }\n      const averageTemperature = temperatureSumOfWeek / index;\n      const averageHumidity = humiditySumOfWeek / index;\n      temperatureDataPoints.push(Math.round(averageTemperature));\n      humidityDataPoints.push(Math.round(averageHumidity));\n      xAxisLabels.push(this.getWeekDayStringFromDate(lastDate))\n      dataSet.push(this.createWeatherGraphDataSet(temperatureDataPoints, humidityDataPoints, xAxisLabels, label));\n\n      console.log('Created History By Week')\n      return dataSet;\n    }\n    return [];\n  }\n\n  /**\n   * Converts the datapoints of a WeahterHistoryData object to a GraphDataSet[ ] object\n   * In this way all components which are using the external charts library can easily\n   * show the prefered data without any further conversion. \n   * \n   * @param {WeatherHistoryData} weatherHistoryData  The history data object to convert \n   * @returns The history data sorted by hours per day per GraphDataSet object\n   */\n   public getHistoryDataSetHoursPerDayFrom(weatherHistoryData: WeatherHistoryData): GraphDataSet[] {\n    if (weatherHistoryData.datapoints.length > 0) {\n      let dataSet: GraphDataSet[] = []\n      let dataPoints = weatherHistoryData.datapoints\n\n      dataPoints.sort((a, b) => {\n        return b.timestamp.getTime() - a.timestamp.getTime()\n      });\n\n      let lastDate: Date = dataPoints[0].timestamp;\n      let lastHour: number = lastDate.getHours();\n      let label: string = this.getDateStringFromDate(lastDate);\n      let temperatureDataPoints: number[]  = []; \n      let humidityDataPoints : number[] = [];\n      let xAxisLabels: string[] = [];\n      let temperatureSumOfWeek = 0\n      let humiditySumOfWeek = 0\n      let index = 0\n\n      for (const item of dataPoints) {\n        if(lastDate.getHours() > item.timestamp.getHours() || lastDate.getDate() > item.timestamp.getDate() || lastDate.getMonth() > item.timestamp.getMonth()) {\n          const averageTemperature = temperatureSumOfWeek / index;\n          const averageHumidity = humiditySumOfWeek / index;\n          temperatureDataPoints.push(Math.round(averageTemperature));\n          humidityDataPoints.push(Math.round(averageHumidity));\n          xAxisLabels.push(this.getHourString(lastHour))\n          index = 0;\n          temperatureSumOfWeek = 0;\n          humiditySumOfWeek = 0;\n          if(lastDate.getDate() > item.timestamp.getDate() || lastDate.getMonth() > item.timestamp.getMonth()) {\n            dataSet.push(this.createWeatherGraphDataSet(temperatureDataPoints, humidityDataPoints, xAxisLabels, label));\n            temperatureDataPoints = [];\n            humidityDataPoints = [];\n            xAxisLabels = [];\n          }\n            lastDate = item.timestamp;\n            lastHour = lastDate.getHours();\n            label = this.getDateStringFromDate(lastDate);\n          \n        }\n        index = index + 1;\n        temperatureSumOfWeek = temperatureSumOfWeek + item.temperature;\n        humiditySumOfWeek = humiditySumOfWeek + item.humidity;\n      }\n      const averageTemperature = temperatureSumOfWeek / index;\n      const averageHumidity = humiditySumOfWeek / index;\n      temperatureDataPoints.push(Math.round(averageTemperature));\n      humidityDataPoints.push(Math.round(averageHumidity));\n      xAxisLabels.push(this.getHourString(lastHour))\n      dataSet.push(this.createWeatherGraphDataSet(temperatureDataPoints, humidityDataPoints, xAxisLabels, label));\n\n      console.log('Created History By Day')\n      console.log(dataSet);\n      return dataSet;\n    }\n    return [];\n  }\n\n  /**\n   * @param {number} hour \n   * @returns A readable string of the hour\n   */\n  private getHourString(hour: number): string {\n    return hour + ' Uhr';\n  }\n\n  /**\n   * @param {number} week \n   * @returns A readable string of the week\n   */\n  private getWeekStringFromWeekNumber(week: number): string {\n    return 'Kalenderwoche ' + week;\n  }\n  \n  /**\n   * @param {date} date \n   * @returns A readable string of the WEEKDAY\n   */\n  private getWeekDayStringFromDate(date: Date): string {\n    return DAYS[date.getDay()] + ', ' + date.getDate() + '. ' + date.getMonth() + '.' ;\n  }\n\n  /**\n   * @param {number} hour \n   * @returns A readable string of the date\n   */\n  private getDateStringFromDate(date: Date): string {\n    const day = date.getDate();\n    const month = MONTHS[date.getMonth()];\n    const year = date.getFullYear();\n\n    return DAYS[date.getDay()] + ', ' + day + ' ' + month + ' ' + year\n  }\n\n  /**\n   * @param {Date} date \n   * @returns A readable string of the week number of the year\n   */\n  private getWeekNumber(inputDate: Date) {\n    let date = new Date(Date.UTC(inputDate.getFullYear(), inputDate.getMonth(), inputDate.getDate()));\n    let dayNum = date.getUTCDay() || 7;\n    date.setUTCDate(date.getUTCDate() + 4 - dayNum);\n    let yearStart = new Date(Date.UTC(date.getUTCFullYear(),0,1));\n\n    console.log(Math.ceil((((date.valueOf() - yearStart.valueOf()) / 86400000) + 1)/7) + ' for: ' + inputDate);\n\n    return Math.ceil((((date.valueOf() - yearStart.valueOf()) / 86400000) + 1)/7)\n  };\n\n  /**\n   * Calculates the average temperature and humidity for the \n   * GraphDataSet object\n   * \n   * @param {number[]} temperatureData \n   * @param {number[]} humidityData \n   * @param {string[]} xAxisLabels\n   * @param {string} label\n   * @returns A GraphDataSet object\n   */\n  private createWeatherGraphDataSet(temperatureData: number[], humidityData: number[], xAxisLabels: string[], label: string): GraphDataSet{\n    const tempSum = temperatureData.reduce(function (accumulator, currentValue) {\n      return accumulator + currentValue;\n    }, 0)\n    const humiditySum = humidityData.reduce(function (accumulator, currentValue) {\n      return accumulator + currentValue;\n    }, 0)\n\n    const tempAverage = tempSum / temperatureData.length\n    const humidityAverage = humiditySum / humidityData.length\n\n    return {\n      temperatureDataPoints: temperatureData.reverse(),\n      humidityDataPoints: humidityData.reverse(),\n      xAxisLabel: xAxisLabels.reverse(),\n      label: label,\n      temperatureAverage: Math.round(tempAverage),\n      humidityAverage: Math.round(humidityAverage),\n    }\n  }\n}\n\n/**\n * Readable string constants of days and months\n */\nconst DAYS = ['So','Mo','Di','Mi','Do','Fr','Sa'];\nconst MONTHS = ['Januar','Februar','März','April','Mai','Juni','Juli','August','September','Oktober','November','Dezember'];\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HistoryTileViewComponent.html":{"url":"components/HistoryTileViewComponent.html","title":"component - HistoryTileViewComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HistoryTileViewComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/views/history-tile-view/history-tile-view.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-history-tile-view\n            \n\n            \n                styleUrls\n                ./history-tile-view.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./history-tile-view.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                _dataSet\n                            \n                            \n                                _graphType\n                            \n                            \n                                chartColors\n                            \n                            \n                                chartData\n                            \n                            \n                                chartLabels\n                            \n                            \n                                chartLegend\n                            \n                            \n                                chartOptions\n                            \n                            \n                                chartPlugins\n                            \n                            \n                                theme\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                updateChartData\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                graphType\n                            \n                            \n                                pressable\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    graphType\n                                \n                                \n                                    data\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/views/history-tile-view/history-tile-view.component.ts:43\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        data\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/views/history-tile-view/history-tile-view.component.ts:23\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        graphType\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/views/history-tile-view/history-tile-view.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        pressable\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/views/history-tile-view/history-tile-view.component.ts:12\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        title\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/views/history-tile-view/history-tile-view.component.ts:13\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/views/history-tile-view/history-tile-view.component.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateChartData\n                        \n                        \n                    \n                \n            \n            \n                \nupdateChartData(chartDataset: ChartDataset[], chartColors: ChartColor, dataSet: GraphDataSet, graphType: HistoryGraphType)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/views/history-tile-view/history-tile-view.component.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    chartDataset\n                                    \n                                            ChartDataset[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    chartColors\n                                    \n                                            ChartColor\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dataSet\n                                    \n                                                GraphDataSet\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    graphType\n                                    \n                                                HistoryGraphType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            _dataSet\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         GraphDataSet\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/views/history-tile-view/history-tile-view.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _graphType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         HistoryGraphType\n\n                        \n                    \n                    \n                        \n                            Default value : HistoryGraphType.temperature\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/views/history-tile-view/history-tile-view.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            chartColors\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ChartColor\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/views/history-tile-view/history-tile-view.component.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            chartData\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ChartDataset[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    { data: [], label: '' },\n  ]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/views/history-tile-view/history-tile-view.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            chartLabels\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ChartLabel[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/views/history-tile-view/history-tile-view.component.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            chartLegend\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/views/history-tile-view/history-tile-view.component.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            chartOptions\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    responsive: true,\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/views/history-tile-view/history-tile-view.component.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            chartPlugins\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/views/history-tile-view/history-tile-view.component.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            theme\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Themes\n\n                        \n                    \n                    \n                        \n                            Default value : Themes.Light\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/views/history-tile-view/history-tile-view.component.ts:30\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        graphType\n                    \n                \n\n\n                \n                    \n                        setgraphType(type)\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/views/history-tile-view/history-tile-view.component.ts:15\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            type\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        data\n                    \n                \n\n\n                \n                    \n                        setdata(data)\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/views/history-tile-view/history-tile-view.component.ts:23\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            data\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { Themes } from 'src/app/model/user-context';\nimport { GraphDataSet, WeatherData } from 'src/app/model/weather';\nimport { DatasetColor, ChartLabel, ChartColor, ChartDataset } from '@rinminase/ng-charts';\n\n@Component({\n  selector: 'app-history-tile-view',\n  templateUrl: './history-tile-view.component.html',\n  styleUrls: ['./history-tile-view.component.scss']\n})\nexport class HistoryTileViewComponent implements OnInit {\n  @Input() pressable: boolean = false;\n  @Input() title?: string;\n  @Input() \n  set graphType(type: HistoryGraphType) {\n    this._graphType = type;\n    if(this._dataSet) {\n      this.updateChartData(this.chartData, this.chartColors, this._dataSet, this._graphType)\n    }\n  }\n  _graphType: HistoryGraphType = HistoryGraphType.temperature\n  @Input()\n  set data(data: WeatherData) {\n    this._dataSet = data as GraphDataSet;\n    if(this._dataSet) {\n      this.updateChartData(this.chartData, this.chartColors, this._dataSet, this._graphType)\n    }\n  }\n  _dataSet?: GraphDataSet;\n  theme: Themes = Themes.Light;\n\n\n  // Chart data\n  chartData: ChartDataset[] = [\n    { data: [], label: '' },\n  ];\n  chartLabels: ChartLabel[] = [];\n  chartOptions = {\n    responsive: true,\n  };\n  chartColors: ChartColor = [];\n  chartLegend = false;\n  chartPlugins = [];\n\n  constructor() { }\n\n  ngOnInit(): void { }\n  \n  updateChartData(chartDataset: ChartDataset[], chartColors: ChartColor, dataSet: GraphDataSet, graphType: HistoryGraphType) {\n    switch (graphType) {\n      case HistoryGraphType.temperature:\n        chartDataset[0].data = dataSet.temperatureDataPoints\n        chartDataset[0].label = \"°C\"\n        chartColors[0] = {\n          borderColor: 'red',\n          backgroundColor: 'rgba(255,0,0,0.1)',\n        };\n        break;\n      case HistoryGraphType.humidity:\n        chartDataset[0].data = dataSet.humidityDataPoints\n        chartDataset[0].label = \"%\"\n        chartColors[0] = {\n          borderColor: 'blue',\n          backgroundColor: 'rgba(0,0,255,0.1)',\n        };\n        break;\n    }\n    this.chartLabels = dataSet.xAxisLabel\n\n  }\n\n}\n\nexport enum HistoryGraphType {\n  temperature,\n  humidity\n}\n\n\n    \n\n    \n        \n    \n       -->\n    \n\n    \n    \n\n\n    \n\n    \n                \n                    ./history-tile-view.component.scss\n                \n                .container {\n    width: calc(100vw - var(--padding) - var(--padding) - var(--border-padding-left) - var(--border-padding-right));\n    font-size: 1.6em;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '           -->            '\n    var COMPONENTS = [{'name': 'ApparentTemperatureTileViewComponent', 'selector': 'app-apparent-temperature-tile-view'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BackButtonElementComponent', 'selector': 'app-back-button-element'},{'name': 'CardElementComponent', 'selector': 'card-element'},{'name': 'CheckboxSwitcherElementComponent', 'selector': 'app-checkbox-switcher-element'},{'name': 'ConfigurationTilePopUpDialogView', 'selector': 'configuration-tile-popup-view'},{'name': 'ConfigurationTileViewComponent', 'selector': 'app-configuration-tile-view'},{'name': 'ConfigurationViewComponent', 'selector': 'app-configuration-view'},{'name': 'DashboardScreenComponent', 'selector': 'app-dashboard-screen'},{'name': 'DetailScreenComponent', 'selector': 'app-detail-screen'},{'name': 'ForecastDetailViewComponent', 'selector': 'app-forecast-detail-view'},{'name': 'ForecastTileViewComponent', 'selector': 'app-forecast-tile-view'},{'name': 'HistoryDetailViewComponent', 'selector': 'app-history-detail-view'},{'name': 'HistoryTileViewComponent', 'selector': 'app-history-tile-view'},{'name': 'HumidityTileViewComponent', 'selector': 'app-humidity-tile-view'},{'name': 'IndoorDetailViewComponent', 'selector': 'app-indoor-detail-view'},{'name': 'IndoorTileViewComponent', 'selector': 'app-indoor-tile-view'},{'name': 'LoginViewComponent', 'selector': 'app-login-view'},{'name': 'MenuBarElementComponent', 'selector': 'app-menu-bar-element'},{'name': 'MenuButtonElementComponent', 'selector': 'app-menu-button-element'},{'name': 'MenuElementComponent', 'selector': 'app-menu-element'},{'name': 'NavBarElementComponent', 'selector': 'app-nav-bar-element'},{'name': 'OnboardingScreenComponent', 'selector': 'app-onboarding-screen'},{'name': 'OpenAPELoginTileViewComponent', 'selector': 'app-open-apelogin-tile-view'},{'name': 'OutdoorWeatherDetailViewComponent', 'selector': 'app-outdoor-weather-detail-view'},{'name': 'OutdoorWeatherViewComponent', 'selector': 'app-outdoor-weather-view'},{'name': 'PersonalizationSettingsViewComponent', 'selector': 'app-personalization-settings-view'},{'name': 'PersonalizationViewComponent', 'selector': 'app-personalization-view'},{'name': 'PollenflugDetailViewComponent', 'selector': 'app-pollenflug-detail-view'},{'name': 'PollenflugSmallTileComponent', 'selector': 'app-pollenflug-small-tile'},{'name': 'PollenflugTileViewComponent', 'selector': 'app-pollenflug-tile-view'},{'name': 'PollenListElementComponent', 'selector': 'app-pollen-list-element'},{'name': 'PollenTagElementComponent', 'selector': 'app-pollen-tag-element'},{'name': 'ProgressChartElementComponent', 'selector': 'app-progress-chart-element'},{'name': 'RegistrationViewComponent', 'selector': 'app-registration-view'},{'name': 'SettingsScreenComponent', 'selector': 'app-settings-screen'},{'name': 'SimpleTileViewComponent', 'selector': 'app-simple-tile-view'},{'name': 'SliderElementComponent', 'selector': 'app-slider-element'},{'name': 'TtsPlayerElementComponent', 'selector': 'app-tts-player-element'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HistoryTileViewComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HumidityTileViewComponent.html":{"url":"components/HumidityTileViewComponent.html","title":"component - HumidityTileViewComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HumidityTileViewComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/views/humidity-tile-view/humidity-tile-view.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-humidity-tile-view\n            \n\n            \n                styleUrls\n                ./humidity-tile-view.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./humidity-tile-view.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                _humidity\n                            \n                            \n                                cardSizeType\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                hideSubtitle\n                            \n                            \n                                pressable\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    data\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/views/humidity-tile-view/humidity-tile-view.component.ts:19\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        data\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/views/humidity-tile-view/humidity-tile-view.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        hideSubtitle\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/views/humidity-tile-view/humidity-tile-view.component.ts:12\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        pressable\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/views/humidity-tile-view/humidity-tile-view.component.ts:11\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/views/humidity-tile-view/humidity-tile-view.component.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            _humidity\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/views/humidity-tile-view/humidity-tile-view.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cardSizeType\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : CardSize\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/views/humidity-tile-view/humidity-tile-view.component.ts:19\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        data\n                    \n                \n\n\n                \n                    \n                        setdata(data)\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/views/humidity-tile-view/humidity-tile-view.component.ts:14\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            data\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { OutdoorWeatherData, PollenData, WeatherData } from 'src/app/model/weather';\nimport { CardSize } from '../../ui-elements/card-element/card-element.component';\n\n@Component({\n  selector: 'app-humidity-tile-view',\n  templateUrl: './humidity-tile-view.component.html',\n  styleUrls: ['./humidity-tile-view.component.scss']\n})\nexport class HumidityTileViewComponent implements OnInit {\n  @Input() pressable: boolean = false;\n  @Input() hideSubtitle: boolean = false;\n  @Input()\n  set data(data: WeatherData) {\n    let outdoorWeatherData = data as OutdoorWeatherData\n    this._humidity = outdoorWeatherData.humidity;\n  }\n  _humidity?: number;\n  cardSizeType = CardSize;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        \n    \n        {{_humidity}}%  \n    \n\n    \n\n    \n                \n                    ./humidity-tile-view.component.scss\n                \n                h1 {\n    margin: 0;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{_humidity}}%      '\n    var COMPONENTS = [{'name': 'ApparentTemperatureTileViewComponent', 'selector': 'app-apparent-temperature-tile-view'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BackButtonElementComponent', 'selector': 'app-back-button-element'},{'name': 'CardElementComponent', 'selector': 'card-element'},{'name': 'CheckboxSwitcherElementComponent', 'selector': 'app-checkbox-switcher-element'},{'name': 'ConfigurationTilePopUpDialogView', 'selector': 'configuration-tile-popup-view'},{'name': 'ConfigurationTileViewComponent', 'selector': 'app-configuration-tile-view'},{'name': 'ConfigurationViewComponent', 'selector': 'app-configuration-view'},{'name': 'DashboardScreenComponent', 'selector': 'app-dashboard-screen'},{'name': 'DetailScreenComponent', 'selector': 'app-detail-screen'},{'name': 'ForecastDetailViewComponent', 'selector': 'app-forecast-detail-view'},{'name': 'ForecastTileViewComponent', 'selector': 'app-forecast-tile-view'},{'name': 'HistoryDetailViewComponent', 'selector': 'app-history-detail-view'},{'name': 'HistoryTileViewComponent', 'selector': 'app-history-tile-view'},{'name': 'HumidityTileViewComponent', 'selector': 'app-humidity-tile-view'},{'name': 'IndoorDetailViewComponent', 'selector': 'app-indoor-detail-view'},{'name': 'IndoorTileViewComponent', 'selector': 'app-indoor-tile-view'},{'name': 'LoginViewComponent', 'selector': 'app-login-view'},{'name': 'MenuBarElementComponent', 'selector': 'app-menu-bar-element'},{'name': 'MenuButtonElementComponent', 'selector': 'app-menu-button-element'},{'name': 'MenuElementComponent', 'selector': 'app-menu-element'},{'name': 'NavBarElementComponent', 'selector': 'app-nav-bar-element'},{'name': 'OnboardingScreenComponent', 'selector': 'app-onboarding-screen'},{'name': 'OpenAPELoginTileViewComponent', 'selector': 'app-open-apelogin-tile-view'},{'name': 'OutdoorWeatherDetailViewComponent', 'selector': 'app-outdoor-weather-detail-view'},{'name': 'OutdoorWeatherViewComponent', 'selector': 'app-outdoor-weather-view'},{'name': 'PersonalizationSettingsViewComponent', 'selector': 'app-personalization-settings-view'},{'name': 'PersonalizationViewComponent', 'selector': 'app-personalization-view'},{'name': 'PollenflugDetailViewComponent', 'selector': 'app-pollenflug-detail-view'},{'name': 'PollenflugSmallTileComponent', 'selector': 'app-pollenflug-small-tile'},{'name': 'PollenflugTileViewComponent', 'selector': 'app-pollenflug-tile-view'},{'name': 'PollenListElementComponent', 'selector': 'app-pollen-list-element'},{'name': 'PollenTagElementComponent', 'selector': 'app-pollen-tag-element'},{'name': 'ProgressChartElementComponent', 'selector': 'app-progress-chart-element'},{'name': 'RegistrationViewComponent', 'selector': 'app-registration-view'},{'name': 'SettingsScreenComponent', 'selector': 'app-settings-screen'},{'name': 'SimpleTileViewComponent', 'selector': 'app-simple-tile-view'},{'name': 'SliderElementComponent', 'selector': 'app-slider-element'},{'name': 'TtsPlayerElementComponent', 'selector': 'app-tts-player-element'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HumidityTileViewComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ImageModel.html":{"url":"interfaces/ImageModel.html","title":"interface - ImageModel","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ImageModel\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/image.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        dark\n                                \n                                \n                                            Optional\n                                        highContrast\n                                \n                                \n                                        light\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        dark\n                                    \n                                \n                                \n                                    \n                                        dark:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        highContrast\n                                    \n                                \n                                \n                                    \n                                        highContrast:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        light\n                                    \n                                \n                                \n                                    \n                                        light:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ImageModel {\n    dark: string,\n    light: string,\n    highContrast?: string\n  }\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ImageService.html":{"url":"injectables/ImageService.html","title":"injectable - ImageService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ImageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/image.service.ts\n        \n\n            \n                Description\n            \n            \n                Image service injectable\nUse this service to get the full assets path of an image.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getGradientStyleFor\n                            \n                            \n                                    Public\n                                getImageSrcFrom\n                            \n                            \n                                    Public\n                                getWeatherIconString\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userContextService: UserContextService, breakpointObserver: BreakpointObserver)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/image.service.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userContextService\n                                                  \n                                                        \n                                                                        UserContextService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        breakpointObserver\n                                                  \n                                                        \n                                                                    BreakpointObserver\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getGradientStyleFor\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getGradientStyleFor(weather: string | undefined)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/image.service.ts:60\n                \n            \n\n\n            \n                \n                    Use this function to get the current background gradient\nsuiteable for the current weahther and daytime.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    weather\n                                    \n                                            string | undefined\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     literal type\n\n                    \n                    \n                        The full assets path of the image\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getImageSrcFrom\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getImageSrcFrom(imageModel: ImageModel)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/image.service.ts:34\n                \n            \n\n\n            \n                \n                    Use this function to get the image src in the applied color scheme \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    imageModel\n                                    \n                                                ImageModel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the image model of the prefered image\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        The full assets path of the image in the applied color scheme\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getWeatherIconString\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getWeatherIconString(weather: string | undefined)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/image.service.ts:92\n                \n            \n\n\n            \n                \n                    Use this function to get the image src of the current weather icon\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    weather\n                                    \n                                            string | undefined\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string | undefined\n\n                    \n                    \n                        The full assets path of the image\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { BreakpointObserver, BreakpointState } from '@angular/cdk/layout';\nimport { Injectable } from '@angular/core';\nimport { ImageModel } from '../model/image';\nimport { Themes, UserContext } from '../model/user-context';\nimport { Daytime } from '../model/weather';\nimport { UserContextService } from './user-context.service';\n\n/**\n * Image service injectable\n *\n * Use this service to get the full assets path of an image.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class ImageService {\n  private baseURLIcons = 'assets/icons/';\n  private baseURLWeather = 'assets/weather/';\n  private userContext?: UserContext;\n  private systemTheme = Themes.Light;\n\n  constructor(private userContextService: UserContextService,\n              private breakpointObserver: BreakpointObserver) { \n    this.loadUserContext();\n    this.systemThemeBreakpointObserver();\n  }\n\n  /**\n   * Use this function to get the image src in the applied color scheme \n   * \n   * @param {ImageModel} imageModel  the image model of the prefered image\n   * @returns The full assets path of the image in the applied color scheme\n   */\n  public getImageSrcFrom(imageModel: ImageModel): string {\n    const userContextTheme = this.userContext?.theme\n    switch(userContextTheme) {\n      case Themes.Automatic: \n        if(this.systemTheme == Themes.Dark) {\n          return this.baseURLIcons + imageModel.dark;\n        } else {\n          return this.baseURLIcons + imageModel.light;\n        }\n      case Themes.Dark: \n        return this.baseURLIcons + imageModel.dark;\n      case Themes.Light: \n        return this.baseURLIcons + imageModel.light;\n      case Themes.HighContrast: \n        return imageModel.highContrast ? this.baseURLIcons + imageModel.highContrast : this.baseURLIcons + imageModel.dark;\n      default: return ''\n    }\n  }\n\n  /**\n   * Use this function to get the current background gradient\n   * suiteable for the current weahther and daytime.\n   * \n   * @param {weather} string  the current weather string\n   * @returns The full assets path of the image\n   */\n  public getGradientStyleFor(weather: string | undefined): { background: string, filter: string }  {\n    if(this.userContext?.theme === Themes.HighContrast) {\n      return Gradients.highContrast;\n    }\n    switch (weather) {\n      case 'cloudy':\n      case 'rain':\n      case 'wind':\n      case 'sleet':\n      case 'fog':\n      case 'thunderstorm':\n        switch (this.getDaytime()) {\n          case Daytime.noon: return Gradients.noonDark\n          case Daytime.dawn: return Gradients.dawnDark\n          case Daytime.night: return Gradients.nightDark\n        }\n      default: {\n        switch (this.getDaytime()) {\n          case Daytime.noon: return Gradients.noon\n          case Daytime.dawn: return Gradients.dawn\n          case Daytime.night: return Gradients.night\n        }\n      }\n    }\n  }\n\n  /**\n   * Use this function to get the image src of the current weather icon\n   * \n   * @param {weather} WeatherType  the current weather\n   * @returns The full assets path of the image\n   */\n   public getWeatherIconString(weather: string | undefined): string | undefined {\n    let src = this.baseURLWeather;\n    if(weather !== undefined) {\n      switch (weather) {\n        case \"sunny\":  return src + 'clear-day' + '.png'\n        case \"sunny_cloudy\":  return src + 'partly-cloudy-day' + '.png'\n        case \"rainy\": return src + 'rain' + '.png'\n        case \"worsening\":  return src + 'worsening' + '.png'\n        default: return src + weather + '.png'\n      }\n    } else {\n      return undefined\n    }\n  }\n\n  /**\n  * Observe the system color scheme for changes\n  */\n  private systemThemeBreakpointObserver() {\n    this.breakpointObserver\n    .observe(['(prefers-color-scheme: dark)'])\n    .subscribe((state: BreakpointState) => {\n      if (state.matches) {\n        this.systemTheme = Themes.Dark;\n      } else {\n        this.systemTheme = Themes.Light;\n      }\n    });\n  }\n\n  /**\n  * Returns the current daytime\n  */\n  private getDaytime(): Daytime {\n    const date = new Date();\n    const dayHour = date.getHours();\n    if(dayHour  {\n      this.userContext = data;\n    })\n  }\n}\n\nconst Gradients = {\n  noon: {\n    background: 'linear-gradient(0deg, rgba(97,194,216,1) 0%, rgba(67,125,219,1) 100%)',\n    filter: 'progid:DXImageTransform.Microsoft.gradient(startColorstr=\"#61c2d8\",endColorstr=\"#437ddb\",GradientType=1)'\n  },\n  dawn: {\n    background: 'linear-gradient(0deg, rgba(238,69,59,1) 0%, rgba(164,9,110,1) 100%)',\n    filter: 'progid:DXImageTransform.Microsoft.gradient(startColorstr=\"#ee453b\",endColorstr=\"#a4096e\",GradientType=1)'\n  },\n  night: {\n    background: 'linear-gradient(0deg, rgba(216,97,204,1) 0%, rgba(70,67,219,1) 100%)',\n    filter: 'progid:DXImageTransform.Microsoft.gradient(startColorstr=\"#d861cc\",endColorstr=\"#4643db\",GradientType=1)'\n  },\n  noonDark: {\n    background: 'linear-gradient(170deg, rgba(20,27,87,1) 0%, rgba(151,208,255,1) 100%)',\n    filter: 'progid:DXImageTransform.Microsoft.gradient(startColorstr=\"#61c2d8\",endColorstr=\"#437ddb\",GradientType=1)'\n  },\n  dawnDark: {\n    background: 'linear-gradient(170deg, rgba(212,108,102,1) 0%, rgba(108,10,72,1) 100%)',\n    filter: 'progid:DXImageTransform.Microsoft.gradient(startColorstr=\"#ee453b\",endColorstr=\"#a4096e\",GradientType=1)'\n  },\n  nightDark: {\n    background: 'linear-gradient(170deg, rgba(119,48,112,1) 0%, rgba(152,152,191,1) 100%)',\n    filter: 'progid:DXImageTransform.Microsoft.gradient(startColorstr=\"#d861cc\",endColorstr=\"#4643db\",GradientType=1)'\n  },\n  highContrast: {\n    background: 'linear-gradient(170deg, rgba(0,0,0,1) 0%, rgba(0,0,0,1) 100%)',\n    filter: 'progid:DXImageTransform.Microsoft.gradient(startColorstr=\"#d861cc\",endColorstr=\"#4643db\",GradientType=1)'\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IndoorDetailViewComponent.html":{"url":"components/IndoorDetailViewComponent.html","title":"component - IndoorDetailViewComponent","body":"\n                   \n\n\n\n\n\n  Components\n  IndoorDetailViewComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/views/indoor-detail-view/indoor-detail-view.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-indoor-detail-view\n            \n\n            \n                styleUrls\n                ./indoor-detail-view.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./indoor-detail-view.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                indoorRoomTiles\n                            \n                            \n                                ttsTextGeneratorFunction\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                loadIndoorRoomData\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(weatherDataService: WeatherDataService, textService: TextService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/views/indoor-detail-view/indoor-detail-view.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        weatherDataService\n                                                  \n                                                        \n                                                                        WeatherDataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        textService\n                                                  \n                                                        \n                                                                        TextService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadIndoorRoomData\n                        \n                        \n                    \n                \n            \n            \n                \nloadIndoorRoomData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/views/indoor-detail-view/indoor-detail-view.component.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/views/indoor-detail-view/indoor-detail-view.component.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            indoorRoomTiles\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Tile[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/views/indoor-detail-view/indoor-detail-view.component.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ttsTextGeneratorFunction\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/views/indoor-detail-view/indoor-detail-view.component.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Tile, WeatherData } from 'src/app/model/weather';\nimport { TextService } from 'src/app/services/text.service';\nimport { WeatherDataService } from 'src/app/services/weather-data.service';\n\n@Component({\n  selector: 'app-indoor-detail-view',\n  templateUrl: './indoor-detail-view.component.html',\n  styleUrls: ['./indoor-detail-view.component.scss']\n})\nexport class IndoorDetailViewComponent implements OnInit {\n  indoorRoomTiles?: Tile[];\n  ttsTextGeneratorFunction = () => this.textService.createTextFromTilesArray(this.indoorRoomTiles)\n\n  constructor(private weatherDataService: WeatherDataService,\n    private textService: TextService) { }\n\n  ngOnInit(): void {\n    this.loadIndoorRoomData();\n  }\n\n  loadIndoorRoomData() {\n    this.weatherDataService.getIndoorTilesSubject()\n                        .subscribe(data => this.indoorRoomTiles = data);\n  }\n\n}\n\n    \n\n    \n        \n\n    \n    \n\n \n    Good to know\n    \n        Der Mensch hält sich einen Großteil der Zeit des Tages in Innenräumen auf. Gute Raumluftqualität ist daher eine der Grundlagen für Gesundheit, Wohlbefinden, Leistungsfähigkeit und für gutes Arbeiten, Lernen und Lehren. Schlechte Raumluft kann krankmachen, auch wenn die Zusammenhänge hier wissenschaftlich oft noch nicht abschließend geklärt sind gibt es eine Vielzahl unterschiedlichster Krankheitssymptome, die offenbar mit dem Aufenthalt in Räumen verbunden sind. Eine wichtige Voraussetzung für gute Raumluftqualität ist deshalb eine ausreichende Lüftung des Raumes.\n    \n\n\n\n\n    \n\n    \n                \n                    ./indoor-detail-view.component.scss\n                \n                .container {\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: space-between;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '             Good to know            Der Mensch hält sich einen Großteil der Zeit des Tages in Innenräumen auf. Gute Raumluftqualität ist daher eine der Grundlagen für Gesundheit, Wohlbefinden, Leistungsfähigkeit und für gutes Arbeiten, Lernen und Lehren. Schlechte Raumluft kann krankmachen, auch wenn die Zusammenhänge hier wissenschaftlich oft noch nicht abschließend geklärt sind gibt es eine Vielzahl unterschiedlichster Krankheitssymptome, die offenbar mit dem Aufenthalt in Räumen verbunden sind. Eine wichtige Voraussetzung für gute Raumluftqualität ist deshalb eine ausreichende Lüftung des Raumes.    '\n    var COMPONENTS = [{'name': 'ApparentTemperatureTileViewComponent', 'selector': 'app-apparent-temperature-tile-view'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BackButtonElementComponent', 'selector': 'app-back-button-element'},{'name': 'CardElementComponent', 'selector': 'card-element'},{'name': 'CheckboxSwitcherElementComponent', 'selector': 'app-checkbox-switcher-element'},{'name': 'ConfigurationTilePopUpDialogView', 'selector': 'configuration-tile-popup-view'},{'name': 'ConfigurationTileViewComponent', 'selector': 'app-configuration-tile-view'},{'name': 'ConfigurationViewComponent', 'selector': 'app-configuration-view'},{'name': 'DashboardScreenComponent', 'selector': 'app-dashboard-screen'},{'name': 'DetailScreenComponent', 'selector': 'app-detail-screen'},{'name': 'ForecastDetailViewComponent', 'selector': 'app-forecast-detail-view'},{'name': 'ForecastTileViewComponent', 'selector': 'app-forecast-tile-view'},{'name': 'HistoryDetailViewComponent', 'selector': 'app-history-detail-view'},{'name': 'HistoryTileViewComponent', 'selector': 'app-history-tile-view'},{'name': 'HumidityTileViewComponent', 'selector': 'app-humidity-tile-view'},{'name': 'IndoorDetailViewComponent', 'selector': 'app-indoor-detail-view'},{'name': 'IndoorTileViewComponent', 'selector': 'app-indoor-tile-view'},{'name': 'LoginViewComponent', 'selector': 'app-login-view'},{'name': 'MenuBarElementComponent', 'selector': 'app-menu-bar-element'},{'name': 'MenuButtonElementComponent', 'selector': 'app-menu-button-element'},{'name': 'MenuElementComponent', 'selector': 'app-menu-element'},{'name': 'NavBarElementComponent', 'selector': 'app-nav-bar-element'},{'name': 'OnboardingScreenComponent', 'selector': 'app-onboarding-screen'},{'name': 'OpenAPELoginTileViewComponent', 'selector': 'app-open-apelogin-tile-view'},{'name': 'OutdoorWeatherDetailViewComponent', 'selector': 'app-outdoor-weather-detail-view'},{'name': 'OutdoorWeatherViewComponent', 'selector': 'app-outdoor-weather-view'},{'name': 'PersonalizationSettingsViewComponent', 'selector': 'app-personalization-settings-view'},{'name': 'PersonalizationViewComponent', 'selector': 'app-personalization-view'},{'name': 'PollenflugDetailViewComponent', 'selector': 'app-pollenflug-detail-view'},{'name': 'PollenflugSmallTileComponent', 'selector': 'app-pollenflug-small-tile'},{'name': 'PollenflugTileViewComponent', 'selector': 'app-pollenflug-tile-view'},{'name': 'PollenListElementComponent', 'selector': 'app-pollen-list-element'},{'name': 'PollenTagElementComponent', 'selector': 'app-pollen-tag-element'},{'name': 'ProgressChartElementComponent', 'selector': 'app-progress-chart-element'},{'name': 'RegistrationViewComponent', 'selector': 'app-registration-view'},{'name': 'SettingsScreenComponent', 'selector': 'app-settings-screen'},{'name': 'SimpleTileViewComponent', 'selector': 'app-simple-tile-view'},{'name': 'SliderElementComponent', 'selector': 'app-slider-element'},{'name': 'TtsPlayerElementComponent', 'selector': 'app-tts-player-element'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'IndoorDetailViewComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IndoorRoomData.html":{"url":"interfaces/IndoorRoomData.html","title":"interface - IndoorRoomData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IndoorRoomData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/weather.ts\n        \n\n\n            \n                Extends\n            \n            \n                        WeatherData\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        airQuality\n                                \n                                \n                                        humidity\n                                \n                                \n                                        roomID\n                                \n                                \n                                        roomName\n                                \n                                \n                                        temperature\n                                \n                                \n                                        timestamp\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        airQuality\n                                    \n                                \n                                \n                                    \n                                        airQuality:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        humidity\n                                    \n                                \n                                \n                                    \n                                        humidity:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        roomID\n                                    \n                                \n                                \n                                    \n                                        roomID:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        roomName\n                                    \n                                \n                                \n                                    \n                                        roomName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        temperature\n                                    \n                                \n                                \n                                    \n                                        temperature:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timestamp\n                                    \n                                \n                                \n                                    \n                                        timestamp:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface WeatherData { }\n\nexport enum TileType {\n    indoorRoom,\n    pollenSmall,\n    pollenList,\n    history,\n    forecast,\n    humidity,\n    apparentTemperature,\n}\n\nexport interface TileArrays {\n    dashboard: Tile[],\n    pollen : Tile[],\n    indoorRooms: Tile[]\n  }\n  \n\nexport enum TilePriority {\n    important, //Highest \n    high,\n    middle,\n    low,\n}\n\nexport interface Tile {\n    type: TileType;\n    data: A;\n    id: string;\n    priority: TilePriority\n}\n\nexport interface OutdoorWeatherData extends WeatherData {\n    temperature: number // in °C\n    maxTemperature: number, //TODO: external database required \"forecast\"  --> // TODO: Move to \"daily\" data structure\n    minTemperature: number, //TODO: external database required \"forecast\"  --> // TODO: Move to \"daily\" data structure\n    humidity: number, // in %\n    timestamp: Date, \n    weather: string, // TODO: external API required\n    apparentTemperature: number, // in °C ---> die \"gefühlte\" Temperatur\n    location: string, // e.g. \"Stuttgart\" TODO: Make configurable in ESP Wlan-Board\n    postCode: string,\n}\n\nexport interface WeatherForecastData extends WeatherData {\n    trend: string,\n    weatherDescription: string,\n    weatherIcon: string,\n  }\n\nexport interface PollenData extends WeatherData {\n    pollenName: string, // TODO: Maybe we should use the same Pollen enum as in user-context.ts\n    id: number,\n    today: string, // -1  3\n    tomorrow: string, // -1  3\n}\n\nexport interface IndoorRoomData extends WeatherData {\n    roomID: string,\n    roomName: string,\n    airQuality: number, // in %\n    temperature: number // in °C \n    humidity: number, // in %\n    timestamp: Date, \n}\n\nexport interface WeatherHistoryData extends WeatherData {\n    datapoints: OutdoorWeatherData[],\n}\n\nexport interface GraphDataSet extends WeatherData {\n    temperatureDataPoints: number[];\n    humidityDataPoints: number[];\n    xAxisLabel: string[];\n    label: string;\n    temperatureAverage: number;\n    humidityAverage: number;\n}\n\nexport interface WeatherHistoryByDayData extends WeatherData  {\n    averageTemperature: number, // in °C\n    averageHumidity: number, // in %\n}\n\nexport enum Daytime {\n    noon,\n    night,\n    dawn,\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IndoorRoomResponse.html":{"url":"interfaces/IndoorRoomResponse.html","title":"interface - IndoorRoomResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  IndoorRoomResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/api/weather-api.service.ts\n        \n\n            \n                Description\n            \n            \n                Model of the indoor room api response\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        gasVal\n                                \n                                \n                                        humidity\n                                \n                                \n                                        id\n                                \n                                \n                                        location\n                                \n                                \n                                        pressure\n                                \n                                \n                                        temperature\n                                \n                                \n                                        timestamp\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        gasVal\n                                    \n                                \n                                \n                                    \n                                        gasVal:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        humidity\n                                    \n                                \n                                \n                                    \n                                        humidity:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        location\n                                    \n                                \n                                \n                                    \n                                        location:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pressure\n                                    \n                                \n                                \n                                    \n                                        pressure:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        temperature\n                                    \n                                \n                                \n                                    \n                                        temperature:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timestamp\n                                    \n                                \n                                \n                                    \n                                        timestamp:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { FORECAST, INDOORAIRQUALITY, OUTDOORWEATHER, POLLEN, WEATHERHISTORY } from '../../model/mock-data/weather.mock';\nimport { OutdoorWeatherData, PollenData, IndoorRoomData, WeatherForecastData, WeatherHistoryData } from '../../model/weather';\nimport { Observable, of } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\n\n/**\n * Weather api service injectable\n * \n * Use this service to access the network. It implementes all routes \n * for the weather data.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class WeatherAPIService {\n  private outdoorURL = environment.baseURL + 'weather-data/outdoor/latest';\n  private indoorURL = environment.baseURL + 'weather-data/indoor/latest';\n  private historyURL = environment.baseURL + 'weather-data/outdoor/history';\n  private forecastURL = environment.baseURL + 'weather-data/forecast/latest';\n  private allPollenTypesURL = environment.baseURL + 'pollen/all';\n\n  constructor(private httpClient: HttpClient) { }\n\n  /**\n   * @returns an observable with the loadad OutdoorWeatherData from the api or test data\n   */\n  public loadOutdoorWeather(): Observable {\n    if (environment.testData) {\n      return of(OUTDOORWEATHER);\n    }\n    let returnObservable = new Observable((observer) => {\n        this.httpClient.get(this.outdoorURL).subscribe(data => {\n          let outdoorData = this.createOutdoorWeatherDataFromServerResponse(data);\n          observer.next(outdoorData);\n          observer.complete();\n        })\n      }\n    );\n    return returnObservable;\n  }\n\n  /**\n   * @returns an observable with the loadad WeatherForecastData from the api or test data\n   */\n  public loadForecast(): Observable {\n    if (environment.testData) {\n      return of(FORECAST);\n    }\n    let returnObservable = new Observable((observer) => {\n        this.httpClient.get(this.forecastURL).subscribe(data => {\n          let forecastData = this.createOutdoorForecastDataFromServerResponse(data);\n          observer.next(forecastData);\n          observer.complete();\n        })\n      }\n    );\n    return returnObservable;\n  }\n\n  /**\n   * @returns an observable with the loadad PollenData from the api or test data\n   */\n  public loadPollen(): Observable{\n    if (environment.testData) {\n      let pollen = of(POLLEN);\n      return pollen;\n    }\n    let returnObservable = new Observable((observer) => {\n      let response = this.httpClient.get(this.allPollenTypesURL);\n      response.subscribe(data => {\n        let pollenData = this.createPollenDataFromServerResponse(data);\n        observer.next(pollenData);\n        observer.complete();\n      },\n      (error) => {\n        console.log(error);\n        observer.next([]);\n        observer.complete();\n      })\n    });\n    return returnObservable;\n  }\n\n  /**\n   * @returns an observable with the loadad IndoorRoomData from the api or test data\n   */\n  public loadIndoorRoomData(): Observable {\n    if (environment.testData) {\n      let indoorData = of(INDOORAIRQUALITY);\n      return indoorData;\n    }\n    let returnObservable = new Observable((observer) => { // Wir brauchen hier ein Array, -> sollen ja mehrere Räume möglich sein (theoretisch...)\n        this.httpClient.get(this.indoorURL).subscribe(data => {\n          let indoorData = this.createIndoorRoomDataFromServerResponse(data);\n          observer.next([indoorData]);\n          observer.complete();\n        },\n        (error) => {\n          console.log(error);\n          observer.next([]);\n          observer.complete();\n        })\n      }\n    );\n    return returnObservable;\n  }\n\n  /**\n   * @returns an observable with the loadad WeatherHistoryData or test data\n   */\n  public loadHistoryDataSubject(endDate: Date, beginDate: Date): Observable {\n    if (environment.testData) {\n      let forecastData = of(WEATHERHISTORY);\n      return forecastData;\n    }\n    let returnObservable = new Observable((observer) => { \n        this.httpClient.post(this.historyURL,\n          {\n            'begin': this.createServerFriendlyDate(beginDate),\n            'end': this.createServerFriendlyDate(endDate)\n          })\n        .subscribe(data => {\n          let dataPoints: OutdoorWeatherData[] = data.map((element) => {\n            return this.createOutdoorWeatherDataFromServerResponse(element);\n          });\n          console.log(dataPoints);\n          observer.next({'datapoints': dataPoints});\n          observer.complete();\n        })\n      }\n    );\n    return returnObservable;\n  }\n\n  /**\n   * Helper function to convert date to string\n   * @param date \n   * @returns a date as a string which is understandable for the server\n   */\n  private createServerFriendlyDate(date: Date): string {\n    let dateString = date.toISOString().slice(0, 10);\n    let timeString = date.toTimeString().slice(0, 8);\n    return dateString + ' ' + timeString;\n  }\n\n  /**\n   * Helper function to convert the response from the server to an OutdoorWeatherData object\n   * \n   * @param response\n   * @returns OutdoorWeatherData object\n   */\n  private createOutdoorWeatherDataFromServerResponse(response: OutdoorWeatherResponse): OutdoorWeatherData {\n    const date = response.timestamp;\n    const year = date.substr(0, 4);\n    const month = date.substr(5, 2);\n    const day = date.substr(8, 2);\n    const time = date.substr(11);\n\n    const validDate = new Date(month + '/' + day + '/' + year + ' ' + time);\n\n    return {\n            temperature: response.temperature,\n            maxTemperature: -99, // Not implemented yet\n            minTemperature: -99, // Not implemented yet\n            humidity: response.humidity,\n            timestamp: validDate,\n            weather: response.weather,\n            apparentTemperature: response.apparentTemperature,\n            location: response.location_name,\n            postCode: response.location\n          }\n  }\n\n  /**\n   * Helper function to convert the response from the server to an IndoorRoomData object\n   * \n   * @param response\n   * @returns IndoorRoomData object\n   */\n  private createIndoorRoomDataFromServerResponse(response: IndoorRoomResponse): IndoorRoomData {\n    return {\n            roomID: response.id + '',\n            roomName: response.location,\n            airQuality: response.gasVal, \n            temperature: response.temperature, \n            humidity: response.humidity, \n            timestamp: new Date(response.timestamp), \n          }\n  }\n\n  /**\n   * Helper function to convert the response from the server to an PollenData[] object\n   * \n   * @param response\n   * @returns PollenData[] object\n   */\n  private createPollenDataFromServerResponse(response: PollenResponse[]): PollenData[] {\n    console.log(\"Pollen daten sind hier\", response)\n    let pollen: PollenData[] = [];\n    response.forEach(item => {\n      pollen.push({\n        id: item.id,\n        pollenName: item.pollenName,\n        today: item.loadRating,\n        tomorrow: ''\n      })\n    })\n    return pollen\n  }\n\n  /**\n   * Helper function to convert the response from the server to an WeatherForecastData object\n   * \n   * @param response\n   * @returns WeatherForecastData object\n   */\n  private createOutdoorForecastDataFromServerResponse(response: ForecastResponse): WeatherForecastData {\n    return {\n      trend: response.trend,\n      weatherDescription: response.weatherDescription, \n      weatherIcon: response.weatherIcon\n    }\n  }\n}\n\n/**\n * Model of the pollen api response\n */\ninterface PollenResponse {\n  id: number,\n  pollenName: string,\n  loadRating: string,\n}\n\n/**\n * Model of the outdoor weather api response\n */\ninterface OutdoorWeatherResponse {\n  id: number,\n  humidity: number,\n  temperature: number,\n  pressure: number,\n  location: string,\n  location_name: string,\n  timestamp: string,\n  weather: string,\n  apparentTemperature: number\n}\n\n/**\n * Model of the indoor room api response\n */\ninterface IndoorRoomResponse {\n  id: number,\n  humidity: number,\n  temperature: number,\n  pressure: number,\n  gasVal: number,\n  location: string,\n  timestamp: string,\n}\n\n/**\n * Model of the forecast api response\n */\ninterface ForecastResponse {\n  id: number,\n  trend: string,\n  weatherIcon: string,\n  weatherDescription: string,\n  seaPressure: number,\n  timestampd: string\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IndoorTileViewComponent.html":{"url":"components/IndoorTileViewComponent.html","title":"component - IndoorTileViewComponent","body":"\n                   \n\n\n\n\n\n  Components\n  IndoorTileViewComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/views/indoor-tile-view/indoor-tile-view.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-indoor-tile-view\n            \n\n            \n                styleUrls\n                ./indoor-tile-view.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./indoor-tile-view.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                _indoorRoom\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                hideSubtitle\n                            \n                            \n                                pressable\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    data\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/views/indoor-tile-view/indoor-tile-view.component.ts:16\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        data\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/views/indoor-tile-view/indoor-tile-view.component.ts:11\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        hideSubtitle\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/views/indoor-tile-view/indoor-tile-view.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        pressable\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/views/indoor-tile-view/indoor-tile-view.component.ts:14\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/views/indoor-tile-view/indoor-tile-view.component.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            _indoorRoom\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IndoorRoomData\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/views/indoor-tile-view/indoor-tile-view.component.ts:16\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        data\n                    \n                \n\n\n                \n                    \n                        setdata(data)\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/views/indoor-tile-view/indoor-tile-view.component.ts:11\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            data\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { IndoorRoomData, WeatherData } from 'src/app/model/weather';\n\n@Component({\n  selector: 'app-indoor-tile-view',\n  templateUrl: './indoor-tile-view.component.html',\n  styleUrls: ['./indoor-tile-view.component.scss']\n})\nexport class IndoorTileViewComponent implements OnInit {\n  @Input()\n  set data(data: WeatherData) {\n    this._indoorRoom = data as IndoorRoomData;\n  }\n  @Input() pressable: boolean = false;\n  @Input() hideSubtitle: boolean = false;\n  _indoorRoom?: IndoorRoomData\n\n  constructor() { }\n\n  ngOnInit(): void { }\n}\n\n\n\n    \n\n    \n        \n    \n        {{_indoorRoom.airQuality}}\n        \n            \n                Temperatur: {{_indoorRoom.temperature}}°C\n            \n            \n                Luftfeuchtigkeit: {{_indoorRoom.humidity}}%\n            \n        \n    \n    \n        \n\n\n    \n\n    \n                \n                    ./indoor-tile-view.component.scss\n                \n                h1 {\n    margin: 0;\n    font-weight: bold;\n    font-size: 4.0em;\n}\n\n.data-container {\n    display: flex;\n    justify-content: space-between;\n}\n\n.temp-humidity-data {\n    display: flex;\n    justify-content: flex-end;\n}\n\n.rename-image{\n    \n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{_indoorRoom.airQuality}}                                    Temperatur: {{_indoorRoom.temperature}}°C                                        Luftfeuchtigkeit: {{_indoorRoom.humidity}}%                                    '\n    var COMPONENTS = [{'name': 'ApparentTemperatureTileViewComponent', 'selector': 'app-apparent-temperature-tile-view'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BackButtonElementComponent', 'selector': 'app-back-button-element'},{'name': 'CardElementComponent', 'selector': 'card-element'},{'name': 'CheckboxSwitcherElementComponent', 'selector': 'app-checkbox-switcher-element'},{'name': 'ConfigurationTilePopUpDialogView', 'selector': 'configuration-tile-popup-view'},{'name': 'ConfigurationTileViewComponent', 'selector': 'app-configuration-tile-view'},{'name': 'ConfigurationViewComponent', 'selector': 'app-configuration-view'},{'name': 'DashboardScreenComponent', 'selector': 'app-dashboard-screen'},{'name': 'DetailScreenComponent', 'selector': 'app-detail-screen'},{'name': 'ForecastDetailViewComponent', 'selector': 'app-forecast-detail-view'},{'name': 'ForecastTileViewComponent', 'selector': 'app-forecast-tile-view'},{'name': 'HistoryDetailViewComponent', 'selector': 'app-history-detail-view'},{'name': 'HistoryTileViewComponent', 'selector': 'app-history-tile-view'},{'name': 'HumidityTileViewComponent', 'selector': 'app-humidity-tile-view'},{'name': 'IndoorDetailViewComponent', 'selector': 'app-indoor-detail-view'},{'name': 'IndoorTileViewComponent', 'selector': 'app-indoor-tile-view'},{'name': 'LoginViewComponent', 'selector': 'app-login-view'},{'name': 'MenuBarElementComponent', 'selector': 'app-menu-bar-element'},{'name': 'MenuButtonElementComponent', 'selector': 'app-menu-button-element'},{'name': 'MenuElementComponent', 'selector': 'app-menu-element'},{'name': 'NavBarElementComponent', 'selector': 'app-nav-bar-element'},{'name': 'OnboardingScreenComponent', 'selector': 'app-onboarding-screen'},{'name': 'OpenAPELoginTileViewComponent', 'selector': 'app-open-apelogin-tile-view'},{'name': 'OutdoorWeatherDetailViewComponent', 'selector': 'app-outdoor-weather-detail-view'},{'name': 'OutdoorWeatherViewComponent', 'selector': 'app-outdoor-weather-view'},{'name': 'PersonalizationSettingsViewComponent', 'selector': 'app-personalization-settings-view'},{'name': 'PersonalizationViewComponent', 'selector': 'app-personalization-view'},{'name': 'PollenflugDetailViewComponent', 'selector': 'app-pollenflug-detail-view'},{'name': 'PollenflugSmallTileComponent', 'selector': 'app-pollenflug-small-tile'},{'name': 'PollenflugTileViewComponent', 'selector': 'app-pollenflug-tile-view'},{'name': 'PollenListElementComponent', 'selector': 'app-pollen-list-element'},{'name': 'PollenTagElementComponent', 'selector': 'app-pollen-tag-element'},{'name': 'ProgressChartElementComponent', 'selector': 'app-progress-chart-element'},{'name': 'RegistrationViewComponent', 'selector': 'app-registration-view'},{'name': 'SettingsScreenComponent', 'selector': 'app-settings-screen'},{'name': 'SimpleTileViewComponent', 'selector': 'app-simple-tile-view'},{'name': 'SliderElementComponent', 'selector': 'app-slider-element'},{'name': 'TtsPlayerElementComponent', 'selector': 'app-tts-player-element'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'IndoorTileViewComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalStorageService.html":{"url":"injectables/LocalStorageService.html","title":"injectable - LocalStorageService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LocalStorageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/local-storage.service.ts\n        \n\n            \n                Description\n            \n            \n                Local storage service injectable\nUse this service to get access to the local storage of the browser.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                clear\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    userContext\n                                \n                                \n                                    userID\n                                \n                                \n                                    disableLogin\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/local-storage.service.ts:77\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            clear\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    clear()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/local-storage.service.ts:84\n                \n            \n\n\n            \n                \n                    Use this function to clear the local storage, e.g. if the use logs out.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        userContext\n                    \n                \n\n                \n                    \n                        getuserContext()\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/local-storage.service.ts:27\n                                \n                            \n                    \n                        \n                                Load user context from local storage\n\n\n                                \n                                    Returns :         UserContext\n\n                                \n                        \n                    \n\n                \n                    \n                        setuserContext(object)\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/local-storage.service.ts:18\n                                \n                            \n                    \n                        \n                                Save user context to local storage\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                        Description\n                                                \n                                            \n                                            \n                                                    \n                                                            object\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                            \n                                                                    UserContext object to save\n\n                                                            \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        userID\n                    \n                \n\n                \n                    \n                        getuserID()\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/local-storage.service.ts:50\n                                \n                            \n                    \n                        \n                                Load userID from local storage\n\n\n                                \n                                    Returns :         UserIdentifikation\n\n                                \n                        \n                    \n\n                \n                    \n                        setuserID(value)\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/local-storage.service.ts:41\n                                \n                            \n                    \n                        \n                                Save userID to local storage\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                        Description\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                            \n                                                                    Token string to save\n\n                                                            \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        disableLogin\n                    \n                \n\n                \n                    \n                        getdisableLogin()\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/local-storage.service.ts:62\n                                \n                            \n                    \n                        \n                                Load disable open ape value from local storage\n\n\n                                \n                                    Returns :         boolean\n\n                                \n                        \n                    \n\n                \n                    \n                        setdisableLogin(value: boolean)\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/local-storage.service.ts:75\n                                \n                            \n                    \n                        \n                                Save disable open ape value to local storage\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                        Description\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            boolean\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                            \n                                                                    Disable open ape value to save\n\n                                                            \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { INITIAL_USER_CONTEXT, INITIAL_USER_IDENTIFIKATION, UserContext, UserIdentifikation } from '../model/user-context';\n\n/**\n * Local storage service injectable\n * \n * Use this service to get access to the local storage of the browser.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class LocalStorageService {\n  /**\n  * Save user context to local storage\n  * \n  * @param {UserContext} object  UserContext object to save\n  */\n  set userContext(object: UserContext) {\n    const objectString = JSON.stringify(object)\n    this.setItem(USER_CONTEXT_IDENTIFIER, objectString);\n    console.log('SAVED USER CONTEXT');\n  }\n\n  /**\n  * Load user context from local storage\n  */\n  get userContext(): UserContext {\n    const objectString = this.getItem(USER_CONTEXT_IDENTIFIER);\n    if (objectString) {\n      const userContext = JSON.parse(objectString) as UserContext;\n      return userContext\n    } \n    return INITIAL_USER_CONTEXT\n  }\n\n  /**\n  * Save userID to local storage\n  * \n  * @param {UserIdentifikation} value  Token string to save\n  */\n  set userID(value: UserIdentifikation) {\n    const objectString = JSON.stringify(value)\n    this.setItem(USER_IDENTIFIKATION, objectString);\n    console.log('SAVED USER IDENTIFIKATION');\n  }\n\n  /**\n  * Load userID from local storage\n  */\n   get userID(): UserIdentifikation {\n    const objectString = this.getItem(USER_IDENTIFIKATION);\n    if (objectString) {\n      const userID = JSON.parse(objectString) as UserIdentifikation;\n      return userID\n    } \n    return INITIAL_USER_IDENTIFIKATION\n  }  \n\n  /**\n  * Load disable open ape value from local storage\n  */\n  get disableLogin(): boolean {\n    const disableOpenApeValue = this.getItem(DISABLE_LOGIN_IDENTIFIER);\n    if(disableOpenApeValue) {\n      return JSON.parse(disableOpenApeValue)\n    }\n    return false;\n  }\n\n  /**\n  * Save disable open ape value to local storage\n  * \n  * @param {boolean} value  Disable open ape value to save\n  */\n  set disableLogin(value: boolean) {\n    this.setItem(DISABLE_LOGIN_IDENTIFIER, value + '');\n  }\n\n  constructor() { }\n\n  /**\n   * Use this function to clear the local storage, e.g. if the use logs out.\n   */\n  public clear(): void {\n    localStorage.clear(); \n  }\n\n  /**\n   * Helper function to set item in local storage\n   */\n  private setItem(key: string, value: string) {\n    localStorage.setItem(key, value);\n  }\n\n  /**\n   * Helper function to get item in local storage\n   */ \n  private getItem(key: string): string | null{ \n    return localStorage.getItem(key)\n  }\n\n  /**\n   * Helper function to remove item in local storage\n   */\n  private removeItem(key:string): void {\n    localStorage.removeItem(key);\n  }\n}\n\n/**\n * Identifier key constants\n */\nconst USER_IDENTIFIKATION = 'wetterstation-user-identifikation';\nconst USER_CONTEXT_IDENTIFIER = 'wetterstation-user-context'\nconst DISABLE_LOGIN_IDENTIFIER = 'wetterstation-disable-login'\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LoginResponse.html":{"url":"interfaces/LoginResponse.html","title":"interface - LoginResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  LoginResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/api/user-context-api.service.ts\n        \n\n            \n                Description\n            \n            \n                Model of the login response\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        message\n                                \n                                \n                                        success\n                                \n                                \n                                        token\n                                \n                                \n                                        userContext\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        success\n                                    \n                                \n                                \n                                    \n                                        success:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        token\n                                    \n                                \n                                \n                                    \n                                        token:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userContext\n                                    \n                                \n                                \n                                    \n                                        userContext:         UserContextResponse\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         UserContextResponse\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { PollenType, Themes, UserContext, UserIdentifikation } from '../../model/user-context';\n\n/**\n * User context api service injectable\n * \n * Use this service to access the network. It implements all routes for \n * user context data\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserContextAPIService {\n  private loginURL = environment.baseURL + 'auth/login';\n  private registerURL = environment.baseURL + 'user/register';\n  private checkTokenURL = environment.baseURL + 'auth/checkToken';\n  private currentUserContextURL = environment.baseURL + 'user/currentUser';\n  private saveUserContextURL = environment.baseURL + 'user/save';\n  private allPollenTypesURL = environment.baseURL + 'pollen/all';\n  private deletePollenURL = environment.baseURL + 'allergies/delete';\n  private savePollenURL = environment.baseURL + 'allergies/save';\n  private openAPEURL = environment.baseURL + 'user/loadOpenAPESettingsAndSave';\n\n  constructor(private httpClient: HttpClient) { }\n\n  /**\n   * @returns an observable with the user identifikation and the user context\n   */\n  public postLogin(password: string, username: string): Observable {\n    let returnObservable = new Observable((observer) => {\n      let response = this.httpClient.post(this.loginURL, \n                                                        {username: username, password: password}, {observe: 'response'});\n      response.subscribe((response) => {\n        let body = response.body\n        let status = response.statusText\n        console.log(status);\n\n        if(body){\n          if(body.success) {\n            console.log(this.createUserContextFromServerResponse(body.userContext));\n            observer.next({\n              userID: {\n                token: body.token,\n                id: body.userContext.id\n              },\n              userContext: this.createUserContextFromServerResponse(body.userContext)\n            });\n          } else {\n            observer.error(body.message);\n          }\n        }\n      },\n      (error)=> {\n        observer.error(\"Ein Fehler ist aufgetreten. Bitte versuche es später erneut. \");\n        console.log(error);\n        observer.complete();\n      },() => {\n        observer.complete();\n      });\n    }\n  );\n  return returnObservable;\n  }\n\n  /**\n   * @returns an observable with an user context object\n   */\n  public postLoginOpenAPE(username: string, password: string, userID: UserIdentifikation): Observable {\n    let returnObservable = new Observable((observer) => {\n      let httpOptions = {\n        headers: new HttpHeaders({ 'Authorization': 'Bearer ' + userID.token }),\n      };\n      let response = this.httpClient.post(this.openAPEURL, \n                                                              {openApeUser: username, openApePassword: password}, httpOptions);\n      response.subscribe((response) => {\n    \n        console.log(response);\n\n        if(response){\n            console.log(this.createUserContextFromServerResponse(response));\n            observer.next(this.createUserContextFromServerResponse(response));\n        }\n      },\n      (error)=> {\n        observer.error(\"Ein Fehler ist aufgetreten. Bitte versuche es später erneut. \");\n        console.log(error);\n        observer.complete();\n      },() => {\n        observer.complete();\n      });\n    }\n  );\n  return returnObservable;\n  }\n\n  /**\n   * @returns an observable with a boolean if the register was successful or not\n   */\n  public postRegister(password: string, username: string): Observable {\n    let returnObservable = new Observable((observer) => {\n      let response = this.httpClient.post(this.registerURL, \n                                                              {username: username, password: password}, {observe: 'response'});\n      response.subscribe((response) => {\n        let body = response.body\n        let status = response.statusText\n        console.log(status);\n\n        if(body){\n          if(body.id) {\n            observer.next(true);\n          } else {\n            observer.error(\"Ein Fehler ist aufgetreten. Bitte versuche es später erneut\");\n          }\n        }\n      },\n      (error)=> {\n        observer.error(\"Ein Fehler ist aufgetreten. Bitte versuche es später erneut\");\n        console.log(error);\n        observer.complete();\n      },\n      () => {\n        observer.complete();\n      });\n    }\n  );\n  return returnObservable;\n  }\n\n  /**\n   * @returns an observable with a boolean if the saving user context was successful or not\n   */\n  public putSaveUserContext(userID: UserIdentifikation, userContext: UserContext): Observable{\n    let body = {\n      theme: Themes[userContext.theme],\n      fontSize: userContext.fontSize,\n      selfVoicingEnabled: userContext.selfVoicingEnabled,\n      doVentilationReminder: userContext.doVentilationReminder,\n      reduceMotion: userContext.reduceMotion\n    }\n    let httpOptions = {\n      headers: new HttpHeaders({ 'Authorization': 'Bearer ' + userID.token }),\n      params: new HttpParams().set('id', userID.id + ''),\n    };\n    let returnObservable = new Observable((observer) => {\n      let response = this.httpClient.put(this.saveUserContextURL, body, httpOptions);\n      response.subscribe((response) => {\n        let body = response\n        if(body && body.id) {\n          observer.next(true);\n        } else {\n          observer.error(\"POST - SAVE USER CONTEXT - Ein Fehler ist aufgetreten.\");\n        }\n      },\n      (error)=> {\n        observer.error(\"POST - SAVE USER CONTEXT - Ein Fehler ist aufgetreten.\");\n        console.log(error);\n        observer.complete();\n      }, \n      () => {\n        observer.complete();\n      });\n      console.log(response);\n\n    });\n    return returnObservable;\n  }\n\n  /**\n   * @returns an observable with a boolean if the deletion user context was successful or not\n   */\n  public deletePolleFromUserContext(userID: UserIdentifikation, pollenID: number): Observable  {\n    let body = {\n      userID: userID.id,\n      pollenID: pollenID\n    }\n    let httpOptions = {\n      headers: new HttpHeaders({ 'Authorization': 'Bearer ' + userID.token }), body: body\n    };\n    let returnObservable = new Observable((observer) => {\n      let response = this.httpClient.delete(this.deletePollenURL, httpOptions);\n      response.subscribe(() => {\n        observer.next(true);\n      },\n      (error) => {\n        observer.error(\"DELETE - Polle\");\n        console.log(error);\n        observer.complete();\n      }, \n      () => {\n        observer.complete();\n      });\n\n    });\n    return returnObservable;\n  }\n\n  /**\n   * @returns an observable with a boolean if the insertion was successful or not\n   */\n  public postPolleToUserContext(userID: UserIdentifikation, pollenID: number): Observable {\n    let body = {\n      userID: userID.id,\n      pollenID: pollenID\n    }\n    let httpOptions = {\n      headers: new HttpHeaders({ 'Authorization': 'Bearer ' + userID.token }),\n    };\n    let returnObservable = new Observable((observer) => {\n      let response = this.httpClient.post(this.savePollenURL, body, httpOptions);\n      response.subscribe(() => {\n        observer.next(true);\n      },\n      (error)=> {\n        observer.error(\"DELETE - Polle\");\n        console.log(error);\n        observer.complete();\n      }, \n      () => {\n        observer.complete();\n      });\n      console.log(response);\n\n    });\n    return returnObservable;\n  }\n  /**\n   * @returns an observable with a boolean if the token is valid or not\n   */\n  public postIsTokenValid(token: string): Observable {\n    let returnObservable = new Observable((observer) => {\n      let httpOptions = {\n        headers: new HttpHeaders({ 'Authorization': 'Bearer ' + token })\n      };\n\n      console.log(httpOptions);\n      let response = this.httpClient.get(this.checkTokenURL, httpOptions);\n      response.subscribe(data => {\n        observer.next(data.success);\n        observer.complete();\n      }, \n      () => {\n        observer.next(false);\n        observer.complete();\n      })\n    });\n    return returnObservable;\n  }\n\n  /**\n   * @returns an observable with an user context object\n   */\n  public loadUserContext(token: string): Observable{\n    let returnObservable = new Observable((observer) => {\n      let httpOptions = {\n        headers: new HttpHeaders({ 'Authorization': 'Bearer ' + token })\n      };\n      let response = this.httpClient.get(this.currentUserContextURL, httpOptions);\n      response.subscribe(context => {\n        console.log(this.createUserContextFromServerResponse(context));\n        observer.next(this.createUserContextFromServerResponse(context));\n        observer.complete();\n      }, \n      () => {\n        observer.error(\"An error occured\")\n        observer.complete();\n      })\n    });\n    return returnObservable;\n  }\n\n  /**\n   * @returns an observable with pollen types array\n   */\n  public loadPollenTypes(): Observable{\n    let returnObservable = new Observable((observer) => {\n      let response = this.httpClient.get(this.allPollenTypesURL);\n      response.subscribe(data => {\n        observer.next(data);\n      });\n    });\n    return returnObservable\n  }\n\n  /**\n   * Helper function to create user context object from server response.\n   * @param userContext \n   * @returns an user context object\n   */\n  private createUserContextFromServerResponse(userContext: UserContextResponse): UserContext {\n    return {\n      theme: this.getThemeTypeFromServerResponse(userContext.theme),\n      fontSize: userContext.fontSize,\n      pollen: userContext.pollen, \n      doVentilationReminder: userContext.doVentilationReminder,\n      reduceMotion: userContext.reduceMotion,\n      selfVoicingEnabled: userContext.selfVoicingEnabled\n    }\n  }\n\n  /**\n   * Helper function to convert theme String to Theme type\n   * @return the converted Theme\n   */\n  private getThemeTypeFromServerResponse(theme: string): Themes {\n    switch(theme) {\n      case \"Dark\": return Themes.Dark;\n      case \"Light\": return Themes.Light;\n      case \"HighContrast\": return Themes.HighContrast;\n      default: return Themes.Automatic;\n    }\n  }\n}\n\n/**\n * Model of the login response\n */\ninterface LoginResponse {\n  success: boolean,\n  message: string,\n  userContext: UserContextResponse,\n  token: string,\n}\n\n/**\n * Model of the user context response\n */\ninterface UserContextResponse {\n  id: number,\n  username: string,\n  theme: string,\n  fontSize: number,\n  selfVoicingEnabled: boolean,\n  doVentilationReminder: boolean,\n  reduceMotion: boolean,\n  pollen: string[]\n}\n\n/**\n * Model of the check token response\n */\ninterface CheckTokenResponse {\n  success: boolean,\n  message: string,\n}\n\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginViewComponent.html":{"url":"components/LoginViewComponent.html","title":"component - LoginViewComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoginViewComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/views/login-view/login-view.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login-view\n            \n\n            \n                styleUrls\n                ./login-view.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./login-view.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                error\n                            \n                            \n                                loginForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onClickPersonalization\n                            \n                            \n                                onClickRegistration\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, userContextService: UserContextService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/views/login-view/login-view.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userContextService\n                                                  \n                                                        \n                                                                        UserContextService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/views/login-view/login-view.component.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onClickPersonalization\n                        \n                        \n                    \n                \n            \n            \n                \nonClickPersonalization()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/views/login-view/login-view.component.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onClickRegistration\n                        \n                        \n                    \n                \n            \n            \n                \nonClickRegistration()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/views/login-view/login-view.component.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSubmit\n                        \n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/views/login-view/login-view.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            error\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/views/login-view/login-view.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loginForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.formBuilder.group({\n    username: new FormControl('', Validators.minLength(2)), // FIXME Validators funktionieren nicht \n    password: new FormControl('', Validators.minLength(2)),\n  })\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/views/login-view/login-view.component.ts:12\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, Validators } from '@angular/forms'; \nimport { Router } from '@angular/router';\nimport { UserContextService } from 'src/app/services/user-context.service';\n\n@Component({\n  selector: 'app-login-view',\n  templateUrl: './login-view.component.html',\n  styleUrls: ['./login-view.component.scss']\n})\nexport class LoginViewComponent implements OnInit {\n  loginForm = this.formBuilder.group({\n    username: new FormControl('', Validators.minLength(2)), // FIXME Validators funktionieren nicht \n    password: new FormControl('', Validators.minLength(2)),\n  });\n\n  error?: string;\n\n  constructor(private formBuilder: FormBuilder,\n    private userContextService: UserContextService,\n    private router: Router) { }\n\n  ngOnInit(): void {\n  }\n\n  onSubmit(): void {\n    const username = this.loginForm.get(\"username\")?.value;\n    const password = this.loginForm.get(\"password\")?.value;\n    this.error = undefined;\n\n    this.userContextService.login(username, password).then((data) => {\n      if(data.success) {\n        this.router.navigateByUrl('/dashboard');\n      } else {\n        this.error = data.error;\n      }\n    },\n    (error) => {\n      this.error = error;\n    });\n  }\n\n  onClickRegistration() {\n    this.userContextService.logout();\n    this.router.navigateByUrl('/onboarding/registration');\n  }\n\n  onClickPersonalization() {\n    this.userContextService.disableLogin = true;\n    this.router.navigateByUrl('/onboarding/personalization');\n  }\n}\n\n    \n\n    \n        \n  \n    \n    \n      WeatherIO\n      Eine HdM Smarthome Innovation\n    \n  \n  \n    \n        \n          Nutzername\n        \n        \n      \n    \n      \n        \n          Passwort\n        \n        \n      \n      {{error}}\n\n\n    \n  \n  \n    Registrieren\n    Weiter ohne Login \n  \n\n\n\n  \n    \n\n    \n                \n                    ./login-view.component.scss\n                \n                .noon-gradient {\n    background: rgb(97,194,216);\n    background: -moz-linear-gradient(0deg, rgba(97,194,216,1) 0%, rgba(67,125,219,1) 100%);\n    background: -webkit-linear-gradient(0deg, rgba(97,194,216,1) 0%, rgba(67,125,219,1) 100%);\n    background: linear-gradient(0deg, rgba(97,194,216,1) 0%, rgba(67,125,219,1) 100%);\n    filter: progid:DXImageTransform.Microsoft.gradient(startColorstr=\"#61c2d8\",endColorstr=\"#437ddb\",GradientType=1);\n}\n\nh5 {\n    text-align: center;\n}\n\n.logo {\n    height: 10.0em;\n    margin-bottom: var(--padding);\n}\n\nform {\n    width: 100%;\n}\n\nbutton {\n    text-decoration: underline;\n    padding: var(--padding) 0 0 0;\n}\n\n.button-container {\n    width: 100%;\n    display: flex;\n    flex-direction: row;\n\n    justify-content: space-between;\n    align-content: space-between;\n\n}\n\nh5 {\n    padding: 0;\n    margin: 0;\n    text-align: left;\n}\n\n.logo-text {\n    padding-left: 10px;\n}\n\n.flex-container {\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n\n    padding: calc(var(--padding) * 4) 0 calc(var(--padding) * 3) 0;\n}\n\n.container {\n    display: flex;\n    align-items: center;\n    flex-direction: column;\n    justify-items: stretch;\n    // margin-left: calc(var(--border-padding-left) - var(--border-padding-right));\n}\n\n@media (min-width: 770px) {\n    .container {\n        border-left: 0.5px solid var(--background);\n    }\n}\n.container *:not(input, .error-message) {\n    color: var(--text);\n} \n\nh1 {\n    margin: 0;\n}\n\n.error-message {\n    color: var(--status-red);\n    padding-top: calc(var(--padding) / 2 );\n    text-align: center;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                WeatherIO      Eine HdM Smarthome Innovation                              Nutzername                                                  Passwort                            {{error}}            Registrieren    Weiter ohne Login     '\n    var COMPONENTS = [{'name': 'ApparentTemperatureTileViewComponent', 'selector': 'app-apparent-temperature-tile-view'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BackButtonElementComponent', 'selector': 'app-back-button-element'},{'name': 'CardElementComponent', 'selector': 'card-element'},{'name': 'CheckboxSwitcherElementComponent', 'selector': 'app-checkbox-switcher-element'},{'name': 'ConfigurationTilePopUpDialogView', 'selector': 'configuration-tile-popup-view'},{'name': 'ConfigurationTileViewComponent', 'selector': 'app-configuration-tile-view'},{'name': 'ConfigurationViewComponent', 'selector': 'app-configuration-view'},{'name': 'DashboardScreenComponent', 'selector': 'app-dashboard-screen'},{'name': 'DetailScreenComponent', 'selector': 'app-detail-screen'},{'name': 'ForecastDetailViewComponent', 'selector': 'app-forecast-detail-view'},{'name': 'ForecastTileViewComponent', 'selector': 'app-forecast-tile-view'},{'name': 'HistoryDetailViewComponent', 'selector': 'app-history-detail-view'},{'name': 'HistoryTileViewComponent', 'selector': 'app-history-tile-view'},{'name': 'HumidityTileViewComponent', 'selector': 'app-humidity-tile-view'},{'name': 'IndoorDetailViewComponent', 'selector': 'app-indoor-detail-view'},{'name': 'IndoorTileViewComponent', 'selector': 'app-indoor-tile-view'},{'name': 'LoginViewComponent', 'selector': 'app-login-view'},{'name': 'MenuBarElementComponent', 'selector': 'app-menu-bar-element'},{'name': 'MenuButtonElementComponent', 'selector': 'app-menu-button-element'},{'name': 'MenuElementComponent', 'selector': 'app-menu-element'},{'name': 'NavBarElementComponent', 'selector': 'app-nav-bar-element'},{'name': 'OnboardingScreenComponent', 'selector': 'app-onboarding-screen'},{'name': 'OpenAPELoginTileViewComponent', 'selector': 'app-open-apelogin-tile-view'},{'name': 'OutdoorWeatherDetailViewComponent', 'selector': 'app-outdoor-weather-detail-view'},{'name': 'OutdoorWeatherViewComponent', 'selector': 'app-outdoor-weather-view'},{'name': 'PersonalizationSettingsViewComponent', 'selector': 'app-personalization-settings-view'},{'name': 'PersonalizationViewComponent', 'selector': 'app-personalization-view'},{'name': 'PollenflugDetailViewComponent', 'selector': 'app-pollenflug-detail-view'},{'name': 'PollenflugSmallTileComponent', 'selector': 'app-pollenflug-small-tile'},{'name': 'PollenflugTileViewComponent', 'selector': 'app-pollenflug-tile-view'},{'name': 'PollenListElementComponent', 'selector': 'app-pollen-list-element'},{'name': 'PollenTagElementComponent', 'selector': 'app-pollen-tag-element'},{'name': 'ProgressChartElementComponent', 'selector': 'app-progress-chart-element'},{'name': 'RegistrationViewComponent', 'selector': 'app-registration-view'},{'name': 'SettingsScreenComponent', 'selector': 'app-settings-screen'},{'name': 'SimpleTileViewComponent', 'selector': 'app-simple-tile-view'},{'name': 'SliderElementComponent', 'selector': 'app-slider-element'},{'name': 'TtsPlayerElementComponent', 'selector': 'app-tts-player-element'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginViewComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MenuBarElementComponent.html":{"url":"components/MenuBarElementComponent.html","title":"component - MenuBarElementComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MenuBarElementComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/ui-elements/menu-bar-element/menu-bar-element.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-menu-bar-element\n            \n\n            \n                styleUrls\n                ./menu-bar-element.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./menu-bar-element.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                locationLabel\n                            \n                            \n                                reduceMotion\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getLocation\n                            \n                            \n                                loadReduceMotionValue\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                reloadData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(weatherDataService: WeatherDataService, userContextService: UserContextService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/ui-elements/menu-bar-element/menu-bar-element.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        weatherDataService\n                                                  \n                                                        \n                                                                        WeatherDataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userContextService\n                                                  \n                                                        \n                                                                        UserContextService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getLocation\n                        \n                        \n                    \n                \n            \n            \n                \ngetLocation()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/ui-elements/menu-bar-element/menu-bar-element.component.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadReduceMotionValue\n                        \n                        \n                    \n                \n            \n            \n                \nloadReduceMotionValue()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/ui-elements/menu-bar-element/menu-bar-element.component.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/ui-elements/menu-bar-element/menu-bar-element.component.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            reloadData\n                        \n                        \n                    \n                \n            \n            \n                \nreloadData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/ui-elements/menu-bar-element/menu-bar-element.component.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            locationLabel\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/ui-elements/menu-bar-element/menu-bar-element.component.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            reduceMotion\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/ui-elements/menu-bar-element/menu-bar-element.component.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { OutdoorWeatherData } from 'src/app/model/weather';\nimport { UserContextService } from 'src/app/services/user-context.service';\nimport { WeatherDataService } from 'src/app/services/weather-data.service';\n\n@Component({\n  selector: 'app-menu-bar-element',\n  templateUrl: './menu-bar-element.component.html',\n  styleUrls: ['./menu-bar-element.component.scss']\n})\nexport class MenuBarElementComponent implements OnInit {\n  locationLabel?: string;\n  reduceMotion: boolean = false; // We need this value, because the menu bar changes the font color, based on it\n\n  constructor(private weatherDataService: WeatherDataService,\n              private userContextService: UserContextService) { }\n\n  ngOnInit(): void {\n    this.getLocation();\n    this.loadReduceMotionValue();\n  }\n\n  loadReduceMotionValue() {\n    this.userContextService.getUserContextSubject()\n                          .subscribe(data => {\n                              this.reduceMotion = data.reduceMotion;\n                            });\n  }\n\n  getLocation(): void {\n    this.weatherDataService.getOutdoorWeatherDataSubject()\n                        .subscribe(data => {\n                          if(data)\n                          this.locationLabel = data.location + ', ' + data.postCode;\n                        });\n  }\n\n  reloadData() {\n    this.weatherDataService.reloadData();\n  }\n}\n\n    \n\n    \n        \n\n\n    \n        \n        \n            \n        \n    \n    \n        {{locationLabel}}\n    \n\n    \n\n    \n                \n                    ./menu-bar-element.component.scss\n                \n                @import \"../../shared/styles\";\n\n.button-container {\n    display: flex;\n    flex-wrap: nowrap;\n    justify-content: space-between;\n    height: 2.6em;\n}\n\nbutton {\n    margin: 0;\n    padding: 0;\n    fill: var(--secondary);\n    svg {\n        height: 1.7em; \n    }\n} \n\n.container {\n    position: fixed;\n    top: 0;\n    left: 0;\n    right: 0;\n    padding: var(--border-padding-top) var(--border-padding-right) 0 var(--border-padding-left);\n    height: var(--navbar-height);\n    z-index: 100;\n}\n\n.blur {\n    backdrop-filter: blur(20px);\n    position: fixed;\n    top: 0;\n    left: 0;\n    right: 0;\n    height: calc(var(--navbar-height) + var(--border-padding-top));\n    z-index: 5;\n}\n\n// css for mobile \n@media(max-width: 770px) {\n    @media (prefers-reduced-motion: no-preference) {\n\n        @keyframes color {\n            from {\n                color: white;\n                fill: white;\n            }\n        \n            to {\n                color: var(--text);\n                fill: var(--secondary);\n            }\n        }\n\n        h1.motion-allowed, svg.motion-allowed{\n            animation-name: color;\n            @include linear-animation;\n        }\n    }\n}\n\n// css for desktop \n@media(min-width: 690px) {\n    .container {\n        backdrop-filter: blur(20px);\n        left: calc(var(--border-padding-left) - var(--border-padding-right));\n        padding: var(--border-padding-top) var(--border-padding-right) 0 var(--border-padding-right);\n    }\n\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                        {{locationLabel}}    '\n    var COMPONENTS = [{'name': 'ApparentTemperatureTileViewComponent', 'selector': 'app-apparent-temperature-tile-view'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BackButtonElementComponent', 'selector': 'app-back-button-element'},{'name': 'CardElementComponent', 'selector': 'card-element'},{'name': 'CheckboxSwitcherElementComponent', 'selector': 'app-checkbox-switcher-element'},{'name': 'ConfigurationTilePopUpDialogView', 'selector': 'configuration-tile-popup-view'},{'name': 'ConfigurationTileViewComponent', 'selector': 'app-configuration-tile-view'},{'name': 'ConfigurationViewComponent', 'selector': 'app-configuration-view'},{'name': 'DashboardScreenComponent', 'selector': 'app-dashboard-screen'},{'name': 'DetailScreenComponent', 'selector': 'app-detail-screen'},{'name': 'ForecastDetailViewComponent', 'selector': 'app-forecast-detail-view'},{'name': 'ForecastTileViewComponent', 'selector': 'app-forecast-tile-view'},{'name': 'HistoryDetailViewComponent', 'selector': 'app-history-detail-view'},{'name': 'HistoryTileViewComponent', 'selector': 'app-history-tile-view'},{'name': 'HumidityTileViewComponent', 'selector': 'app-humidity-tile-view'},{'name': 'IndoorDetailViewComponent', 'selector': 'app-indoor-detail-view'},{'name': 'IndoorTileViewComponent', 'selector': 'app-indoor-tile-view'},{'name': 'LoginViewComponent', 'selector': 'app-login-view'},{'name': 'MenuBarElementComponent', 'selector': 'app-menu-bar-element'},{'name': 'MenuButtonElementComponent', 'selector': 'app-menu-button-element'},{'name': 'MenuElementComponent', 'selector': 'app-menu-element'},{'name': 'NavBarElementComponent', 'selector': 'app-nav-bar-element'},{'name': 'OnboardingScreenComponent', 'selector': 'app-onboarding-screen'},{'name': 'OpenAPELoginTileViewComponent', 'selector': 'app-open-apelogin-tile-view'},{'name': 'OutdoorWeatherDetailViewComponent', 'selector': 'app-outdoor-weather-detail-view'},{'name': 'OutdoorWeatherViewComponent', 'selector': 'app-outdoor-weather-view'},{'name': 'PersonalizationSettingsViewComponent', 'selector': 'app-personalization-settings-view'},{'name': 'PersonalizationViewComponent', 'selector': 'app-personalization-view'},{'name': 'PollenflugDetailViewComponent', 'selector': 'app-pollenflug-detail-view'},{'name': 'PollenflugSmallTileComponent', 'selector': 'app-pollenflug-small-tile'},{'name': 'PollenflugTileViewComponent', 'selector': 'app-pollenflug-tile-view'},{'name': 'PollenListElementComponent', 'selector': 'app-pollen-list-element'},{'name': 'PollenTagElementComponent', 'selector': 'app-pollen-tag-element'},{'name': 'ProgressChartElementComponent', 'selector': 'app-progress-chart-element'},{'name': 'RegistrationViewComponent', 'selector': 'app-registration-view'},{'name': 'SettingsScreenComponent', 'selector': 'app-settings-screen'},{'name': 'SimpleTileViewComponent', 'selector': 'app-simple-tile-view'},{'name': 'SliderElementComponent', 'selector': 'app-slider-element'},{'name': 'TtsPlayerElementComponent', 'selector': 'app-tts-player-element'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MenuBarElementComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MenuButtonElementComponent.html":{"url":"components/MenuButtonElementComponent.html","title":"component - MenuButtonElementComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MenuButtonElementComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/ui-elements/menu-button-element/menu-button-element.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-menu-button-element\n            \n\n            \n                styleUrls\n                ./menu-button-element.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./menu-button-element.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isMenuHidden\n                            \n                            \n                                reduceMotion\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closeMenu\n                            \n                            \n                                loadReduceMotionValue\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openMenu\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userContextService: UserContextService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/ui-elements/menu-button-element/menu-button-element.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userContextService\n                                                  \n                                                        \n                                                                        UserContextService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            closeMenu\n                        \n                        \n                    \n                \n            \n            \n                \ncloseMenu()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/ui-elements/menu-button-element/menu-button-element.component.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadReduceMotionValue\n                        \n                        \n                    \n                \n            \n            \n                \nloadReduceMotionValue()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/ui-elements/menu-button-element/menu-button-element.component.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/ui-elements/menu-button-element/menu-button-element.component.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openMenu\n                        \n                        \n                    \n                \n            \n            \n                \nopenMenu()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/ui-elements/menu-button-element/menu-button-element.component.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isMenuHidden\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/ui-elements/menu-button-element/menu-button-element.component.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            reduceMotion\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/ui-elements/menu-button-element/menu-button-element.component.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { UserContextService } from 'src/app/services/user-context.service';\n\n\n@Component({\n  selector: 'app-menu-button-element',\n  templateUrl: './menu-button-element.component.html',\n  styleUrls: ['./menu-button-element.component.scss']\n})\nexport class MenuButtonElementComponent implements OnInit {\n  reduceMotion: boolean = false; // We need this value, because the menu bar changes the font color, based on it\n  isMenuHidden: boolean = true;\n\n  constructor(private userContextService: UserContextService) { }\n\n  ngOnInit(): void {\n    this.loadReduceMotionValue();\n  }\n\n  loadReduceMotionValue() {\n    this.userContextService.getUserContextSubject()\n    .subscribe(data => {\n      let reduceMotionValue = data.reduceMotion;\n      this.reduceMotion = reduceMotionValue\n    });\n  }\n\n  openMenu(): void {\n    this.isMenuHidden = false;\n    console.log(\"open\")\n  }\n\n  closeMenu(): void {\n    this.isMenuHidden = true;\n    console.log(\"wird ausgeführt\")\n  }\n\n}\n\n    \n\n    \n        \n    \n        \n        \n        \n    \n\n    \n        Menü\n    \n\n\n\n    \n\n    \n                \n                    ./menu-button-element.component.scss\n                \n                @import \"../../shared/styles\";\n\n.menu-button {\n    margin: 0;\n    padding-left: 0;\n    border: none;\n\n    display: flex;\n    align-items: center;\n\n\n}\n\nbutton {\n    font-size: 1.0em;\n}\n\n.menu-image {\n    fill: var(--secondary);\n    width: 2.5em;\n    height: 17px; \n} \n\n.menu-image {\n    padding-right: 10px;\n}\n\n.menu-label {\n    font-weight: 700;\n    letter-spacing: 0.05em;\n    color: var(--secondary);\n}\n\n// css for mobile \n@media(max-width: 770px) {\n    @media (prefers-reduced-motion: no-preference) {\n        .menu-image.motion-allowed {\n            fill: white;\n        } \n\n        .menu-label.motion-allowed {\n            color: white;\n        }\n\n        @keyframes buttonColor {\n            from {\n                color: white;\n                fill: white;\n            }\n        \n            to {\n                color: var(--secondary);\n                fill: var(--secondary);\n            }\n        }\n\n        .menu-label.motion-allowed, .menu-image.motion-allowed {\n            animation-name: buttonColor;\n            @include linear-animation;\n        }\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                            Menü    '\n    var COMPONENTS = [{'name': 'ApparentTemperatureTileViewComponent', 'selector': 'app-apparent-temperature-tile-view'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BackButtonElementComponent', 'selector': 'app-back-button-element'},{'name': 'CardElementComponent', 'selector': 'card-element'},{'name': 'CheckboxSwitcherElementComponent', 'selector': 'app-checkbox-switcher-element'},{'name': 'ConfigurationTilePopUpDialogView', 'selector': 'configuration-tile-popup-view'},{'name': 'ConfigurationTileViewComponent', 'selector': 'app-configuration-tile-view'},{'name': 'ConfigurationViewComponent', 'selector': 'app-configuration-view'},{'name': 'DashboardScreenComponent', 'selector': 'app-dashboard-screen'},{'name': 'DetailScreenComponent', 'selector': 'app-detail-screen'},{'name': 'ForecastDetailViewComponent', 'selector': 'app-forecast-detail-view'},{'name': 'ForecastTileViewComponent', 'selector': 'app-forecast-tile-view'},{'name': 'HistoryDetailViewComponent', 'selector': 'app-history-detail-view'},{'name': 'HistoryTileViewComponent', 'selector': 'app-history-tile-view'},{'name': 'HumidityTileViewComponent', 'selector': 'app-humidity-tile-view'},{'name': 'IndoorDetailViewComponent', 'selector': 'app-indoor-detail-view'},{'name': 'IndoorTileViewComponent', 'selector': 'app-indoor-tile-view'},{'name': 'LoginViewComponent', 'selector': 'app-login-view'},{'name': 'MenuBarElementComponent', 'selector': 'app-menu-bar-element'},{'name': 'MenuButtonElementComponent', 'selector': 'app-menu-button-element'},{'name': 'MenuElementComponent', 'selector': 'app-menu-element'},{'name': 'NavBarElementComponent', 'selector': 'app-nav-bar-element'},{'name': 'OnboardingScreenComponent', 'selector': 'app-onboarding-screen'},{'name': 'OpenAPELoginTileViewComponent', 'selector': 'app-open-apelogin-tile-view'},{'name': 'OutdoorWeatherDetailViewComponent', 'selector': 'app-outdoor-weather-detail-view'},{'name': 'OutdoorWeatherViewComponent', 'selector': 'app-outdoor-weather-view'},{'name': 'PersonalizationSettingsViewComponent', 'selector': 'app-personalization-settings-view'},{'name': 'PersonalizationViewComponent', 'selector': 'app-personalization-view'},{'name': 'PollenflugDetailViewComponent', 'selector': 'app-pollenflug-detail-view'},{'name': 'PollenflugSmallTileComponent', 'selector': 'app-pollenflug-small-tile'},{'name': 'PollenflugTileViewComponent', 'selector': 'app-pollenflug-tile-view'},{'name': 'PollenListElementComponent', 'selector': 'app-pollen-list-element'},{'name': 'PollenTagElementComponent', 'selector': 'app-pollen-tag-element'},{'name': 'ProgressChartElementComponent', 'selector': 'app-progress-chart-element'},{'name': 'RegistrationViewComponent', 'selector': 'app-registration-view'},{'name': 'SettingsScreenComponent', 'selector': 'app-settings-screen'},{'name': 'SimpleTileViewComponent', 'selector': 'app-simple-tile-view'},{'name': 'SliderElementComponent', 'selector': 'app-slider-element'},{'name': 'TtsPlayerElementComponent', 'selector': 'app-tts-player-element'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MenuButtonElementComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MenuElementComponent.html":{"url":"components/MenuElementComponent.html","title":"component - MenuElementComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MenuElementComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/ui-elements/menu-element/menu-element.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-menu-element\n            \n\n            \n                styleUrls\n                ./menu-element.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./menu-element.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                configurationIcon\n                            \n                            \n                                    Public\n                                imageService\n                            \n                            \n                                    Public\n                                logoutIcon\n                            \n                            \n                                    Public\n                                settingsIcon\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closeMenu\n                            \n                            \n                                logout\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openConfigurationSettings\n                            \n                            \n                                openPersonalizationSettings\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                closeEvent\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    userLoggedIn\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, userContextService: UserContextService, imageService: ImageService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/ui-elements/menu-element/menu-element.component.ts:59\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userContextService\n                                                  \n                                                        \n                                                                        UserContextService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        imageService\n                                                  \n                                                        \n                                                                        ImageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        closeEvent\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/ui-elements/menu-element/menu-element.component.ts:38\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            closeMenu\n                        \n                        \n                    \n                \n            \n            \n                \ncloseMenu()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/ui-elements/menu-element/menu-element.component.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            logout\n                        \n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/ui-elements/menu-element/menu-element.component.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/ui-elements/menu-element/menu-element.component.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openConfigurationSettings\n                        \n                        \n                    \n                \n            \n            \n                \nopenConfigurationSettings()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/ui-elements/menu-element/menu-element.component.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            openPersonalizationSettings\n                        \n                        \n                    \n                \n            \n            \n                \nopenPersonalizationSettings()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/ui-elements/menu-element/menu-element.component.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            configurationIcon\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ImageModel\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    light: \"setting-button-light.png\",\n    dark: \"setting-button-dark.png\",\n    highContrast: \"setting-button-high.png\"\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/ui-elements/menu-element/menu-element.component.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            imageService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ImageService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/ui-elements/menu-element/menu-element.component.ts:63\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            logoutIcon\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ImageModel\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    light: \"logout-button-light.png\",\n    dark: \"logout-button-dark.png\",\n    highContrast: \"logout-button-high.png\"\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/ui-elements/menu-element/menu-element.component.ts:49\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            settingsIcon\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ImageModel\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    light: \"pers-button-light.png\",\n    dark: \"pers-button-dark.png\",\n    highContrast: \"pers-button-high.png\"\n  }\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/ui-elements/menu-element/menu-element.component.ts:44\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        userLoggedIn\n                    \n                \n\n                \n                    \n                        getuserLoggedIn()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/ui-elements/menu-element/menu-element.component.ts:55\n                                \n                            \n\n            \n        \n\n\n\n\n    \n        import { Component, OnInit, EventEmitter, Output } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { trigger, style, animate, transition } from '@angular/animations';\nimport { UserContextService } from 'src/app/services/user-context.service';\nimport { ImageService } from 'src/app/services/image.service';\nimport { ImageModel } from 'src/app/model/image';\n\n@Component({\n  selector: 'app-menu-element',\n  templateUrl: './menu-element.component.html',\n  styleUrls: ['./menu-element.component.scss'],\n  animations: [\n    trigger(\n      'animate', \n      [\n        transition(\n          ':enter', \n          [\n            style({ opacity: 0 }),\n            animate('0.3s ease-out', \n                    style({ opacity: 1 }))\n          ]\n        ),\n        transition(\n          ':leave', \n          [\n            style({ opacity: 1 }),\n            animate('0.3s ease-in', \n                    style({ opacity: 0 }))\n          ]\n        )\n      ]\n    )\n  ]\n})\n\nexport class MenuElementComponent implements OnInit {\n  @Output() closeEvent = new EventEmitter();\n  public configurationIcon: ImageModel = {\n    light: \"setting-button-light.png\",\n    dark: \"setting-button-dark.png\",\n    highContrast: \"setting-button-high.png\"\n  }\n  public settingsIcon: ImageModel = {\n    light: \"pers-button-light.png\",\n    dark: \"pers-button-dark.png\",\n    highContrast: \"pers-button-high.png\"\n  }\n  public logoutIcon: ImageModel = {\n    light: \"logout-button-light.png\",\n    dark: \"logout-button-dark.png\",\n    highContrast: \"logout-button-high.png\"\n  }\n\n  get userLoggedIn(): boolean {\n    console.log(\"User eingeloggt: \", this.userContextService.userLoggedIn);\n\n    return this.userContextService.userLoggedIn;\n  }\n\n  constructor(private router: Router,\n    private userContextService: UserContextService,\n    public imageService: ImageService) { }\n\n  ngOnInit(): void {\n  }\n\n  closeMenu(): void {\n    this.closeEvent.emit();\n  }\n\n  openPersonalizationSettings() {\n    this.router.navigateByUrl('/settings/personalization');\n  }\n\n  openConfigurationSettings() {\n    this.router.navigateByUrl('/settings/configuration');\n  }\n\n  logout(): void {\n    this.userContextService.logout();\n  }\n}\n\n    \n\n    \n        \n\n\n\n    Fertig\n    \n        Personalisierung\n        \n    \n\n    \n        Konfiguration\n        \n    \n\n    \n        Ausloggen\n        \n    \n\n\n    \n        Einloggen\n        \n    \n\n    \n\n    \n                \n                    ./menu-element.component.scss\n                \n                .container {\n    position: fixed;\n    top: 0;\n    left: 0;\n    height: 100vh;\n    width: 100vw;\n    backdrop-filter: blur(20px);\n    z-index: 102;\n\n}\n\n.menu-container {\n    border-radius: var(--corner-radius);\n    position: fixed;\n    background-color: var(--surface);\n    padding: var(--padding);\n    z-index: 103;\n\n    display: flex;\n    justify-content: flex-end;\n    flex-direction: column;\n    align-items: flex-end;\n}\n\n.icon {\n    height: 2.2em;\n    padding-left: var(--padding);\n}\n\n.menu-button {\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: space-between;\n    width: 100%;\n    padding: calc(var(--padding) / 2) 0 calc(var(--padding) / 2) 0;\n    border-top: 0.2px solid var(--secondary);\n    cursor: pointer;\n    font-size: 1.0em;\n    hyphens: none;\n\n}\n\np {\n    font-weight: 700;\n    padding: 0 0 calc(var(--padding) / 2) 0;\n    hyphens: none;\n}\n\nspan {\n    hyphens: none;\n}\n\n.fertig {\n    cursor: pointer;\n    padding: 0;\n    padding-bottom: 0.5em;\n    font-size: 1.0em;\n}\n\n.done {\n    font-weight: 700;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Fertig            Personalisierung                        Konfiguration                        Ausloggen                        Einloggen            '\n    var COMPONENTS = [{'name': 'ApparentTemperatureTileViewComponent', 'selector': 'app-apparent-temperature-tile-view'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BackButtonElementComponent', 'selector': 'app-back-button-element'},{'name': 'CardElementComponent', 'selector': 'card-element'},{'name': 'CheckboxSwitcherElementComponent', 'selector': 'app-checkbox-switcher-element'},{'name': 'ConfigurationTilePopUpDialogView', 'selector': 'configuration-tile-popup-view'},{'name': 'ConfigurationTileViewComponent', 'selector': 'app-configuration-tile-view'},{'name': 'ConfigurationViewComponent', 'selector': 'app-configuration-view'},{'name': 'DashboardScreenComponent', 'selector': 'app-dashboard-screen'},{'name': 'DetailScreenComponent', 'selector': 'app-detail-screen'},{'name': 'ForecastDetailViewComponent', 'selector': 'app-forecast-detail-view'},{'name': 'ForecastTileViewComponent', 'selector': 'app-forecast-tile-view'},{'name': 'HistoryDetailViewComponent', 'selector': 'app-history-detail-view'},{'name': 'HistoryTileViewComponent', 'selector': 'app-history-tile-view'},{'name': 'HumidityTileViewComponent', 'selector': 'app-humidity-tile-view'},{'name': 'IndoorDetailViewComponent', 'selector': 'app-indoor-detail-view'},{'name': 'IndoorTileViewComponent', 'selector': 'app-indoor-tile-view'},{'name': 'LoginViewComponent', 'selector': 'app-login-view'},{'name': 'MenuBarElementComponent', 'selector': 'app-menu-bar-element'},{'name': 'MenuButtonElementComponent', 'selector': 'app-menu-button-element'},{'name': 'MenuElementComponent', 'selector': 'app-menu-element'},{'name': 'NavBarElementComponent', 'selector': 'app-nav-bar-element'},{'name': 'OnboardingScreenComponent', 'selector': 'app-onboarding-screen'},{'name': 'OpenAPELoginTileViewComponent', 'selector': 'app-open-apelogin-tile-view'},{'name': 'OutdoorWeatherDetailViewComponent', 'selector': 'app-outdoor-weather-detail-view'},{'name': 'OutdoorWeatherViewComponent', 'selector': 'app-outdoor-weather-view'},{'name': 'PersonalizationSettingsViewComponent', 'selector': 'app-personalization-settings-view'},{'name': 'PersonalizationViewComponent', 'selector': 'app-personalization-view'},{'name': 'PollenflugDetailViewComponent', 'selector': 'app-pollenflug-detail-view'},{'name': 'PollenflugSmallTileComponent', 'selector': 'app-pollenflug-small-tile'},{'name': 'PollenflugTileViewComponent', 'selector': 'app-pollenflug-tile-view'},{'name': 'PollenListElementComponent', 'selector': 'app-pollen-list-element'},{'name': 'PollenTagElementComponent', 'selector': 'app-pollen-tag-element'},{'name': 'ProgressChartElementComponent', 'selector': 'app-progress-chart-element'},{'name': 'RegistrationViewComponent', 'selector': 'app-registration-view'},{'name': 'SettingsScreenComponent', 'selector': 'app-settings-screen'},{'name': 'SimpleTileViewComponent', 'selector': 'app-simple-tile-view'},{'name': 'SliderElementComponent', 'selector': 'app-slider-element'},{'name': 'TtsPlayerElementComponent', 'selector': 'app-tts-player-element'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MenuElementComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NavBarElementComponent.html":{"url":"components/NavBarElementComponent.html","title":"component - NavBarElementComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NavBarElementComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/ui-elements/nav-bar-element/nav-bar-element.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-nav-bar-element\n            \n\n            \n                styleUrls\n                ./nav-bar-element.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./nav-bar-element.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                backLabel\n                            \n                            \n                                titleLabel\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/ui-elements/nav-bar-element/nav-bar-element.component.ts:10\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        backLabel\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/ui-elements/nav-bar-element/nav-bar-element.component.ts:10\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        titleLabel\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/ui-elements/nav-bar-element/nav-bar-element.component.ts:9\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/ui-elements/nav-bar-element/nav-bar-element.component.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-nav-bar-element',\n  templateUrl: './nav-bar-element.component.html',\n  styleUrls: ['./nav-bar-element.component.scss']\n})\nexport class NavBarElementComponent implements OnInit {\n  @Input() titleLabel?: string;\n  @Input() backLabel?: string;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        \n\n    \n        \n    \n    \n        {{titleLabel}}\n    \n\n\n    \n\n    \n                \n                    ./nav-bar-element.component.scss\n                \n                .container {\n    height: var(--navbar-height);\n    position: fixed;\n    top: 0;\n    left: calc(var(--border-padding-left) - var(--border-padding-right));\n    right: 0;\n    padding: var(--border-padding-top) 0 0 var(--border-padding-right);\n    z-index: 100;\n    // background-color: var(--background);\n    backdrop-filter: blur(20px);\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                            {{titleLabel}}    '\n    var COMPONENTS = [{'name': 'ApparentTemperatureTileViewComponent', 'selector': 'app-apparent-temperature-tile-view'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BackButtonElementComponent', 'selector': 'app-back-button-element'},{'name': 'CardElementComponent', 'selector': 'card-element'},{'name': 'CheckboxSwitcherElementComponent', 'selector': 'app-checkbox-switcher-element'},{'name': 'ConfigurationTilePopUpDialogView', 'selector': 'configuration-tile-popup-view'},{'name': 'ConfigurationTileViewComponent', 'selector': 'app-configuration-tile-view'},{'name': 'ConfigurationViewComponent', 'selector': 'app-configuration-view'},{'name': 'DashboardScreenComponent', 'selector': 'app-dashboard-screen'},{'name': 'DetailScreenComponent', 'selector': 'app-detail-screen'},{'name': 'ForecastDetailViewComponent', 'selector': 'app-forecast-detail-view'},{'name': 'ForecastTileViewComponent', 'selector': 'app-forecast-tile-view'},{'name': 'HistoryDetailViewComponent', 'selector': 'app-history-detail-view'},{'name': 'HistoryTileViewComponent', 'selector': 'app-history-tile-view'},{'name': 'HumidityTileViewComponent', 'selector': 'app-humidity-tile-view'},{'name': 'IndoorDetailViewComponent', 'selector': 'app-indoor-detail-view'},{'name': 'IndoorTileViewComponent', 'selector': 'app-indoor-tile-view'},{'name': 'LoginViewComponent', 'selector': 'app-login-view'},{'name': 'MenuBarElementComponent', 'selector': 'app-menu-bar-element'},{'name': 'MenuButtonElementComponent', 'selector': 'app-menu-button-element'},{'name': 'MenuElementComponent', 'selector': 'app-menu-element'},{'name': 'NavBarElementComponent', 'selector': 'app-nav-bar-element'},{'name': 'OnboardingScreenComponent', 'selector': 'app-onboarding-screen'},{'name': 'OpenAPELoginTileViewComponent', 'selector': 'app-open-apelogin-tile-view'},{'name': 'OutdoorWeatherDetailViewComponent', 'selector': 'app-outdoor-weather-detail-view'},{'name': 'OutdoorWeatherViewComponent', 'selector': 'app-outdoor-weather-view'},{'name': 'PersonalizationSettingsViewComponent', 'selector': 'app-personalization-settings-view'},{'name': 'PersonalizationViewComponent', 'selector': 'app-personalization-view'},{'name': 'PollenflugDetailViewComponent', 'selector': 'app-pollenflug-detail-view'},{'name': 'PollenflugSmallTileComponent', 'selector': 'app-pollenflug-small-tile'},{'name': 'PollenflugTileViewComponent', 'selector': 'app-pollenflug-tile-view'},{'name': 'PollenListElementComponent', 'selector': 'app-pollen-list-element'},{'name': 'PollenTagElementComponent', 'selector': 'app-pollen-tag-element'},{'name': 'ProgressChartElementComponent', 'selector': 'app-progress-chart-element'},{'name': 'RegistrationViewComponent', 'selector': 'app-registration-view'},{'name': 'SettingsScreenComponent', 'selector': 'app-settings-screen'},{'name': 'SimpleTileViewComponent', 'selector': 'app-simple-tile-view'},{'name': 'SliderElementComponent', 'selector': 'app-slider-element'},{'name': 'TtsPlayerElementComponent', 'selector': 'app-tts-player-element'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NavBarElementComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OnboardingScreenComponent.html":{"url":"components/OnboardingScreenComponent.html","title":"component - OnboardingScreenComponent","body":"\n                   \n\n\n\n\n\n  Components\n  OnboardingScreenComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/screens/onboarding-screen/onboarding-screen.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-onboarding-screen\n            \n\n            \n                styleUrls\n                ./onboarding-screen.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./onboarding-screen.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                desktop\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                prepareRoute\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/screens/onboarding-screen/onboarding-screen.component.ts:13\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/screens/onboarding-screen/onboarding-screen.component.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            prepareRoute\n                        \n                        \n                    \n                \n            \n            \n                \nprepareRoute(outlet: RouterOutlet)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/screens/onboarding-screen/onboarding-screen.component.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    outlet\n                                    \n                                                RouterOutlet\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            desktop\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/screens/onboarding-screen/onboarding-screen.component.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { RouterOutlet } from '@angular/router';\nimport { routeTransitionAnimations } from '../../../route-transition-animation';\n\n\n@Component({\n  selector: 'app-onboarding-screen',\n  templateUrl: './onboarding-screen.component.html',\n  styleUrls: ['./onboarding-screen.component.scss'],\n  animations: [routeTransitionAnimations],\n})\nexport class OnboardingScreenComponent implements OnInit {\n  public desktop: boolean = false;\n\n  constructor() { }\n\n  ngOnInit(): void {}\n\n\n  prepareRoute(outlet: RouterOutlet) {\n    return outlet && outlet.activatedRouteData && outlet.activatedRouteData['animationState'];\n  }\n\n}\n\n    \n\n    \n        \n    \n         \n    \n\n    \n\n    \n                \n                    ./onboarding-screen.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                 '\n    var COMPONENTS = [{'name': 'ApparentTemperatureTileViewComponent', 'selector': 'app-apparent-temperature-tile-view'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BackButtonElementComponent', 'selector': 'app-back-button-element'},{'name': 'CardElementComponent', 'selector': 'card-element'},{'name': 'CheckboxSwitcherElementComponent', 'selector': 'app-checkbox-switcher-element'},{'name': 'ConfigurationTilePopUpDialogView', 'selector': 'configuration-tile-popup-view'},{'name': 'ConfigurationTileViewComponent', 'selector': 'app-configuration-tile-view'},{'name': 'ConfigurationViewComponent', 'selector': 'app-configuration-view'},{'name': 'DashboardScreenComponent', 'selector': 'app-dashboard-screen'},{'name': 'DetailScreenComponent', 'selector': 'app-detail-screen'},{'name': 'ForecastDetailViewComponent', 'selector': 'app-forecast-detail-view'},{'name': 'ForecastTileViewComponent', 'selector': 'app-forecast-tile-view'},{'name': 'HistoryDetailViewComponent', 'selector': 'app-history-detail-view'},{'name': 'HistoryTileViewComponent', 'selector': 'app-history-tile-view'},{'name': 'HumidityTileViewComponent', 'selector': 'app-humidity-tile-view'},{'name': 'IndoorDetailViewComponent', 'selector': 'app-indoor-detail-view'},{'name': 'IndoorTileViewComponent', 'selector': 'app-indoor-tile-view'},{'name': 'LoginViewComponent', 'selector': 'app-login-view'},{'name': 'MenuBarElementComponent', 'selector': 'app-menu-bar-element'},{'name': 'MenuButtonElementComponent', 'selector': 'app-menu-button-element'},{'name': 'MenuElementComponent', 'selector': 'app-menu-element'},{'name': 'NavBarElementComponent', 'selector': 'app-nav-bar-element'},{'name': 'OnboardingScreenComponent', 'selector': 'app-onboarding-screen'},{'name': 'OpenAPELoginTileViewComponent', 'selector': 'app-open-apelogin-tile-view'},{'name': 'OutdoorWeatherDetailViewComponent', 'selector': 'app-outdoor-weather-detail-view'},{'name': 'OutdoorWeatherViewComponent', 'selector': 'app-outdoor-weather-view'},{'name': 'PersonalizationSettingsViewComponent', 'selector': 'app-personalization-settings-view'},{'name': 'PersonalizationViewComponent', 'selector': 'app-personalization-view'},{'name': 'PollenflugDetailViewComponent', 'selector': 'app-pollenflug-detail-view'},{'name': 'PollenflugSmallTileComponent', 'selector': 'app-pollenflug-small-tile'},{'name': 'PollenflugTileViewComponent', 'selector': 'app-pollenflug-tile-view'},{'name': 'PollenListElementComponent', 'selector': 'app-pollen-list-element'},{'name': 'PollenTagElementComponent', 'selector': 'app-pollen-tag-element'},{'name': 'ProgressChartElementComponent', 'selector': 'app-progress-chart-element'},{'name': 'RegistrationViewComponent', 'selector': 'app-registration-view'},{'name': 'SettingsScreenComponent', 'selector': 'app-settings-screen'},{'name': 'SimpleTileViewComponent', 'selector': 'app-simple-tile-view'},{'name': 'SliderElementComponent', 'selector': 'app-slider-element'},{'name': 'TtsPlayerElementComponent', 'selector': 'app-tts-player-element'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'OnboardingScreenComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OpenAPELoginTileViewComponent.html":{"url":"components/OpenAPELoginTileViewComponent.html","title":"component - OpenAPELoginTileViewComponent","body":"\n                   \n\n\n\n\n\n  Components\n  OpenAPELoginTileViewComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/views/open-apelogin-tile-view/open-apelogin-tile-view.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-open-apelogin-tile-view\n            \n\n            \n                styleUrls\n                ./open-apelogin-tile-view.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./open-apelogin-tile-view.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                error\n                            \n                            \n                                loginForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                loginToOpenApe\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, userContextService: UserContextService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/views/open-apelogin-tile-view/open-apelogin-tile-view.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userContextService\n                                                  \n                                                        \n                                                                        UserContextService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loginToOpenApe\n                        \n                        \n                    \n                \n            \n            \n                \nloginToOpenApe(username: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/views/open-apelogin-tile-view/open-apelogin-tile-view.component.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/views/open-apelogin-tile-view/open-apelogin-tile-view.component.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSubmit\n                        \n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/views/open-apelogin-tile-view/open-apelogin-tile-view.component.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            error\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/views/open-apelogin-tile-view/open-apelogin-tile-view.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loginForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.formBuilder.group({\n    username: new FormControl('', Validators.minLength(2)), // FIXME Validators funktionieren nicht \n    password: new FormControl('', Validators.minLength(2)),\n  })\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/views/open-apelogin-tile-view/open-apelogin-tile-view.component.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, Validators } from '@angular/forms'; \nimport { UserContextService } from 'src/app/services/user-context.service';\n\n@Component({\n  selector: 'app-open-apelogin-tile-view',\n  templateUrl: './open-apelogin-tile-view.component.html',\n  styleUrls: ['./open-apelogin-tile-view.component.scss']\n})\nexport class OpenAPELoginTileViewComponent implements OnInit {\n  loginForm = this.formBuilder.group({\n    username: new FormControl('', Validators.minLength(2)), // FIXME Validators funktionieren nicht \n    password: new FormControl('', Validators.minLength(2)),\n  });\n  error?: string;\n  constructor(\n    private formBuilder: FormBuilder,\n    private userContextService: UserContextService) { }\n\n  ngOnInit(): void {\n  }\n\n  onSubmit(): void {\n    const username = this.loginForm.get(\"username\")?.value;\n    const password = this.loginForm.get(\"password\")?.value;\n    this.error = undefined;\n\n    this.loginToOpenApe(username, password);\n  }\n\n  loginToOpenApe(username: string, password: string) {\n    this.error = undefined\n    this.userContextService.loginToOpenApe(username, password).then(result => {\n      if(!result.success) {\n        this.error = result.error\n      } \n    })\n  }\n}\n\n    \n\n    \n        \n    \n        \n            \n                \n                Nutzername\n                \n                \n            \n            \n            \n                \n                Passwort\n                \n                \n            \n            {{error}}\n\n\n            \n        \n    \n\n    \n\n    \n                \n                    ./open-apelogin-tile-view.component.scss\n                \n                .error-message {\n    color: var(--status-red);\n    padding-top: calc(var(--padding) / 2 );\n    text-align: center;\n}\n\ninput {\n    background-color: var(--background);\n}\n\n#ok {\n    border: 2px solid var(--accent);\n    color: var(--accent);\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                        Nutzername                                                                                                    Passwort                                                        {{error}}                        '\n    var COMPONENTS = [{'name': 'ApparentTemperatureTileViewComponent', 'selector': 'app-apparent-temperature-tile-view'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BackButtonElementComponent', 'selector': 'app-back-button-element'},{'name': 'CardElementComponent', 'selector': 'card-element'},{'name': 'CheckboxSwitcherElementComponent', 'selector': 'app-checkbox-switcher-element'},{'name': 'ConfigurationTilePopUpDialogView', 'selector': 'configuration-tile-popup-view'},{'name': 'ConfigurationTileViewComponent', 'selector': 'app-configuration-tile-view'},{'name': 'ConfigurationViewComponent', 'selector': 'app-configuration-view'},{'name': 'DashboardScreenComponent', 'selector': 'app-dashboard-screen'},{'name': 'DetailScreenComponent', 'selector': 'app-detail-screen'},{'name': 'ForecastDetailViewComponent', 'selector': 'app-forecast-detail-view'},{'name': 'ForecastTileViewComponent', 'selector': 'app-forecast-tile-view'},{'name': 'HistoryDetailViewComponent', 'selector': 'app-history-detail-view'},{'name': 'HistoryTileViewComponent', 'selector': 'app-history-tile-view'},{'name': 'HumidityTileViewComponent', 'selector': 'app-humidity-tile-view'},{'name': 'IndoorDetailViewComponent', 'selector': 'app-indoor-detail-view'},{'name': 'IndoorTileViewComponent', 'selector': 'app-indoor-tile-view'},{'name': 'LoginViewComponent', 'selector': 'app-login-view'},{'name': 'MenuBarElementComponent', 'selector': 'app-menu-bar-element'},{'name': 'MenuButtonElementComponent', 'selector': 'app-menu-button-element'},{'name': 'MenuElementComponent', 'selector': 'app-menu-element'},{'name': 'NavBarElementComponent', 'selector': 'app-nav-bar-element'},{'name': 'OnboardingScreenComponent', 'selector': 'app-onboarding-screen'},{'name': 'OpenAPELoginTileViewComponent', 'selector': 'app-open-apelogin-tile-view'},{'name': 'OutdoorWeatherDetailViewComponent', 'selector': 'app-outdoor-weather-detail-view'},{'name': 'OutdoorWeatherViewComponent', 'selector': 'app-outdoor-weather-view'},{'name': 'PersonalizationSettingsViewComponent', 'selector': 'app-personalization-settings-view'},{'name': 'PersonalizationViewComponent', 'selector': 'app-personalization-view'},{'name': 'PollenflugDetailViewComponent', 'selector': 'app-pollenflug-detail-view'},{'name': 'PollenflugSmallTileComponent', 'selector': 'app-pollenflug-small-tile'},{'name': 'PollenflugTileViewComponent', 'selector': 'app-pollenflug-tile-view'},{'name': 'PollenListElementComponent', 'selector': 'app-pollen-list-element'},{'name': 'PollenTagElementComponent', 'selector': 'app-pollen-tag-element'},{'name': 'ProgressChartElementComponent', 'selector': 'app-progress-chart-element'},{'name': 'RegistrationViewComponent', 'selector': 'app-registration-view'},{'name': 'SettingsScreenComponent', 'selector': 'app-settings-screen'},{'name': 'SimpleTileViewComponent', 'selector': 'app-simple-tile-view'},{'name': 'SliderElementComponent', 'selector': 'app-slider-element'},{'name': 'TtsPlayerElementComponent', 'selector': 'app-tts-player-element'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'OpenAPELoginTileViewComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OutdoorWeatherData.html":{"url":"interfaces/OutdoorWeatherData.html","title":"interface - OutdoorWeatherData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  OutdoorWeatherData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/weather.ts\n        \n\n\n            \n                Extends\n            \n            \n                        WeatherData\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        apparentTemperature\n                                \n                                \n                                        humidity\n                                \n                                \n                                        location\n                                \n                                \n                                        maxTemperature\n                                \n                                \n                                        minTemperature\n                                \n                                \n                                        postCode\n                                \n                                \n                                        temperature\n                                \n                                \n                                        timestamp\n                                \n                                \n                                        weather\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        apparentTemperature\n                                    \n                                \n                                \n                                    \n                                        apparentTemperature:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        humidity\n                                    \n                                \n                                \n                                    \n                                        humidity:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        location\n                                    \n                                \n                                \n                                    \n                                        location:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        maxTemperature\n                                    \n                                \n                                \n                                    \n                                        maxTemperature:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        minTemperature\n                                    \n                                \n                                \n                                    \n                                        minTemperature:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        postCode\n                                    \n                                \n                                \n                                    \n                                        postCode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        temperature\n                                    \n                                \n                                \n                                    \n                                        temperature:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timestamp\n                                    \n                                \n                                \n                                    \n                                        timestamp:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        weather\n                                    \n                                \n                                \n                                    \n                                        weather:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface WeatherData { }\n\nexport enum TileType {\n    indoorRoom,\n    pollenSmall,\n    pollenList,\n    history,\n    forecast,\n    humidity,\n    apparentTemperature,\n}\n\nexport interface TileArrays {\n    dashboard: Tile[],\n    pollen : Tile[],\n    indoorRooms: Tile[]\n  }\n  \n\nexport enum TilePriority {\n    important, //Highest \n    high,\n    middle,\n    low,\n}\n\nexport interface Tile {\n    type: TileType;\n    data: A;\n    id: string;\n    priority: TilePriority\n}\n\nexport interface OutdoorWeatherData extends WeatherData {\n    temperature: number // in °C\n    maxTemperature: number, //TODO: external database required \"forecast\"  --> // TODO: Move to \"daily\" data structure\n    minTemperature: number, //TODO: external database required \"forecast\"  --> // TODO: Move to \"daily\" data structure\n    humidity: number, // in %\n    timestamp: Date, \n    weather: string, // TODO: external API required\n    apparentTemperature: number, // in °C ---> die \"gefühlte\" Temperatur\n    location: string, // e.g. \"Stuttgart\" TODO: Make configurable in ESP Wlan-Board\n    postCode: string,\n}\n\nexport interface WeatherForecastData extends WeatherData {\n    trend: string,\n    weatherDescription: string,\n    weatherIcon: string,\n  }\n\nexport interface PollenData extends WeatherData {\n    pollenName: string, // TODO: Maybe we should use the same Pollen enum as in user-context.ts\n    id: number,\n    today: string, // -1  3\n    tomorrow: string, // -1  3\n}\n\nexport interface IndoorRoomData extends WeatherData {\n    roomID: string,\n    roomName: string,\n    airQuality: number, // in %\n    temperature: number // in °C \n    humidity: number, // in %\n    timestamp: Date, \n}\n\nexport interface WeatherHistoryData extends WeatherData {\n    datapoints: OutdoorWeatherData[],\n}\n\nexport interface GraphDataSet extends WeatherData {\n    temperatureDataPoints: number[];\n    humidityDataPoints: number[];\n    xAxisLabel: string[];\n    label: string;\n    temperatureAverage: number;\n    humidityAverage: number;\n}\n\nexport interface WeatherHistoryByDayData extends WeatherData  {\n    averageTemperature: number, // in °C\n    averageHumidity: number, // in %\n}\n\nexport enum Daytime {\n    noon,\n    night,\n    dawn,\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OutdoorWeatherDetailViewComponent.html":{"url":"components/OutdoorWeatherDetailViewComponent.html","title":"component - OutdoorWeatherDetailViewComponent","body":"\n                   \n\n\n\n\n\n  Components\n  OutdoorWeatherDetailViewComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/views/outdoor-weather-detail-view/outdoor-weather-detail-view.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-outdoor-weather-detail-view\n            \n\n            \n                styleUrls\n                ./outdoor-weather-detail-view.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./outdoor-weather-detail-view.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                desktop\n                            \n                            \n                                    Optional\n                                outdoorWeather\n                            \n                            \n                                ttsTextGeneratorFunction\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(breakpointObserver: BreakpointObserver, weahterDataService: WeatherDataService, textService: TextService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/views/outdoor-weather-detail-view/outdoor-weather-detail-view.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        breakpointObserver\n                                                  \n                                                        \n                                                                    BreakpointObserver\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        weahterDataService\n                                                  \n                                                        \n                                                                        WeatherDataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        textService\n                                                  \n                                                        \n                                                                        TextService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/views/outdoor-weather-detail-view/outdoor-weather-detail-view.component.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            desktop\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/views/outdoor-weather-detail-view/outdoor-weather-detail-view.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            outdoorWeather\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         OutdoorWeatherData\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/views/outdoor-weather-detail-view/outdoor-weather-detail-view.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ttsTextGeneratorFunction\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/views/outdoor-weather-detail-view/outdoor-weather-detail-view.component.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { BreakpointObserver, BreakpointState} from '@angular/cdk/layout';\nimport { Component, OnInit } from '@angular/core';\nimport { OutdoorWeatherData } from 'src/app/model/weather';\nimport { TextService } from 'src/app/services/text.service';\nimport { WeatherDataService } from 'src/app/services/weather-data.service';\n\n@Component({\n  selector: 'app-outdoor-weather-detail-view',\n  templateUrl: './outdoor-weather-detail-view.component.html',\n  styleUrls: ['./outdoor-weather-detail-view.component.scss']\n})\nexport class OutdoorWeatherDetailViewComponent implements OnInit {\n  desktop: boolean = false;\n  outdoorWeather?: OutdoorWeatherData;\n  ttsTextGeneratorFunction = () => this.textService.createOutdoorText(this.outdoorWeather)\n\n\n  constructor(private breakpointObserver: BreakpointObserver,\n    private weahterDataService: WeatherDataService,\n    private textService: TextService) { }\n\n  ngOnInit(): void {\n    this.desktopBreakpointObserver();\n    this.loadOutdoorWeatherData();\n  }\n\n  private desktopBreakpointObserver() {\n    this.breakpointObserver\n    .observe(['(min-width: 770px)'])\n    .subscribe((state: BreakpointState) => {\n      if (state.matches) {\n        this.desktop = true;\n      } else {\n        this.desktop = false;\n      }\n    });\n  }\n\n  private loadOutdoorWeatherData() {\n    this.weahterDataService.getOutdoorWeatherDataSubject().subscribe(data => this.outdoorWeather = data);\n  }\n\n}\n\n    \n\n    \n        \n\n\n\n\n    \n    \n    \n    \n\n\n \n    Woher kommen die Daten?\n    In Wettervorhersagen wird üblicherweise die tatsächliche Temperatur angegeben. Das Temperaturempfinden des Menschen entspricht der herrschenden Lufttemperatur aber nur, \n        wenn man sich mit der Temperatur angemessener Kleidung bei mittlerer Luftfeuchtigkeit und Windstille \n        langsam im Schatten bewegt. In der Sonne und bei hohem Wasserdampfgehalt der Luft empfindet man die \n        Temperatur als höher, bei Wind - besonders im Winter - als geringer. Bei der Beschreibung dieser gefühlten \n        Temperatur werden deshalb die Reaktionen des Menschen auf die Lufttemperatur, die Windgeschwindigkeit,\n         die Luftfeuchtigkeit, die Strahlungsintensität der Sonne sowie die Isolationsfähigkeit der Kleidung beschrieben. \n         Die Aussagen zu Behaglichkeit, Wärmebelastung und Kälteempfindung werden dann kombiniert. \n         Dadurch lässt sich eine Aussage zur gefühlten Temperatur und der Wärmebalance treffen. \n    \n\n\n\n\n    \n\n    \n                \n                    ./outdoor-weather-detail-view.component.scss\n                \n                .flex-container {\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: space-between;\n}\n\n@media (min-width: 1000px) {\n    .flex-container {\n        justify-content: flex-start;\n    }\n    .flex-container * {\n        padding-right: var(--padding);\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                     Woher kommen die Daten?    In Wettervorhersagen wird üblicherweise die tatsächliche Temperatur angegeben. Das Temperaturempfinden des Menschen entspricht der herrschenden Lufttemperatur aber nur,         wenn man sich mit der Temperatur angemessener Kleidung bei mittlerer Luftfeuchtigkeit und Windstille         langsam im Schatten bewegt. In der Sonne und bei hohem Wasserdampfgehalt der Luft empfindet man die         Temperatur als höher, bei Wind - besonders im Winter - als geringer. Bei der Beschreibung dieser gefühlten         Temperatur werden deshalb die Reaktionen des Menschen auf die Lufttemperatur, die Windgeschwindigkeit,         die Luftfeuchtigkeit, die Strahlungsintensität der Sonne sowie die Isolationsfähigkeit der Kleidung beschrieben.          Die Aussagen zu Behaglichkeit, Wärmebelastung und Kälteempfindung werden dann kombiniert.          Dadurch lässt sich eine Aussage zur gefühlten Temperatur und der Wärmebalance treffen.     '\n    var COMPONENTS = [{'name': 'ApparentTemperatureTileViewComponent', 'selector': 'app-apparent-temperature-tile-view'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BackButtonElementComponent', 'selector': 'app-back-button-element'},{'name': 'CardElementComponent', 'selector': 'card-element'},{'name': 'CheckboxSwitcherElementComponent', 'selector': 'app-checkbox-switcher-element'},{'name': 'ConfigurationTilePopUpDialogView', 'selector': 'configuration-tile-popup-view'},{'name': 'ConfigurationTileViewComponent', 'selector': 'app-configuration-tile-view'},{'name': 'ConfigurationViewComponent', 'selector': 'app-configuration-view'},{'name': 'DashboardScreenComponent', 'selector': 'app-dashboard-screen'},{'name': 'DetailScreenComponent', 'selector': 'app-detail-screen'},{'name': 'ForecastDetailViewComponent', 'selector': 'app-forecast-detail-view'},{'name': 'ForecastTileViewComponent', 'selector': 'app-forecast-tile-view'},{'name': 'HistoryDetailViewComponent', 'selector': 'app-history-detail-view'},{'name': 'HistoryTileViewComponent', 'selector': 'app-history-tile-view'},{'name': 'HumidityTileViewComponent', 'selector': 'app-humidity-tile-view'},{'name': 'IndoorDetailViewComponent', 'selector': 'app-indoor-detail-view'},{'name': 'IndoorTileViewComponent', 'selector': 'app-indoor-tile-view'},{'name': 'LoginViewComponent', 'selector': 'app-login-view'},{'name': 'MenuBarElementComponent', 'selector': 'app-menu-bar-element'},{'name': 'MenuButtonElementComponent', 'selector': 'app-menu-button-element'},{'name': 'MenuElementComponent', 'selector': 'app-menu-element'},{'name': 'NavBarElementComponent', 'selector': 'app-nav-bar-element'},{'name': 'OnboardingScreenComponent', 'selector': 'app-onboarding-screen'},{'name': 'OpenAPELoginTileViewComponent', 'selector': 'app-open-apelogin-tile-view'},{'name': 'OutdoorWeatherDetailViewComponent', 'selector': 'app-outdoor-weather-detail-view'},{'name': 'OutdoorWeatherViewComponent', 'selector': 'app-outdoor-weather-view'},{'name': 'PersonalizationSettingsViewComponent', 'selector': 'app-personalization-settings-view'},{'name': 'PersonalizationViewComponent', 'selector': 'app-personalization-view'},{'name': 'PollenflugDetailViewComponent', 'selector': 'app-pollenflug-detail-view'},{'name': 'PollenflugSmallTileComponent', 'selector': 'app-pollenflug-small-tile'},{'name': 'PollenflugTileViewComponent', 'selector': 'app-pollenflug-tile-view'},{'name': 'PollenListElementComponent', 'selector': 'app-pollen-list-element'},{'name': 'PollenTagElementComponent', 'selector': 'app-pollen-tag-element'},{'name': 'ProgressChartElementComponent', 'selector': 'app-progress-chart-element'},{'name': 'RegistrationViewComponent', 'selector': 'app-registration-view'},{'name': 'SettingsScreenComponent', 'selector': 'app-settings-screen'},{'name': 'SimpleTileViewComponent', 'selector': 'app-simple-tile-view'},{'name': 'SliderElementComponent', 'selector': 'app-slider-element'},{'name': 'TtsPlayerElementComponent', 'selector': 'app-tts-player-element'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'OutdoorWeatherDetailViewComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OutdoorWeatherResponse.html":{"url":"interfaces/OutdoorWeatherResponse.html","title":"interface - OutdoorWeatherResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  OutdoorWeatherResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/api/weather-api.service.ts\n        \n\n            \n                Description\n            \n            \n                Model of the outdoor weather api response\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        apparentTemperature\n                                \n                                \n                                        humidity\n                                \n                                \n                                        id\n                                \n                                \n                                        location\n                                \n                                \n                                        location_name\n                                \n                                \n                                        pressure\n                                \n                                \n                                        temperature\n                                \n                                \n                                        timestamp\n                                \n                                \n                                        weather\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        apparentTemperature\n                                    \n                                \n                                \n                                    \n                                        apparentTemperature:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        humidity\n                                    \n                                \n                                \n                                    \n                                        humidity:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        location\n                                    \n                                \n                                \n                                    \n                                        location:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        location_name\n                                    \n                                \n                                \n                                    \n                                        location_name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pressure\n                                    \n                                \n                                \n                                    \n                                        pressure:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        temperature\n                                    \n                                \n                                \n                                    \n                                        temperature:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timestamp\n                                    \n                                \n                                \n                                    \n                                        timestamp:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        weather\n                                    \n                                \n                                \n                                    \n                                        weather:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { FORECAST, INDOORAIRQUALITY, OUTDOORWEATHER, POLLEN, WEATHERHISTORY } from '../../model/mock-data/weather.mock';\nimport { OutdoorWeatherData, PollenData, IndoorRoomData, WeatherForecastData, WeatherHistoryData } from '../../model/weather';\nimport { Observable, of } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\n\n/**\n * Weather api service injectable\n * \n * Use this service to access the network. It implementes all routes \n * for the weather data.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class WeatherAPIService {\n  private outdoorURL = environment.baseURL + 'weather-data/outdoor/latest';\n  private indoorURL = environment.baseURL + 'weather-data/indoor/latest';\n  private historyURL = environment.baseURL + 'weather-data/outdoor/history';\n  private forecastURL = environment.baseURL + 'weather-data/forecast/latest';\n  private allPollenTypesURL = environment.baseURL + 'pollen/all';\n\n  constructor(private httpClient: HttpClient) { }\n\n  /**\n   * @returns an observable with the loadad OutdoorWeatherData from the api or test data\n   */\n  public loadOutdoorWeather(): Observable {\n    if (environment.testData) {\n      return of(OUTDOORWEATHER);\n    }\n    let returnObservable = new Observable((observer) => {\n        this.httpClient.get(this.outdoorURL).subscribe(data => {\n          let outdoorData = this.createOutdoorWeatherDataFromServerResponse(data);\n          observer.next(outdoorData);\n          observer.complete();\n        })\n      }\n    );\n    return returnObservable;\n  }\n\n  /**\n   * @returns an observable with the loadad WeatherForecastData from the api or test data\n   */\n  public loadForecast(): Observable {\n    if (environment.testData) {\n      return of(FORECAST);\n    }\n    let returnObservable = new Observable((observer) => {\n        this.httpClient.get(this.forecastURL).subscribe(data => {\n          let forecastData = this.createOutdoorForecastDataFromServerResponse(data);\n          observer.next(forecastData);\n          observer.complete();\n        })\n      }\n    );\n    return returnObservable;\n  }\n\n  /**\n   * @returns an observable with the loadad PollenData from the api or test data\n   */\n  public loadPollen(): Observable{\n    if (environment.testData) {\n      let pollen = of(POLLEN);\n      return pollen;\n    }\n    let returnObservable = new Observable((observer) => {\n      let response = this.httpClient.get(this.allPollenTypesURL);\n      response.subscribe(data => {\n        let pollenData = this.createPollenDataFromServerResponse(data);\n        observer.next(pollenData);\n        observer.complete();\n      },\n      (error) => {\n        console.log(error);\n        observer.next([]);\n        observer.complete();\n      })\n    });\n    return returnObservable;\n  }\n\n  /**\n   * @returns an observable with the loadad IndoorRoomData from the api or test data\n   */\n  public loadIndoorRoomData(): Observable {\n    if (environment.testData) {\n      let indoorData = of(INDOORAIRQUALITY);\n      return indoorData;\n    }\n    let returnObservable = new Observable((observer) => { // Wir brauchen hier ein Array, -> sollen ja mehrere Räume möglich sein (theoretisch...)\n        this.httpClient.get(this.indoorURL).subscribe(data => {\n          let indoorData = this.createIndoorRoomDataFromServerResponse(data);\n          observer.next([indoorData]);\n          observer.complete();\n        },\n        (error) => {\n          console.log(error);\n          observer.next([]);\n          observer.complete();\n        })\n      }\n    );\n    return returnObservable;\n  }\n\n  /**\n   * @returns an observable with the loadad WeatherHistoryData or test data\n   */\n  public loadHistoryDataSubject(endDate: Date, beginDate: Date): Observable {\n    if (environment.testData) {\n      let forecastData = of(WEATHERHISTORY);\n      return forecastData;\n    }\n    let returnObservable = new Observable((observer) => { \n        this.httpClient.post(this.historyURL,\n          {\n            'begin': this.createServerFriendlyDate(beginDate),\n            'end': this.createServerFriendlyDate(endDate)\n          })\n        .subscribe(data => {\n          let dataPoints: OutdoorWeatherData[] = data.map((element) => {\n            return this.createOutdoorWeatherDataFromServerResponse(element);\n          });\n          console.log(dataPoints);\n          observer.next({'datapoints': dataPoints});\n          observer.complete();\n        })\n      }\n    );\n    return returnObservable;\n  }\n\n  /**\n   * Helper function to convert date to string\n   * @param date \n   * @returns a date as a string which is understandable for the server\n   */\n  private createServerFriendlyDate(date: Date): string {\n    let dateString = date.toISOString().slice(0, 10);\n    let timeString = date.toTimeString().slice(0, 8);\n    return dateString + ' ' + timeString;\n  }\n\n  /**\n   * Helper function to convert the response from the server to an OutdoorWeatherData object\n   * \n   * @param response\n   * @returns OutdoorWeatherData object\n   */\n  private createOutdoorWeatherDataFromServerResponse(response: OutdoorWeatherResponse): OutdoorWeatherData {\n    const date = response.timestamp;\n    const year = date.substr(0, 4);\n    const month = date.substr(5, 2);\n    const day = date.substr(8, 2);\n    const time = date.substr(11);\n\n    const validDate = new Date(month + '/' + day + '/' + year + ' ' + time);\n\n    return {\n            temperature: response.temperature,\n            maxTemperature: -99, // Not implemented yet\n            minTemperature: -99, // Not implemented yet\n            humidity: response.humidity,\n            timestamp: validDate,\n            weather: response.weather,\n            apparentTemperature: response.apparentTemperature,\n            location: response.location_name,\n            postCode: response.location\n          }\n  }\n\n  /**\n   * Helper function to convert the response from the server to an IndoorRoomData object\n   * \n   * @param response\n   * @returns IndoorRoomData object\n   */\n  private createIndoorRoomDataFromServerResponse(response: IndoorRoomResponse): IndoorRoomData {\n    return {\n            roomID: response.id + '',\n            roomName: response.location,\n            airQuality: response.gasVal, \n            temperature: response.temperature, \n            humidity: response.humidity, \n            timestamp: new Date(response.timestamp), \n          }\n  }\n\n  /**\n   * Helper function to convert the response from the server to an PollenData[] object\n   * \n   * @param response\n   * @returns PollenData[] object\n   */\n  private createPollenDataFromServerResponse(response: PollenResponse[]): PollenData[] {\n    console.log(\"Pollen daten sind hier\", response)\n    let pollen: PollenData[] = [];\n    response.forEach(item => {\n      pollen.push({\n        id: item.id,\n        pollenName: item.pollenName,\n        today: item.loadRating,\n        tomorrow: ''\n      })\n    })\n    return pollen\n  }\n\n  /**\n   * Helper function to convert the response from the server to an WeatherForecastData object\n   * \n   * @param response\n   * @returns WeatherForecastData object\n   */\n  private createOutdoorForecastDataFromServerResponse(response: ForecastResponse): WeatherForecastData {\n    return {\n      trend: response.trend,\n      weatherDescription: response.weatherDescription, \n      weatherIcon: response.weatherIcon\n    }\n  }\n}\n\n/**\n * Model of the pollen api response\n */\ninterface PollenResponse {\n  id: number,\n  pollenName: string,\n  loadRating: string,\n}\n\n/**\n * Model of the outdoor weather api response\n */\ninterface OutdoorWeatherResponse {\n  id: number,\n  humidity: number,\n  temperature: number,\n  pressure: number,\n  location: string,\n  location_name: string,\n  timestamp: string,\n  weather: string,\n  apparentTemperature: number\n}\n\n/**\n * Model of the indoor room api response\n */\ninterface IndoorRoomResponse {\n  id: number,\n  humidity: number,\n  temperature: number,\n  pressure: number,\n  gasVal: number,\n  location: string,\n  timestamp: string,\n}\n\n/**\n * Model of the forecast api response\n */\ninterface ForecastResponse {\n  id: number,\n  trend: string,\n  weatherIcon: string,\n  weatherDescription: string,\n  seaPressure: number,\n  timestampd: string\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OutdoorWeatherViewComponent.html":{"url":"components/OutdoorWeatherViewComponent.html","title":"component - OutdoorWeatherViewComponent","body":"\n                   \n\n\n\n\n\n  Components\n  OutdoorWeatherViewComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/views/outdoor-weather-view/outdoor-weather-view.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-outdoor-weather-view\n            \n\n            \n                styleUrls\n                ./outdoor-weather-view.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./outdoor-weather-view.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                daytime\n                            \n                            \n                                daytimeType\n                            \n                            \n                                    Optional\n                                outdoorWeather\n                            \n                            \n                                showWeatherDescription\n                            \n                            \n                                theme\n                            \n                            \n                                themeType\n                            \n                            \n                                    Optional\n                                userContext\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getGradient\n                            \n                            \n                                getWeatherDescription\n                            \n                            \n                                getWeatherImage\n                            \n                            \n                                listenToScrollEvent\n                            \n                            \n                                loadOutdoorWeather\n                            \n                            \n                                loadUserContext\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                reduceMotion\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userContextService: UserContextService, weatherDataService: WeatherDataService, imageService: ImageService, textService: TextService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/views/outdoor-weather-view/outdoor-weather-view.component.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userContextService\n                                                  \n                                                        \n                                                                        UserContextService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        weatherDataService\n                                                  \n                                                        \n                                                                        WeatherDataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        imageService\n                                                  \n                                                        \n                                                                        ImageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        textService\n                                                  \n                                                        \n                                                                        TextService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        reduceMotion\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/views/outdoor-weather-view/outdoor-weather-view.component.ts:15\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getGradient\n                        \n                        \n                    \n                \n            \n            \n                \ngetGradient()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/views/outdoor-weather-view/outdoor-weather-view.component.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     literal type\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getWeatherDescription\n                        \n                        \n                    \n                \n            \n            \n                \ngetWeatherDescription()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/views/outdoor-weather-view/outdoor-weather-view.component.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getWeatherImage\n                        \n                        \n                    \n                \n            \n            \n                \ngetWeatherImage()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/views/outdoor-weather-view/outdoor-weather-view.component.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     string | undefined\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            listenToScrollEvent\n                        \n                        \n                    \n                \n            \n            \n                \nlistenToScrollEvent()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/views/outdoor-weather-view/outdoor-weather-view.component.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadOutdoorWeather\n                        \n                        \n                    \n                \n            \n            \n                \nloadOutdoorWeather()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/views/outdoor-weather-view/outdoor-weather-view.component.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadUserContext\n                        \n                        \n                    \n                \n            \n            \n                \nloadUserContext()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/views/outdoor-weather-view/outdoor-weather-view.component.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/views/outdoor-weather-view/outdoor-weather-view.component.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            daytime\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Daytime\n\n                        \n                    \n                    \n                        \n                            Default value : Daytime.noon\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/views/outdoor-weather-view/outdoor-weather-view.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            daytimeType\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : Daytime\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/views/outdoor-weather-view/outdoor-weather-view.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            outdoorWeather\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         OutdoorWeatherData\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/views/outdoor-weather-view/outdoor-weather-view.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showWeatherDescription\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : true\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/views/outdoor-weather-view/outdoor-weather-view.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            theme\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Themes\n\n                        \n                    \n                    \n                        \n                            Default value : Themes.Automatic\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/views/outdoor-weather-view/outdoor-weather-view.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            themeType\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : Themes\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/views/outdoor-weather-view/outdoor-weather-view.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            userContext\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserContext\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/views/outdoor-weather-view/outdoor-weather-view.component.ts:20\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { Daytime, OutdoorWeatherData } from 'src/app/model/weather';\nimport { UserContextService } from 'src/app/services/user-context.service';\nimport { WeatherDataService } from 'src/app/services/weather-data.service';\nimport { Themes, UserContext } from 'src/app/model/user-context';\nimport { ImageService } from 'src/app/services/image.service';\nimport { TextService } from 'src/app/services/text.service';\n\n@Component({\n  selector: 'app-outdoor-weather-view',\n  templateUrl: './outdoor-weather-view.component.html',\n  styleUrls: ['./outdoor-weather-view.component.scss']\n})\nexport class OutdoorWeatherViewComponent implements OnInit {\n  @Input() reduceMotion: boolean = false; \n  outdoorWeather?: OutdoorWeatherData;\n  daytime: Daytime = Daytime.noon\n  daytimeType = Daytime;\n  showWeatherDescription: boolean = true;\n  userContext?: UserContext;\n  themeType = Themes;\n  theme: Themes = Themes.Automatic;\n\n  constructor(private userContextService: UserContextService,\n              private weatherDataService: WeatherDataService,\n              private imageService: ImageService,\n              private textService: TextService) { }\n\n  ngOnInit(): void {\n    this.loadOutdoorWeather();\n    this.listenToScrollEvent();\n    this.loadUserContext();\n  }\n\n  loadUserContext() {\n    this.userContextService.getUserContextSubject()\n    .subscribe(data => {\n      this.userContext = data;\n      this.theme = data.theme;\n    });\n  }\n\n  loadOutdoorWeather(): void {\n    this.weatherDataService.getOutdoorWeatherDataSubject()\n      .subscribe(outdoorWeather => { \n        this.outdoorWeather = outdoorWeather \n      });\n  }\n\n  getGradient(): { background: string, filter: string } {\n    return this.imageService.getGradientStyleFor(this.outdoorWeather?.weather)\n  }\n\n  getWeatherImage(): string | undefined {\n    return this.imageService.getWeatherIconString(this.outdoorWeather?.weather);\n  }\n\n  // changes the css --scroll variable everytime the user scrolls. Main part of the animation\n  listenToScrollEvent() {\n    window.addEventListener('scroll', () => {\n      if(!this.reduceMotion) {\n        let scrollValue = (window.pageYOffset) / 240; // FIXME: Wert berechnen für angepasste schriftgröße\n        if(scrollValue  1) {\n          scrollValue = 1;\n        }\n        scrollValue > 0.2 ?\n          this.showWeatherDescription = false \n          :\n          this.showWeatherDescription = true;\n        document.body.style.setProperty('--scroll', \"\" + scrollValue );\n      } else {\n        document.body.style.setProperty('--scroll', \"\" + 0 );\n      }\n    }, false);\n  }\n \n  getWeatherDescription(): string {\n    if(this.outdoorWeather) {\n      return this.textService.createWeatherText(this.outdoorWeather.weather);\n    } \n    return \"\";\n  }\n}\n\n    \n\n    \n        \n    \n    \n        {{outdoorWeather.temperature}}°\n        \n            {{outdoorWeather.maxTemperature}}°\n            {{outdoorWeather.minTemperature}}°\n         -->\n    \n        {{getWeatherDescription()}}\n\n\n\n    \n\n    \n                \n                    ./outdoor-weather-view.component.scss\n                \n                @import \"../../shared/styles\";\n\n// css for mobile and desktop\n.weather-image {\n    height: var(--outdoor-weather-image-size);\n}\n\n.container {\n    padding: 0 var(--padding) 0 var(--padding);\n    border-radius: var(--corner-radius);\n    display: flex;\n    flex-direction: column;\n    flex-wrap: wrap;\n    align-items: center;\n    justify-content: space-evenly;\n\n    background-color: var(--accent);\n}\n\n.temperature {\n    font-size: 5.0em;\n    font-weight: bold;\n    margin: 0;\n}\n\n.weather-description {\n    letter-spacing: 0.03em;\n    padding: 0 0 var(--padding) 0;\n    text-align: center;\n}\n\n.temperature-container {\n    display: flex;\n    flex-wrap: nowrap;\n    justify-content: space-between;\n    align-content: space-between;\n    align-items: center;\n}\n\n.min-max-temperature-container {\n    padding-left: calc(var(--padding) / 2);\n}\n\n.min-max-temperature-container > p {\n    text-align: end;\n    font-weight: 200;\n}\n\n// Set the default font color \n.container * {\n    color: var(--inverted);\n}\n\n.shadow{\n    z-index: 1000;\n    @include drop-shadow;\n}\n\n\n\n// css for desktop \n@media(min-width: 769px) {\n    .container{\n        position: fixed;\n        top: var(--padding);\n        left: var(--padding);;\n        bottom: var(--padding);;\n        height: calc(100vh - var(--padding) - var(--padding));\n        width: calc(var(--border-padding-left) - var(--border-padding-right) - 3 * var(--padding));\n        justify-content: center;\n    }\n    .flex-item {\n        margin-top: var(--padding);\n    }\n}\n\n// css for mobile \n@media(max-width: 769px) {\n\n    // styles for mobile when reduced motion is prefered\n    .container{\n        padding: var(--padding);\n        margin-top: var(--padding);\n    }\n\n    @media(prefers-reduced-motion: no-preference) {\n        .container.motion-allowed {\n            padding: 120px var(--padding) 120px var(--padding);\n            position: fixed;\n            top: 0;\n            left: 0;\n            right: 0;\n            z-index: 10;\n            height: var(--dashboard-outdoor-weather-size);\n            border-radius: 0 0 var(--corner-radius) var(--corner-radius);\n            margin-top: 0;\n        }\n    \n        @keyframes container-shrink {\n            from {\n                height: var(--dashboard-outdoor-weather-size);\n                left: 0;\n                right: 0;\n                top: 0;\n                border-radius: 0 0 var(--corner-radius) var(--corner-radius);\n                padding: 120px var(--padding) var(--padding) var(--padding);\n            }\n        \n            to {\n                height: var(--shrinked-dashboard-outdoor-weather-size);\n                left: var(--border-padding-left);\n                right: var(--border-padding-right);\n                top: calc(var(--navbar-height) + var(--border-padding-top));\n                border-radius: var(--corner-radius);\n                padding: var(--padding);\n            }\n        }\n    \n        .container.motion-allowed {\n            position: fixed;\n            animation-name: container-shrink ;\n            @include linear-animation;\n        }\n    \n        @keyframes image-shrink {\n            from {\n                height: var(--outdoor-weather-image-size);\n            }\n        \n            to {\n                height: 60px;\n            }\n        }\n    \n        .weather-image.motion-allowed  {\n            animation-name: image-shrink ;\n            @include linear-animation;\n        }    \n    }\n}\n\n\n.noon-gradient {\n    background: rgb(97,194,216);\n    background: -moz-linear-gradient(0deg, rgba(97,194,216,1) 0%, rgba(67,125,219,1) 100%);\n    background: -webkit-linear-gradient(0deg, rgba(97,194,216,1) 0%, rgba(67,125,219,1) 100%);\n    background: linear-gradient(0deg, rgba(97,194,216,1) 0%, rgba(67,125,219,1) 100%);\n    filter: progid:DXImageTransform.Microsoft.gradient(startColorstr=\"#61c2d8\",endColorstr=\"#437ddb\",GradientType=1);\n}\n\n.dawn-gradient {\n    background: rgb(238,69,59);\n    background: -moz-linear-gradient(0deg, rgba(238,69,59,1) 0%, rgba(164,9,110,1) 100%);\n    background: -webkit-linear-gradient(0deg, rgba(238,69,59,1) 0%, rgba(164,9,110,1) 100%);\n    background: linear-gradient(0deg, rgba(238,69,59,1) 0%, rgba(164,9,110,1) 100%);\n    filter: progid:DXImageTransform.Microsoft.gradient(startColorstr=\"#ee453b\",endColorstr=\"#a4096e\",GradientType=1);\n}\n\n.night-gradient {\n    background: rgb(216,97,204);\n    background: -moz-linear-gradient(0deg, rgba(216,97,204,1) 0%, rgba(70,67,219,1) 100%);\n    background: -webkit-linear-gradient(0deg, rgba(216,97,204,1) 0%, rgba(70,67,219,1) 100%);\n    background: linear-gradient(0deg, rgba(216,97,204,1) 0%, rgba(70,67,219,1) 100%);\n    filter: progid:DXImageTransform.Microsoft.gradient(startColorstr=\"#d861cc\",endColorstr=\"#4643db\",GradientType=1);\n}\n\n.high-contrast {\n    background: black;\n    border: 1px solid var(--border);\n    filter: none;\n}\n\n.high-contrast * {\n    color: var(--text);\n}\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                {{outdoorWeather.temperature}}°                    {{outdoorWeather.maxTemperature}}°            {{outdoorWeather.minTemperature}}°         -->            {{getWeatherDescription()}}'\n    var COMPONENTS = [{'name': 'ApparentTemperatureTileViewComponent', 'selector': 'app-apparent-temperature-tile-view'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BackButtonElementComponent', 'selector': 'app-back-button-element'},{'name': 'CardElementComponent', 'selector': 'card-element'},{'name': 'CheckboxSwitcherElementComponent', 'selector': 'app-checkbox-switcher-element'},{'name': 'ConfigurationTilePopUpDialogView', 'selector': 'configuration-tile-popup-view'},{'name': 'ConfigurationTileViewComponent', 'selector': 'app-configuration-tile-view'},{'name': 'ConfigurationViewComponent', 'selector': 'app-configuration-view'},{'name': 'DashboardScreenComponent', 'selector': 'app-dashboard-screen'},{'name': 'DetailScreenComponent', 'selector': 'app-detail-screen'},{'name': 'ForecastDetailViewComponent', 'selector': 'app-forecast-detail-view'},{'name': 'ForecastTileViewComponent', 'selector': 'app-forecast-tile-view'},{'name': 'HistoryDetailViewComponent', 'selector': 'app-history-detail-view'},{'name': 'HistoryTileViewComponent', 'selector': 'app-history-tile-view'},{'name': 'HumidityTileViewComponent', 'selector': 'app-humidity-tile-view'},{'name': 'IndoorDetailViewComponent', 'selector': 'app-indoor-detail-view'},{'name': 'IndoorTileViewComponent', 'selector': 'app-indoor-tile-view'},{'name': 'LoginViewComponent', 'selector': 'app-login-view'},{'name': 'MenuBarElementComponent', 'selector': 'app-menu-bar-element'},{'name': 'MenuButtonElementComponent', 'selector': 'app-menu-button-element'},{'name': 'MenuElementComponent', 'selector': 'app-menu-element'},{'name': 'NavBarElementComponent', 'selector': 'app-nav-bar-element'},{'name': 'OnboardingScreenComponent', 'selector': 'app-onboarding-screen'},{'name': 'OpenAPELoginTileViewComponent', 'selector': 'app-open-apelogin-tile-view'},{'name': 'OutdoorWeatherDetailViewComponent', 'selector': 'app-outdoor-weather-detail-view'},{'name': 'OutdoorWeatherViewComponent', 'selector': 'app-outdoor-weather-view'},{'name': 'PersonalizationSettingsViewComponent', 'selector': 'app-personalization-settings-view'},{'name': 'PersonalizationViewComponent', 'selector': 'app-personalization-view'},{'name': 'PollenflugDetailViewComponent', 'selector': 'app-pollenflug-detail-view'},{'name': 'PollenflugSmallTileComponent', 'selector': 'app-pollenflug-small-tile'},{'name': 'PollenflugTileViewComponent', 'selector': 'app-pollenflug-tile-view'},{'name': 'PollenListElementComponent', 'selector': 'app-pollen-list-element'},{'name': 'PollenTagElementComponent', 'selector': 'app-pollen-tag-element'},{'name': 'ProgressChartElementComponent', 'selector': 'app-progress-chart-element'},{'name': 'RegistrationViewComponent', 'selector': 'app-registration-view'},{'name': 'SettingsScreenComponent', 'selector': 'app-settings-screen'},{'name': 'SimpleTileViewComponent', 'selector': 'app-simple-tile-view'},{'name': 'SliderElementComponent', 'selector': 'app-slider-element'},{'name': 'TtsPlayerElementComponent', 'selector': 'app-tts-player-element'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'OutdoorWeatherViewComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PersonalizationSettingsViewComponent.html":{"url":"components/PersonalizationSettingsViewComponent.html","title":"component - PersonalizationSettingsViewComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PersonalizationSettingsViewComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/views/personalization-settings-view/personalization-settings-view.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-personalization-settings-view\n            \n\n            \n                styleUrls\n                ./personalization-settings-view.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./personalization-settings-view.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                desktop\n                            \n                            \n                                themesType\n                            \n                            \n                                    Optional\n                                userContextData\n                            \n                            \n                                    Public\n                                userContextService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getPollenStringAt\n                            \n                            \n                                getPollenValueAt\n                            \n                            \n                                getThemeStringAt\n                            \n                            \n                                getThemeTypeAt\n                            \n                            \n                                getUserContext\n                            \n                            \n                                loginDisabled\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                numberOfPollen\n                            \n                            \n                                numberOfThemes\n                            \n                            \n                                setFontSize\n                            \n                            \n                                togglePollenValueAt\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userContextService: UserContextService, renderer: Renderer2, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/views/personalization-settings-view/personalization-settings-view.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userContextService\n                                                  \n                                                        \n                                                                        UserContextService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        renderer\n                                                  \n                                                        \n                                                                        Renderer2\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getPollenStringAt\n                        \n                        \n                    \n                \n            \n            \n                \ngetPollenStringAt(index: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/views/personalization-settings-view/personalization-settings-view.component.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getPollenValueAt\n                        \n                        \n                    \n                \n            \n            \n                \ngetPollenValueAt(index: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/views/personalization-settings-view/personalization-settings-view.component.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getThemeStringAt\n                        \n                        \n                    \n                \n            \n            \n                \ngetThemeStringAt(index: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/views/personalization-settings-view/personalization-settings-view.component.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getThemeTypeAt\n                        \n                        \n                    \n                \n            \n            \n                \ngetThemeTypeAt(index: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/views/personalization-settings-view/personalization-settings-view.component.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Themes\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getUserContext\n                        \n                        \n                    \n                \n            \n            \n                \ngetUserContext()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/views/personalization-settings-view/personalization-settings-view.component.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loginDisabled\n                        \n                        \n                    \n                \n            \n            \n                \nloginDisabled()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/views/personalization-settings-view/personalization-settings-view.component.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/views/personalization-settings-view/personalization-settings-view.component.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            numberOfPollen\n                        \n                        \n                    \n                \n            \n            \n                \nnumberOfPollen()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/views/personalization-settings-view/personalization-settings-view.component.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     any[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            numberOfThemes\n                        \n                        \n                    \n                \n            \n            \n                \nnumberOfThemes()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/views/personalization-settings-view/personalization-settings-view.component.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     any[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setFontSize\n                        \n                        \n                    \n                \n            \n            \n                \nsetFontSize(value: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/views/personalization-settings-view/personalization-settings-view.component.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            togglePollenValueAt\n                        \n                        \n                    \n                \n            \n            \n                \ntogglePollenValueAt(index: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/views/personalization-settings-view/personalization-settings-view.component.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            desktop\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/views/personalization-settings-view/personalization-settings-view.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            themesType\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : Themes\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/views/personalization-settings-view/personalization-settings-view.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            userContextData\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserContext\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/views/personalization-settings-view/personalization-settings-view.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            userContextService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserContextService\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/views/personalization-settings-view/personalization-settings-view.component.ts:19\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Renderer2 } from '@angular/core';\nimport { UserContextService } from 'src/app/services/user-context.service';\nimport { Themes, UserContext, PollenType } from 'src/app/model/user-context';\nimport { Router } from '@angular/router';\n\n\n\n@Component({\n  selector: 'app-personalization-settings-view',\n  templateUrl: './personalization-settings-view.component.html',\n  styleUrls: ['./personalization-settings-view.component.scss']\n})\nexport class PersonalizationSettingsViewComponent implements OnInit {\n  desktop: boolean = false;\n  userContextData?: UserContext;\n  themesType = Themes  \n\n  constructor(\n    public userContextService: UserContextService,\n    private renderer: Renderer2,\n    private router: Router) { }\n    \n  ngOnInit(): void {\n    this.getUserContext();\n    this.userContextService.refreshUserContextIfNeeded().subscribe((data => {\n      if(!data) {\n        this.router.navigateByUrl('/onboarding/login');\n      }\n    }));;\n  }\n\n  getUserContext() {\n    this.userContextService.getUserContextSubject()\n      .subscribe(data => this.userContextData = data)\n  }\n\n  setFontSize(value: number) {\n    this.userContextService.fontSize = value;\n    if(this.userContextData) {\n      this.setDefaultFontSize(this.userContextData.fontSize);\n    }\n  }\n\n  numberOfThemes(): any[] {\n    let count = Object.keys(Themes).length / 2;\n    return new Array(count);\n  }\n\n  getThemeTypeAt(index: number): Themes {\n    let themesString = Themes[index];\n    switch (themesString) {\n      case \"Dark\": return Themes.Dark\n      case \"Light\": return Themes.Light\n      case \"Automatic\": return Themes.Automatic\n      case \"HighContrast\": return Themes.HighContrast\n      default: return Themes.Automatic\n    }\n  }\n\n  getThemeStringAt(index: number): string {\n    return Themes[this.getThemeTypeAt(index)]\n  }\n\n  numberOfPollen(): any[] {\n    let count = this.userContextService.pollenTypes.length\n    return new Array(count);\n  }\n\n  getPollenValueAt(index: number): boolean {\n    return this.userContextService.getPollenValueAt(index);\n  }\n\n  getPollenStringAt(index: number): string {\n    return this.userContextService.pollenTypes[index].pollenName\n  }\n\n  togglePollenValueAt(index: number) {\n    this.userContextService.tooglePollenValueAt(index);\n  }\n\n  loginDisabled(): boolean {\n    return this.userContextService.disableLogin;\n  }\n\n  // FIXME: \n  // change the default font size\n  // Maybe we can solve this problem in another way.\n  private setDefaultFontSize(fontSize: number) {\n    this.renderer.setStyle(document.body, \"font-size\", fontSize + \"%\");  \n  }\n\n}\n\n    \n\n    \n        \n    \n    \n    \n        \n        \n        \n        \n        \n        \n    \n\n    \n        \n            \n                \n                \n                    {{getPollenStringAt(index)}}\n                \n            \n        \n    \n\n    \n        \n            \n                \n                {{getThemeStringAt(index)}}\n            \n        \n     \n    \n    \n\n    \n\n    \n                \n                    ./personalization-settings-view.component.scss\n                \n                .switch-container {\n    display: flex;\n    justify-content: space-between;\n    flex-wrap: wrap;\n    width: calc((100vw - var(--border-padding-left) - var(--border-padding-right)));\n}\n\n.slider {\n    width: calc((100vw - var(--border-padding-left) - var(--border-padding-right)));\n}\n\n.flex-container {\n    display: flex;\n    flex-direction: row;\n    flex-wrap: wrap;\n}\n\n.pollen-item {\n    width: 11em;\n    margin: 0.5em;\n}\n\n.theme-item {\n    margin: 0.5em;\n}\n\nlabel {\n    font-size: 1.6em;\n}\n\n.container {\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: space-between;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                                            {{getPollenStringAt(index)}}                                                                                                {{getThemeStringAt(index)}}                                 '\n    var COMPONENTS = [{'name': 'ApparentTemperatureTileViewComponent', 'selector': 'app-apparent-temperature-tile-view'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BackButtonElementComponent', 'selector': 'app-back-button-element'},{'name': 'CardElementComponent', 'selector': 'card-element'},{'name': 'CheckboxSwitcherElementComponent', 'selector': 'app-checkbox-switcher-element'},{'name': 'ConfigurationTilePopUpDialogView', 'selector': 'configuration-tile-popup-view'},{'name': 'ConfigurationTileViewComponent', 'selector': 'app-configuration-tile-view'},{'name': 'ConfigurationViewComponent', 'selector': 'app-configuration-view'},{'name': 'DashboardScreenComponent', 'selector': 'app-dashboard-screen'},{'name': 'DetailScreenComponent', 'selector': 'app-detail-screen'},{'name': 'ForecastDetailViewComponent', 'selector': 'app-forecast-detail-view'},{'name': 'ForecastTileViewComponent', 'selector': 'app-forecast-tile-view'},{'name': 'HistoryDetailViewComponent', 'selector': 'app-history-detail-view'},{'name': 'HistoryTileViewComponent', 'selector': 'app-history-tile-view'},{'name': 'HumidityTileViewComponent', 'selector': 'app-humidity-tile-view'},{'name': 'IndoorDetailViewComponent', 'selector': 'app-indoor-detail-view'},{'name': 'IndoorTileViewComponent', 'selector': 'app-indoor-tile-view'},{'name': 'LoginViewComponent', 'selector': 'app-login-view'},{'name': 'MenuBarElementComponent', 'selector': 'app-menu-bar-element'},{'name': 'MenuButtonElementComponent', 'selector': 'app-menu-button-element'},{'name': 'MenuElementComponent', 'selector': 'app-menu-element'},{'name': 'NavBarElementComponent', 'selector': 'app-nav-bar-element'},{'name': 'OnboardingScreenComponent', 'selector': 'app-onboarding-screen'},{'name': 'OpenAPELoginTileViewComponent', 'selector': 'app-open-apelogin-tile-view'},{'name': 'OutdoorWeatherDetailViewComponent', 'selector': 'app-outdoor-weather-detail-view'},{'name': 'OutdoorWeatherViewComponent', 'selector': 'app-outdoor-weather-view'},{'name': 'PersonalizationSettingsViewComponent', 'selector': 'app-personalization-settings-view'},{'name': 'PersonalizationViewComponent', 'selector': 'app-personalization-view'},{'name': 'PollenflugDetailViewComponent', 'selector': 'app-pollenflug-detail-view'},{'name': 'PollenflugSmallTileComponent', 'selector': 'app-pollenflug-small-tile'},{'name': 'PollenflugTileViewComponent', 'selector': 'app-pollenflug-tile-view'},{'name': 'PollenListElementComponent', 'selector': 'app-pollen-list-element'},{'name': 'PollenTagElementComponent', 'selector': 'app-pollen-tag-element'},{'name': 'ProgressChartElementComponent', 'selector': 'app-progress-chart-element'},{'name': 'RegistrationViewComponent', 'selector': 'app-registration-view'},{'name': 'SettingsScreenComponent', 'selector': 'app-settings-screen'},{'name': 'SimpleTileViewComponent', 'selector': 'app-simple-tile-view'},{'name': 'SliderElementComponent', 'selector': 'app-slider-element'},{'name': 'TtsPlayerElementComponent', 'selector': 'app-tts-player-element'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PersonalizationSettingsViewComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PersonalizationViewComponent.html":{"url":"components/PersonalizationViewComponent.html","title":"component - PersonalizationViewComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PersonalizationViewComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/views/personalization-view/personalization-view.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-personalization-view\n            \n\n            \n                styleUrls\n                ./personalization-view.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./personalization-view.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onClickDone\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/views/personalization-view/personalization-view.component.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/views/personalization-view/personalization-view.component.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onClickDone\n                        \n                        \n                    \n                \n            \n            \n                \nonClickDone()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/views/personalization-view/personalization-view.component.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-personalization-view',\n  templateUrl: './personalization-view.component.html',\n  styleUrls: ['./personalization-view.component.scss']\n})\nexport class PersonalizationViewComponent implements OnInit {\n\n  constructor(private router: Router) { }\n\n  ngOnInit(): void {\n  }\n\n  onClickDone() {\n    this.router.navigateByUrl('/dashboard');\n  }\n\n}\n\n    \n\n    \n        \n    \n        \n        \n    \n    Fertig\n\n\n\n\n    \n\n    \n                \n                    ./personalization-view.component.scss\n                \n                .container {\n    padding-top: var(--navbar-height);\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                            Fertig'\n    var COMPONENTS = [{'name': 'ApparentTemperatureTileViewComponent', 'selector': 'app-apparent-temperature-tile-view'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BackButtonElementComponent', 'selector': 'app-back-button-element'},{'name': 'CardElementComponent', 'selector': 'card-element'},{'name': 'CheckboxSwitcherElementComponent', 'selector': 'app-checkbox-switcher-element'},{'name': 'ConfigurationTilePopUpDialogView', 'selector': 'configuration-tile-popup-view'},{'name': 'ConfigurationTileViewComponent', 'selector': 'app-configuration-tile-view'},{'name': 'ConfigurationViewComponent', 'selector': 'app-configuration-view'},{'name': 'DashboardScreenComponent', 'selector': 'app-dashboard-screen'},{'name': 'DetailScreenComponent', 'selector': 'app-detail-screen'},{'name': 'ForecastDetailViewComponent', 'selector': 'app-forecast-detail-view'},{'name': 'ForecastTileViewComponent', 'selector': 'app-forecast-tile-view'},{'name': 'HistoryDetailViewComponent', 'selector': 'app-history-detail-view'},{'name': 'HistoryTileViewComponent', 'selector': 'app-history-tile-view'},{'name': 'HumidityTileViewComponent', 'selector': 'app-humidity-tile-view'},{'name': 'IndoorDetailViewComponent', 'selector': 'app-indoor-detail-view'},{'name': 'IndoorTileViewComponent', 'selector': 'app-indoor-tile-view'},{'name': 'LoginViewComponent', 'selector': 'app-login-view'},{'name': 'MenuBarElementComponent', 'selector': 'app-menu-bar-element'},{'name': 'MenuButtonElementComponent', 'selector': 'app-menu-button-element'},{'name': 'MenuElementComponent', 'selector': 'app-menu-element'},{'name': 'NavBarElementComponent', 'selector': 'app-nav-bar-element'},{'name': 'OnboardingScreenComponent', 'selector': 'app-onboarding-screen'},{'name': 'OpenAPELoginTileViewComponent', 'selector': 'app-open-apelogin-tile-view'},{'name': 'OutdoorWeatherDetailViewComponent', 'selector': 'app-outdoor-weather-detail-view'},{'name': 'OutdoorWeatherViewComponent', 'selector': 'app-outdoor-weather-view'},{'name': 'PersonalizationSettingsViewComponent', 'selector': 'app-personalization-settings-view'},{'name': 'PersonalizationViewComponent', 'selector': 'app-personalization-view'},{'name': 'PollenflugDetailViewComponent', 'selector': 'app-pollenflug-detail-view'},{'name': 'PollenflugSmallTileComponent', 'selector': 'app-pollenflug-small-tile'},{'name': 'PollenflugTileViewComponent', 'selector': 'app-pollenflug-tile-view'},{'name': 'PollenListElementComponent', 'selector': 'app-pollen-list-element'},{'name': 'PollenTagElementComponent', 'selector': 'app-pollen-tag-element'},{'name': 'ProgressChartElementComponent', 'selector': 'app-progress-chart-element'},{'name': 'RegistrationViewComponent', 'selector': 'app-registration-view'},{'name': 'SettingsScreenComponent', 'selector': 'app-settings-screen'},{'name': 'SimpleTileViewComponent', 'selector': 'app-simple-tile-view'},{'name': 'SliderElementComponent', 'selector': 'app-slider-element'},{'name': 'TtsPlayerElementComponent', 'selector': 'app-tts-player-element'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PersonalizationViewComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PollenData.html":{"url":"interfaces/PollenData.html","title":"interface - PollenData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PollenData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/weather.ts\n        \n\n\n            \n                Extends\n            \n            \n                        WeatherData\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        id\n                                \n                                \n                                        pollenName\n                                \n                                \n                                        today\n                                \n                                \n                                        tomorrow\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pollenName\n                                    \n                                \n                                \n                                    \n                                        pollenName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        today\n                                    \n                                \n                                \n                                    \n                                        today:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tomorrow\n                                    \n                                \n                                \n                                    \n                                        tomorrow:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface WeatherData { }\n\nexport enum TileType {\n    indoorRoom,\n    pollenSmall,\n    pollenList,\n    history,\n    forecast,\n    humidity,\n    apparentTemperature,\n}\n\nexport interface TileArrays {\n    dashboard: Tile[],\n    pollen : Tile[],\n    indoorRooms: Tile[]\n  }\n  \n\nexport enum TilePriority {\n    important, //Highest \n    high,\n    middle,\n    low,\n}\n\nexport interface Tile {\n    type: TileType;\n    data: A;\n    id: string;\n    priority: TilePriority\n}\n\nexport interface OutdoorWeatherData extends WeatherData {\n    temperature: number // in °C\n    maxTemperature: number, //TODO: external database required \"forecast\"  --> // TODO: Move to \"daily\" data structure\n    minTemperature: number, //TODO: external database required \"forecast\"  --> // TODO: Move to \"daily\" data structure\n    humidity: number, // in %\n    timestamp: Date, \n    weather: string, // TODO: external API required\n    apparentTemperature: number, // in °C ---> die \"gefühlte\" Temperatur\n    location: string, // e.g. \"Stuttgart\" TODO: Make configurable in ESP Wlan-Board\n    postCode: string,\n}\n\nexport interface WeatherForecastData extends WeatherData {\n    trend: string,\n    weatherDescription: string,\n    weatherIcon: string,\n  }\n\nexport interface PollenData extends WeatherData {\n    pollenName: string, // TODO: Maybe we should use the same Pollen enum as in user-context.ts\n    id: number,\n    today: string, // -1  3\n    tomorrow: string, // -1  3\n}\n\nexport interface IndoorRoomData extends WeatherData {\n    roomID: string,\n    roomName: string,\n    airQuality: number, // in %\n    temperature: number // in °C \n    humidity: number, // in %\n    timestamp: Date, \n}\n\nexport interface WeatherHistoryData extends WeatherData {\n    datapoints: OutdoorWeatherData[],\n}\n\nexport interface GraphDataSet extends WeatherData {\n    temperatureDataPoints: number[];\n    humidityDataPoints: number[];\n    xAxisLabel: string[];\n    label: string;\n    temperatureAverage: number;\n    humidityAverage: number;\n}\n\nexport interface WeatherHistoryByDayData extends WeatherData  {\n    averageTemperature: number, // in °C\n    averageHumidity: number, // in %\n}\n\nexport enum Daytime {\n    noon,\n    night,\n    dawn,\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PollenListElementComponent.html":{"url":"components/PollenListElementComponent.html","title":"component - PollenListElementComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PollenListElementComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/ui-elements/pollen-list-element/pollen-list-element.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-pollen-list-element\n            \n\n            \n                styleUrls\n                ./pollen-list-element.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./pollen-list-element.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/ui-elements/pollen-list-element/pollen-list-element.component.ts:10\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        title\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/ui-elements/pollen-list-element/pollen-list-element.component.ts:9\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/ui-elements/pollen-list-element/pollen-list-element.component.ts:10\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/ui-elements/pollen-list-element/pollen-list-element.component.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-pollen-list-element',\n  templateUrl: './pollen-list-element.component.html',\n  styleUrls: ['./pollen-list-element.component.scss']\n})\nexport class PollenListElementComponent implements OnInit {\n  @Input() title?: string;\n  @Input() value?: string;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        \n    {{title}} \n    \n        \n    \n\n    \n                \n                    ./pollen-list-element.component.scss\n                \n                .container {\n    display: flex;\n    justify-content: space-between;\n    align-content: center;\n    align-items: center;\n    padding: calc(var(--padding)/2) 0  calc(var(--padding)/2) 0 ;\n    border-bottom: 0.5pt solid var(--secondary);\n}\n\n.title {\n    width: 5em;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{title}}             '\n    var COMPONENTS = [{'name': 'ApparentTemperatureTileViewComponent', 'selector': 'app-apparent-temperature-tile-view'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BackButtonElementComponent', 'selector': 'app-back-button-element'},{'name': 'CardElementComponent', 'selector': 'card-element'},{'name': 'CheckboxSwitcherElementComponent', 'selector': 'app-checkbox-switcher-element'},{'name': 'ConfigurationTilePopUpDialogView', 'selector': 'configuration-tile-popup-view'},{'name': 'ConfigurationTileViewComponent', 'selector': 'app-configuration-tile-view'},{'name': 'ConfigurationViewComponent', 'selector': 'app-configuration-view'},{'name': 'DashboardScreenComponent', 'selector': 'app-dashboard-screen'},{'name': 'DetailScreenComponent', 'selector': 'app-detail-screen'},{'name': 'ForecastDetailViewComponent', 'selector': 'app-forecast-detail-view'},{'name': 'ForecastTileViewComponent', 'selector': 'app-forecast-tile-view'},{'name': 'HistoryDetailViewComponent', 'selector': 'app-history-detail-view'},{'name': 'HistoryTileViewComponent', 'selector': 'app-history-tile-view'},{'name': 'HumidityTileViewComponent', 'selector': 'app-humidity-tile-view'},{'name': 'IndoorDetailViewComponent', 'selector': 'app-indoor-detail-view'},{'name': 'IndoorTileViewComponent', 'selector': 'app-indoor-tile-view'},{'name': 'LoginViewComponent', 'selector': 'app-login-view'},{'name': 'MenuBarElementComponent', 'selector': 'app-menu-bar-element'},{'name': 'MenuButtonElementComponent', 'selector': 'app-menu-button-element'},{'name': 'MenuElementComponent', 'selector': 'app-menu-element'},{'name': 'NavBarElementComponent', 'selector': 'app-nav-bar-element'},{'name': 'OnboardingScreenComponent', 'selector': 'app-onboarding-screen'},{'name': 'OpenAPELoginTileViewComponent', 'selector': 'app-open-apelogin-tile-view'},{'name': 'OutdoorWeatherDetailViewComponent', 'selector': 'app-outdoor-weather-detail-view'},{'name': 'OutdoorWeatherViewComponent', 'selector': 'app-outdoor-weather-view'},{'name': 'PersonalizationSettingsViewComponent', 'selector': 'app-personalization-settings-view'},{'name': 'PersonalizationViewComponent', 'selector': 'app-personalization-view'},{'name': 'PollenflugDetailViewComponent', 'selector': 'app-pollenflug-detail-view'},{'name': 'PollenflugSmallTileComponent', 'selector': 'app-pollenflug-small-tile'},{'name': 'PollenflugTileViewComponent', 'selector': 'app-pollenflug-tile-view'},{'name': 'PollenListElementComponent', 'selector': 'app-pollen-list-element'},{'name': 'PollenTagElementComponent', 'selector': 'app-pollen-tag-element'},{'name': 'ProgressChartElementComponent', 'selector': 'app-progress-chart-element'},{'name': 'RegistrationViewComponent', 'selector': 'app-registration-view'},{'name': 'SettingsScreenComponent', 'selector': 'app-settings-screen'},{'name': 'SimpleTileViewComponent', 'selector': 'app-simple-tile-view'},{'name': 'SliderElementComponent', 'selector': 'app-slider-element'},{'name': 'TtsPlayerElementComponent', 'selector': 'app-tts-player-element'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PollenListElementComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PollenResponse.html":{"url":"interfaces/PollenResponse.html","title":"interface - PollenResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PollenResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/api/weather-api.service.ts\n        \n\n            \n                Description\n            \n            \n                Model of the pollen api response\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        id\n                                \n                                \n                                        loadRating\n                                \n                                \n                                        pollenName\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loadRating\n                                    \n                                \n                                \n                                    \n                                        loadRating:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pollenName\n                                    \n                                \n                                \n                                    \n                                        pollenName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { FORECAST, INDOORAIRQUALITY, OUTDOORWEATHER, POLLEN, WEATHERHISTORY } from '../../model/mock-data/weather.mock';\nimport { OutdoorWeatherData, PollenData, IndoorRoomData, WeatherForecastData, WeatherHistoryData } from '../../model/weather';\nimport { Observable, of } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\n\n/**\n * Weather api service injectable\n * \n * Use this service to access the network. It implementes all routes \n * for the weather data.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class WeatherAPIService {\n  private outdoorURL = environment.baseURL + 'weather-data/outdoor/latest';\n  private indoorURL = environment.baseURL + 'weather-data/indoor/latest';\n  private historyURL = environment.baseURL + 'weather-data/outdoor/history';\n  private forecastURL = environment.baseURL + 'weather-data/forecast/latest';\n  private allPollenTypesURL = environment.baseURL + 'pollen/all';\n\n  constructor(private httpClient: HttpClient) { }\n\n  /**\n   * @returns an observable with the loadad OutdoorWeatherData from the api or test data\n   */\n  public loadOutdoorWeather(): Observable {\n    if (environment.testData) {\n      return of(OUTDOORWEATHER);\n    }\n    let returnObservable = new Observable((observer) => {\n        this.httpClient.get(this.outdoorURL).subscribe(data => {\n          let outdoorData = this.createOutdoorWeatherDataFromServerResponse(data);\n          observer.next(outdoorData);\n          observer.complete();\n        })\n      }\n    );\n    return returnObservable;\n  }\n\n  /**\n   * @returns an observable with the loadad WeatherForecastData from the api or test data\n   */\n  public loadForecast(): Observable {\n    if (environment.testData) {\n      return of(FORECAST);\n    }\n    let returnObservable = new Observable((observer) => {\n        this.httpClient.get(this.forecastURL).subscribe(data => {\n          let forecastData = this.createOutdoorForecastDataFromServerResponse(data);\n          observer.next(forecastData);\n          observer.complete();\n        })\n      }\n    );\n    return returnObservable;\n  }\n\n  /**\n   * @returns an observable with the loadad PollenData from the api or test data\n   */\n  public loadPollen(): Observable{\n    if (environment.testData) {\n      let pollen = of(POLLEN);\n      return pollen;\n    }\n    let returnObservable = new Observable((observer) => {\n      let response = this.httpClient.get(this.allPollenTypesURL);\n      response.subscribe(data => {\n        let pollenData = this.createPollenDataFromServerResponse(data);\n        observer.next(pollenData);\n        observer.complete();\n      },\n      (error) => {\n        console.log(error);\n        observer.next([]);\n        observer.complete();\n      })\n    });\n    return returnObservable;\n  }\n\n  /**\n   * @returns an observable with the loadad IndoorRoomData from the api or test data\n   */\n  public loadIndoorRoomData(): Observable {\n    if (environment.testData) {\n      let indoorData = of(INDOORAIRQUALITY);\n      return indoorData;\n    }\n    let returnObservable = new Observable((observer) => { // Wir brauchen hier ein Array, -> sollen ja mehrere Räume möglich sein (theoretisch...)\n        this.httpClient.get(this.indoorURL).subscribe(data => {\n          let indoorData = this.createIndoorRoomDataFromServerResponse(data);\n          observer.next([indoorData]);\n          observer.complete();\n        },\n        (error) => {\n          console.log(error);\n          observer.next([]);\n          observer.complete();\n        })\n      }\n    );\n    return returnObservable;\n  }\n\n  /**\n   * @returns an observable with the loadad WeatherHistoryData or test data\n   */\n  public loadHistoryDataSubject(endDate: Date, beginDate: Date): Observable {\n    if (environment.testData) {\n      let forecastData = of(WEATHERHISTORY);\n      return forecastData;\n    }\n    let returnObservable = new Observable((observer) => { \n        this.httpClient.post(this.historyURL,\n          {\n            'begin': this.createServerFriendlyDate(beginDate),\n            'end': this.createServerFriendlyDate(endDate)\n          })\n        .subscribe(data => {\n          let dataPoints: OutdoorWeatherData[] = data.map((element) => {\n            return this.createOutdoorWeatherDataFromServerResponse(element);\n          });\n          console.log(dataPoints);\n          observer.next({'datapoints': dataPoints});\n          observer.complete();\n        })\n      }\n    );\n    return returnObservable;\n  }\n\n  /**\n   * Helper function to convert date to string\n   * @param date \n   * @returns a date as a string which is understandable for the server\n   */\n  private createServerFriendlyDate(date: Date): string {\n    let dateString = date.toISOString().slice(0, 10);\n    let timeString = date.toTimeString().slice(0, 8);\n    return dateString + ' ' + timeString;\n  }\n\n  /**\n   * Helper function to convert the response from the server to an OutdoorWeatherData object\n   * \n   * @param response\n   * @returns OutdoorWeatherData object\n   */\n  private createOutdoorWeatherDataFromServerResponse(response: OutdoorWeatherResponse): OutdoorWeatherData {\n    const date = response.timestamp;\n    const year = date.substr(0, 4);\n    const month = date.substr(5, 2);\n    const day = date.substr(8, 2);\n    const time = date.substr(11);\n\n    const validDate = new Date(month + '/' + day + '/' + year + ' ' + time);\n\n    return {\n            temperature: response.temperature,\n            maxTemperature: -99, // Not implemented yet\n            minTemperature: -99, // Not implemented yet\n            humidity: response.humidity,\n            timestamp: validDate,\n            weather: response.weather,\n            apparentTemperature: response.apparentTemperature,\n            location: response.location_name,\n            postCode: response.location\n          }\n  }\n\n  /**\n   * Helper function to convert the response from the server to an IndoorRoomData object\n   * \n   * @param response\n   * @returns IndoorRoomData object\n   */\n  private createIndoorRoomDataFromServerResponse(response: IndoorRoomResponse): IndoorRoomData {\n    return {\n            roomID: response.id + '',\n            roomName: response.location,\n            airQuality: response.gasVal, \n            temperature: response.temperature, \n            humidity: response.humidity, \n            timestamp: new Date(response.timestamp), \n          }\n  }\n\n  /**\n   * Helper function to convert the response from the server to an PollenData[] object\n   * \n   * @param response\n   * @returns PollenData[] object\n   */\n  private createPollenDataFromServerResponse(response: PollenResponse[]): PollenData[] {\n    console.log(\"Pollen daten sind hier\", response)\n    let pollen: PollenData[] = [];\n    response.forEach(item => {\n      pollen.push({\n        id: item.id,\n        pollenName: item.pollenName,\n        today: item.loadRating,\n        tomorrow: ''\n      })\n    })\n    return pollen\n  }\n\n  /**\n   * Helper function to convert the response from the server to an WeatherForecastData object\n   * \n   * @param response\n   * @returns WeatherForecastData object\n   */\n  private createOutdoorForecastDataFromServerResponse(response: ForecastResponse): WeatherForecastData {\n    return {\n      trend: response.trend,\n      weatherDescription: response.weatherDescription, \n      weatherIcon: response.weatherIcon\n    }\n  }\n}\n\n/**\n * Model of the pollen api response\n */\ninterface PollenResponse {\n  id: number,\n  pollenName: string,\n  loadRating: string,\n}\n\n/**\n * Model of the outdoor weather api response\n */\ninterface OutdoorWeatherResponse {\n  id: number,\n  humidity: number,\n  temperature: number,\n  pressure: number,\n  location: string,\n  location_name: string,\n  timestamp: string,\n  weather: string,\n  apparentTemperature: number\n}\n\n/**\n * Model of the indoor room api response\n */\ninterface IndoorRoomResponse {\n  id: number,\n  humidity: number,\n  temperature: number,\n  pressure: number,\n  gasVal: number,\n  location: string,\n  timestamp: string,\n}\n\n/**\n * Model of the forecast api response\n */\ninterface ForecastResponse {\n  id: number,\n  trend: string,\n  weatherIcon: string,\n  weatherDescription: string,\n  seaPressure: number,\n  timestampd: string\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PollenTagElementComponent.html":{"url":"components/PollenTagElementComponent.html","title":"component - PollenTagElementComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PollenTagElementComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/ui-elements/pollen-tag-element/pollen-tag-element.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-pollen-tag-element\n            \n\n            \n                styleUrls\n                ./pollen-tag-element.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./pollen-tag-element.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                colorValue\n                            \n                            \n                                    Public\n                                    Optional\n                                emojiName\n                            \n                            \n                                    Public\n                                    Optional\n                                textValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    value\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/ui-elements/pollen-tag-element/pollen-tag-element.component.ts:45\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/ui-elements/pollen-tag-element/pollen-tag-element.component.ts:10\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/ui-elements/pollen-tag-element/pollen-tag-element.component.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            colorValue\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/ui-elements/pollen-tag-element/pollen-tag-element.component.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            emojiName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/ui-elements/pollen-tag-element/pollen-tag-element.component.ts:43\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            textValue\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/ui-elements/pollen-tag-element/pollen-tag-element.component.ts:44\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n\n\n                \n                    \n                        setvalue(value: string)\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/ui-elements/pollen-tag-element/pollen-tag-element.component.ts:13\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-pollen-tag-element',\n  templateUrl: './pollen-tag-element.component.html',\n  styleUrls: ['./pollen-tag-element.component.scss']\n})\nexport class PollenTagElementComponent implements OnInit {\n  @Input()\n  get value(): string{\n    return this._value\n  }\n  set value(value: string) {\n    this._value = value;\n    switch(value) {\n      case '1':\n      case '1-2':\n        this.textValue = \"gering\";\n        this.emojiName = \"almostDeath\";\n        this.colorValue = \"yellow\";\n        break;\n      case '2':\n      case '2-3':\n        this.textValue = \"mittel\";\n        this.emojiName = \"yield\";\n        this.colorValue = \"orange\";\n        break;\n      case '3': \n      case '3-4': \n      case '4': \n      case '5': \n        this.textValue = \"hoch\";\n        this.emojiName = \"death\";\n        this.colorValue = \"red\";\n        break;\n      default:\n        this.textValue = \"keine\"; \n        this.emojiName = \"angel\";\n        this.colorValue = \"green\";\n    }\n  }\n  private _value: string = '0';\n  public emojiName?: string;\n  public textValue?: string;\n  public colorValue?: string;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        \n    \n        \n    \n    {{textValue}}    \n\n    \n\n    \n                \n                    ./pollen-tag-element.component.scss\n                \n                .emoji {\n    height: 2.2em;\n    padding: calc(var(--padding) / 4);\n\n}\n\n.emoji-container {\n    background-color: var(--surface);\n    border-radius: 1.7em;\n    margin: calc(var(--padding) / 4);\n    height: 3.2em;\n    width: 3.2em;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n\n}\n\n.tag-container {\n    border-radius: 2em;\n    display: flex;\n    flex-wrap: nowrap;\n    align-items: center;\n}\n\n.textValue{\n    padding: 0 1em 0 0.5em;\n    text-align: center;\n}\n\n.yellow {\n    background-color: var(--status-yellow);\n    p {\n        color: black\n    }\n}\n.red {\n    background-color: var(--status-red);\n    p {\n        color: white\n    }\n}\n.green {\n    background-color: var(--status-green);\n    p {\n        color: white\n    }\n}\n.orange {\n    background-color: var(--status-orange);\n    p {\n        color: black\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    {{textValue}}    '\n    var COMPONENTS = [{'name': 'ApparentTemperatureTileViewComponent', 'selector': 'app-apparent-temperature-tile-view'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BackButtonElementComponent', 'selector': 'app-back-button-element'},{'name': 'CardElementComponent', 'selector': 'card-element'},{'name': 'CheckboxSwitcherElementComponent', 'selector': 'app-checkbox-switcher-element'},{'name': 'ConfigurationTilePopUpDialogView', 'selector': 'configuration-tile-popup-view'},{'name': 'ConfigurationTileViewComponent', 'selector': 'app-configuration-tile-view'},{'name': 'ConfigurationViewComponent', 'selector': 'app-configuration-view'},{'name': 'DashboardScreenComponent', 'selector': 'app-dashboard-screen'},{'name': 'DetailScreenComponent', 'selector': 'app-detail-screen'},{'name': 'ForecastDetailViewComponent', 'selector': 'app-forecast-detail-view'},{'name': 'ForecastTileViewComponent', 'selector': 'app-forecast-tile-view'},{'name': 'HistoryDetailViewComponent', 'selector': 'app-history-detail-view'},{'name': 'HistoryTileViewComponent', 'selector': 'app-history-tile-view'},{'name': 'HumidityTileViewComponent', 'selector': 'app-humidity-tile-view'},{'name': 'IndoorDetailViewComponent', 'selector': 'app-indoor-detail-view'},{'name': 'IndoorTileViewComponent', 'selector': 'app-indoor-tile-view'},{'name': 'LoginViewComponent', 'selector': 'app-login-view'},{'name': 'MenuBarElementComponent', 'selector': 'app-menu-bar-element'},{'name': 'MenuButtonElementComponent', 'selector': 'app-menu-button-element'},{'name': 'MenuElementComponent', 'selector': 'app-menu-element'},{'name': 'NavBarElementComponent', 'selector': 'app-nav-bar-element'},{'name': 'OnboardingScreenComponent', 'selector': 'app-onboarding-screen'},{'name': 'OpenAPELoginTileViewComponent', 'selector': 'app-open-apelogin-tile-view'},{'name': 'OutdoorWeatherDetailViewComponent', 'selector': 'app-outdoor-weather-detail-view'},{'name': 'OutdoorWeatherViewComponent', 'selector': 'app-outdoor-weather-view'},{'name': 'PersonalizationSettingsViewComponent', 'selector': 'app-personalization-settings-view'},{'name': 'PersonalizationViewComponent', 'selector': 'app-personalization-view'},{'name': 'PollenflugDetailViewComponent', 'selector': 'app-pollenflug-detail-view'},{'name': 'PollenflugSmallTileComponent', 'selector': 'app-pollenflug-small-tile'},{'name': 'PollenflugTileViewComponent', 'selector': 'app-pollenflug-tile-view'},{'name': 'PollenListElementComponent', 'selector': 'app-pollen-list-element'},{'name': 'PollenTagElementComponent', 'selector': 'app-pollen-tag-element'},{'name': 'ProgressChartElementComponent', 'selector': 'app-progress-chart-element'},{'name': 'RegistrationViewComponent', 'selector': 'app-registration-view'},{'name': 'SettingsScreenComponent', 'selector': 'app-settings-screen'},{'name': 'SimpleTileViewComponent', 'selector': 'app-simple-tile-view'},{'name': 'SliderElementComponent', 'selector': 'app-slider-element'},{'name': 'TtsPlayerElementComponent', 'selector': 'app-tts-player-element'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PollenTagElementComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PollenType.html":{"url":"interfaces/PollenType.html","title":"interface - PollenType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PollenType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/user-context.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        id\n                                \n                                \n                                        pollenName\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pollenName\n                                    \n                                \n                                \n                                    \n                                        pollenName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface UserContext {\n    theme: Themes,\n    fontSize: number, // in %\n    pollen: string[], // Um die Mockdaten einfacher zu erstellen in Array konvertiert. Kann auch wieder in Map gewandelt werden.\n    selfVoicingEnabled: boolean,\n    doVentilationReminder: boolean, // TODO: What if multiple users have concurring settings here?\n    reduceMotion: boolean, // New element: For people with vestibular disorders is animation triggerd by scrolling not good.\n};\n\nexport interface UserIdentifikation {\n    token: string,\n    id: number,\n}\n\nexport enum Themes {\n    Light,\n    Dark,\n    Automatic,\n    HighContrast\n};\n\nexport interface PollenType {\n    id: number,\n    pollenName: string\n};\n\nexport enum Language {\n    'de-DE',\n    'en-EN'\n};\n\nexport const INITIAL_USER_CONTEXT: UserContext = {\n    theme: Themes.Automatic,\n    fontSize: 62.5,\n    pollen: [],\n    selfVoicingEnabled: false,\n    doVentilationReminder: false,\n    reduceMotion: false,\n};\n\nexport const INITIAL_USER_IDENTIFIKATION: UserIdentifikation = {\n    token: '',\n    id: -99,\n};\n\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PollenflugDetailViewComponent.html":{"url":"components/PollenflugDetailViewComponent.html","title":"component - PollenflugDetailViewComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PollenflugDetailViewComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/views/pollenflug-detail-view/pollenflug-detail-view.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-pollenflug-detail-view\n            \n\n            \n                styleUrls\n                ./pollenflug-detail-view.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./pollenflug-detail-view.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                pollenTiles\n                            \n                            \n                                tileType\n                            \n                            \n                                ttsTextGeneratorFunction\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(weatherDataService: WeatherDataService, textService: TextService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/views/pollenflug-detail-view/pollenflug-detail-view.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        weatherDataService\n                                                  \n                                                        \n                                                                        WeatherDataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        textService\n                                                  \n                                                        \n                                                                        TextService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/views/pollenflug-detail-view/pollenflug-detail-view.component.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            pollenTiles\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Tile[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/views/pollenflug-detail-view/pollenflug-detail-view.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tileType\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : TileType\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/views/pollenflug-detail-view/pollenflug-detail-view.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ttsTextGeneratorFunction\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/views/pollenflug-detail-view/pollenflug-detail-view.component.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { WeatherData } from 'src/app/model/weather';\nimport { TextService } from 'src/app/services/text.service';\nimport { WeatherDataService } from 'src/app/services/weather-data.service';\nimport { Tile, TileType } from '../../../model/weather';\n\n@Component({\n  selector: 'app-pollenflug-detail-view',\n  templateUrl: './pollenflug-detail-view.component.html',\n  styleUrls: ['./pollenflug-detail-view.component.scss']\n})\nexport class PollenflugDetailViewComponent implements OnInit {\n  pollenTiles?: Tile[]\n  tileType = TileType;\n  ttsTextGeneratorFunction = () => this.textService.createTextFromTilesArray(this.pollenTiles)\n\n\n  constructor(private weatherDataService: WeatherDataService,\n    private textService: TextService) { }\n\n  ngOnInit(): void {\n    this.loadPollenTiles();\n  }\n\n  private loadPollenTiles(): void {\n    this.weatherDataService.getPollenTilesSubject().subscribe(data => this.pollenTiles = data);\n  }\n\n}\n\n    \n\n    \n        \n\n\n    \n        \n        \n        \n        \n        \n            {{tileType[item.type]}} is not implemented yet\n        \n    \n\n\n \nWas ist Pollenflug?\n    Mehr als 15% der Bevölkerung in Deutschland sind Pollenallergiker und die Tendenz ist weiter zunehmend. Symptome wie Fließschnupfen, Bindehautentzündung bis hin zu Asthma sind damit verbunden. Hinzu kommen oftmals Kreuzreaktionen mit Nahrungsmitteln. Auch wenn die Intensität der allergischen Reaktionen individuell sehr unterschiedlich ist, so gibt es nach Aussagen von Allergologen dennoch einen engen Zusammenhang zwischen der Stärke der Symptomatik und der Pollenkonzentration in der Atemluft. Damit lässt sich aus dem Pollenflug direkt die Belastung des Pollenallergikers ableiten.\n    Da der Pollenflug aufgrund regional unterschiedlicher Pflanzenentwicklung sowie aufgrund des Wetters in Raum und Zeit stark schwanken kann, ist es für eine gezielte und vorausschauende Prophylaxe sinnvoll, täglich aktualisierte Informationen über die erwartete Pollenbelastung zur Verfügung zu stellen.\n\n\n\n\n    \n\n    \n                \n                    ./pollenflug-detail-view.component.scss\n                \n                .flex-container {\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: space-between;\n    padding: 0;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                        {{tileType[item.type]}} is not implemented yet             Was ist Pollenflug?    Mehr als 15% der Bevölkerung in Deutschland sind Pollenallergiker und die Tendenz ist weiter zunehmend. Symptome wie Fließschnupfen, Bindehautentzündung bis hin zu Asthma sind damit verbunden. Hinzu kommen oftmals Kreuzreaktionen mit Nahrungsmitteln. Auch wenn die Intensität der allergischen Reaktionen individuell sehr unterschiedlich ist, so gibt es nach Aussagen von Allergologen dennoch einen engen Zusammenhang zwischen der Stärke der Symptomatik und der Pollenkonzentration in der Atemluft. Damit lässt sich aus dem Pollenflug direkt die Belastung des Pollenallergikers ableiten.    Da der Pollenflug aufgrund regional unterschiedlicher Pflanzenentwicklung sowie aufgrund des Wetters in Raum und Zeit stark schwanken kann, ist es für eine gezielte und vorausschauende Prophylaxe sinnvoll, täglich aktualisierte Informationen über die erwartete Pollenbelastung zur Verfügung zu stellen.'\n    var COMPONENTS = [{'name': 'ApparentTemperatureTileViewComponent', 'selector': 'app-apparent-temperature-tile-view'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BackButtonElementComponent', 'selector': 'app-back-button-element'},{'name': 'CardElementComponent', 'selector': 'card-element'},{'name': 'CheckboxSwitcherElementComponent', 'selector': 'app-checkbox-switcher-element'},{'name': 'ConfigurationTilePopUpDialogView', 'selector': 'configuration-tile-popup-view'},{'name': 'ConfigurationTileViewComponent', 'selector': 'app-configuration-tile-view'},{'name': 'ConfigurationViewComponent', 'selector': 'app-configuration-view'},{'name': 'DashboardScreenComponent', 'selector': 'app-dashboard-screen'},{'name': 'DetailScreenComponent', 'selector': 'app-detail-screen'},{'name': 'ForecastDetailViewComponent', 'selector': 'app-forecast-detail-view'},{'name': 'ForecastTileViewComponent', 'selector': 'app-forecast-tile-view'},{'name': 'HistoryDetailViewComponent', 'selector': 'app-history-detail-view'},{'name': 'HistoryTileViewComponent', 'selector': 'app-history-tile-view'},{'name': 'HumidityTileViewComponent', 'selector': 'app-humidity-tile-view'},{'name': 'IndoorDetailViewComponent', 'selector': 'app-indoor-detail-view'},{'name': 'IndoorTileViewComponent', 'selector': 'app-indoor-tile-view'},{'name': 'LoginViewComponent', 'selector': 'app-login-view'},{'name': 'MenuBarElementComponent', 'selector': 'app-menu-bar-element'},{'name': 'MenuButtonElementComponent', 'selector': 'app-menu-button-element'},{'name': 'MenuElementComponent', 'selector': 'app-menu-element'},{'name': 'NavBarElementComponent', 'selector': 'app-nav-bar-element'},{'name': 'OnboardingScreenComponent', 'selector': 'app-onboarding-screen'},{'name': 'OpenAPELoginTileViewComponent', 'selector': 'app-open-apelogin-tile-view'},{'name': 'OutdoorWeatherDetailViewComponent', 'selector': 'app-outdoor-weather-detail-view'},{'name': 'OutdoorWeatherViewComponent', 'selector': 'app-outdoor-weather-view'},{'name': 'PersonalizationSettingsViewComponent', 'selector': 'app-personalization-settings-view'},{'name': 'PersonalizationViewComponent', 'selector': 'app-personalization-view'},{'name': 'PollenflugDetailViewComponent', 'selector': 'app-pollenflug-detail-view'},{'name': 'PollenflugSmallTileComponent', 'selector': 'app-pollenflug-small-tile'},{'name': 'PollenflugTileViewComponent', 'selector': 'app-pollenflug-tile-view'},{'name': 'PollenListElementComponent', 'selector': 'app-pollen-list-element'},{'name': 'PollenTagElementComponent', 'selector': 'app-pollen-tag-element'},{'name': 'ProgressChartElementComponent', 'selector': 'app-progress-chart-element'},{'name': 'RegistrationViewComponent', 'selector': 'app-registration-view'},{'name': 'SettingsScreenComponent', 'selector': 'app-settings-screen'},{'name': 'SimpleTileViewComponent', 'selector': 'app-simple-tile-view'},{'name': 'SliderElementComponent', 'selector': 'app-slider-element'},{'name': 'TtsPlayerElementComponent', 'selector': 'app-tts-player-element'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PollenflugDetailViewComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PollenflugSmallTileComponent.html":{"url":"components/PollenflugSmallTileComponent.html","title":"component - PollenflugSmallTileComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PollenflugSmallTileComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/views/pollenflug-small-tile/pollenflug-small-tile.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-pollenflug-small-tile\n            \n\n            \n                styleUrls\n                ./pollenflug-small-tile.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./pollenflug-small-tile.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                _pollen\n                            \n                            \n                                cardSizeType\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                hideSubtitle\n                            \n                            \n                                pressable\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    data\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/views/pollenflug-small-tile/pollenflug-small-tile.component.ts:18\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        data\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/views/pollenflug-small-tile/pollenflug-small-tile.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        hideSubtitle\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/views/pollenflug-small-tile/pollenflug-small-tile.component.ts:12\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        pressable\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/views/pollenflug-small-tile/pollenflug-small-tile.component.ts:11\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/views/pollenflug-small-tile/pollenflug-small-tile.component.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            _pollen\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         PollenData\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/views/pollenflug-small-tile/pollenflug-small-tile.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cardSizeType\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : CardSize\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/views/pollenflug-small-tile/pollenflug-small-tile.component.ts:18\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        data\n                    \n                \n\n\n                \n                    \n                        setdata(data)\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/views/pollenflug-small-tile/pollenflug-small-tile.component.ts:14\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            data\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { PollenData, WeatherData } from 'src/app/model/weather';\nimport { CardSize } from '../../ui-elements/card-element/card-element.component';\n\n@Component({\n  selector: 'app-pollenflug-small-tile',\n  templateUrl: './pollenflug-small-tile.component.html',\n  styleUrls: ['./pollenflug-small-tile.component.scss']\n})\nexport class PollenflugSmallTileComponent implements OnInit {\n  @Input() pressable: boolean = false;\n  @Input() hideSubtitle: boolean = false;\n  @Input()\n  set data(data: WeatherData) {\n    this._pollen = data as PollenData;\n  }\n  _pollen?: PollenData;\n  cardSizeType = CardSize;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        \n    \n        \n                \n        \n    \n\n    \n\n    \n                \n                    ./pollenflug-small-tile.component.scss\n                \n                .emoji {\n    height: 2.2em;\n}\n\n.textValue{\n    padding: 0 1em 0 1em;\n    width: 3em;\n    text-align: center;\n    border-radius: 1.5em;\n}\n\n.blue {\n    background-color: var(--accent);\n}\n.red {\n    background-color: red;\n\n}\n.green {\n    background-color: green;\n}\n.orange {\n    background-color: orange;\n    color: black;\n}\n\n.flex-container {\n    display: flex;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        '\n    var COMPONENTS = [{'name': 'ApparentTemperatureTileViewComponent', 'selector': 'app-apparent-temperature-tile-view'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BackButtonElementComponent', 'selector': 'app-back-button-element'},{'name': 'CardElementComponent', 'selector': 'card-element'},{'name': 'CheckboxSwitcherElementComponent', 'selector': 'app-checkbox-switcher-element'},{'name': 'ConfigurationTilePopUpDialogView', 'selector': 'configuration-tile-popup-view'},{'name': 'ConfigurationTileViewComponent', 'selector': 'app-configuration-tile-view'},{'name': 'ConfigurationViewComponent', 'selector': 'app-configuration-view'},{'name': 'DashboardScreenComponent', 'selector': 'app-dashboard-screen'},{'name': 'DetailScreenComponent', 'selector': 'app-detail-screen'},{'name': 'ForecastDetailViewComponent', 'selector': 'app-forecast-detail-view'},{'name': 'ForecastTileViewComponent', 'selector': 'app-forecast-tile-view'},{'name': 'HistoryDetailViewComponent', 'selector': 'app-history-detail-view'},{'name': 'HistoryTileViewComponent', 'selector': 'app-history-tile-view'},{'name': 'HumidityTileViewComponent', 'selector': 'app-humidity-tile-view'},{'name': 'IndoorDetailViewComponent', 'selector': 'app-indoor-detail-view'},{'name': 'IndoorTileViewComponent', 'selector': 'app-indoor-tile-view'},{'name': 'LoginViewComponent', 'selector': 'app-login-view'},{'name': 'MenuBarElementComponent', 'selector': 'app-menu-bar-element'},{'name': 'MenuButtonElementComponent', 'selector': 'app-menu-button-element'},{'name': 'MenuElementComponent', 'selector': 'app-menu-element'},{'name': 'NavBarElementComponent', 'selector': 'app-nav-bar-element'},{'name': 'OnboardingScreenComponent', 'selector': 'app-onboarding-screen'},{'name': 'OpenAPELoginTileViewComponent', 'selector': 'app-open-apelogin-tile-view'},{'name': 'OutdoorWeatherDetailViewComponent', 'selector': 'app-outdoor-weather-detail-view'},{'name': 'OutdoorWeatherViewComponent', 'selector': 'app-outdoor-weather-view'},{'name': 'PersonalizationSettingsViewComponent', 'selector': 'app-personalization-settings-view'},{'name': 'PersonalizationViewComponent', 'selector': 'app-personalization-view'},{'name': 'PollenflugDetailViewComponent', 'selector': 'app-pollenflug-detail-view'},{'name': 'PollenflugSmallTileComponent', 'selector': 'app-pollenflug-small-tile'},{'name': 'PollenflugTileViewComponent', 'selector': 'app-pollenflug-tile-view'},{'name': 'PollenListElementComponent', 'selector': 'app-pollen-list-element'},{'name': 'PollenTagElementComponent', 'selector': 'app-pollen-tag-element'},{'name': 'ProgressChartElementComponent', 'selector': 'app-progress-chart-element'},{'name': 'RegistrationViewComponent', 'selector': 'app-registration-view'},{'name': 'SettingsScreenComponent', 'selector': 'app-settings-screen'},{'name': 'SimpleTileViewComponent', 'selector': 'app-simple-tile-view'},{'name': 'SliderElementComponent', 'selector': 'app-slider-element'},{'name': 'TtsPlayerElementComponent', 'selector': 'app-tts-player-element'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PollenflugSmallTileComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PollenflugTileViewComponent.html":{"url":"components/PollenflugTileViewComponent.html","title":"component - PollenflugTileViewComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PollenflugTileViewComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/views/pollenflug-tile-view/pollenflug-tile-view.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-pollenflug-tile-view\n            \n\n            \n                styleUrls\n                ./pollenflug-tile-view.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./pollenflug-tile-view.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                _pollen\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                data\n                            \n                            \n                                hideSubtitle\n                            \n                            \n                                pressable\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    data\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/views/pollenflug-tile-view/pollenflug-tile-view.component.ts:16\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        data\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/views/pollenflug-tile-view/pollenflug-tile-view.component.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        hideSubtitle\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/views/pollenflug-tile-view/pollenflug-tile-view.component.ts:11\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        pressable\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/views/pollenflug-tile-view/pollenflug-tile-view.component.ts:10\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/views/pollenflug-tile-view/pollenflug-tile-view.component.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            _pollen\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         PollenData[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/views/pollenflug-tile-view/pollenflug-tile-view.component.ts:16\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        data\n                    \n                \n\n\n                \n                    \n                        setdata(data)\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/views/pollenflug-tile-view/pollenflug-tile-view.component.ts:13\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            data\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\nimport { PollenData, WeatherData } from 'src/app/model/weather';\n\n@Component({\n  selector: 'app-pollenflug-tile-view',\n  templateUrl: './pollenflug-tile-view.component.html',\n  styleUrls: ['./pollenflug-tile-view.component.scss']\n})\nexport class PollenflugTileViewComponent implements OnInit {\n  @Input() pressable: boolean = false;\n  @Input() hideSubtitle: boolean = false;\n  @Input()\n  set data(data: WeatherData) {\n    this._pollen = data as PollenData[];\n  }\n  _pollen?: PollenData[];\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n}\n\n    \n\n    \n        \n    \n        \n    \n\n\n\n    \n\n    \n                \n                    ./pollenflug-tile-view.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                '\n    var COMPONENTS = [{'name': 'ApparentTemperatureTileViewComponent', 'selector': 'app-apparent-temperature-tile-view'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BackButtonElementComponent', 'selector': 'app-back-button-element'},{'name': 'CardElementComponent', 'selector': 'card-element'},{'name': 'CheckboxSwitcherElementComponent', 'selector': 'app-checkbox-switcher-element'},{'name': 'ConfigurationTilePopUpDialogView', 'selector': 'configuration-tile-popup-view'},{'name': 'ConfigurationTileViewComponent', 'selector': 'app-configuration-tile-view'},{'name': 'ConfigurationViewComponent', 'selector': 'app-configuration-view'},{'name': 'DashboardScreenComponent', 'selector': 'app-dashboard-screen'},{'name': 'DetailScreenComponent', 'selector': 'app-detail-screen'},{'name': 'ForecastDetailViewComponent', 'selector': 'app-forecast-detail-view'},{'name': 'ForecastTileViewComponent', 'selector': 'app-forecast-tile-view'},{'name': 'HistoryDetailViewComponent', 'selector': 'app-history-detail-view'},{'name': 'HistoryTileViewComponent', 'selector': 'app-history-tile-view'},{'name': 'HumidityTileViewComponent', 'selector': 'app-humidity-tile-view'},{'name': 'IndoorDetailViewComponent', 'selector': 'app-indoor-detail-view'},{'name': 'IndoorTileViewComponent', 'selector': 'app-indoor-tile-view'},{'name': 'LoginViewComponent', 'selector': 'app-login-view'},{'name': 'MenuBarElementComponent', 'selector': 'app-menu-bar-element'},{'name': 'MenuButtonElementComponent', 'selector': 'app-menu-button-element'},{'name': 'MenuElementComponent', 'selector': 'app-menu-element'},{'name': 'NavBarElementComponent', 'selector': 'app-nav-bar-element'},{'name': 'OnboardingScreenComponent', 'selector': 'app-onboarding-screen'},{'name': 'OpenAPELoginTileViewComponent', 'selector': 'app-open-apelogin-tile-view'},{'name': 'OutdoorWeatherDetailViewComponent', 'selector': 'app-outdoor-weather-detail-view'},{'name': 'OutdoorWeatherViewComponent', 'selector': 'app-outdoor-weather-view'},{'name': 'PersonalizationSettingsViewComponent', 'selector': 'app-personalization-settings-view'},{'name': 'PersonalizationViewComponent', 'selector': 'app-personalization-view'},{'name': 'PollenflugDetailViewComponent', 'selector': 'app-pollenflug-detail-view'},{'name': 'PollenflugSmallTileComponent', 'selector': 'app-pollenflug-small-tile'},{'name': 'PollenflugTileViewComponent', 'selector': 'app-pollenflug-tile-view'},{'name': 'PollenListElementComponent', 'selector': 'app-pollen-list-element'},{'name': 'PollenTagElementComponent', 'selector': 'app-pollen-tag-element'},{'name': 'ProgressChartElementComponent', 'selector': 'app-progress-chart-element'},{'name': 'RegistrationViewComponent', 'selector': 'app-registration-view'},{'name': 'SettingsScreenComponent', 'selector': 'app-settings-screen'},{'name': 'SimpleTileViewComponent', 'selector': 'app-simple-tile-view'},{'name': 'SliderElementComponent', 'selector': 'app-slider-element'},{'name': 'TtsPlayerElementComponent', 'selector': 'app-tts-player-element'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PollenflugTileViewComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProgressChartElementComponent.html":{"url":"components/ProgressChartElementComponent.html","title":"component - ProgressChartElementComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ProgressChartElementComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/ui-elements/progress-chart-element/progress-chart-element.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-progress-chart-element\n            \n\n            \n                styleUrls\n                ./progress-chart-element.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./progress-chart-element.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/ui-elements/progress-chart-element/progress-chart-element.component.ts:9\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 50\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/ui-elements/progress-chart-element/progress-chart-element.component.ts:9\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/ui-elements/progress-chart-element/progress-chart-element.component.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-progress-chart-element',\n  templateUrl: './progress-chart-element.component.html',\n  styleUrls: ['./progress-chart-element.component.scss']\n})\nexport class ProgressChartElementComponent implements OnInit {\n  @Input() value: number = 50;\n  \n  constructor() { \n  }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        \n\n    0\n    100\n\n    \n\n    \n                \n                    ./progress-chart-element.component.scss\n                \n                .legend {\n    display: flex;\n    justify-content: space-between;\n    p {\n        color: var(--secondary);\n        padding: 0 5px 0 5px;\n    }\n}\n\n\n// disable user interaction!\ninput {\n    pointer-events: none;\n}\n\n@mixin gradient {\n    background: rgb(33,153,74);\n    background: -moz-linear-gradient(90deg, rgba(33,153,74,1) 0%, rgba(255,230,0,0.9883801424050633) 62%, rgba(255,0,0,1) 100%);\n    background: -webkit-linear-gradient(90deg, rgba(33,153,74,1) 0%, rgba(255,230,0,0.9883801424050633) 62%, rgba(255,0,0,1) 100%);\n    background: linear-gradient(90deg, rgba(33,153,74,1) 0%, rgba(255,230,0,0.9883801424050633) 62%, rgba(255,0,0,1) 100%);\n    filter: progid:DXImageTransform.Microsoft.gradient(startColorstr=\"#21994a\",endColorstr=\"#ff0000\",GradientType=1);\n}\n\n@mixin thumb {\n    border: 8px solid var(--text);\n    height: 32px;\n    width: 32px;\n    border-radius: 16px;\n    background: transparent;\n    margin-top: -8px;\n}\n\n@mixin height {\n    height: 16px;\n}\n\n\n\ninput[type=range] {\n    -webkit-appearance: none;\n    margin: 10px 0;\n    width: 100%;\n    background-color: transparent;\n\n  }\n  input[type=range]:focus {\n    outline: none;\n  }\n  input[type=range]::-webkit-slider-runnable-track {\n    width: 100%;\n    @include height;\n    cursor: pointer;\n    box-shadow: 0px 0px 0px #000000, 0px 0px 0px #0d0d0d;\n    @include gradient();\n    border-radius: 25px;\n    border: 0px solid #000101;\n  }\n  input[type=range]::-webkit-slider-thumb {\n    @include thumb;\n    box-shadow: 0px 0px 0px #000000, 0px 0px 0px #0d0d0d;\n    cursor: pointer;\n    -webkit-appearance: none;\n\n  }\n  input[type=range]:focus::-webkit-slider-runnable-track {\n    @include gradient();\n  }\n  input[type=range]::-moz-range-track {\n    width: 100%;\n    @include height;\n    cursor: pointer;\n    animate: 0.2s;\n    box-shadow: 0px 0px 0px #000000, 0px 0px 0px #0d0d0d;\n    @include gradient();\n    border-radius: 25px;\n    border: 0px solid #000101;\n  }\n  input[type=range]::-moz-range-thumb {\n    box-shadow: 0px 0px 0px #000000, 0px 0px 0px #0d0d0d;\n    @include thumb;\n    height: 16px;\n    width: 16px;\n    cursor: pointer;\n  }\n  input[type=range]::-ms-track {\n    width: 100%;\n    @include height;\n    cursor: pointer;\n    animate: 0.2s;\n    background: transparent;\n    border-color: transparent;\n    border-width: 39px 0;\n    color: transparent;\n  }\n  input[type=range]::-ms-fill-lower {\n    @include gradient();\n    border: 0px solid #000101;\n    border-radius: 50px;\n    box-shadow: 0px 0px 0px #000000, 0px 0px 0px #0d0d0d;\n  }\n  input[type=range]::-ms-fill-upper {\n    @include gradient();\n    border: 0px solid #000101;\n    border-radius: 50px;\n    box-shadow: 0px 0px 0px #000000, 0px 0px 0px #0d0d0d;\n  }\n  input[type=range]::-ms-thumb {\n    box-shadow: 0px 0px 0px #000000, 0px 0px 0px #0d0d0d;\n    @include thumb;\n    height: 16px;\n    width: 16px;\n    cursor: pointer;\n  }\n  input[type=range]:focus::-ms-fill-lower {\n    @include gradient();\n\n  }\n  input[type=range]:focus::-ms-fill-upper {\n    @include gradient();\n\n  }\n  \n  body {\n    padding: 30px;\n  }\n  \n  \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    0    100'\n    var COMPONENTS = [{'name': 'ApparentTemperatureTileViewComponent', 'selector': 'app-apparent-temperature-tile-view'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BackButtonElementComponent', 'selector': 'app-back-button-element'},{'name': 'CardElementComponent', 'selector': 'card-element'},{'name': 'CheckboxSwitcherElementComponent', 'selector': 'app-checkbox-switcher-element'},{'name': 'ConfigurationTilePopUpDialogView', 'selector': 'configuration-tile-popup-view'},{'name': 'ConfigurationTileViewComponent', 'selector': 'app-configuration-tile-view'},{'name': 'ConfigurationViewComponent', 'selector': 'app-configuration-view'},{'name': 'DashboardScreenComponent', 'selector': 'app-dashboard-screen'},{'name': 'DetailScreenComponent', 'selector': 'app-detail-screen'},{'name': 'ForecastDetailViewComponent', 'selector': 'app-forecast-detail-view'},{'name': 'ForecastTileViewComponent', 'selector': 'app-forecast-tile-view'},{'name': 'HistoryDetailViewComponent', 'selector': 'app-history-detail-view'},{'name': 'HistoryTileViewComponent', 'selector': 'app-history-tile-view'},{'name': 'HumidityTileViewComponent', 'selector': 'app-humidity-tile-view'},{'name': 'IndoorDetailViewComponent', 'selector': 'app-indoor-detail-view'},{'name': 'IndoorTileViewComponent', 'selector': 'app-indoor-tile-view'},{'name': 'LoginViewComponent', 'selector': 'app-login-view'},{'name': 'MenuBarElementComponent', 'selector': 'app-menu-bar-element'},{'name': 'MenuButtonElementComponent', 'selector': 'app-menu-button-element'},{'name': 'MenuElementComponent', 'selector': 'app-menu-element'},{'name': 'NavBarElementComponent', 'selector': 'app-nav-bar-element'},{'name': 'OnboardingScreenComponent', 'selector': 'app-onboarding-screen'},{'name': 'OpenAPELoginTileViewComponent', 'selector': 'app-open-apelogin-tile-view'},{'name': 'OutdoorWeatherDetailViewComponent', 'selector': 'app-outdoor-weather-detail-view'},{'name': 'OutdoorWeatherViewComponent', 'selector': 'app-outdoor-weather-view'},{'name': 'PersonalizationSettingsViewComponent', 'selector': 'app-personalization-settings-view'},{'name': 'PersonalizationViewComponent', 'selector': 'app-personalization-view'},{'name': 'PollenflugDetailViewComponent', 'selector': 'app-pollenflug-detail-view'},{'name': 'PollenflugSmallTileComponent', 'selector': 'app-pollenflug-small-tile'},{'name': 'PollenflugTileViewComponent', 'selector': 'app-pollenflug-tile-view'},{'name': 'PollenListElementComponent', 'selector': 'app-pollen-list-element'},{'name': 'PollenTagElementComponent', 'selector': 'app-pollen-tag-element'},{'name': 'ProgressChartElementComponent', 'selector': 'app-progress-chart-element'},{'name': 'RegistrationViewComponent', 'selector': 'app-registration-view'},{'name': 'SettingsScreenComponent', 'selector': 'app-settings-screen'},{'name': 'SimpleTileViewComponent', 'selector': 'app-simple-tile-view'},{'name': 'SliderElementComponent', 'selector': 'app-slider-element'},{'name': 'TtsPlayerElementComponent', 'selector': 'app-tts-player-element'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ProgressChartElementComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RegistrationViewComponent.html":{"url":"components/RegistrationViewComponent.html","title":"component - RegistrationViewComponent","body":"\n                   \n\n\n\n\n\n  Components\n  RegistrationViewComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/views/registration-view/registration-view.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-registration-view\n            \n\n            \n                styleUrls\n                ./registration-view.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./registration-view.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                error\n                            \n                            \n                                registrationForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, userContextService: UserContextService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/views/registration-view/registration-view.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userContextService\n                                                  \n                                                        \n                                                                        UserContextService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/views/registration-view/registration-view.component.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onSubmit\n                        \n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/views/registration-view/registration-view.component.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            error\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/views/registration-view/registration-view.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            registrationForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.formBuilder.group({\n    password: new FormControl('', Validators.minLength(2)),\n    repeatedPassword: new FormControl('', Validators.minLength(2)),\n    username: new FormControl('', Validators.minLength(2)),\n  })\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/views/registration-view/registration-view.component.ts:12\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, Validators } from '@angular/forms'; \nimport { Router } from '@angular/router';\nimport { UserContextService } from 'src/app/services/user-context.service';\n\n@Component({\n  selector: 'app-registration-view',\n  templateUrl: './registration-view.component.html',\n  styleUrls: ['./registration-view.component.scss']\n})\nexport class RegistrationViewComponent implements OnInit {\n  registrationForm = this.formBuilder.group({\n    password: new FormControl('', Validators.minLength(2)),\n    repeatedPassword: new FormControl('', Validators.minLength(2)),\n    username: new FormControl('', Validators.minLength(2)),\n  });\n  error?: string;\n\n  constructor(private formBuilder: FormBuilder,\n    private userContextService: UserContextService,\n    private router: Router) { }\n\n  ngOnInit(): void {\n  }\n\n\n  onSubmit(): void {\n    const username = this.registrationForm.get(\"username\")?.value;\n    const password = this.registrationForm.get(\"password\")?.value;\n    const repeatedpassword = this.registrationForm.get(\"repeatedPassword\")?.value;\n\n    if(password !== repeatedpassword) {\n      this.error = \"Das Passwort stimmt nicht überein\"\n      return\n    }\n    \n    this.error = undefined;\n    this.userContextService.register(username, password).then((data) => {\n      if(data.success) {\n        this.router.navigateByUrl('/onboarding/personalization');\n      } else {\n        this.error = data.error\n      }\n    });\n  }\n}\n\n    \n\n    \n        \n    \n    \n        \n            \n                \n                    Nutzername\n                \n                \n            \n\n            \n                \n                    Passwort\n                \n                \n            \n\n            \n                \n                    Passwort wiederholen\n                \n                \n            \n\n            {{error}}\n\n            \n        \n        \n    \n\n    \n\n    \n                \n                    ./registration-view.component.scss\n                \n                form {\n    width: 100%;\n}\n\n.container {\n    display: flex;\n    align-items: center;\n    flex-direction: column;\n    justify-items: stretch;\n    padding-top: var(--navbar-height);\n}\n\n.error-message {\n    color: var(--status-red);\n    padding-top: calc(var(--padding) / 2 );\n    text-align: center;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                Nutzername                                                                                            Passwort                                                                                            Passwort wiederholen                                                        {{error}}                                '\n    var COMPONENTS = [{'name': 'ApparentTemperatureTileViewComponent', 'selector': 'app-apparent-temperature-tile-view'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BackButtonElementComponent', 'selector': 'app-back-button-element'},{'name': 'CardElementComponent', 'selector': 'card-element'},{'name': 'CheckboxSwitcherElementComponent', 'selector': 'app-checkbox-switcher-element'},{'name': 'ConfigurationTilePopUpDialogView', 'selector': 'configuration-tile-popup-view'},{'name': 'ConfigurationTileViewComponent', 'selector': 'app-configuration-tile-view'},{'name': 'ConfigurationViewComponent', 'selector': 'app-configuration-view'},{'name': 'DashboardScreenComponent', 'selector': 'app-dashboard-screen'},{'name': 'DetailScreenComponent', 'selector': 'app-detail-screen'},{'name': 'ForecastDetailViewComponent', 'selector': 'app-forecast-detail-view'},{'name': 'ForecastTileViewComponent', 'selector': 'app-forecast-tile-view'},{'name': 'HistoryDetailViewComponent', 'selector': 'app-history-detail-view'},{'name': 'HistoryTileViewComponent', 'selector': 'app-history-tile-view'},{'name': 'HumidityTileViewComponent', 'selector': 'app-humidity-tile-view'},{'name': 'IndoorDetailViewComponent', 'selector': 'app-indoor-detail-view'},{'name': 'IndoorTileViewComponent', 'selector': 'app-indoor-tile-view'},{'name': 'LoginViewComponent', 'selector': 'app-login-view'},{'name': 'MenuBarElementComponent', 'selector': 'app-menu-bar-element'},{'name': 'MenuButtonElementComponent', 'selector': 'app-menu-button-element'},{'name': 'MenuElementComponent', 'selector': 'app-menu-element'},{'name': 'NavBarElementComponent', 'selector': 'app-nav-bar-element'},{'name': 'OnboardingScreenComponent', 'selector': 'app-onboarding-screen'},{'name': 'OpenAPELoginTileViewComponent', 'selector': 'app-open-apelogin-tile-view'},{'name': 'OutdoorWeatherDetailViewComponent', 'selector': 'app-outdoor-weather-detail-view'},{'name': 'OutdoorWeatherViewComponent', 'selector': 'app-outdoor-weather-view'},{'name': 'PersonalizationSettingsViewComponent', 'selector': 'app-personalization-settings-view'},{'name': 'PersonalizationViewComponent', 'selector': 'app-personalization-view'},{'name': 'PollenflugDetailViewComponent', 'selector': 'app-pollenflug-detail-view'},{'name': 'PollenflugSmallTileComponent', 'selector': 'app-pollenflug-small-tile'},{'name': 'PollenflugTileViewComponent', 'selector': 'app-pollenflug-tile-view'},{'name': 'PollenListElementComponent', 'selector': 'app-pollen-list-element'},{'name': 'PollenTagElementComponent', 'selector': 'app-pollen-tag-element'},{'name': 'ProgressChartElementComponent', 'selector': 'app-progress-chart-element'},{'name': 'RegistrationViewComponent', 'selector': 'app-registration-view'},{'name': 'SettingsScreenComponent', 'selector': 'app-settings-screen'},{'name': 'SimpleTileViewComponent', 'selector': 'app-simple-tile-view'},{'name': 'SliderElementComponent', 'selector': 'app-slider-element'},{'name': 'TtsPlayerElementComponent', 'selector': 'app-tts-player-element'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RegistrationViewComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ScreensModule.html":{"url":"modules/ScreensModule.html","title":"module - ScreensModule","body":"\n                   \n\n\n\n\n    Modules\n    ScreensModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ScreensModule\n\n\n\ncluster_ScreensModule_declarations\n\n\n\ncluster_ScreensModule_imports\n\n\n\n\nDashboardScreenComponent\n\nDashboardScreenComponent\n\n\n\nScreensModule\n\nScreensModule\n\nScreensModule -->\n\nDashboardScreenComponent->ScreensModule\n\n\n\n\n\nDetailScreenComponent\n\nDetailScreenComponent\n\nScreensModule -->\n\nDetailScreenComponent->ScreensModule\n\n\n\n\n\nOnboardingScreenComponent\n\nOnboardingScreenComponent\n\nScreensModule -->\n\nOnboardingScreenComponent->ScreensModule\n\n\n\n\n\nSettingsScreenComponent\n\nSettingsScreenComponent\n\nScreensModule -->\n\nSettingsScreenComponent->ScreensModule\n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nScreensModule -->\n\nAppRoutingModule->ScreensModule\n\n\n\n\n\nUiElementsModule\n\nUiElementsModule\n\nScreensModule -->\n\nUiElementsModule->ScreensModule\n\n\n\n\n\nViewsModule\n\nViewsModule\n\nScreensModule -->\n\nViewsModule->ScreensModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/screens/screens.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            DashboardScreenComponent\n                        \n                        \n                            DetailScreenComponent\n                        \n                        \n                            OnboardingScreenComponent\n                        \n                        \n                            SettingsScreenComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                            UiElementsModule\n                        \n                        \n                            ViewsModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DashboardScreenComponent } from './dashboard-screen/dashboard-screen.component';\nimport { DetailScreenComponent } from './detail-screen/detail-screen.component';\nimport { OnboardingScreenComponent } from './onboarding-screen/onboarding-screen.component';\nimport { UiElementsModule } from '../ui-elements/ui-elements.module';\nimport { ViewsModule } from '../views/views.module'\nimport { RouterModule } from '@angular/router';\nimport { LayoutModule } from '@angular/cdk/layout';\nimport { AppRoutingModule } from 'src/app/app-routing.module';\nimport { SettingsScreenComponent } from './settings-screen/settings-screen.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NgxSpinnerModule } from \"ngx-spinner\";\n\n\n\n\n@NgModule({\n  declarations: [\n    DashboardScreenComponent,\n    DetailScreenComponent,\n    SettingsScreenComponent,\n    OnboardingScreenComponent,\n  ],\n  imports: [\n    CommonModule,\n    AppRoutingModule,\n    RouterModule,\n    UiElementsModule,\n    ViewsModule,\n    LayoutModule,\n    BrowserAnimationsModule,\n    NgxSpinnerModule,\n  ]\n})\n\nexport class ScreensModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SettingsScreenComponent.html":{"url":"components/SettingsScreenComponent.html","title":"component - SettingsScreenComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SettingsScreenComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/screens/settings-screen/settings-screen.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-settings-screen\n            \n\n            \n                styleUrls\n                ./settings-screen.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./settings-screen.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                desktop\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/screens/settings-screen/settings-screen.component.ts:9\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/screens/settings-screen/settings-screen.component.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            desktop\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/screens/settings-screen/settings-screen.component.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-settings-screen',\n  templateUrl: './settings-screen.component.html',\n  styleUrls: ['./settings-screen.component.scss']\n})\nexport class SettingsScreenComponent implements OnInit {\n  desktop: boolean = false;\n\n  constructor() { }\n\n  ngOnInit(): void { \n  }\n}\n\n    \n\n    \n        \n    \n\n\n    \n\n    \n                \n                    ./settings-screen.component.scss\n                \n                .layout {\n    min-height: calc(100vh);\n}\n\n.background {\n    background-color: var(--background);\n}\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'ApparentTemperatureTileViewComponent', 'selector': 'app-apparent-temperature-tile-view'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BackButtonElementComponent', 'selector': 'app-back-button-element'},{'name': 'CardElementComponent', 'selector': 'card-element'},{'name': 'CheckboxSwitcherElementComponent', 'selector': 'app-checkbox-switcher-element'},{'name': 'ConfigurationTilePopUpDialogView', 'selector': 'configuration-tile-popup-view'},{'name': 'ConfigurationTileViewComponent', 'selector': 'app-configuration-tile-view'},{'name': 'ConfigurationViewComponent', 'selector': 'app-configuration-view'},{'name': 'DashboardScreenComponent', 'selector': 'app-dashboard-screen'},{'name': 'DetailScreenComponent', 'selector': 'app-detail-screen'},{'name': 'ForecastDetailViewComponent', 'selector': 'app-forecast-detail-view'},{'name': 'ForecastTileViewComponent', 'selector': 'app-forecast-tile-view'},{'name': 'HistoryDetailViewComponent', 'selector': 'app-history-detail-view'},{'name': 'HistoryTileViewComponent', 'selector': 'app-history-tile-view'},{'name': 'HumidityTileViewComponent', 'selector': 'app-humidity-tile-view'},{'name': 'IndoorDetailViewComponent', 'selector': 'app-indoor-detail-view'},{'name': 'IndoorTileViewComponent', 'selector': 'app-indoor-tile-view'},{'name': 'LoginViewComponent', 'selector': 'app-login-view'},{'name': 'MenuBarElementComponent', 'selector': 'app-menu-bar-element'},{'name': 'MenuButtonElementComponent', 'selector': 'app-menu-button-element'},{'name': 'MenuElementComponent', 'selector': 'app-menu-element'},{'name': 'NavBarElementComponent', 'selector': 'app-nav-bar-element'},{'name': 'OnboardingScreenComponent', 'selector': 'app-onboarding-screen'},{'name': 'OpenAPELoginTileViewComponent', 'selector': 'app-open-apelogin-tile-view'},{'name': 'OutdoorWeatherDetailViewComponent', 'selector': 'app-outdoor-weather-detail-view'},{'name': 'OutdoorWeatherViewComponent', 'selector': 'app-outdoor-weather-view'},{'name': 'PersonalizationSettingsViewComponent', 'selector': 'app-personalization-settings-view'},{'name': 'PersonalizationViewComponent', 'selector': 'app-personalization-view'},{'name': 'PollenflugDetailViewComponent', 'selector': 'app-pollenflug-detail-view'},{'name': 'PollenflugSmallTileComponent', 'selector': 'app-pollenflug-small-tile'},{'name': 'PollenflugTileViewComponent', 'selector': 'app-pollenflug-tile-view'},{'name': 'PollenListElementComponent', 'selector': 'app-pollen-list-element'},{'name': 'PollenTagElementComponent', 'selector': 'app-pollen-tag-element'},{'name': 'ProgressChartElementComponent', 'selector': 'app-progress-chart-element'},{'name': 'RegistrationViewComponent', 'selector': 'app-registration-view'},{'name': 'SettingsScreenComponent', 'selector': 'app-settings-screen'},{'name': 'SimpleTileViewComponent', 'selector': 'app-simple-tile-view'},{'name': 'SliderElementComponent', 'selector': 'app-slider-element'},{'name': 'TtsPlayerElementComponent', 'selector': 'app-tts-player-element'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SettingsScreenComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SimpleTileViewComponent.html":{"url":"components/SimpleTileViewComponent.html","title":"component - SimpleTileViewComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SimpleTileViewComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/views/simple-tile-view/simple-tile-view.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-simple-tile-view\n            \n\n            \n                styleUrls\n                ./simple-tile-view.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./simple-tile-view.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cardSizeType\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                subtitle\n                            \n                            \n                                title\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/views/simple-tile-view/simple-tile-view.component.ts:15\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        subtitle\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/views/simple-tile-view/simple-tile-view.component.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        title\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/views/simple-tile-view/simple-tile-view.component.ts:12\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/views/simple-tile-view/simple-tile-view.component.ts:11\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/views/simple-tile-view/simple-tile-view.component.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cardSizeType\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : CardSize\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/views/simple-tile-view/simple-tile-view.component.ts:15\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { WeatherData } from 'src/app/model/weather';\nimport { CardSize } from '../../ui-elements/card-element/card-element.component';\n\n@Component({\n  selector: 'app-simple-tile-view',\n  templateUrl: './simple-tile-view.component.html',\n  styleUrls: ['./simple-tile-view.component.scss']\n})\nexport class SimpleTileViewComponent implements OnInit {\n  @Input() value: string = \"\";\n  @Input() title: string = \"\";\n  @Input() subtitle: string = \"\";\n\n  cardSizeType = CardSize;\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        \n    \n        {{value}}  \n    \n\n    \n\n    \n                \n                    ./simple-tile-view.component.scss\n                \n                h1 {\n    margin: 0;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{value}}      '\n    var COMPONENTS = [{'name': 'ApparentTemperatureTileViewComponent', 'selector': 'app-apparent-temperature-tile-view'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BackButtonElementComponent', 'selector': 'app-back-button-element'},{'name': 'CardElementComponent', 'selector': 'card-element'},{'name': 'CheckboxSwitcherElementComponent', 'selector': 'app-checkbox-switcher-element'},{'name': 'ConfigurationTilePopUpDialogView', 'selector': 'configuration-tile-popup-view'},{'name': 'ConfigurationTileViewComponent', 'selector': 'app-configuration-tile-view'},{'name': 'ConfigurationViewComponent', 'selector': 'app-configuration-view'},{'name': 'DashboardScreenComponent', 'selector': 'app-dashboard-screen'},{'name': 'DetailScreenComponent', 'selector': 'app-detail-screen'},{'name': 'ForecastDetailViewComponent', 'selector': 'app-forecast-detail-view'},{'name': 'ForecastTileViewComponent', 'selector': 'app-forecast-tile-view'},{'name': 'HistoryDetailViewComponent', 'selector': 'app-history-detail-view'},{'name': 'HistoryTileViewComponent', 'selector': 'app-history-tile-view'},{'name': 'HumidityTileViewComponent', 'selector': 'app-humidity-tile-view'},{'name': 'IndoorDetailViewComponent', 'selector': 'app-indoor-detail-view'},{'name': 'IndoorTileViewComponent', 'selector': 'app-indoor-tile-view'},{'name': 'LoginViewComponent', 'selector': 'app-login-view'},{'name': 'MenuBarElementComponent', 'selector': 'app-menu-bar-element'},{'name': 'MenuButtonElementComponent', 'selector': 'app-menu-button-element'},{'name': 'MenuElementComponent', 'selector': 'app-menu-element'},{'name': 'NavBarElementComponent', 'selector': 'app-nav-bar-element'},{'name': 'OnboardingScreenComponent', 'selector': 'app-onboarding-screen'},{'name': 'OpenAPELoginTileViewComponent', 'selector': 'app-open-apelogin-tile-view'},{'name': 'OutdoorWeatherDetailViewComponent', 'selector': 'app-outdoor-weather-detail-view'},{'name': 'OutdoorWeatherViewComponent', 'selector': 'app-outdoor-weather-view'},{'name': 'PersonalizationSettingsViewComponent', 'selector': 'app-personalization-settings-view'},{'name': 'PersonalizationViewComponent', 'selector': 'app-personalization-view'},{'name': 'PollenflugDetailViewComponent', 'selector': 'app-pollenflug-detail-view'},{'name': 'PollenflugSmallTileComponent', 'selector': 'app-pollenflug-small-tile'},{'name': 'PollenflugTileViewComponent', 'selector': 'app-pollenflug-tile-view'},{'name': 'PollenListElementComponent', 'selector': 'app-pollen-list-element'},{'name': 'PollenTagElementComponent', 'selector': 'app-pollen-tag-element'},{'name': 'ProgressChartElementComponent', 'selector': 'app-progress-chart-element'},{'name': 'RegistrationViewComponent', 'selector': 'app-registration-view'},{'name': 'SettingsScreenComponent', 'selector': 'app-settings-screen'},{'name': 'SimpleTileViewComponent', 'selector': 'app-simple-tile-view'},{'name': 'SliderElementComponent', 'selector': 'app-slider-element'},{'name': 'TtsPlayerElementComponent', 'selector': 'app-tts-player-element'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SimpleTileViewComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SliderElementComponent.html":{"url":"components/SliderElementComponent.html","title":"component - SliderElementComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SliderElementComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/ui-elements/slider-element/slider-element.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-slider-element\n            \n\n            \n                styleUrls\n                ./slider-element.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./slider-element.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                model\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeValue\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                label\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                valueChanged\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/components/ui-elements/slider-element/slider-element.component.ts:15\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/ui-elements/slider-element/slider-element.component.ts:11\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/ui-elements/slider-element/slider-element.component.ts:10\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        valueChanged\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/ui-elements/slider-element/slider-element.component.ts:15\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            changeValue\n                        \n                        \n                    \n                \n            \n            \n                \nchangeValue(event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/ui-elements/slider-element/slider-element.component.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/ui-elements/slider-element/slider-element.component.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            model\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 78\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/ui-elements/slider-element/slider-element.component.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { NumberValueAccessor } from '@angular/forms';\n\n@Component({\n  selector: 'app-slider-element',\n  templateUrl: './slider-element.component.html',\n  styleUrls: ['./slider-element.component.scss']\n})\nexport class SliderElementComponent implements OnInit {\n  @Input() value?: number; \n  @Input() label?: string;\n\n  model: number = 78;\n\n  @Output() valueChanged = new EventEmitter();\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  changeValue(event: any) {\n    this.valueChanged.emit(event.target.value);\n  }\n\n}\n\n    \n\n    \n        \n    {{label}}\n    \n\n    \n\n    \n                \n                    ./slider-element.component.scss\n                \n                @mixin background {\n    background: var(--accent);\n}\n\n@mixin thumb {\n    border: 8px solid var(--text);\n    height: 32px;\n    width: 32px;\n    border-radius: 16px;\n    background: transparent;\n    margin-top: -8px;\n}\n\n@mixin height {\n    height: 16px;\n}\n\n.container {\n    margin: var(--padding) 0 0 0;\n}\n\ninput[type=range] {\n    -webkit-appearance: none;\n    margin: 10px 0;\n    width: 100%;\n    background-color: transparent;\n\n  }\n  input[type=range]:focus {\n    outline: none;\n  }\n  input[type=range]::-webkit-slider-runnable-track {\n    width: 100%;\n    @include height;\n    cursor: pointer;\n    box-shadow: 0px 0px 0px #000000, 0px 0px 0px #0d0d0d;\n    @include background();\n    border-radius: 25px;\n    border: 0px solid #000101;\n  }\n  input[type=range]::-webkit-slider-thumb {\n    @include thumb;\n    box-shadow: 0px 0px 0px #000000, 0px 0px 0px #0d0d0d;\n    cursor: pointer;\n    -webkit-appearance: none;\n\n  }\n  input[type=range]:focus::-webkit-slider-runnable-track {\n    @include background();\n  }\n  input[type=range]::-moz-range-track {\n    width: 100%;\n    @include height;\n    cursor: pointer;\n    animate: 0.2s;\n    box-shadow: 0px 0px 0px #000000, 0px 0px 0px #0d0d0d;\n    @include background();\n    border-radius: 25px;\n    border: 0px solid #000101;\n  }\n  input[type=range]::-moz-range-thumb {\n    box-shadow: 0px 0px 0px #000000, 0px 0px 0px #0d0d0d;\n    @include thumb;\n    height: 16px;\n    width: 16px;\n    cursor: pointer;\n  }\n  input[type=range]::-ms-track {\n    width: 100%;\n    @include height;\n    cursor: pointer;\n    animate: 0.2s;\n    background: transparent;\n    border-color: transparent;\n    border-width: 39px 0;\n    color: transparent;\n  }\n  input[type=range]::-ms-fill-lower {\n    @include background();\n    border: 0px solid #000101;\n    border-radius: 50px;\n    box-shadow: 0px 0px 0px #000000, 0px 0px 0px #0d0d0d;\n  }\n  input[type=range]::-ms-fill-upper {\n    @include background();\n    border: 0px solid #000101;\n    border-radius: 50px;\n    box-shadow: 0px 0px 0px #000000, 0px 0px 0px #0d0d0d;\n  }\n  input[type=range]::-ms-thumb {\n    box-shadow: 0px 0px 0px #000000, 0px 0px 0px #0d0d0d;\n    @include thumb;\n    height: 16px;\n    width: 16px;\n    cursor: pointer;\n  }\n  input[type=range]:focus::-ms-fill-lower {\n    @include background();\n\n  }\n  input[type=range]:focus::-ms-fill-upper {\n    @include background();\n\n  }\n  \n  body {\n    padding: 30px;\n  }\n  \n  \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{label}}    '\n    var COMPONENTS = [{'name': 'ApparentTemperatureTileViewComponent', 'selector': 'app-apparent-temperature-tile-view'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BackButtonElementComponent', 'selector': 'app-back-button-element'},{'name': 'CardElementComponent', 'selector': 'card-element'},{'name': 'CheckboxSwitcherElementComponent', 'selector': 'app-checkbox-switcher-element'},{'name': 'ConfigurationTilePopUpDialogView', 'selector': 'configuration-tile-popup-view'},{'name': 'ConfigurationTileViewComponent', 'selector': 'app-configuration-tile-view'},{'name': 'ConfigurationViewComponent', 'selector': 'app-configuration-view'},{'name': 'DashboardScreenComponent', 'selector': 'app-dashboard-screen'},{'name': 'DetailScreenComponent', 'selector': 'app-detail-screen'},{'name': 'ForecastDetailViewComponent', 'selector': 'app-forecast-detail-view'},{'name': 'ForecastTileViewComponent', 'selector': 'app-forecast-tile-view'},{'name': 'HistoryDetailViewComponent', 'selector': 'app-history-detail-view'},{'name': 'HistoryTileViewComponent', 'selector': 'app-history-tile-view'},{'name': 'HumidityTileViewComponent', 'selector': 'app-humidity-tile-view'},{'name': 'IndoorDetailViewComponent', 'selector': 'app-indoor-detail-view'},{'name': 'IndoorTileViewComponent', 'selector': 'app-indoor-tile-view'},{'name': 'LoginViewComponent', 'selector': 'app-login-view'},{'name': 'MenuBarElementComponent', 'selector': 'app-menu-bar-element'},{'name': 'MenuButtonElementComponent', 'selector': 'app-menu-button-element'},{'name': 'MenuElementComponent', 'selector': 'app-menu-element'},{'name': 'NavBarElementComponent', 'selector': 'app-nav-bar-element'},{'name': 'OnboardingScreenComponent', 'selector': 'app-onboarding-screen'},{'name': 'OpenAPELoginTileViewComponent', 'selector': 'app-open-apelogin-tile-view'},{'name': 'OutdoorWeatherDetailViewComponent', 'selector': 'app-outdoor-weather-detail-view'},{'name': 'OutdoorWeatherViewComponent', 'selector': 'app-outdoor-weather-view'},{'name': 'PersonalizationSettingsViewComponent', 'selector': 'app-personalization-settings-view'},{'name': 'PersonalizationViewComponent', 'selector': 'app-personalization-view'},{'name': 'PollenflugDetailViewComponent', 'selector': 'app-pollenflug-detail-view'},{'name': 'PollenflugSmallTileComponent', 'selector': 'app-pollenflug-small-tile'},{'name': 'PollenflugTileViewComponent', 'selector': 'app-pollenflug-tile-view'},{'name': 'PollenListElementComponent', 'selector': 'app-pollen-list-element'},{'name': 'PollenTagElementComponent', 'selector': 'app-pollen-tag-element'},{'name': 'ProgressChartElementComponent', 'selector': 'app-progress-chart-element'},{'name': 'RegistrationViewComponent', 'selector': 'app-registration-view'},{'name': 'SettingsScreenComponent', 'selector': 'app-settings-screen'},{'name': 'SimpleTileViewComponent', 'selector': 'app-simple-tile-view'},{'name': 'SliderElementComponent', 'selector': 'app-slider-element'},{'name': 'TtsPlayerElementComponent', 'selector': 'app-tts-player-element'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SliderElementComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SpeechService.html":{"url":"injectables/SpeechService.html","title":"injectable - SpeechService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SpeechService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/speech.service.ts\n        \n\n            \n                Description\n            \n            \n                Speech service injectable\nUse this service to read aloud a text from the browser speech synthesiser\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                isOutputRunning\n                            \n                            \n                                    Public\n                                startOutput\n                            \n                            \n                                    Public\n                                stopOutput\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/speech.service.ts:13\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            isOutputRunning\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isOutputRunning()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/speech.service.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        True if the speech output is stll running\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            startOutput\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    startOutput(text: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/speech.service.ts:22\n                \n            \n\n\n            \n                \n                    Start the speech output.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    text\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The text which should be read aloud\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            stopOutput\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    stopOutput()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/speech.service.ts:36\n                \n            \n\n\n            \n                \n                    Stop the speech output.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n/**\n * Speech service injectable\n * \n * Use this service to read aloud a text from the browser speech synthesiser\n */\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class SpeechService {\n  private synth = window.speechSynthesis;\n\n  constructor() {}\n\n  /**\n  * Start the speech output.\n  * \n  * @param {UserContstringext} text  The text which should be read aloud\n  */\n  public startOutput(text: string): void {\n    let utterThis = new SpeechSynthesisUtterance(text);\n    utterThis.lang = 'de-DE'\n    utterThis.pitch = 1;\n    utterThis.rate = 1;\n\n    this.synth.cancel();\n    this.synth.speak(utterThis);\n    this.synth.resume();\n  }\n\n  /**\n  * Stop the speech output.\n  */\n   public stopOutput(): void {\n    this.synth.cancel();\n  }\n\n  /**\n  * @returns True if the speech output is stll running\n  */\n  public isOutputRunning(): boolean{\n    return this.synth.speaking;\n  }\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TextService.html":{"url":"injectables/TextService.html","title":"injectable - TextService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TextService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/text.service.ts\n        \n\n            \n                Description\n            \n            \n                Text service injectable\nUse this service to create text from WeatherData objects, e.g. create text to read it aloud\nwith the speech service. \n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                createForecastText\n                            \n                            \n                                    Public\n                                createForecastTitle\n                            \n                            \n                                    Public\n                                createIndoorRoomText\n                            \n                            \n                                    Public\n                                createOutdoorText\n                            \n                            \n                                    Public\n                                createPollenText\n                            \n                            \n                                    Public\n                                createTextFromTilesArray\n                            \n                            \n                                    Public\n                                createWeatherText\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/text.service.ts:14\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            createForecastText\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createForecastText(data: WeatherForecastData | undefined)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/text.service.ts:61\n                \n            \n\n\n            \n                \n                    Create a readable text from WeatherForecastData object\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                WeatherForecastData | undefined\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        A readable text version from the input data. \n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            createForecastTitle\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createForecastTitle(data: WeatherForecastData | undefined)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/text.service.ts:105\n                \n            \n\n\n            \n                \n                    Create a readable title from WeatherForecastData object\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                WeatherForecastData | undefined\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        A readable title version from the input data. \n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            createIndoorRoomText\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createIndoorRoomText(data: IndoorRoomData | undefined)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/text.service.ts:137\n                \n            \n\n\n            \n                \n                    Create a readable text from IndoorRoomData object\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                IndoorRoomData | undefined\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        A readable text version from the input data. \n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            createOutdoorText\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createOutdoorText(data: OutdoorWeatherData | undefined)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/text.service.ts:187\n                \n            \n\n\n            \n                \n                    Create a readable text from OutdoorWeatherData object\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            OutdoorWeatherData | undefined\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        A readable text version from the input data. \n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            createPollenText\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createPollenText(data: PollenData | undefined)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/text.service.ts:156\n                \n            \n\n\n            \n                \n                    Create a readable text from PollenData object\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                PollenData | undefined\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        A readable text version from the input data. \n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            createTextFromTilesArray\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createTextFromTilesArray(array: Tile[] | undefined)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/text.service.ts:24\n                \n            \n\n\n            \n                \n                    Create a readable text from tiles array object of WeatherData\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    array\n                                    \n                                            Tile[] | undefined\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        The data array\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        A readable text version from the input array. \n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            createWeatherText\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createWeatherText(data: string | undefined)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/text.service.ts:215\n                \n            \n\n\n            \n                \n                    Create a readable text from weather string\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                            string | undefined\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        A readable text version from the input data. \n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { IndoorRoomData, OutdoorWeatherData, PollenData, Tile, TileType, WeatherForecastData } from '../model/weather';\nimport { WeatherData } from '../model/weather';\n\n/**\n * Text service injectable\n * \n * Use this service to create text from WeatherData objects, e.g. create text to read it aloud\n * with the speech service. \n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class TextService {\n\n  constructor() { }\n  \n  /**\n  * Create a readable text from tiles array object of WeatherData\n  * \n  * @param {Tile[]} array  The data array\n  * @returns A readable text version from the input array. \n  */\n  public createTextFromTilesArray(array: Tile[] | undefined): string {\n    let readAloud = ''\n    if(array) {\n      array.forEach(element => {\n        switch(element.type){\n          case TileType.pollenList: \n            let pollenDataArray = element.data as PollenData[];\n            pollenDataArray.forEach(element => {\n              readAloud = readAloud + this.createPollenText(element);\n            });\n            break;\n          case TileType.indoorRoom: \n            let indoorArray = element.data as IndoorRoomData;\n            readAloud = readAloud + this.createIndoorRoomText(indoorArray);\n            break;\n          case TileType.forecast: \n            let forecastData = element.data as WeatherForecastData;\n            readAloud = readAloud + this.createForecastText(forecastData);\n            break;\n          case TileType.pollenSmall: \n            let pollenData = element.data as PollenData;\n            readAloud = readAloud + this.createPollenText(pollenData);\n            break\n          default: 'Not implemented'\n        }\n      });\n    }\n    console.log(readAloud);\n    return readAloud;\n  }\n\n  /**\n  * Create a readable text from WeatherForecastData object\n  * \n  * @param {WeatherForecastData | undefined} data \n  * @returns A readable text version from the input data. \n  */\n  public createForecastText(data: WeatherForecastData | undefined): string {\n    let readAloud = ''\n    if(data) {\n      let forecast = data.weatherDescription\n      switch (forecast) {\n        case 'Clear': \n          readAloud = \"Im Verlaufe des Tages wird es wolkenlos. \"\n          break;\n        case 'Sunny and moderately cloudy': \n          readAloud = \"Im Verlaufe des Tages wird es sonnig mit ein paar Wolken. \"\n          break;\n        case 'Rather cloudy': \n          readAloud = \"Im Verlaufe des Tages wird es bedeckt mit vereinzelten Sonnenstrahlen werden. \"\n          break;\n        case 'Rainy': \n          readAloud = \"Im Verlaufe des Tages wird es regnen. \"\n          break;\n        case 'Worsening': \n          readAloud = \"Im Verlaufe des Tages wird es schlechter werden. \"\n          break;\n      }\n\n      let trend = data.trend\n      switch (trend) {\n        case 'rising': \n          readAloud = readAloud + \"Tendenz steigend. \"\n          break;\n        case 'falling': \n          readAloud = readAloud + \"Tendenz fallend. \"\n          break;\n        case 'steady': \n          readAloud = readAloud + \"Tendenz konsistent. \"\n          break;\n      }\n    }\n    return readAloud\n  }\n\n  /**\n  * Create a readable title from WeatherForecastData object\n  * \n  * @param {WeatherForecastData | undefined} data \n  * @returns A readable title version from the input data. \n  */\n    public createForecastTitle(data: WeatherForecastData | undefined): string {\n      let title = ''\n      if(data) {\n        let forecast = data.weatherDescription\n        switch (forecast) {\n          case 'Clear': \n            title = 'Wolkenlos';\n            break;\n          case 'Sunny and moderately cloudy': \n            title = 'Sonnig und leicht bedeckt';\n            break;\n          case 'Rather cloudy': \n            title = 'Bewölkt';\n            break;\n          case 'Rainy': \n            title = 'Regen';\n            break;\n          case 'Worsening': \n            title = 'Schlecht';\n            break;\n        }\n      }\n      return title\n    }\n\n\n  /**\n  * Create a readable text from IndoorRoomData object\n  * \n  * @param {IndoorRoomData | undefined} data \n  * @returns A readable text version from the input data. \n  */\n  public createIndoorRoomText(data: IndoorRoomData | undefined): string {\n    let readAloud = ''\n    if(data) {\n      let room = data.roomName\n      let quality = data.airQuality\n      let temperature = data.temperature\n\n      readAloud = 'Im ' + room + ' hat es ' + temperature + ' Grad Celsius und die Luftqualität liegt bei ' + quality + '. ';\n    }\n    return readAloud\n\n  }\n\n  /**\n  * Create a readable text from PollenData object\n  * \n  * @param {PollenData | undefined} data \n  * @returns A readable text version from the input data. \n  */\n  public createPollenText(data: PollenData | undefined): string {\n    let readAloud = ''\n    if(data) {\n      let name = data.pollenName\n      let value = data.today\n      switch (value) {\n        case '1':\n        case '1-2':\n          readAloud = name + 'Pollen haben heute eine niedrige Belastung. ';\n          break;\n        case '2':\n        case '2-3':\n          readAloud = name + 'Pollen haben heute eine mittlere Belastung. ';\n          break;\n        case '3': \n        case '3-4': \n        case '4': \n        case '5': \n        readAloud = name + 'Pollen haben heute eine hohe Belastung. ';\n          break;\n      }\n    }\n    return readAloud\n  }\n\n /**\n  * Create a readable text from OutdoorWeatherData object\n  * \n  * @param {OutdoorWeatherData | undefined} data \n  * @returns A readable text version from the input data. \n  */\n  public createOutdoorText(data: OutdoorWeatherData | undefined): string {\n    let readAloud = ''\n    if(data) {\n      // adjust number pronounciation\n      let location = data.location\n      let temperature = data.temperature\n      let apparentTemperature = data.apparentTemperature\n      let maxTemperature = data.maxTemperature\n      let minTemperature = data.minTemperature\n      let humidity = data.humidity\n      let weather = data.weather\n\n      readAloud = \"In \" + location + \" hat es aktuell \" + temperature + \" Grad Celsius. \" \n      // + \"Diese fühlen sich an wie  \" + apparentTemperature \n      // + \". Die heutigen Extremwerte liegen bei \" + maxTemperature + \" und \" + minTemperature + \"Grad Celsius. \"\n      + this.createWeatherText(weather) + \" \"\n      + \"Die Luftfeuchtigkeit beträgt aktuell \" + humidity + \"%. \";\n      ;\n    }\n    return readAloud\n  }\n\n  /**\n  * Create a readable text from weather string\n  * \n  * @param {string | undefined} data \n  * @returns A readable text version from the input data. \n  */\n    public createWeatherText(data: string | undefined): string {\n      let readAloud = ''\n      if(data) {\n        let weather = data;\n        switch(weather) {\n          case 'cloudy': \n            readAloud = 'Aktuell ist es bewölkt.'\n            break;\n          case 'rain':\n            readAloud = 'Im Moment regnet es.'\n            break;\n          case 'wind':\n            readAloud = 'Zur Zeit ist es windig.'\n            break;\n          case 'sleet':\n            readAloud = 'Es graupelt gerade.'\n            break;\n          case 'fog':\n            readAloud = 'Achtung, es ist neblig.'\n            break;\n          case 'clear-day':\n            readAloud = 'Die Sonne scheint, es hat eine klare Sicht.'\n            break;\n          case 'clear-night':\n            readAloud = 'Der Mond scheint, es hat eine klare Sicht.'\n            break;\n          case 'partly-cloudy-day':\n            readAloud = 'Es ist leicht bewölkt, vereinzelt sonnig.'\n            break;\n          case 'partly-cloudy-night':\n            readAloud = 'Es ist leicht bewölkt.'\n            break;\n          case 'snow':\n            readAloud = 'Aktuell schneit es.'\n            break;\n          case 'hail':\n            readAloud = 'Achtung, es hagelt.'\n            break;\n          case 'thunderstorm':\n            readAloud = 'Achtung, ein Gewitter tobt gerade.'\n            break;\n        }\n      }\n      return readAloud\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Tile.html":{"url":"interfaces/Tile.html","title":"interface - Tile","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Tile\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/weather.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        data\n                                \n                                \n                                        id\n                                \n                                \n                                        priority\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                    \n                                \n                                \n                                    \n                                        data:     A\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     A\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        priority\n                                    \n                                \n                                \n                                    \n                                        priority:         TilePriority\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TilePriority\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:         TileType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         TileType\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface WeatherData { }\n\nexport enum TileType {\n    indoorRoom,\n    pollenSmall,\n    pollenList,\n    history,\n    forecast,\n    humidity,\n    apparentTemperature,\n}\n\nexport interface TileArrays {\n    dashboard: Tile[],\n    pollen : Tile[],\n    indoorRooms: Tile[]\n  }\n  \n\nexport enum TilePriority {\n    important, //Highest \n    high,\n    middle,\n    low,\n}\n\nexport interface Tile {\n    type: TileType;\n    data: A;\n    id: string;\n    priority: TilePriority\n}\n\nexport interface OutdoorWeatherData extends WeatherData {\n    temperature: number // in °C\n    maxTemperature: number, //TODO: external database required \"forecast\"  --> // TODO: Move to \"daily\" data structure\n    minTemperature: number, //TODO: external database required \"forecast\"  --> // TODO: Move to \"daily\" data structure\n    humidity: number, // in %\n    timestamp: Date, \n    weather: string, // TODO: external API required\n    apparentTemperature: number, // in °C ---> die \"gefühlte\" Temperatur\n    location: string, // e.g. \"Stuttgart\" TODO: Make configurable in ESP Wlan-Board\n    postCode: string,\n}\n\nexport interface WeatherForecastData extends WeatherData {\n    trend: string,\n    weatherDescription: string,\n    weatherIcon: string,\n  }\n\nexport interface PollenData extends WeatherData {\n    pollenName: string, // TODO: Maybe we should use the same Pollen enum as in user-context.ts\n    id: number,\n    today: string, // -1  3\n    tomorrow: string, // -1  3\n}\n\nexport interface IndoorRoomData extends WeatherData {\n    roomID: string,\n    roomName: string,\n    airQuality: number, // in %\n    temperature: number // in °C \n    humidity: number, // in %\n    timestamp: Date, \n}\n\nexport interface WeatherHistoryData extends WeatherData {\n    datapoints: OutdoorWeatherData[],\n}\n\nexport interface GraphDataSet extends WeatherData {\n    temperatureDataPoints: number[];\n    humidityDataPoints: number[];\n    xAxisLabel: string[];\n    label: string;\n    temperatureAverage: number;\n    humidityAverage: number;\n}\n\nexport interface WeatherHistoryByDayData extends WeatherData  {\n    averageTemperature: number, // in °C\n    averageHumidity: number, // in %\n}\n\nexport enum Daytime {\n    noon,\n    night,\n    dawn,\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TileArrays.html":{"url":"interfaces/TileArrays.html","title":"interface - TileArrays","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TileArrays\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/weather.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        dashboard\n                                \n                                \n                                        indoorRooms\n                                \n                                \n                                        pollen\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        dashboard\n                                    \n                                \n                                \n                                    \n                                        dashboard:     Tile[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Tile[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        indoorRooms\n                                    \n                                \n                                \n                                    \n                                        indoorRooms:     Tile[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Tile[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pollen\n                                    \n                                \n                                \n                                    \n                                        pollen:     Tile[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Tile[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface WeatherData { }\n\nexport enum TileType {\n    indoorRoom,\n    pollenSmall,\n    pollenList,\n    history,\n    forecast,\n    humidity,\n    apparentTemperature,\n}\n\nexport interface TileArrays {\n    dashboard: Tile[],\n    pollen : Tile[],\n    indoorRooms: Tile[]\n  }\n  \n\nexport enum TilePriority {\n    important, //Highest \n    high,\n    middle,\n    low,\n}\n\nexport interface Tile {\n    type: TileType;\n    data: A;\n    id: string;\n    priority: TilePriority\n}\n\nexport interface OutdoorWeatherData extends WeatherData {\n    temperature: number // in °C\n    maxTemperature: number, //TODO: external database required \"forecast\"  --> // TODO: Move to \"daily\" data structure\n    minTemperature: number, //TODO: external database required \"forecast\"  --> // TODO: Move to \"daily\" data structure\n    humidity: number, // in %\n    timestamp: Date, \n    weather: string, // TODO: external API required\n    apparentTemperature: number, // in °C ---> die \"gefühlte\" Temperatur\n    location: string, // e.g. \"Stuttgart\" TODO: Make configurable in ESP Wlan-Board\n    postCode: string,\n}\n\nexport interface WeatherForecastData extends WeatherData {\n    trend: string,\n    weatherDescription: string,\n    weatherIcon: string,\n  }\n\nexport interface PollenData extends WeatherData {\n    pollenName: string, // TODO: Maybe we should use the same Pollen enum as in user-context.ts\n    id: number,\n    today: string, // -1  3\n    tomorrow: string, // -1  3\n}\n\nexport interface IndoorRoomData extends WeatherData {\n    roomID: string,\n    roomName: string,\n    airQuality: number, // in %\n    temperature: number // in °C \n    humidity: number, // in %\n    timestamp: Date, \n}\n\nexport interface WeatherHistoryData extends WeatherData {\n    datapoints: OutdoorWeatherData[],\n}\n\nexport interface GraphDataSet extends WeatherData {\n    temperatureDataPoints: number[];\n    humidityDataPoints: number[];\n    xAxisLabel: string[];\n    label: string;\n    temperatureAverage: number;\n    humidityAverage: number;\n}\n\nexport interface WeatherHistoryByDayData extends WeatherData  {\n    averageTemperature: number, // in °C\n    averageHumidity: number, // in %\n}\n\nexport enum Daytime {\n    noon,\n    night,\n    dawn,\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TileService.html":{"url":"injectables/TileService.html","title":"injectable - TileService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TileService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/tile.service.ts\n        \n\n            \n                Description\n            \n            \n                Tile service injectable\nUse this service to create the tile arrays which are used in the dashboard screen component\nand the pollen detail component and the indoor room detail component to show the tiles in \nan order way based on the user context. \n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createTiles\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userContextService: UserContextService, historyTileService: HistoryTileService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/tile.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userContextService\n                                                  \n                                                        \n                                                                        UserContextService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        historyTileService\n                                                  \n                                                        \n                                                                        HistoryTileService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createTiles\n                        \n                        \n                    \n                \n            \n            \n                \ncreateTiles(outdoorWeather: OutdoorWeatherData, pollen: PollenData[], forecast: WeatherForecastData, history: WeatherHistoryData, indoorRoom: IndoorRoomData[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/tile.service.ts:31\n                \n            \n\n\n            \n                \n                    Use this function to get an ordered tiles array based on the current user context.\nIn this way you can easily show the different tiles orderd by relevance. \n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    outdoorWeather\n                                    \n                                                OutdoorWeatherData\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pollen\n                                    \n                                                PollenData[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    forecast\n                                    \n                                                WeatherForecastData\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    history\n                                    \n                                                WeatherHistoryData\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    indoorRoom\n                                    \n                                                IndoorRoomData[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         TileArrays\n\n                    \n                    \n                        A TilesArrays object which contains the three tiles array for dashboard screen, pollen detail and indoor room detail components. \n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { UserContextService } from './user-context.service';\nimport { WeatherData, Tile, PollenData, TileType, IndoorRoomData, WeatherForecastData, TilePriority, WeatherHistoryData, GraphDataSet, OutdoorWeatherData, TileArrays } from '../model/weather';\nimport { HistoryTileService } from './history-tile.service';\n\n/**\n * Tile service injectable\n * \n * Use this service to create the tile arrays which are used in the dashboard screen component\n * and the pollen detail component and the indoor room detail component to show the tiles in \n * an order way based on the user context. \n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class TileService  {\n  constructor(private userContextService: UserContextService,\n              private historyTileService: HistoryTileService) { }\n\n  /**\n   * Use this function to get an ordered tiles array based on the current user context.\n   * In this way you can easily show the different tiles orderd by relevance. \n   * \n   * @param {OutdoorWeatherData} outdoorWeather\n   * @param {PollenData[]} pollen\n   * @param {WeatherForecastData} forecast\n   * @param {WeatherHistoryData} history\n   * @param {IndoorRoomData[]} indoorRoom\n   * @returns A TilesArrays object which contains the three tiles array for dashboard screen, pollen detail and indoor room detail components. \n   */\n  createTiles(outdoorWeather: OutdoorWeatherData, \n              pollen: PollenData[], \n              forecast: WeatherForecastData, \n              history: WeatherHistoryData, \n              indoorRoom: IndoorRoomData[]): TileArrays {\n      let dashboardTiles: Tile[] = []\n      let pollenTiles: Tile[] = []\n      let indoorRoomTiles: Tile[] = []\n\n      this.createOutdoorWeatherTiles(outdoorWeather, dashboardTiles);\n      this.createForecastTile(forecast, dashboardTiles)\n      this.createHistoryTile(history, dashboardTiles)\n      this.createIndoorRoomTiles(indoorRoom, dashboardTiles, indoorRoomTiles)\n      this.createPollenTiles(pollen, dashboardTiles, pollenTiles)\n      return {\n        dashboard: dashboardTiles,\n        pollen: pollenTiles,\n        indoorRooms: indoorRoomTiles\n      }\n  }\n\n  /**\n   * Create outdoor weather tiles and add them to the dashboard tiles array  \n   * \n   * @param {OutdoorWeatherData} data\n   * @param {Tile[]} dashboard\n   */\n  private createOutdoorWeatherTiles(data: OutdoorWeatherData, dashboard: Tile[]): void {\n    let humidityTile: Tile = {\n      type: TileType.humidity,\n      data: data,\n      id: 'humidity',\n      priority: this.getPrioritiyOf(data, TileType.humidity),\n    }\n\n    let apparentTemperatureTile: Tile = {\n      type: TileType.apparentTemperature,\n      data: data,\n      id: 'apparentTemperature',\n      priority: this.getPrioritiyOf(data, TileType.apparentTemperature),\n    }\n\n    this.addTileTo(dashboard, humidityTile);\n    this.addTileTo(dashboard, apparentTemperatureTile);\n  }\n  \n  /**\n   * Create pollen tiles and add them to the dashboard tiles array and pollen tiles array\n   * \n   * @param {PollenData[]} data\n   * @param {Tile[]} dashboard  The dashboard tiles array \n   * @param {Tile[]} pollen  The pollen tiles array \n   */\n  private createPollenTiles(data: PollenData[], dashboard: Tile[], pollen: Tile[]): void {\n    let preferredPollen: string[] = this.userContextService.pollen\n    let pollenData = data\n\n    if(preferredPollen.length > 0) {\n      preferredPollen.forEach(item => {\n        let pollenItem = pollenData.find(dataItem => dataItem.pollenName == item)\n        if (pollenItem) {\n          let smallTile: Tile = {\n            type: TileType.pollenSmall,\n            data: pollenItem,\n            id: pollenItem.pollenName,\n            priority: this.getPrioritiyOf(pollenItem, TileType.pollenSmall),\n          }\n          this.addTileTo(dashboard, smallTile);\n          this.addTileTo(pollen, smallTile);\n          pollenData = pollenData.filter((item) => pollenItem != item);\n        }\n      });\n    }\n    \n    let listTile: Tile = {\n      type: TileType.pollenList,\n      data: pollenData,\n      id: 'pollenlist',\n      priority: this.getPrioritiyOf(pollenData, TileType.pollenList),\n    }\n    this.addTileTo(pollen, listTile);\n\n    if(preferredPollen.length == 0) {\n      this.addTileTo(dashboard, listTile);\n    }\n  }\n\n  /**\n   * Create forecast tile and add them to the dashboard tiles array  \n   * \n   * @param {WeatherForecastData} data \n   * @param {Tile[]} dashboard  The dashboard tiles array \n   */\n  private createForecastTile(data: WeatherForecastData, dashboard: Tile[]): void {\n    let tile: Tile = {\n      type: TileType.forecast,\n      data: data,\n      id: 'forecast',\n      priority: this.getPrioritiyOf(data, TileType.forecast),\n    }\n    this.addTileTo(dashboard, tile);\n  }\n\n  /**\n   * Create weather history tile and add them to the dashboard tiles array  \n   * \n   * @param {WeatherHistoryData} data\n   * @param {Tile[]} dashboard  The dashboard tiles array \n   */\n  private createHistoryTile(data: WeatherHistoryData, dashboard: Tile[]): void {\n    let dataHoursPerDay = this.historyTileService.getHistoryDataSetHoursPerDayFrom(data);\n    let tile: Tile = {\n      type: TileType.history,\n      data: dataHoursPerDay[0], // FIXME: not sage here \n      id: 'history',\n      priority: this.getPrioritiyOf(data, TileType.history),\n    }\n    this.addTileTo(dashboard, tile);\n  }\n\n  /**\n   * Create indoor room tiles and add them to the dashboard tiles array and indoor room tiles array\n   * \n   * @param {PollenData[]} data\n   * @param {Tile[]} dashboard  The dashboard tiles array \n   * @param {Tile[]} indoorRoom  The indoor room tiles array \n   */\n  private createIndoorRoomTiles(data: IndoorRoomData[], dashboard: Tile[], indoorRoom: Tile[]): void {\n    for (let item of data) {\n      let tile: Tile = {\n        type: TileType.indoorRoom,\n        data: item,\n        id: item.roomID,\n        priority: this.getPrioritiyOf(item, TileType.indoorRoom),\n      }\n      this.addTileTo(dashboard, tile);\n      this.addTileTo(indoorRoom, tile);\n    }\n  }\n\n  /**\n   * Private function to calculate the current prioritiy of a tile. This prioritiy is used after\n   * to caculate the order of the tiles. The higher the priority the lower should be the index of the \n   * tile in the tiles array.\n   * \n   * @param {WeatherData} data  The parent interface of all weather data interfaces.  \n   * @param {TileType} type  The parent interface of all weather data interfaces.  \n   */\n  private getPrioritiyOf(data: WeatherData, type: TileType): TilePriority {\n    switch (type) {\n      case TileType.indoorRoom: {\n        let room = data as IndoorRoomData\n        if (room.airQuality > 70) {\n          return TilePriority.important \n        }\n        return TilePriority.low\n        // FIXME: Implement algorithm\n      }\n      case TileType.pollenList: {\n        return TilePriority.low\n        // FIXME: Implement algorithm\n      }\n      case TileType.pollenSmall: {\n        let pollen = data as PollenData\n        console.log(pollen);\n        if (pollen.today === '0' || pollen.today === '-1') {\n          return TilePriority.low\n        }\n        if (pollen.today === '2-3' || pollen.today === '3' || pollen.today === '3-4') {\n          return TilePriority.high\n        }\n        return TilePriority.middle\n        // FIXME: Implement algorithm\n      }\n      case TileType.forecast: {\n        return TilePriority.middle\n        // FIXME: Implement algorithm\n      }\n      case TileType.history: {\n        return TilePriority.low\n      }\n    }\n    return TilePriority.middle\n  }\n\n  /**\n   * Helper function \n   */\n  private addTileTo(tilesArray: Tile[], tile: Tile) {\n    tilesArray.push(tile);\n    this.orderItemsIn(tilesArray);\n  }\n\n  /**\n   * Helper function \n   */\n  private addOrReplaceTileTo(tilesArray: Tile[], tile: Tile) {\n    let indexInTilesArray = this.getIndexOfTileIn(tilesArray, tile.id);\n\n    if(indexInTilesArray > -1) {\n      tilesArray[indexInTilesArray] = tile;\n      return\n    }\n    tilesArray.push(tile);\n    this.orderItemsIn(tilesArray);\n  }\n\n  /**\n   * Helper function \n   */\n  private getIndexOfTileIn(tilesArray: Tile[], id: string): number {\n    return tilesArray.findIndex(element => element.id === id);\n  }\n\n  /**\n   * Helper function \n   */\n  private orderItemsIn(tilesArray: Tile[]): void {\n    tilesArray.sort((a, b) => a.priority - b.priority);\n  }\n}\n\n\n\n\n\n\n\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TtsPlayerElementComponent.html":{"url":"components/TtsPlayerElementComponent.html","title":"component - TtsPlayerElementComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TtsPlayerElementComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/ui-elements/tts-player-element/tts-player-element.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-tts-player-element\n            \n\n            \n                styleUrls\n                ./tts-player-element.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./tts-player-element.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                play\n                            \n                            \n                                    Optional\n                                userContext\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                listenForStop\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onPause\n                            \n                            \n                                onPlay\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                ttsTextGeneratorFunction\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(userContextService: UserContextService, speechService: SpeechService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/ui-elements/tts-player-element/tts-player-element.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userContextService\n                                                  \n                                                        \n                                                                        UserContextService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        speechService\n                                                  \n                                                        \n                                                                        SpeechService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        ttsTextGeneratorFunction\n                    \n                \n                \n                    \n                        Type :         function\n\n                    \n                \n                \n                    \n                        Default value : () => \"\"\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/ui-elements/tts-player-element/tts-player-element.component.ts:14\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            listenForStop\n                        \n                        \n                    \n                \n            \n            \n                \nlistenForStop(speechService: SpeechService)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/ui-elements/tts-player-element/tts-player-element.component.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    speechService\n                                    \n                                                SpeechService\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/ui-elements/tts-player-element/tts-player-element.component.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onPause\n                        \n                        \n                    \n                \n            \n            \n                \nonPause()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/ui-elements/tts-player-element/tts-player-element.component.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            onPlay\n                        \n                        \n                    \n                \n            \n            \n                \nonPlay()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/ui-elements/tts-player-element/tts-player-element.component.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            play\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/ui-elements/tts-player-element/tts-player-element.component.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            userContext\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserContext\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/ui-elements/tts-player-element/tts-player-element.component.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { UserContext } from 'src/app/model/user-context';\nimport { SpeechService } from 'src/app/services/speech.service';\nimport { UserContextService } from 'src/app/services/user-context.service';\n\n@Component({\n  selector: 'app-tts-player-element',\n  templateUrl: './tts-player-element.component.html',\n  styleUrls: ['./tts-player-element.component.scss']\n})\nexport class TtsPlayerElementComponent implements OnInit {\n  play: boolean = false;\n  userContext?: UserContext\n  @Input() ttsTextGeneratorFunction: () => string = () => \"\";\n\n  constructor(private userContextService: UserContextService,\n    private speechService: SpeechService) { }\n\n  ngOnInit(): void {\n    this.userContextService.getUserContextSubject().subscribe(data => {\n      this.userContext = data;\n    })\n  }\n\n  onPause() {\n    this.play = false;\n    this.speechService.stopOutput();\n  }\n\n  onPlay() {\n    this.play = true;\n    let text = this.ttsTextGeneratorFunction();\n    this.speechService.startOutput(text);\n    this.listenForStop(this.speechService);\n  }\n\n  // little bit hacky\n  listenForStop(speechService: SpeechService) {\n    let service = speechService\n    if(service.isOutputRunning()) {\n      setTimeout(() => this.listenForStop(service), 1000);\n    } else {\n      this.play = false;\n    }\n  }\n}\n\n    \n\n    \n        \n    \n        \n            Path\n            \n                \n                    \n                \n            \n        \n    \n    \n        \n            Group\n            \n                \n                    \n                        \n                        \n                    \n                \n            \n        \n    \n\n\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n  \n    \n\n    \n                \n                    ./tts-player-element.component.scss\n                \n                @import \"../../shared/styles\";\n\n.action-button {\n    height: 1.5em;\n}\n\n.action-button-icon {\n    height: 1.4em;\n}\n\n.action-button-icon * {\n    fill: var(--text);\n}\n\n.container {\n    position: fixed;\n    left: 0;\n    bottom: 0;\n    display: flex;\n    flex-direction: row;\n    flex-wrap: nowrap;\n    width: 190px;\n\n    background-color: var(--surface);\n    padding: var(--padding);\n    margin: 0 var(--border-padding-right) var(--border-padding-right) var(--border-padding-left);\n    border-radius: var(--corner-radius);\n    border: 1px solid var(--border);\n\n    @include drop-shadow;\n}\n\n.bars {\n    height: 1.5em;\n    left: calc(var(--border-padding-right) + 55px);\n    margin: -30px 0 0 -20px;\n    position: absolute;\n    top: 100%;\n    width: 40px;\n\n    .bar {\n        background: var(--secondary);\n        bottom: 1px;\n        height: 3px;\n        position: absolute;\n        width: 5px;      \n    }\n    \n    @keyframes sound {\n        0% {\n            opacity: .35;\n            height: 3px; \n        }\n        100% {\n            opacity: 1;       \n            height: 28px;        \n        }\n    }\n    \n    .bar:nth-child(1)  { \n        left: 1px; \n        animation-duration: 474ms; \n    }\n    .bar:nth-child(2)  { \n        left: 8px; \n        animation-duration: 433ms; \n    }\n    .bar:nth-child(3)  { \n        left: 15px; \n        animation-duration: 407ms; \n    }\n    .bar:nth-child(4)  { \n        left: 22px; \n        animation-duration: 458ms; \n    }\n    .bar:nth-child(5)  { \n        left: 29px; \n        animation-duration: 400ms; \n    }\n    .bar:nth-child(6)  { \n        left: 36px; \n        animation-duration: 427ms; \n    }\n    .bar:nth-child(7)  { \n        left: 43px; \n        animation-duration: 441ms; \n    }\n    .bar:nth-child(8)  { \n        left: 50px; \n        animation-duration: 419ms; \n    }\n    .bar:nth-child(9)  { \n        left: 57px; \n        animation-duration: 487ms; \n    }\n    .bar:nth-child(10) { \n        left: 64px; \n        animation-duration: 442ms; \n    }​\n    .bar:nth-child(11)  { \n        left: 71px; \n        animation-duration: 474ms; \n    }\n    .bar:nth-child(12)  { \n        left: 78px; \n        animation-duration: 433ms; \n    }\n    .bar:nth-child(13)  { \n        left: 85px; \n        animation-duration: 407ms; \n    }\n    .bar:nth-child(14)  { \n        left: 92px; \n        animation-duration: 458ms; \n    }\n    .bar:nth-child(15)  { \n        left: 99px; \n        animation-duration: 400ms; \n    }\n    .bar:nth-child(16)  { \n        left: 106px; \n        animation-duration: 427ms; \n    }\n    .bar:nth-child(17)  { \n        left: 113px; \n        animation-duration: 441ms; \n    }\n    .bar:nth-child(18)  { \n        left: 120px; \n        animation-duration: 419ms; \n    }\n    .bar:nth-child(19)  { \n        left: 127px; \n        animation-duration: 487ms; \n    }\n    .bar:nth-child(20) { \n        left: 134px; \n        animation-duration: 442ms; \n    }​\n    \n    {}\n}\n\n.bars-play {\n    .bar {\n        animation: sound 0ms -800ms linear infinite alternate;\n    }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        Path                                                                                                                Group                                                                                                                                                                                                                                                  '\n    var COMPONENTS = [{'name': 'ApparentTemperatureTileViewComponent', 'selector': 'app-apparent-temperature-tile-view'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'BackButtonElementComponent', 'selector': 'app-back-button-element'},{'name': 'CardElementComponent', 'selector': 'card-element'},{'name': 'CheckboxSwitcherElementComponent', 'selector': 'app-checkbox-switcher-element'},{'name': 'ConfigurationTilePopUpDialogView', 'selector': 'configuration-tile-popup-view'},{'name': 'ConfigurationTileViewComponent', 'selector': 'app-configuration-tile-view'},{'name': 'ConfigurationViewComponent', 'selector': 'app-configuration-view'},{'name': 'DashboardScreenComponent', 'selector': 'app-dashboard-screen'},{'name': 'DetailScreenComponent', 'selector': 'app-detail-screen'},{'name': 'ForecastDetailViewComponent', 'selector': 'app-forecast-detail-view'},{'name': 'ForecastTileViewComponent', 'selector': 'app-forecast-tile-view'},{'name': 'HistoryDetailViewComponent', 'selector': 'app-history-detail-view'},{'name': 'HistoryTileViewComponent', 'selector': 'app-history-tile-view'},{'name': 'HumidityTileViewComponent', 'selector': 'app-humidity-tile-view'},{'name': 'IndoorDetailViewComponent', 'selector': 'app-indoor-detail-view'},{'name': 'IndoorTileViewComponent', 'selector': 'app-indoor-tile-view'},{'name': 'LoginViewComponent', 'selector': 'app-login-view'},{'name': 'MenuBarElementComponent', 'selector': 'app-menu-bar-element'},{'name': 'MenuButtonElementComponent', 'selector': 'app-menu-button-element'},{'name': 'MenuElementComponent', 'selector': 'app-menu-element'},{'name': 'NavBarElementComponent', 'selector': 'app-nav-bar-element'},{'name': 'OnboardingScreenComponent', 'selector': 'app-onboarding-screen'},{'name': 'OpenAPELoginTileViewComponent', 'selector': 'app-open-apelogin-tile-view'},{'name': 'OutdoorWeatherDetailViewComponent', 'selector': 'app-outdoor-weather-detail-view'},{'name': 'OutdoorWeatherViewComponent', 'selector': 'app-outdoor-weather-view'},{'name': 'PersonalizationSettingsViewComponent', 'selector': 'app-personalization-settings-view'},{'name': 'PersonalizationViewComponent', 'selector': 'app-personalization-view'},{'name': 'PollenflugDetailViewComponent', 'selector': 'app-pollenflug-detail-view'},{'name': 'PollenflugSmallTileComponent', 'selector': 'app-pollenflug-small-tile'},{'name': 'PollenflugTileViewComponent', 'selector': 'app-pollenflug-tile-view'},{'name': 'PollenListElementComponent', 'selector': 'app-pollen-list-element'},{'name': 'PollenTagElementComponent', 'selector': 'app-pollen-tag-element'},{'name': 'ProgressChartElementComponent', 'selector': 'app-progress-chart-element'},{'name': 'RegistrationViewComponent', 'selector': 'app-registration-view'},{'name': 'SettingsScreenComponent', 'selector': 'app-settings-screen'},{'name': 'SimpleTileViewComponent', 'selector': 'app-simple-tile-view'},{'name': 'SliderElementComponent', 'selector': 'app-slider-element'},{'name': 'TtsPlayerElementComponent', 'selector': 'app-tts-player-element'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TtsPlayerElementComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UiElementsModule.html":{"url":"modules/UiElementsModule.html","title":"module - UiElementsModule","body":"\n                   \n\n\n\n\n    Modules\n    UiElementsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UiElementsModule\n\n\n\ncluster_UiElementsModule_declarations\n\n\n\ncluster_UiElementsModule_exports\n\n\n\n\nBackButtonElementComponent\n\nBackButtonElementComponent\n\n\n\nUiElementsModule\n\nUiElementsModule\n\nUiElementsModule -->\n\nBackButtonElementComponent->UiElementsModule\n\n\n\n\n\nCardElementComponent\n\nCardElementComponent\n\nUiElementsModule -->\n\nCardElementComponent->UiElementsModule\n\n\n\n\n\nCheckboxSwitcherElementComponent\n\nCheckboxSwitcherElementComponent\n\nUiElementsModule -->\n\nCheckboxSwitcherElementComponent->UiElementsModule\n\n\n\n\n\nMenuBarElementComponent\n\nMenuBarElementComponent\n\nUiElementsModule -->\n\nMenuBarElementComponent->UiElementsModule\n\n\n\n\n\nMenuButtonElementComponent\n\nMenuButtonElementComponent\n\nUiElementsModule -->\n\nMenuButtonElementComponent->UiElementsModule\n\n\n\n\n\nMenuElementComponent\n\nMenuElementComponent\n\nUiElementsModule -->\n\nMenuElementComponent->UiElementsModule\n\n\n\n\n\nNavBarElementComponent\n\nNavBarElementComponent\n\nUiElementsModule -->\n\nNavBarElementComponent->UiElementsModule\n\n\n\n\n\nPollenListElementComponent\n\nPollenListElementComponent\n\nUiElementsModule -->\n\nPollenListElementComponent->UiElementsModule\n\n\n\n\n\nPollenTagElementComponent\n\nPollenTagElementComponent\n\nUiElementsModule -->\n\nPollenTagElementComponent->UiElementsModule\n\n\n\n\n\nProgressChartElementComponent\n\nProgressChartElementComponent\n\nUiElementsModule -->\n\nProgressChartElementComponent->UiElementsModule\n\n\n\n\n\nSliderElementComponent\n\nSliderElementComponent\n\nUiElementsModule -->\n\nSliderElementComponent->UiElementsModule\n\n\n\n\n\nTtsPlayerElementComponent\n\nTtsPlayerElementComponent\n\nUiElementsModule -->\n\nTtsPlayerElementComponent->UiElementsModule\n\n\n\n\n\nBackButtonElementComponent \n\nBackButtonElementComponent \n\nBackButtonElementComponent  -->\n\nUiElementsModule->BackButtonElementComponent \n\n\n\n\n\nCardElementComponent \n\nCardElementComponent \n\nCardElementComponent  -->\n\nUiElementsModule->CardElementComponent \n\n\n\n\n\nCheckboxSwitcherElementComponent \n\nCheckboxSwitcherElementComponent \n\nCheckboxSwitcherElementComponent  -->\n\nUiElementsModule->CheckboxSwitcherElementComponent \n\n\n\n\n\nMenuBarElementComponent \n\nMenuBarElementComponent \n\nMenuBarElementComponent  -->\n\nUiElementsModule->MenuBarElementComponent \n\n\n\n\n\nMenuButtonElementComponent \n\nMenuButtonElementComponent \n\nMenuButtonElementComponent  -->\n\nUiElementsModule->MenuButtonElementComponent \n\n\n\n\n\nMenuElementComponent \n\nMenuElementComponent \n\nMenuElementComponent  -->\n\nUiElementsModule->MenuElementComponent \n\n\n\n\n\nNavBarElementComponent \n\nNavBarElementComponent \n\nNavBarElementComponent  -->\n\nUiElementsModule->NavBarElementComponent \n\n\n\n\n\nPollenListElementComponent \n\nPollenListElementComponent \n\nPollenListElementComponent  -->\n\nUiElementsModule->PollenListElementComponent \n\n\n\n\n\nPollenTagElementComponent \n\nPollenTagElementComponent \n\nPollenTagElementComponent  -->\n\nUiElementsModule->PollenTagElementComponent \n\n\n\n\n\nProgressChartElementComponent \n\nProgressChartElementComponent \n\nProgressChartElementComponent  -->\n\nUiElementsModule->ProgressChartElementComponent \n\n\n\n\n\nSliderElementComponent \n\nSliderElementComponent \n\nSliderElementComponent  -->\n\nUiElementsModule->SliderElementComponent \n\n\n\n\n\nTtsPlayerElementComponent \n\nTtsPlayerElementComponent \n\nTtsPlayerElementComponent  -->\n\nUiElementsModule->TtsPlayerElementComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/ui-elements/ui-elements.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            BackButtonElementComponent\n                        \n                        \n                            CardElementComponent\n                        \n                        \n                            CheckboxSwitcherElementComponent\n                        \n                        \n                            MenuBarElementComponent\n                        \n                        \n                            MenuButtonElementComponent\n                        \n                        \n                            MenuElementComponent\n                        \n                        \n                            NavBarElementComponent\n                        \n                        \n                            PollenListElementComponent\n                        \n                        \n                            PollenTagElementComponent\n                        \n                        \n                            ProgressChartElementComponent\n                        \n                        \n                            SliderElementComponent\n                        \n                        \n                            TtsPlayerElementComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            BackButtonElementComponent\n                        \n                        \n                            CardElementComponent\n                        \n                        \n                            CheckboxSwitcherElementComponent\n                        \n                        \n                            MenuBarElementComponent\n                        \n                        \n                            MenuButtonElementComponent\n                        \n                        \n                            MenuElementComponent\n                        \n                        \n                            NavBarElementComponent\n                        \n                        \n                            PollenListElementComponent\n                        \n                        \n                            PollenTagElementComponent\n                        \n                        \n                            ProgressChartElementComponent\n                        \n                        \n                            SliderElementComponent\n                        \n                        \n                            TtsPlayerElementComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { BackButtonElementComponent } from './back-button-element/back-button-element.component';\nimport { NavBarElementComponent } from './nav-bar-element/nav-bar-element.component';\nimport { CardElementComponent } from './card-element/card-element.component';\nimport { MenuBarElementComponent } from './menu-bar-element/menu-bar-element.component';\nimport { MenuButtonElementComponent } from './menu-button-element/menu-button-element.component';\nimport { ProgressChartElementComponent } from './progress-chart-element/progress-chart-element.component';\nimport { CheckboxSwitcherElementComponent } from './checkbox-switcher-element/checkbox-switcher-element.component';\nimport { MenuElementComponent } from './menu-element/menu-element.component';\nimport { SliderElementComponent } from './slider-element/slider-element.component';\nimport { FormsModule } from '@angular/forms';\nimport { PollenListElementComponent } from './pollen-list-element/pollen-list-element.component';\nimport { PollenTagElementComponent } from './pollen-tag-element/pollen-tag-element.component';\nimport { TtsPlayerElementComponent } from './tts-player-element/tts-player-element.component';\n\n\n\n\n@NgModule({\n  declarations: [\n    BackButtonElementComponent,\n    NavBarElementComponent,\n    CardElementComponent,\n    MenuBarElementComponent,\n    MenuButtonElementComponent,\n    ProgressChartElementComponent,\n    CheckboxSwitcherElementComponent,\n    MenuElementComponent,\n    SliderElementComponent,\n    PollenListElementComponent,\n    PollenTagElementComponent,\n    TtsPlayerElementComponent,\n  ],\n  imports: [\n    CommonModule,\n    FormsModule\n  ],\n  exports: [\n    BackButtonElementComponent,\n    NavBarElementComponent,\n    CardElementComponent,\n    MenuBarElementComponent,\n    MenuButtonElementComponent,\n    ProgressChartElementComponent,\n    CheckboxSwitcherElementComponent,\n    MenuElementComponent,\n    SliderElementComponent,\n    PollenListElementComponent,\n    PollenTagElementComponent,\n    TtsPlayerElementComponent,\n  ]\n})\nexport class UiElementsModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserContext.html":{"url":"interfaces/UserContext.html","title":"interface - UserContext","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  UserContext\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/user-context.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        doVentilationReminder\n                                \n                                \n                                        fontSize\n                                \n                                \n                                        pollen\n                                \n                                \n                                        reduceMotion\n                                \n                                \n                                        selfVoicingEnabled\n                                \n                                \n                                        theme\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        doVentilationReminder\n                                    \n                                \n                                \n                                    \n                                        doVentilationReminder:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fontSize\n                                    \n                                \n                                \n                                    \n                                        fontSize:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pollen\n                                    \n                                \n                                \n                                    \n                                        pollen:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        reduceMotion\n                                    \n                                \n                                \n                                    \n                                        reduceMotion:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selfVoicingEnabled\n                                    \n                                \n                                \n                                    \n                                        selfVoicingEnabled:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        theme\n                                    \n                                \n                                \n                                    \n                                        theme:         Themes\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Themes\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface UserContext {\n    theme: Themes,\n    fontSize: number, // in %\n    pollen: string[], // Um die Mockdaten einfacher zu erstellen in Array konvertiert. Kann auch wieder in Map gewandelt werden.\n    selfVoicingEnabled: boolean,\n    doVentilationReminder: boolean, // TODO: What if multiple users have concurring settings here?\n    reduceMotion: boolean, // New element: For people with vestibular disorders is animation triggerd by scrolling not good.\n};\n\nexport interface UserIdentifikation {\n    token: string,\n    id: number,\n}\n\nexport enum Themes {\n    Light,\n    Dark,\n    Automatic,\n    HighContrast\n};\n\nexport interface PollenType {\n    id: number,\n    pollenName: string\n};\n\nexport enum Language {\n    'de-DE',\n    'en-EN'\n};\n\nexport const INITIAL_USER_CONTEXT: UserContext = {\n    theme: Themes.Automatic,\n    fontSize: 62.5,\n    pollen: [],\n    selfVoicingEnabled: false,\n    doVentilationReminder: false,\n    reduceMotion: false,\n};\n\nexport const INITIAL_USER_IDENTIFIKATION: UserIdentifikation = {\n    token: '',\n    id: -99,\n};\n\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserContextAPIService.html":{"url":"injectables/UserContextAPIService.html","title":"injectable - UserContextAPIService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserContextAPIService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/api/user-context-api.service.ts\n        \n\n            \n                Description\n            \n            \n                User context api service injectable\nUse this service to access the network. It implements all routes for \nuser context data\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                deletePolleFromUserContext\n                            \n                            \n                                    Public\n                                loadPollenTypes\n                            \n                            \n                                    Public\n                                loadUserContext\n                            \n                            \n                                    Public\n                                postIsTokenValid\n                            \n                            \n                                    Public\n                                postLogin\n                            \n                            \n                                    Public\n                                postLoginOpenAPE\n                            \n                            \n                                    Public\n                                postPolleToUserContext\n                            \n                            \n                                    Public\n                                postRegister\n                            \n                            \n                                    Public\n                                putSaveUserContext\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/api/user-context-api.service.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            deletePolleFromUserContext\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deletePolleFromUserContext(userID: UserIdentifikation, pollenID: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/api/user-context-api.service.ts:174\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userID\n                                    \n                                                UserIdentifikation\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pollenID\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        an observable with a boolean if the deletion user context was successful or not\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            loadPollenTypes\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    loadPollenTypes()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/api/user-context-api.service.ts:277\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        an observable with pollen types array\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            loadUserContext\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    loadUserContext(token: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/api/user-context-api.service.ts:255\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        an observable with an user context object\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            postIsTokenValid\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    postIsTokenValid(token: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/api/user-context-api.service.ts:232\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        an observable with a boolean if the token is valid or not\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            postLogin\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    postLogin(password: string, username: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/api/user-context-api.service.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        an observable with the user identifikation and the user context\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            postLoginOpenAPE\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    postLoginOpenAPE(username: string, password: string, userID: UserIdentifikation)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/api/user-context-api.service.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userID\n                                    \n                                                UserIdentifikation\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        an observable with an user context object\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            postPolleToUserContext\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    postPolleToUserContext(userID: UserIdentifikation, pollenID: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/api/user-context-api.service.ts:203\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userID\n                                    \n                                                UserIdentifikation\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pollenID\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        an observable with a boolean if the insertion was successful or not\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            postRegister\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    postRegister(password: string, username: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/api/user-context-api.service.ts:102\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        an observable with a boolean if the register was successful or not\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            putSaveUserContext\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    putSaveUserContext(userID: UserIdentifikation, userContext: UserContext)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/api/user-context-api.service.ts:135\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userID\n                                    \n                                                UserIdentifikation\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userContext\n                                    \n                                                UserContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        an observable with a boolean if the saving user context was successful or not\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { PollenType, Themes, UserContext, UserIdentifikation } from '../../model/user-context';\n\n/**\n * User context api service injectable\n * \n * Use this service to access the network. It implements all routes for \n * user context data\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserContextAPIService {\n  private loginURL = environment.baseURL + 'auth/login';\n  private registerURL = environment.baseURL + 'user/register';\n  private checkTokenURL = environment.baseURL + 'auth/checkToken';\n  private currentUserContextURL = environment.baseURL + 'user/currentUser';\n  private saveUserContextURL = environment.baseURL + 'user/save';\n  private allPollenTypesURL = environment.baseURL + 'pollen/all';\n  private deletePollenURL = environment.baseURL + 'allergies/delete';\n  private savePollenURL = environment.baseURL + 'allergies/save';\n  private openAPEURL = environment.baseURL + 'user/loadOpenAPESettingsAndSave';\n\n  constructor(private httpClient: HttpClient) { }\n\n  /**\n   * @returns an observable with the user identifikation and the user context\n   */\n  public postLogin(password: string, username: string): Observable {\n    let returnObservable = new Observable((observer) => {\n      let response = this.httpClient.post(this.loginURL, \n                                                        {username: username, password: password}, {observe: 'response'});\n      response.subscribe((response) => {\n        let body = response.body\n        let status = response.statusText\n        console.log(status);\n\n        if(body){\n          if(body.success) {\n            console.log(this.createUserContextFromServerResponse(body.userContext));\n            observer.next({\n              userID: {\n                token: body.token,\n                id: body.userContext.id\n              },\n              userContext: this.createUserContextFromServerResponse(body.userContext)\n            });\n          } else {\n            observer.error(body.message);\n          }\n        }\n      },\n      (error)=> {\n        observer.error(\"Ein Fehler ist aufgetreten. Bitte versuche es später erneut. \");\n        console.log(error);\n        observer.complete();\n      },() => {\n        observer.complete();\n      });\n    }\n  );\n  return returnObservable;\n  }\n\n  /**\n   * @returns an observable with an user context object\n   */\n  public postLoginOpenAPE(username: string, password: string, userID: UserIdentifikation): Observable {\n    let returnObservable = new Observable((observer) => {\n      let httpOptions = {\n        headers: new HttpHeaders({ 'Authorization': 'Bearer ' + userID.token }),\n      };\n      let response = this.httpClient.post(this.openAPEURL, \n                                                              {openApeUser: username, openApePassword: password}, httpOptions);\n      response.subscribe((response) => {\n    \n        console.log(response);\n\n        if(response){\n            console.log(this.createUserContextFromServerResponse(response));\n            observer.next(this.createUserContextFromServerResponse(response));\n        }\n      },\n      (error)=> {\n        observer.error(\"Ein Fehler ist aufgetreten. Bitte versuche es später erneut. \");\n        console.log(error);\n        observer.complete();\n      },() => {\n        observer.complete();\n      });\n    }\n  );\n  return returnObservable;\n  }\n\n  /**\n   * @returns an observable with a boolean if the register was successful or not\n   */\n  public postRegister(password: string, username: string): Observable {\n    let returnObservable = new Observable((observer) => {\n      let response = this.httpClient.post(this.registerURL, \n                                                              {username: username, password: password}, {observe: 'response'});\n      response.subscribe((response) => {\n        let body = response.body\n        let status = response.statusText\n        console.log(status);\n\n        if(body){\n          if(body.id) {\n            observer.next(true);\n          } else {\n            observer.error(\"Ein Fehler ist aufgetreten. Bitte versuche es später erneut\");\n          }\n        }\n      },\n      (error)=> {\n        observer.error(\"Ein Fehler ist aufgetreten. Bitte versuche es später erneut\");\n        console.log(error);\n        observer.complete();\n      },\n      () => {\n        observer.complete();\n      });\n    }\n  );\n  return returnObservable;\n  }\n\n  /**\n   * @returns an observable with a boolean if the saving user context was successful or not\n   */\n  public putSaveUserContext(userID: UserIdentifikation, userContext: UserContext): Observable{\n    let body = {\n      theme: Themes[userContext.theme],\n      fontSize: userContext.fontSize,\n      selfVoicingEnabled: userContext.selfVoicingEnabled,\n      doVentilationReminder: userContext.doVentilationReminder,\n      reduceMotion: userContext.reduceMotion\n    }\n    let httpOptions = {\n      headers: new HttpHeaders({ 'Authorization': 'Bearer ' + userID.token }),\n      params: new HttpParams().set('id', userID.id + ''),\n    };\n    let returnObservable = new Observable((observer) => {\n      let response = this.httpClient.put(this.saveUserContextURL, body, httpOptions);\n      response.subscribe((response) => {\n        let body = response\n        if(body && body.id) {\n          observer.next(true);\n        } else {\n          observer.error(\"POST - SAVE USER CONTEXT - Ein Fehler ist aufgetreten.\");\n        }\n      },\n      (error)=> {\n        observer.error(\"POST - SAVE USER CONTEXT - Ein Fehler ist aufgetreten.\");\n        console.log(error);\n        observer.complete();\n      }, \n      () => {\n        observer.complete();\n      });\n      console.log(response);\n\n    });\n    return returnObservable;\n  }\n\n  /**\n   * @returns an observable with a boolean if the deletion user context was successful or not\n   */\n  public deletePolleFromUserContext(userID: UserIdentifikation, pollenID: number): Observable  {\n    let body = {\n      userID: userID.id,\n      pollenID: pollenID\n    }\n    let httpOptions = {\n      headers: new HttpHeaders({ 'Authorization': 'Bearer ' + userID.token }), body: body\n    };\n    let returnObservable = new Observable((observer) => {\n      let response = this.httpClient.delete(this.deletePollenURL, httpOptions);\n      response.subscribe(() => {\n        observer.next(true);\n      },\n      (error) => {\n        observer.error(\"DELETE - Polle\");\n        console.log(error);\n        observer.complete();\n      }, \n      () => {\n        observer.complete();\n      });\n\n    });\n    return returnObservable;\n  }\n\n  /**\n   * @returns an observable with a boolean if the insertion was successful or not\n   */\n  public postPolleToUserContext(userID: UserIdentifikation, pollenID: number): Observable {\n    let body = {\n      userID: userID.id,\n      pollenID: pollenID\n    }\n    let httpOptions = {\n      headers: new HttpHeaders({ 'Authorization': 'Bearer ' + userID.token }),\n    };\n    let returnObservable = new Observable((observer) => {\n      let response = this.httpClient.post(this.savePollenURL, body, httpOptions);\n      response.subscribe(() => {\n        observer.next(true);\n      },\n      (error)=> {\n        observer.error(\"DELETE - Polle\");\n        console.log(error);\n        observer.complete();\n      }, \n      () => {\n        observer.complete();\n      });\n      console.log(response);\n\n    });\n    return returnObservable;\n  }\n  /**\n   * @returns an observable with a boolean if the token is valid or not\n   */\n  public postIsTokenValid(token: string): Observable {\n    let returnObservable = new Observable((observer) => {\n      let httpOptions = {\n        headers: new HttpHeaders({ 'Authorization': 'Bearer ' + token })\n      };\n\n      console.log(httpOptions);\n      let response = this.httpClient.get(this.checkTokenURL, httpOptions);\n      response.subscribe(data => {\n        observer.next(data.success);\n        observer.complete();\n      }, \n      () => {\n        observer.next(false);\n        observer.complete();\n      })\n    });\n    return returnObservable;\n  }\n\n  /**\n   * @returns an observable with an user context object\n   */\n  public loadUserContext(token: string): Observable{\n    let returnObservable = new Observable((observer) => {\n      let httpOptions = {\n        headers: new HttpHeaders({ 'Authorization': 'Bearer ' + token })\n      };\n      let response = this.httpClient.get(this.currentUserContextURL, httpOptions);\n      response.subscribe(context => {\n        console.log(this.createUserContextFromServerResponse(context));\n        observer.next(this.createUserContextFromServerResponse(context));\n        observer.complete();\n      }, \n      () => {\n        observer.error(\"An error occured\")\n        observer.complete();\n      })\n    });\n    return returnObservable;\n  }\n\n  /**\n   * @returns an observable with pollen types array\n   */\n  public loadPollenTypes(): Observable{\n    let returnObservable = new Observable((observer) => {\n      let response = this.httpClient.get(this.allPollenTypesURL);\n      response.subscribe(data => {\n        observer.next(data);\n      });\n    });\n    return returnObservable\n  }\n\n  /**\n   * Helper function to create user context object from server response.\n   * @param userContext \n   * @returns an user context object\n   */\n  private createUserContextFromServerResponse(userContext: UserContextResponse): UserContext {\n    return {\n      theme: this.getThemeTypeFromServerResponse(userContext.theme),\n      fontSize: userContext.fontSize,\n      pollen: userContext.pollen, \n      doVentilationReminder: userContext.doVentilationReminder,\n      reduceMotion: userContext.reduceMotion,\n      selfVoicingEnabled: userContext.selfVoicingEnabled\n    }\n  }\n\n  /**\n   * Helper function to convert theme String to Theme type\n   * @return the converted Theme\n   */\n  private getThemeTypeFromServerResponse(theme: string): Themes {\n    switch(theme) {\n      case \"Dark\": return Themes.Dark;\n      case \"Light\": return Themes.Light;\n      case \"HighContrast\": return Themes.HighContrast;\n      default: return Themes.Automatic;\n    }\n  }\n}\n\n/**\n * Model of the login response\n */\ninterface LoginResponse {\n  success: boolean,\n  message: string,\n  userContext: UserContextResponse,\n  token: string,\n}\n\n/**\n * Model of the user context response\n */\ninterface UserContextResponse {\n  id: number,\n  username: string,\n  theme: string,\n  fontSize: number,\n  selfVoicingEnabled: boolean,\n  doVentilationReminder: boolean,\n  reduceMotion: boolean,\n  pollen: string[]\n}\n\n/**\n * Model of the check token response\n */\ninterface CheckTokenResponse {\n  success: boolean,\n  message: string,\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserContextResponse.html":{"url":"interfaces/UserContextResponse.html","title":"interface - UserContextResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  UserContextResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/api/user-context-api.service.ts\n        \n\n            \n                Description\n            \n            \n                Model of the user context response\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        doVentilationReminder\n                                \n                                \n                                        fontSize\n                                \n                                \n                                        id\n                                \n                                \n                                        pollen\n                                \n                                \n                                        reduceMotion\n                                \n                                \n                                        selfVoicingEnabled\n                                \n                                \n                                        theme\n                                \n                                \n                                        username\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        doVentilationReminder\n                                    \n                                \n                                \n                                    \n                                        doVentilationReminder:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fontSize\n                                    \n                                \n                                \n                                    \n                                        fontSize:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pollen\n                                    \n                                \n                                \n                                    \n                                        pollen:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        reduceMotion\n                                    \n                                \n                                \n                                    \n                                        reduceMotion:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selfVoicingEnabled\n                                    \n                                \n                                \n                                    \n                                        selfVoicingEnabled:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        theme\n                                    \n                                \n                                \n                                    \n                                        theme:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { PollenType, Themes, UserContext, UserIdentifikation } from '../../model/user-context';\n\n/**\n * User context api service injectable\n * \n * Use this service to access the network. It implements all routes for \n * user context data\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserContextAPIService {\n  private loginURL = environment.baseURL + 'auth/login';\n  private registerURL = environment.baseURL + 'user/register';\n  private checkTokenURL = environment.baseURL + 'auth/checkToken';\n  private currentUserContextURL = environment.baseURL + 'user/currentUser';\n  private saveUserContextURL = environment.baseURL + 'user/save';\n  private allPollenTypesURL = environment.baseURL + 'pollen/all';\n  private deletePollenURL = environment.baseURL + 'allergies/delete';\n  private savePollenURL = environment.baseURL + 'allergies/save';\n  private openAPEURL = environment.baseURL + 'user/loadOpenAPESettingsAndSave';\n\n  constructor(private httpClient: HttpClient) { }\n\n  /**\n   * @returns an observable with the user identifikation and the user context\n   */\n  public postLogin(password: string, username: string): Observable {\n    let returnObservable = new Observable((observer) => {\n      let response = this.httpClient.post(this.loginURL, \n                                                        {username: username, password: password}, {observe: 'response'});\n      response.subscribe((response) => {\n        let body = response.body\n        let status = response.statusText\n        console.log(status);\n\n        if(body){\n          if(body.success) {\n            console.log(this.createUserContextFromServerResponse(body.userContext));\n            observer.next({\n              userID: {\n                token: body.token,\n                id: body.userContext.id\n              },\n              userContext: this.createUserContextFromServerResponse(body.userContext)\n            });\n          } else {\n            observer.error(body.message);\n          }\n        }\n      },\n      (error)=> {\n        observer.error(\"Ein Fehler ist aufgetreten. Bitte versuche es später erneut. \");\n        console.log(error);\n        observer.complete();\n      },() => {\n        observer.complete();\n      });\n    }\n  );\n  return returnObservable;\n  }\n\n  /**\n   * @returns an observable with an user context object\n   */\n  public postLoginOpenAPE(username: string, password: string, userID: UserIdentifikation): Observable {\n    let returnObservable = new Observable((observer) => {\n      let httpOptions = {\n        headers: new HttpHeaders({ 'Authorization': 'Bearer ' + userID.token }),\n      };\n      let response = this.httpClient.post(this.openAPEURL, \n                                                              {openApeUser: username, openApePassword: password}, httpOptions);\n      response.subscribe((response) => {\n    \n        console.log(response);\n\n        if(response){\n            console.log(this.createUserContextFromServerResponse(response));\n            observer.next(this.createUserContextFromServerResponse(response));\n        }\n      },\n      (error)=> {\n        observer.error(\"Ein Fehler ist aufgetreten. Bitte versuche es später erneut. \");\n        console.log(error);\n        observer.complete();\n      },() => {\n        observer.complete();\n      });\n    }\n  );\n  return returnObservable;\n  }\n\n  /**\n   * @returns an observable with a boolean if the register was successful or not\n   */\n  public postRegister(password: string, username: string): Observable {\n    let returnObservable = new Observable((observer) => {\n      let response = this.httpClient.post(this.registerURL, \n                                                              {username: username, password: password}, {observe: 'response'});\n      response.subscribe((response) => {\n        let body = response.body\n        let status = response.statusText\n        console.log(status);\n\n        if(body){\n          if(body.id) {\n            observer.next(true);\n          } else {\n            observer.error(\"Ein Fehler ist aufgetreten. Bitte versuche es später erneut\");\n          }\n        }\n      },\n      (error)=> {\n        observer.error(\"Ein Fehler ist aufgetreten. Bitte versuche es später erneut\");\n        console.log(error);\n        observer.complete();\n      },\n      () => {\n        observer.complete();\n      });\n    }\n  );\n  return returnObservable;\n  }\n\n  /**\n   * @returns an observable with a boolean if the saving user context was successful or not\n   */\n  public putSaveUserContext(userID: UserIdentifikation, userContext: UserContext): Observable{\n    let body = {\n      theme: Themes[userContext.theme],\n      fontSize: userContext.fontSize,\n      selfVoicingEnabled: userContext.selfVoicingEnabled,\n      doVentilationReminder: userContext.doVentilationReminder,\n      reduceMotion: userContext.reduceMotion\n    }\n    let httpOptions = {\n      headers: new HttpHeaders({ 'Authorization': 'Bearer ' + userID.token }),\n      params: new HttpParams().set('id', userID.id + ''),\n    };\n    let returnObservable = new Observable((observer) => {\n      let response = this.httpClient.put(this.saveUserContextURL, body, httpOptions);\n      response.subscribe((response) => {\n        let body = response\n        if(body && body.id) {\n          observer.next(true);\n        } else {\n          observer.error(\"POST - SAVE USER CONTEXT - Ein Fehler ist aufgetreten.\");\n        }\n      },\n      (error)=> {\n        observer.error(\"POST - SAVE USER CONTEXT - Ein Fehler ist aufgetreten.\");\n        console.log(error);\n        observer.complete();\n      }, \n      () => {\n        observer.complete();\n      });\n      console.log(response);\n\n    });\n    return returnObservable;\n  }\n\n  /**\n   * @returns an observable with a boolean if the deletion user context was successful or not\n   */\n  public deletePolleFromUserContext(userID: UserIdentifikation, pollenID: number): Observable  {\n    let body = {\n      userID: userID.id,\n      pollenID: pollenID\n    }\n    let httpOptions = {\n      headers: new HttpHeaders({ 'Authorization': 'Bearer ' + userID.token }), body: body\n    };\n    let returnObservable = new Observable((observer) => {\n      let response = this.httpClient.delete(this.deletePollenURL, httpOptions);\n      response.subscribe(() => {\n        observer.next(true);\n      },\n      (error) => {\n        observer.error(\"DELETE - Polle\");\n        console.log(error);\n        observer.complete();\n      }, \n      () => {\n        observer.complete();\n      });\n\n    });\n    return returnObservable;\n  }\n\n  /**\n   * @returns an observable with a boolean if the insertion was successful or not\n   */\n  public postPolleToUserContext(userID: UserIdentifikation, pollenID: number): Observable {\n    let body = {\n      userID: userID.id,\n      pollenID: pollenID\n    }\n    let httpOptions = {\n      headers: new HttpHeaders({ 'Authorization': 'Bearer ' + userID.token }),\n    };\n    let returnObservable = new Observable((observer) => {\n      let response = this.httpClient.post(this.savePollenURL, body, httpOptions);\n      response.subscribe(() => {\n        observer.next(true);\n      },\n      (error)=> {\n        observer.error(\"DELETE - Polle\");\n        console.log(error);\n        observer.complete();\n      }, \n      () => {\n        observer.complete();\n      });\n      console.log(response);\n\n    });\n    return returnObservable;\n  }\n  /**\n   * @returns an observable with a boolean if the token is valid or not\n   */\n  public postIsTokenValid(token: string): Observable {\n    let returnObservable = new Observable((observer) => {\n      let httpOptions = {\n        headers: new HttpHeaders({ 'Authorization': 'Bearer ' + token })\n      };\n\n      console.log(httpOptions);\n      let response = this.httpClient.get(this.checkTokenURL, httpOptions);\n      response.subscribe(data => {\n        observer.next(data.success);\n        observer.complete();\n      }, \n      () => {\n        observer.next(false);\n        observer.complete();\n      })\n    });\n    return returnObservable;\n  }\n\n  /**\n   * @returns an observable with an user context object\n   */\n  public loadUserContext(token: string): Observable{\n    let returnObservable = new Observable((observer) => {\n      let httpOptions = {\n        headers: new HttpHeaders({ 'Authorization': 'Bearer ' + token })\n      };\n      let response = this.httpClient.get(this.currentUserContextURL, httpOptions);\n      response.subscribe(context => {\n        console.log(this.createUserContextFromServerResponse(context));\n        observer.next(this.createUserContextFromServerResponse(context));\n        observer.complete();\n      }, \n      () => {\n        observer.error(\"An error occured\")\n        observer.complete();\n      })\n    });\n    return returnObservable;\n  }\n\n  /**\n   * @returns an observable with pollen types array\n   */\n  public loadPollenTypes(): Observable{\n    let returnObservable = new Observable((observer) => {\n      let response = this.httpClient.get(this.allPollenTypesURL);\n      response.subscribe(data => {\n        observer.next(data);\n      });\n    });\n    return returnObservable\n  }\n\n  /**\n   * Helper function to create user context object from server response.\n   * @param userContext \n   * @returns an user context object\n   */\n  private createUserContextFromServerResponse(userContext: UserContextResponse): UserContext {\n    return {\n      theme: this.getThemeTypeFromServerResponse(userContext.theme),\n      fontSize: userContext.fontSize,\n      pollen: userContext.pollen, \n      doVentilationReminder: userContext.doVentilationReminder,\n      reduceMotion: userContext.reduceMotion,\n      selfVoicingEnabled: userContext.selfVoicingEnabled\n    }\n  }\n\n  /**\n   * Helper function to convert theme String to Theme type\n   * @return the converted Theme\n   */\n  private getThemeTypeFromServerResponse(theme: string): Themes {\n    switch(theme) {\n      case \"Dark\": return Themes.Dark;\n      case \"Light\": return Themes.Light;\n      case \"HighContrast\": return Themes.HighContrast;\n      default: return Themes.Automatic;\n    }\n  }\n}\n\n/**\n * Model of the login response\n */\ninterface LoginResponse {\n  success: boolean,\n  message: string,\n  userContext: UserContextResponse,\n  token: string,\n}\n\n/**\n * Model of the user context response\n */\ninterface UserContextResponse {\n  id: number,\n  username: string,\n  theme: string,\n  fontSize: number,\n  selfVoicingEnabled: boolean,\n  doVentilationReminder: boolean,\n  reduceMotion: boolean,\n  pollen: string[]\n}\n\n/**\n * Model of the check token response\n */\ninterface CheckTokenResponse {\n  success: boolean,\n  message: string,\n}\n\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserIdentifikation.html":{"url":"interfaces/UserIdentifikation.html","title":"interface - UserIdentifikation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  UserIdentifikation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/user-context.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        id\n                                \n                                \n                                        token\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        token\n                                    \n                                \n                                \n                                    \n                                        token:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface UserContext {\n    theme: Themes,\n    fontSize: number, // in %\n    pollen: string[], // Um die Mockdaten einfacher zu erstellen in Array konvertiert. Kann auch wieder in Map gewandelt werden.\n    selfVoicingEnabled: boolean,\n    doVentilationReminder: boolean, // TODO: What if multiple users have concurring settings here?\n    reduceMotion: boolean, // New element: For people with vestibular disorders is animation triggerd by scrolling not good.\n};\n\nexport interface UserIdentifikation {\n    token: string,\n    id: number,\n}\n\nexport enum Themes {\n    Light,\n    Dark,\n    Automatic,\n    HighContrast\n};\n\nexport interface PollenType {\n    id: number,\n    pollenName: string\n};\n\nexport enum Language {\n    'de-DE',\n    'en-EN'\n};\n\nexport const INITIAL_USER_CONTEXT: UserContext = {\n    theme: Themes.Automatic,\n    fontSize: 62.5,\n    pollen: [],\n    selfVoicingEnabled: false,\n    doVentilationReminder: false,\n    reduceMotion: false,\n};\n\nexport const INITIAL_USER_IDENTIFIKATION: UserIdentifikation = {\n    token: '',\n    id: -99,\n};\n\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ViewsModule.html":{"url":"modules/ViewsModule.html","title":"module - ViewsModule","body":"\n                   \n\n\n\n\n    Modules\n    ViewsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ViewsModule\n\n\n\ncluster_ViewsModule_imports\n\n\n\ncluster_ViewsModule_declarations\n\n\n\ncluster_ViewsModule_exports\n\n\n\n\nApparentTemperatureTileViewComponent\n\nApparentTemperatureTileViewComponent\n\n\n\nViewsModule\n\nViewsModule\n\nViewsModule -->\n\nApparentTemperatureTileViewComponent->ViewsModule\n\n\n\n\n\nConfigurationTilePopUpDialogView\n\nConfigurationTilePopUpDialogView\n\nViewsModule -->\n\nConfigurationTilePopUpDialogView->ViewsModule\n\n\n\n\n\nConfigurationTileViewComponent\n\nConfigurationTileViewComponent\n\nViewsModule -->\n\nConfigurationTileViewComponent->ViewsModule\n\n\n\n\n\nConfigurationViewComponent\n\nConfigurationViewComponent\n\nViewsModule -->\n\nConfigurationViewComponent->ViewsModule\n\n\n\n\n\nForecastDetailViewComponent\n\nForecastDetailViewComponent\n\nViewsModule -->\n\nForecastDetailViewComponent->ViewsModule\n\n\n\n\n\nForecastTileViewComponent\n\nForecastTileViewComponent\n\nViewsModule -->\n\nForecastTileViewComponent->ViewsModule\n\n\n\n\n\nHistoryDetailViewComponent\n\nHistoryDetailViewComponent\n\nViewsModule -->\n\nHistoryDetailViewComponent->ViewsModule\n\n\n\n\n\nHistoryTileViewComponent\n\nHistoryTileViewComponent\n\nViewsModule -->\n\nHistoryTileViewComponent->ViewsModule\n\n\n\n\n\nHumidityTileViewComponent\n\nHumidityTileViewComponent\n\nViewsModule -->\n\nHumidityTileViewComponent->ViewsModule\n\n\n\n\n\nIndoorDetailViewComponent\n\nIndoorDetailViewComponent\n\nViewsModule -->\n\nIndoorDetailViewComponent->ViewsModule\n\n\n\n\n\nIndoorTileViewComponent\n\nIndoorTileViewComponent\n\nViewsModule -->\n\nIndoorTileViewComponent->ViewsModule\n\n\n\n\n\nLoginViewComponent\n\nLoginViewComponent\n\nViewsModule -->\n\nLoginViewComponent->ViewsModule\n\n\n\n\n\nOpenAPELoginTileViewComponent\n\nOpenAPELoginTileViewComponent\n\nViewsModule -->\n\nOpenAPELoginTileViewComponent->ViewsModule\n\n\n\n\n\nOutdoorWeatherDetailViewComponent\n\nOutdoorWeatherDetailViewComponent\n\nViewsModule -->\n\nOutdoorWeatherDetailViewComponent->ViewsModule\n\n\n\n\n\nOutdoorWeatherViewComponent\n\nOutdoorWeatherViewComponent\n\nViewsModule -->\n\nOutdoorWeatherViewComponent->ViewsModule\n\n\n\n\n\nPersonalizationSettingsViewComponent\n\nPersonalizationSettingsViewComponent\n\nViewsModule -->\n\nPersonalizationSettingsViewComponent->ViewsModule\n\n\n\n\n\nPersonalizationViewComponent\n\nPersonalizationViewComponent\n\nViewsModule -->\n\nPersonalizationViewComponent->ViewsModule\n\n\n\n\n\nPollenflugDetailViewComponent\n\nPollenflugDetailViewComponent\n\nViewsModule -->\n\nPollenflugDetailViewComponent->ViewsModule\n\n\n\n\n\nPollenflugSmallTileComponent\n\nPollenflugSmallTileComponent\n\nViewsModule -->\n\nPollenflugSmallTileComponent->ViewsModule\n\n\n\n\n\nPollenflugTileViewComponent\n\nPollenflugTileViewComponent\n\nViewsModule -->\n\nPollenflugTileViewComponent->ViewsModule\n\n\n\n\n\nRegistrationViewComponent\n\nRegistrationViewComponent\n\nViewsModule -->\n\nRegistrationViewComponent->ViewsModule\n\n\n\n\n\nSimpleTileViewComponent\n\nSimpleTileViewComponent\n\nViewsModule -->\n\nSimpleTileViewComponent->ViewsModule\n\n\n\n\n\nApparentTemperatureTileViewComponent \n\nApparentTemperatureTileViewComponent \n\nApparentTemperatureTileViewComponent  -->\n\nViewsModule->ApparentTemperatureTileViewComponent \n\n\n\n\n\nForecastDetailViewComponent \n\nForecastDetailViewComponent \n\nForecastDetailViewComponent  -->\n\nViewsModule->ForecastDetailViewComponent \n\n\n\n\n\nForecastTileViewComponent \n\nForecastTileViewComponent \n\nForecastTileViewComponent  -->\n\nViewsModule->ForecastTileViewComponent \n\n\n\n\n\nHistoryDetailViewComponent \n\nHistoryDetailViewComponent \n\nHistoryDetailViewComponent  -->\n\nViewsModule->HistoryDetailViewComponent \n\n\n\n\n\nHistoryTileViewComponent \n\nHistoryTileViewComponent \n\nHistoryTileViewComponent  -->\n\nViewsModule->HistoryTileViewComponent \n\n\n\n\n\nHumidityTileViewComponent \n\nHumidityTileViewComponent \n\nHumidityTileViewComponent  -->\n\nViewsModule->HumidityTileViewComponent \n\n\n\n\n\nIndoorDetailViewComponent \n\nIndoorDetailViewComponent \n\nIndoorDetailViewComponent  -->\n\nViewsModule->IndoorDetailViewComponent \n\n\n\n\n\nIndoorTileViewComponent \n\nIndoorTileViewComponent \n\nIndoorTileViewComponent  -->\n\nViewsModule->IndoorTileViewComponent \n\n\n\n\n\nLoginViewComponent \n\nLoginViewComponent \n\nLoginViewComponent  -->\n\nViewsModule->LoginViewComponent \n\n\n\n\n\nOutdoorWeatherDetailViewComponent \n\nOutdoorWeatherDetailViewComponent \n\nOutdoorWeatherDetailViewComponent  -->\n\nViewsModule->OutdoorWeatherDetailViewComponent \n\n\n\n\n\nOutdoorWeatherViewComponent \n\nOutdoorWeatherViewComponent \n\nOutdoorWeatherViewComponent  -->\n\nViewsModule->OutdoorWeatherViewComponent \n\n\n\n\n\nPersonalizationSettingsViewComponent \n\nPersonalizationSettingsViewComponent \n\nPersonalizationSettingsViewComponent  -->\n\nViewsModule->PersonalizationSettingsViewComponent \n\n\n\n\n\nPollenflugDetailViewComponent \n\nPollenflugDetailViewComponent \n\nPollenflugDetailViewComponent  -->\n\nViewsModule->PollenflugDetailViewComponent \n\n\n\n\n\nPollenflugSmallTileComponent \n\nPollenflugSmallTileComponent \n\nPollenflugSmallTileComponent  -->\n\nViewsModule->PollenflugSmallTileComponent \n\n\n\n\n\nPollenflugTileViewComponent \n\nPollenflugTileViewComponent \n\nPollenflugTileViewComponent  -->\n\nViewsModule->PollenflugTileViewComponent \n\n\n\n\n\nRegistrationViewComponent \n\nRegistrationViewComponent \n\nRegistrationViewComponent  -->\n\nViewsModule->RegistrationViewComponent \n\n\n\n\n\nUiElementsModule\n\nUiElementsModule\n\nViewsModule -->\n\nUiElementsModule->ViewsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/components/views/views.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ApparentTemperatureTileViewComponent\n                        \n                        \n                            ConfigurationTilePopUpDialogView\n                        \n                        \n                            ConfigurationTileViewComponent\n                        \n                        \n                            ConfigurationViewComponent\n                        \n                        \n                            ForecastDetailViewComponent\n                        \n                        \n                            ForecastTileViewComponent\n                        \n                        \n                            HistoryDetailViewComponent\n                        \n                        \n                            HistoryTileViewComponent\n                        \n                        \n                            HumidityTileViewComponent\n                        \n                        \n                            IndoorDetailViewComponent\n                        \n                        \n                            IndoorTileViewComponent\n                        \n                        \n                            LoginViewComponent\n                        \n                        \n                            OpenAPELoginTileViewComponent\n                        \n                        \n                            OutdoorWeatherDetailViewComponent\n                        \n                        \n                            OutdoorWeatherViewComponent\n                        \n                        \n                            PersonalizationSettingsViewComponent\n                        \n                        \n                            PersonalizationViewComponent\n                        \n                        \n                            PollenflugDetailViewComponent\n                        \n                        \n                            PollenflugSmallTileComponent\n                        \n                        \n                            PollenflugTileViewComponent\n                        \n                        \n                            RegistrationViewComponent\n                        \n                        \n                            SimpleTileViewComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UiElementsModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ApparentTemperatureTileViewComponent\n                        \n                        \n                            ForecastDetailViewComponent\n                        \n                        \n                            ForecastTileViewComponent\n                        \n                        \n                            HistoryDetailViewComponent\n                        \n                        \n                            HistoryTileViewComponent\n                        \n                        \n                            HumidityTileViewComponent\n                        \n                        \n                            IndoorDetailViewComponent\n                        \n                        \n                            IndoorTileViewComponent\n                        \n                        \n                            LoginViewComponent\n                        \n                        \n                            OutdoorWeatherDetailViewComponent\n                        \n                        \n                            OutdoorWeatherViewComponent\n                        \n                        \n                            PersonalizationSettingsViewComponent\n                        \n                        \n                            PollenflugDetailViewComponent\n                        \n                        \n                            PollenflugSmallTileComponent\n                        \n                        \n                            PollenflugTileViewComponent\n                        \n                        \n                            RegistrationViewComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { PollenflugTileViewComponent } from './pollenflug-tile-view/pollenflug-tile-view.component';\nimport { UiElementsModule } from '../ui-elements/ui-elements.module';\nimport { RouterModule } from '@angular/router';\nimport { OutdoorWeatherViewComponent } from './outdoor-weather-view/outdoor-weather-view.component';\nimport { HistoryTileViewComponent } from './history-tile-view/history-tile-view.component';\nimport { IndoorTileViewComponent } from './indoor-tile-view/indoor-tile-view.component';\nimport { IndoorDetailViewComponent } from './indoor-detail-view/indoor-detail-view.component';\nimport { PollenflugDetailViewComponent } from './pollenflug-detail-view/pollenflug-detail-view.component';\nimport { HistoryDetailViewComponent } from './history-detail-view/history-detail-view.component';\nimport { ForecastDetailViewComponent } from './forecast-detail-view/forecast-detail-view.component';\nimport { ForecastTileViewComponent } from './forecast-tile-view/forecast-tile-view.component';\nimport { PollenflugSmallTileComponent } from './pollenflug-small-tile/pollenflug-small-tile.component';\nimport { PersonalizationSettingsViewComponent } from './personalization-settings-view/personalization-settings-view.component';\nimport { LoginViewComponent } from './login-view/login-view.component';\nimport { RegistrationViewComponent } from './registration-view/registration-view.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { PersonalizationViewComponent } from './personalization-view/personalization-view.component';\nimport { OutdoorWeatherDetailViewComponent } from './outdoor-weather-detail-view/outdoor-weather-detail-view.component';\nimport { HumidityTileViewComponent } from './humidity-tile-view/humidity-tile-view.component';\nimport { ApparentTemperatureTileViewComponent } from './apparent-temperature-tile-view/apparent-temperature-tile-view.component';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { SimpleTileViewComponent } from './simple-tile-view/simple-tile-view.component';\nimport { ChartsModule } from \"@rinminase/ng-charts\";\nimport { ConfigurationViewComponent } from './configuration-view/configuration-view.component';\nimport { ConfigurationTileViewComponent, ConfigurationTilePopUpDialogView } from './configuration-tile-view/configuration-tile-view.component';\nimport { NgxSpinnerModule } from \"ngx-spinner\";\nimport { OpenAPELoginTileViewComponent } from './open-apelogin-tile-view/open-apelogin-tile-view.component';\n\n\n\n@NgModule({\n  declarations: [\n    PollenflugTileViewComponent,\n    OutdoorWeatherViewComponent,\n    HistoryTileViewComponent,\n    IndoorTileViewComponent,\n    IndoorDetailViewComponent,\n    PollenflugDetailViewComponent,\n    HistoryDetailViewComponent,\n    ForecastDetailViewComponent,\n    ForecastTileViewComponent,\n    PollenflugSmallTileComponent,\n    PersonalizationSettingsViewComponent,\n    LoginViewComponent,\n    RegistrationViewComponent,\n    PersonalizationViewComponent,\n    OutdoorWeatherDetailViewComponent,\n    HumidityTileViewComponent,\n    ApparentTemperatureTileViewComponent,\n    ConfigurationTilePopUpDialogView,\n    SimpleTileViewComponent,\n    ConfigurationViewComponent,\n    ConfigurationTileViewComponent,\n    OpenAPELoginTileViewComponent\n  ],\n  imports: [\n    CommonModule,\n    RouterModule,\n    UiElementsModule,\n    FormsModule, \n    ReactiveFormsModule,\n    MatDialogModule,\n    ChartsModule,\n    NgxSpinnerModule,\n  ],\n  exports: [\n    PollenflugTileViewComponent,\n    OutdoorWeatherViewComponent,\n    HistoryTileViewComponent,\n    IndoorTileViewComponent,\n    IndoorDetailViewComponent,\n    PollenflugDetailViewComponent,\n    HistoryDetailViewComponent,\n    ForecastDetailViewComponent,\n    ForecastTileViewComponent,\n    PollenflugSmallTileComponent,\n    PersonalizationSettingsViewComponent,\n    LoginViewComponent,\n    RegistrationViewComponent,\n    OutdoorWeatherDetailViewComponent,\n    HumidityTileViewComponent,\n    ApparentTemperatureTileViewComponent,\n  ]\n})\nexport class ViewsModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/WeatherAPIService.html":{"url":"injectables/WeatherAPIService.html","title":"injectable - WeatherAPIService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  WeatherAPIService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/api/weather-api.service.ts\n        \n\n            \n                Description\n            \n            \n                Weather api service injectable\nUse this service to access the network. It implementes all routes \nfor the weather data.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                loadForecast\n                            \n                            \n                                    Public\n                                loadHistoryDataSubject\n                            \n                            \n                                    Public\n                                loadIndoorRoomData\n                            \n                            \n                                    Public\n                                loadOutdoorWeather\n                            \n                            \n                                    Public\n                                loadPollen\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/api/weather-api.service.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            loadForecast\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    loadForecast()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/api/weather-api.service.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        an observable with the loadad WeatherForecastData from the api or test data\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            loadHistoryDataSubject\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    loadHistoryDataSubject(endDate: Date, beginDate: Date)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/api/weather-api.service.ts:113\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    endDate\n                                    \n                                                Date\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    beginDate\n                                    \n                                                Date\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        an observable with the loadad WeatherHistoryData or test data\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            loadIndoorRoomData\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    loadIndoorRoomData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/api/weather-api.service.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        an observable with the loadad IndoorRoomData from the api or test data\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            loadOutdoorWeather\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    loadOutdoorWeather()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/api/weather-api.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        an observable with the loadad OutdoorWeatherData from the api or test data\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            loadPollen\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    loadPollen()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/api/weather-api.service.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        an observable with the loadad PollenData from the api or test data\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { FORECAST, INDOORAIRQUALITY, OUTDOORWEATHER, POLLEN, WEATHERHISTORY } from '../../model/mock-data/weather.mock';\nimport { OutdoorWeatherData, PollenData, IndoorRoomData, WeatherForecastData, WeatherHistoryData } from '../../model/weather';\nimport { Observable, of } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\n\n/**\n * Weather api service injectable\n * \n * Use this service to access the network. It implementes all routes \n * for the weather data.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class WeatherAPIService {\n  private outdoorURL = environment.baseURL + 'weather-data/outdoor/latest';\n  private indoorURL = environment.baseURL + 'weather-data/indoor/latest';\n  private historyURL = environment.baseURL + 'weather-data/outdoor/history';\n  private forecastURL = environment.baseURL + 'weather-data/forecast/latest';\n  private allPollenTypesURL = environment.baseURL + 'pollen/all';\n\n  constructor(private httpClient: HttpClient) { }\n\n  /**\n   * @returns an observable with the loadad OutdoorWeatherData from the api or test data\n   */\n  public loadOutdoorWeather(): Observable {\n    if (environment.testData) {\n      return of(OUTDOORWEATHER);\n    }\n    let returnObservable = new Observable((observer) => {\n        this.httpClient.get(this.outdoorURL).subscribe(data => {\n          let outdoorData = this.createOutdoorWeatherDataFromServerResponse(data);\n          observer.next(outdoorData);\n          observer.complete();\n        })\n      }\n    );\n    return returnObservable;\n  }\n\n  /**\n   * @returns an observable with the loadad WeatherForecastData from the api or test data\n   */\n  public loadForecast(): Observable {\n    if (environment.testData) {\n      return of(FORECAST);\n    }\n    let returnObservable = new Observable((observer) => {\n        this.httpClient.get(this.forecastURL).subscribe(data => {\n          let forecastData = this.createOutdoorForecastDataFromServerResponse(data);\n          observer.next(forecastData);\n          observer.complete();\n        })\n      }\n    );\n    return returnObservable;\n  }\n\n  /**\n   * @returns an observable with the loadad PollenData from the api or test data\n   */\n  public loadPollen(): Observable{\n    if (environment.testData) {\n      let pollen = of(POLLEN);\n      return pollen;\n    }\n    let returnObservable = new Observable((observer) => {\n      let response = this.httpClient.get(this.allPollenTypesURL);\n      response.subscribe(data => {\n        let pollenData = this.createPollenDataFromServerResponse(data);\n        observer.next(pollenData);\n        observer.complete();\n      },\n      (error) => {\n        console.log(error);\n        observer.next([]);\n        observer.complete();\n      })\n    });\n    return returnObservable;\n  }\n\n  /**\n   * @returns an observable with the loadad IndoorRoomData from the api or test data\n   */\n  public loadIndoorRoomData(): Observable {\n    if (environment.testData) {\n      let indoorData = of(INDOORAIRQUALITY);\n      return indoorData;\n    }\n    let returnObservable = new Observable((observer) => { // Wir brauchen hier ein Array, -> sollen ja mehrere Räume möglich sein (theoretisch...)\n        this.httpClient.get(this.indoorURL).subscribe(data => {\n          let indoorData = this.createIndoorRoomDataFromServerResponse(data);\n          observer.next([indoorData]);\n          observer.complete();\n        },\n        (error) => {\n          console.log(error);\n          observer.next([]);\n          observer.complete();\n        })\n      }\n    );\n    return returnObservable;\n  }\n\n  /**\n   * @returns an observable with the loadad WeatherHistoryData or test data\n   */\n  public loadHistoryDataSubject(endDate: Date, beginDate: Date): Observable {\n    if (environment.testData) {\n      let forecastData = of(WEATHERHISTORY);\n      return forecastData;\n    }\n    let returnObservable = new Observable((observer) => { \n        this.httpClient.post(this.historyURL,\n          {\n            'begin': this.createServerFriendlyDate(beginDate),\n            'end': this.createServerFriendlyDate(endDate)\n          })\n        .subscribe(data => {\n          let dataPoints: OutdoorWeatherData[] = data.map((element) => {\n            return this.createOutdoorWeatherDataFromServerResponse(element);\n          });\n          console.log(dataPoints);\n          observer.next({'datapoints': dataPoints});\n          observer.complete();\n        })\n      }\n    );\n    return returnObservable;\n  }\n\n  /**\n   * Helper function to convert date to string\n   * @param date \n   * @returns a date as a string which is understandable for the server\n   */\n  private createServerFriendlyDate(date: Date): string {\n    let dateString = date.toISOString().slice(0, 10);\n    let timeString = date.toTimeString().slice(0, 8);\n    return dateString + ' ' + timeString;\n  }\n\n  /**\n   * Helper function to convert the response from the server to an OutdoorWeatherData object\n   * \n   * @param response\n   * @returns OutdoorWeatherData object\n   */\n  private createOutdoorWeatherDataFromServerResponse(response: OutdoorWeatherResponse): OutdoorWeatherData {\n    const date = response.timestamp;\n    const year = date.substr(0, 4);\n    const month = date.substr(5, 2);\n    const day = date.substr(8, 2);\n    const time = date.substr(11);\n\n    const validDate = new Date(month + '/' + day + '/' + year + ' ' + time);\n\n    return {\n            temperature: response.temperature,\n            maxTemperature: -99, // Not implemented yet\n            minTemperature: -99, // Not implemented yet\n            humidity: response.humidity,\n            timestamp: validDate,\n            weather: response.weather,\n            apparentTemperature: response.apparentTemperature,\n            location: response.location_name,\n            postCode: response.location\n          }\n  }\n\n  /**\n   * Helper function to convert the response from the server to an IndoorRoomData object\n   * \n   * @param response\n   * @returns IndoorRoomData object\n   */\n  private createIndoorRoomDataFromServerResponse(response: IndoorRoomResponse): IndoorRoomData {\n    return {\n            roomID: response.id + '',\n            roomName: response.location,\n            airQuality: response.gasVal, \n            temperature: response.temperature, \n            humidity: response.humidity, \n            timestamp: new Date(response.timestamp), \n          }\n  }\n\n  /**\n   * Helper function to convert the response from the server to an PollenData[] object\n   * \n   * @param response\n   * @returns PollenData[] object\n   */\n  private createPollenDataFromServerResponse(response: PollenResponse[]): PollenData[] {\n    console.log(\"Pollen daten sind hier\", response)\n    let pollen: PollenData[] = [];\n    response.forEach(item => {\n      pollen.push({\n        id: item.id,\n        pollenName: item.pollenName,\n        today: item.loadRating,\n        tomorrow: ''\n      })\n    })\n    return pollen\n  }\n\n  /**\n   * Helper function to convert the response from the server to an WeatherForecastData object\n   * \n   * @param response\n   * @returns WeatherForecastData object\n   */\n  private createOutdoorForecastDataFromServerResponse(response: ForecastResponse): WeatherForecastData {\n    return {\n      trend: response.trend,\n      weatherDescription: response.weatherDescription, \n      weatherIcon: response.weatherIcon\n    }\n  }\n}\n\n/**\n * Model of the pollen api response\n */\ninterface PollenResponse {\n  id: number,\n  pollenName: string,\n  loadRating: string,\n}\n\n/**\n * Model of the outdoor weather api response\n */\ninterface OutdoorWeatherResponse {\n  id: number,\n  humidity: number,\n  temperature: number,\n  pressure: number,\n  location: string,\n  location_name: string,\n  timestamp: string,\n  weather: string,\n  apparentTemperature: number\n}\n\n/**\n * Model of the indoor room api response\n */\ninterface IndoorRoomResponse {\n  id: number,\n  humidity: number,\n  temperature: number,\n  pressure: number,\n  gasVal: number,\n  location: string,\n  timestamp: string,\n}\n\n/**\n * Model of the forecast api response\n */\ninterface ForecastResponse {\n  id: number,\n  trend: string,\n  weatherIcon: string,\n  weatherDescription: string,\n  seaPressure: number,\n  timestampd: string\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/WeatherData.html":{"url":"interfaces/WeatherData.html","title":"interface - WeatherData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  WeatherData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/weather.ts\n        \n\n\n\n\n\n\n    \n\n\n    \n        export interface WeatherData { }\n\nexport enum TileType {\n    indoorRoom,\n    pollenSmall,\n    pollenList,\n    history,\n    forecast,\n    humidity,\n    apparentTemperature,\n}\n\nexport interface TileArrays {\n    dashboard: Tile[],\n    pollen : Tile[],\n    indoorRooms: Tile[]\n  }\n  \n\nexport enum TilePriority {\n    important, //Highest \n    high,\n    middle,\n    low,\n}\n\nexport interface Tile {\n    type: TileType;\n    data: A;\n    id: string;\n    priority: TilePriority\n}\n\nexport interface OutdoorWeatherData extends WeatherData {\n    temperature: number // in °C\n    maxTemperature: number, //TODO: external database required \"forecast\"  --> // TODO: Move to \"daily\" data structure\n    minTemperature: number, //TODO: external database required \"forecast\"  --> // TODO: Move to \"daily\" data structure\n    humidity: number, // in %\n    timestamp: Date, \n    weather: string, // TODO: external API required\n    apparentTemperature: number, // in °C ---> die \"gefühlte\" Temperatur\n    location: string, // e.g. \"Stuttgart\" TODO: Make configurable in ESP Wlan-Board\n    postCode: string,\n}\n\nexport interface WeatherForecastData extends WeatherData {\n    trend: string,\n    weatherDescription: string,\n    weatherIcon: string,\n  }\n\nexport interface PollenData extends WeatherData {\n    pollenName: string, // TODO: Maybe we should use the same Pollen enum as in user-context.ts\n    id: number,\n    today: string, // -1  3\n    tomorrow: string, // -1  3\n}\n\nexport interface IndoorRoomData extends WeatherData {\n    roomID: string,\n    roomName: string,\n    airQuality: number, // in %\n    temperature: number // in °C \n    humidity: number, // in %\n    timestamp: Date, \n}\n\nexport interface WeatherHistoryData extends WeatherData {\n    datapoints: OutdoorWeatherData[],\n}\n\nexport interface GraphDataSet extends WeatherData {\n    temperatureDataPoints: number[];\n    humidityDataPoints: number[];\n    xAxisLabel: string[];\n    label: string;\n    temperatureAverage: number;\n    humidityAverage: number;\n}\n\nexport interface WeatherHistoryByDayData extends WeatherData  {\n    averageTemperature: number, // in °C\n    averageHumidity: number, // in %\n}\n\nexport enum Daytime {\n    noon,\n    night,\n    dawn,\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/WeatherDataService.html":{"url":"injectables/WeatherDataService.html","title":"injectable - WeatherDataService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  WeatherDataService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/weather-data.service.ts\n        \n\n            \n                Description\n            \n            \n                Weather data service injectable\nUse this service to access all weather data from the backend\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getDashboardTilesSubject\n                            \n                            \n                                    Public\n                                getForecastDataSubject\n                            \n                            \n                                    Public\n                                getHistoryDataSubject\n                            \n                            \n                                    Public\n                                getIndoorTilesSubject\n                            \n                            \n                                    Public\n                                getOutdoorWeatherDataSubject\n                            \n                            \n                                    Public\n                                getPollenTilesSubject\n                            \n                            \n                                    Public\n                                loadMoreHistoryData\n                            \n                            \n                                    Public\n                                reloadData\n                            \n                            \n                                    Public\n                                reloadTiles\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(tileService: TileService, weatherAPIService: WeatherAPIService, userContextService: UserContextService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/weather-data.service.ts:106\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        tileService\n                                                  \n                                                        \n                                                                        TileService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        weatherAPIService\n                                                  \n                                                        \n                                                                        WeatherAPIService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userContextService\n                                                  \n                                                        \n                                                                        UserContextService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getDashboardTilesSubject\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getDashboardTilesSubject()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/weather-data.service.ts:219\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :         BehaviorSubject\n\n                    \n                    \n                        the behavior subject of the dashboard tiles \n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getForecastDataSubject\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getForecastDataSubject()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/weather-data.service.ts:240\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :         BehaviorSubject\n\n                    \n                    \n                        the behavior subject of the forecast data\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getHistoryDataSubject\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getHistoryDataSubject()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/weather-data.service.ts:233\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :         BehaviorSubject\n\n                    \n                    \n                        the behavior subject of the hsitory data\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getIndoorTilesSubject\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getIndoorTilesSubject()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/weather-data.service.ts:247\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :         BehaviorSubject\n\n                    \n                    \n                        the behavior subject of the indoor tiles\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getOutdoorWeatherDataSubject\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getOutdoorWeatherDataSubject()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/weather-data.service.ts:226\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :     BehaviorSubject\n\n                    \n                    \n                        the behavior subject of the outdoor weahter\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getPollenTilesSubject\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getPollenTilesSubject()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/weather-data.service.ts:254\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :         BehaviorSubject\n\n                    \n                    \n                        the behavior subject of the pollen tiles array\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            loadMoreHistoryData\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    loadMoreHistoryData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/weather-data.service.ts:185\n                \n            \n\n\n            \n                \n                    Public function to lazy load more history data. It uses the stored oldestHistoryDate \nto load one more month before this date.\n\n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            reloadData\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    reloadData()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/weather-data.service.ts:177\n                \n            \n\n\n            \n                \n                    Public function to load new data from the network\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            reloadTiles\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    reloadTiles()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/weather-data.service.ts:155\n                \n            \n\n\n            \n                \n                    This function creates the important tile arrays which are shown on the dashboard.\nEvery time this function is called, the createTiles() function of the tiles service is\ncalled and afterward it will trigger the behaviour subjects to reload.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject, forkJoin, Observable, of, Subject} from 'rxjs';\nimport { Daytime, IndoorRoomData, OutdoorWeatherData, PollenData, Tile, WeatherData, WeatherForecastData, WeatherHistoryData } from '../model/weather';\nimport { TileService } from './tile.service';\nimport { UserContextService } from './user-context.service';\nimport { WeatherAPIService } from './api/weather-api.service';\n\n/**\n * Weather data service injectable\n * \n * Use this service to access all weather data from the backend\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class WeatherDataService {\n\n  /**\n  * Source of truth of all dashboard tiles data. Including setter for this service.\n  * The BehaviorSubject is accessible through the getDashboardTilesSubject() function.\n  */\n  private _dashboardTiles: BehaviorSubject[]> = new BehaviorSubject[]>([]);\n  private set dashboardTiles(tiles: Tile[]) {\n    this._dashboardTiles.next(tiles);\n  }\n \n  /**\n  * Source of truth of pollen tiles data. Including setter for this service.\n  * The BehaviorSubject is accessible through the getPollenTilesSubject() function.\n  */\n  private _pollenTiles: BehaviorSubject[]> =  new BehaviorSubject[]>([]);\n  private set pollenTiles(tiles: Tile[]) {\n    this._pollenTiles.next(tiles);\n  }\n\n  /**\n  * Source of truth of indoor room tiles data. Including setter for this service.\n  * The BehaviorSubject is accessible through the getIndoorRoomTilesSubject() function.\n  */\n  private _indoorRoomTiles: BehaviorSubject[]> =  new BehaviorSubject[]>([]);\n  private set indoorRoomTiles(tiles: Tile[]) {\n    this._indoorRoomTiles.next(tiles);\n  }\n  \n \n  /**\n  * Source of truth of pollen data. Including setter and getter for this service.\n  */\n  private _pollenData: BehaviorSubject = new BehaviorSubject(undefined);\n  private get pollenData(): PollenData[] | undefined {\n    return this._pollenData.getValue();\n  }\n  private set pollenData(value: PollenData[] | undefined) {\n    this._pollenData.next(value);\n  }\n\n  /**\n  * Source of truth of indoor room data. Including setter and getter for this service.\n  */\n  private _indoorRoomsData: BehaviorSubject = new BehaviorSubject(undefined);\n  private get indoorRoomsData(): IndoorRoomData[] | undefined {\n    return this._indoorRoomsData.getValue();\n  }\n  private set indoorRoomsData(value: IndoorRoomData[] | undefined) {\n    this._indoorRoomsData.next(value);\n  }\n \n\n  /**\n  * Source of truth of forecast data. Including setter and getter for this service.\n  */\n  private _forecastData: BehaviorSubject = new BehaviorSubject(undefined);\n  private get forecastData(): WeatherForecastData | undefined {\n    return this._forecastData.getValue();\n  }\n  private set forecastData(value: WeatherForecastData | undefined) {\n    this._forecastData.next(value);\n  }\n\n  /**\n  * Source of truth of history data. Including setter and getter for this service.\n  */\n  private _historyData: BehaviorSubject = new BehaviorSubject(undefined);\n  private get historyData(): WeatherHistoryData | undefined {\n    return this._historyData.getValue();\n  }\n  private set historyData(value: WeatherHistoryData | undefined) {\n    this._historyData.next(value);\n  }\n\n  /**\n  * Source of truth of outdoor weather data. Including setter and getter for this service.\n  */  \n  private _outdoorWeatherData: BehaviorSubject = new BehaviorSubject(undefined);\n  private get outdoorWeatherData(): OutdoorWeatherData | undefined {\n    return this._outdoorWeatherData.getValue();\n  }\n  private set outdoorWeatherData(value: OutdoorWeatherData | undefined) {\n    this._outdoorWeatherData.next(value);\n  }\n\n  /**\n  * This date is important to enable lazy loading history data. Initially one month\n  * is loaded. If more history data is needed, one month more will be downloaded.\n  */  \n  private oldestHistoryDate = Date.now();\n\n  constructor(private tileService: TileService,\n              private weatherAPIService: WeatherAPIService,\n              private userContextService: UserContextService) { \n      this.loadWeatherData();\n      this.registerForUserContextChange()\n    }\n\n  /**\n  * This function is called to load all weather data from the server. The function \n  * waits until every data is loaded and calls afterwards the reloadTiles() function\n  * of this service. \n  */  \n  private loadWeatherData(): void {\n    this.oldestHistoryDate = Date.now();\n    \n    let outDoorWeather = this.weatherAPIService.loadOutdoorWeather()\n    let pollen = this.weatherAPIService.loadPollen()\n    let forecast = this.weatherAPIService.loadForecast()\n    let history = this.loadMonthFromHistory(new Date(this.oldestHistoryDate));\n    let indoorRoom = this.weatherAPIService.loadIndoorRoomData()\n\n    forkJoin([outDoorWeather, pollen, forecast, history, indoorRoom]).subscribe(results => {\n      this.outdoorWeatherData = results[0];\n      this.pollenData = results[1];\n      this.forecastData = results[2];\n      this.historyData = results[3];\n      this.indoorRoomsData = results[4];\n\n      this.reloadTiles();\n    });\n  }\n\n  /**\n  * For the adaptive order of the dashboard tiles, it is needed to listen for\n  * user context changes. E.g. if the user selects another pollen, then \n  */  \n  private registerForUserContextChange(): void {\n    this.userContextService.getUserContextSubject().subscribe(() => {\n      this.reloadTiles()\n    })\n  }\n\n  /**\n  * This function creates the important tile arrays which are shown on the dashboard.\n  * Every time this function is called, the createTiles() function of the tiles service is\n  * called and afterward it will trigger the behaviour subjects to reload.\n  */  \n  public reloadTiles(): void {\n    let outdoorWeatherData = this.outdoorWeatherData;\n    let pollenData = this.pollenData;\n    let forecastData = this.forecastData;\n    let historyData = this.historyData\n    let indoorRoomData = this.indoorRoomsData;\n\n    if(pollenData && forecastData && historyData && indoorRoomData && outdoorWeatherData) {\n      let result = this.tileService.createTiles(outdoorWeatherData, \n                                                pollenData, \n                                                forecastData, \n                                                historyData, \n                                                indoorRoomData)\n      this.dashboardTiles = result.dashboard;\n      this.pollenTiles = result.pollen;\n      this.indoorRoomTiles = result.indoorRooms;\n    }\n  }\n\n  /**\n  * Public function to load new data from the network\n  */  \n  public reloadData(): void {\n    this.loadWeatherData();\n  }\n\n  /**\n  * Public function to lazy load more history data. It uses the stored oldestHistoryDate \n  * to load one more month before this date.\n  */  \n  public loadMoreHistoryData(): Observable {\n    let observable = this.loadMonthFromHistory(new Date(this.oldestHistoryDate));\n    observable.subscribe(data => {\n      let historyData = this.historyData\n      if(historyData) {\n        this.historyData = {\n          datapoints: historyData.datapoints.concat(data.datapoints)\n        };\n      }\n    });\n    return observable\n  }\n\n  /**\n  * Helper function to load one more month of history data \n  * \n  * @returns history data from the server\n  */  \n  private loadMonthFromHistory(oldestHistoryDate: Date): Observable {\n    let fromDate = new Date(oldestHistoryDate);\n    let toDate: Date;\n    if(oldestHistoryDate.getMonth() []>{\n    return this._dashboardTiles;\n  }  \n\n  /**\n  * @returns the behavior subject of the outdoor weahter\n  */  \n  public getOutdoorWeatherDataSubject(): BehaviorSubject {\n    return this._outdoorWeatherData\n  }\n\n  /**\n  * @returns the behavior subject of the hsitory data\n  */  \n  public getHistoryDataSubject(): BehaviorSubject {\n    return this._historyData;\n  }\n\n  /**\n  * @returns the behavior subject of the forecast data\n  */  \n  public getForecastDataSubject(): BehaviorSubject {\n    return this._forecastData;\n  }\n\n  /**\n  * @returns the behavior subject of the indoor tiles\n  */  \n  public getIndoorTilesSubject() : BehaviorSubject[]>{\n    return this._indoorRoomTiles\n  }\n\n  /**\n  * @returns the behavior subject of the pollen tiles array\n  */  \n  public getPollenTilesSubject(): BehaviorSubject[]>{\n    return this._pollenTiles\n  } \n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/WeatherForecastData.html":{"url":"interfaces/WeatherForecastData.html","title":"interface - WeatherForecastData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  WeatherForecastData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/weather.ts\n        \n\n\n            \n                Extends\n            \n            \n                        WeatherData\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        trend\n                                \n                                \n                                        weatherDescription\n                                \n                                \n                                        weatherIcon\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        trend\n                                    \n                                \n                                \n                                    \n                                        trend:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        weatherDescription\n                                    \n                                \n                                \n                                    \n                                        weatherDescription:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        weatherIcon\n                                    \n                                \n                                \n                                    \n                                        weatherIcon:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface WeatherData { }\n\nexport enum TileType {\n    indoorRoom,\n    pollenSmall,\n    pollenList,\n    history,\n    forecast,\n    humidity,\n    apparentTemperature,\n}\n\nexport interface TileArrays {\n    dashboard: Tile[],\n    pollen : Tile[],\n    indoorRooms: Tile[]\n  }\n  \n\nexport enum TilePriority {\n    important, //Highest \n    high,\n    middle,\n    low,\n}\n\nexport interface Tile {\n    type: TileType;\n    data: A;\n    id: string;\n    priority: TilePriority\n}\n\nexport interface OutdoorWeatherData extends WeatherData {\n    temperature: number // in °C\n    maxTemperature: number, //TODO: external database required \"forecast\"  --> // TODO: Move to \"daily\" data structure\n    minTemperature: number, //TODO: external database required \"forecast\"  --> // TODO: Move to \"daily\" data structure\n    humidity: number, // in %\n    timestamp: Date, \n    weather: string, // TODO: external API required\n    apparentTemperature: number, // in °C ---> die \"gefühlte\" Temperatur\n    location: string, // e.g. \"Stuttgart\" TODO: Make configurable in ESP Wlan-Board\n    postCode: string,\n}\n\nexport interface WeatherForecastData extends WeatherData {\n    trend: string,\n    weatherDescription: string,\n    weatherIcon: string,\n  }\n\nexport interface PollenData extends WeatherData {\n    pollenName: string, // TODO: Maybe we should use the same Pollen enum as in user-context.ts\n    id: number,\n    today: string, // -1  3\n    tomorrow: string, // -1  3\n}\n\nexport interface IndoorRoomData extends WeatherData {\n    roomID: string,\n    roomName: string,\n    airQuality: number, // in %\n    temperature: number // in °C \n    humidity: number, // in %\n    timestamp: Date, \n}\n\nexport interface WeatherHistoryData extends WeatherData {\n    datapoints: OutdoorWeatherData[],\n}\n\nexport interface GraphDataSet extends WeatherData {\n    temperatureDataPoints: number[];\n    humidityDataPoints: number[];\n    xAxisLabel: string[];\n    label: string;\n    temperatureAverage: number;\n    humidityAverage: number;\n}\n\nexport interface WeatherHistoryByDayData extends WeatherData  {\n    averageTemperature: number, // in °C\n    averageHumidity: number, // in %\n}\n\nexport enum Daytime {\n    noon,\n    night,\n    dawn,\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/WeatherHistoryByDayData.html":{"url":"interfaces/WeatherHistoryByDayData.html","title":"interface - WeatherHistoryByDayData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  WeatherHistoryByDayData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/weather.ts\n        \n\n\n            \n                Extends\n            \n            \n                        WeatherData\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        averageHumidity\n                                \n                                \n                                        averageTemperature\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        averageHumidity\n                                    \n                                \n                                \n                                    \n                                        averageHumidity:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        averageTemperature\n                                    \n                                \n                                \n                                    \n                                        averageTemperature:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface WeatherData { }\n\nexport enum TileType {\n    indoorRoom,\n    pollenSmall,\n    pollenList,\n    history,\n    forecast,\n    humidity,\n    apparentTemperature,\n}\n\nexport interface TileArrays {\n    dashboard: Tile[],\n    pollen : Tile[],\n    indoorRooms: Tile[]\n  }\n  \n\nexport enum TilePriority {\n    important, //Highest \n    high,\n    middle,\n    low,\n}\n\nexport interface Tile {\n    type: TileType;\n    data: A;\n    id: string;\n    priority: TilePriority\n}\n\nexport interface OutdoorWeatherData extends WeatherData {\n    temperature: number // in °C\n    maxTemperature: number, //TODO: external database required \"forecast\"  --> // TODO: Move to \"daily\" data structure\n    minTemperature: number, //TODO: external database required \"forecast\"  --> // TODO: Move to \"daily\" data structure\n    humidity: number, // in %\n    timestamp: Date, \n    weather: string, // TODO: external API required\n    apparentTemperature: number, // in °C ---> die \"gefühlte\" Temperatur\n    location: string, // e.g. \"Stuttgart\" TODO: Make configurable in ESP Wlan-Board\n    postCode: string,\n}\n\nexport interface WeatherForecastData extends WeatherData {\n    trend: string,\n    weatherDescription: string,\n    weatherIcon: string,\n  }\n\nexport interface PollenData extends WeatherData {\n    pollenName: string, // TODO: Maybe we should use the same Pollen enum as in user-context.ts\n    id: number,\n    today: string, // -1  3\n    tomorrow: string, // -1  3\n}\n\nexport interface IndoorRoomData extends WeatherData {\n    roomID: string,\n    roomName: string,\n    airQuality: number, // in %\n    temperature: number // in °C \n    humidity: number, // in %\n    timestamp: Date, \n}\n\nexport interface WeatherHistoryData extends WeatherData {\n    datapoints: OutdoorWeatherData[],\n}\n\nexport interface GraphDataSet extends WeatherData {\n    temperatureDataPoints: number[];\n    humidityDataPoints: number[];\n    xAxisLabel: string[];\n    label: string;\n    temperatureAverage: number;\n    humidityAverage: number;\n}\n\nexport interface WeatherHistoryByDayData extends WeatherData  {\n    averageTemperature: number, // in °C\n    averageHumidity: number, // in %\n}\n\nexport enum Daytime {\n    noon,\n    night,\n    dawn,\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/WeatherHistoryData.html":{"url":"interfaces/WeatherHistoryData.html","title":"interface - WeatherHistoryData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  WeatherHistoryData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/model/weather.ts\n        \n\n\n            \n                Extends\n            \n            \n                        WeatherData\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        datapoints\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        datapoints\n                                    \n                                \n                                \n                                    \n                                        datapoints:     OutdoorWeatherData[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     OutdoorWeatherData[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface WeatherData { }\n\nexport enum TileType {\n    indoorRoom,\n    pollenSmall,\n    pollenList,\n    history,\n    forecast,\n    humidity,\n    apparentTemperature,\n}\n\nexport interface TileArrays {\n    dashboard: Tile[],\n    pollen : Tile[],\n    indoorRooms: Tile[]\n  }\n  \n\nexport enum TilePriority {\n    important, //Highest \n    high,\n    middle,\n    low,\n}\n\nexport interface Tile {\n    type: TileType;\n    data: A;\n    id: string;\n    priority: TilePriority\n}\n\nexport interface OutdoorWeatherData extends WeatherData {\n    temperature: number // in °C\n    maxTemperature: number, //TODO: external database required \"forecast\"  --> // TODO: Move to \"daily\" data structure\n    minTemperature: number, //TODO: external database required \"forecast\"  --> // TODO: Move to \"daily\" data structure\n    humidity: number, // in %\n    timestamp: Date, \n    weather: string, // TODO: external API required\n    apparentTemperature: number, // in °C ---> die \"gefühlte\" Temperatur\n    location: string, // e.g. \"Stuttgart\" TODO: Make configurable in ESP Wlan-Board\n    postCode: string,\n}\n\nexport interface WeatherForecastData extends WeatherData {\n    trend: string,\n    weatherDescription: string,\n    weatherIcon: string,\n  }\n\nexport interface PollenData extends WeatherData {\n    pollenName: string, // TODO: Maybe we should use the same Pollen enum as in user-context.ts\n    id: number,\n    today: string, // -1  3\n    tomorrow: string, // -1  3\n}\n\nexport interface IndoorRoomData extends WeatherData {\n    roomID: string,\n    roomName: string,\n    airQuality: number, // in %\n    temperature: number // in °C \n    humidity: number, // in %\n    timestamp: Date, \n}\n\nexport interface WeatherHistoryData extends WeatherData {\n    datapoints: OutdoorWeatherData[],\n}\n\nexport interface GraphDataSet extends WeatherData {\n    temperatureDataPoints: number[];\n    humidityDataPoints: number[];\n    xAxisLabel: string[];\n    label: string;\n    temperatureAverage: number;\n    humidityAverage: number;\n}\n\nexport interface WeatherHistoryByDayData extends WeatherData  {\n    averageTemperature: number, // in °C\n    averageHumidity: number, // in %\n}\n\nexport enum Daytime {\n    noon,\n    night,\n    dawn,\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/components/screens/dashboard-screen/dashboard-screen.component.ts\n            \n            component\n            DashboardScreenComponent\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/app/components/screens/detail-screen/detail-screen.component.ts\n            \n            component\n            DetailScreenComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/components/screens/onboarding-screen/onboarding-screen.component.ts\n            \n            component\n            OnboardingScreenComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/components/screens/settings-screen/settings-screen.component.ts\n            \n            component\n            SettingsScreenComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/components/ui-elements/back-button-element/back-button-element.component.ts\n            \n            component\n            BackButtonElementComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/components/ui-elements/card-element/card-element.component.ts\n            \n            component\n            CardElementComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/components/ui-elements/checkbox-switcher-element/checkbox-switcher-element.component.ts\n            \n            component\n            CheckboxSwitcherElementComponent\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/components/ui-elements/menu-bar-element/menu-bar-element.component.ts\n            \n            component\n            MenuBarElementComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/components/ui-elements/menu-button-element/menu-button-element.component.ts\n            \n            component\n            MenuButtonElementComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/components/ui-elements/menu-element/menu-element.component.ts\n            \n            component\n            MenuElementComponent\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/components/ui-elements/nav-bar-element/nav-bar-element.component.ts\n            \n            component\n            NavBarElementComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/components/ui-elements/pollen-list-element/pollen-list-element.component.ts\n            \n            component\n            PollenListElementComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/components/ui-elements/pollen-tag-element/pollen-tag-element.component.ts\n            \n            component\n            PollenTagElementComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/components/ui-elements/progress-chart-element/progress-chart-element.component.ts\n            \n            component\n            ProgressChartElementComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/components/ui-elements/slider-element/slider-element.component.ts\n            \n            component\n            SliderElementComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/components/ui-elements/tts-player-element/tts-player-element.component.ts\n            \n            component\n            TtsPlayerElementComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/components/views/apparent-temperature-tile-view/apparent-temperature-tile-view.component.ts\n            \n            component\n            ApparentTemperatureTileViewComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/components/views/configuration-tile-view/configuration-tile-view.component.ts\n            \n            component\n            ConfigurationTilePopUpDialogView\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/components/views/configuration-tile-view/configuration-tile-view.component.ts\n            \n            component\n            ConfigurationTileViewComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/components/views/configuration-view/configuration-view.component.ts\n            \n            component\n            ConfigurationViewComponent\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/components/views/forecast-detail-view/forecast-detail-view.component.ts\n            \n            component\n            ForecastDetailViewComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/components/views/forecast-tile-view/forecast-tile-view.component.ts\n            \n            component\n            ForecastTileViewComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/components/views/history-detail-view/history-detail-view.component.ts\n            \n            component\n            HistoryDetailViewComponent\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                src/app/components/views/history-tile-view/history-tile-view.component.ts\n            \n            component\n            HistoryTileViewComponent\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                src/app/components/views/humidity-tile-view/humidity-tile-view.component.ts\n            \n            component\n            HumidityTileViewComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/components/views/indoor-detail-view/indoor-detail-view.component.ts\n            \n            component\n            IndoorDetailViewComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/components/views/indoor-tile-view/indoor-tile-view.component.ts\n            \n            component\n            IndoorTileViewComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/components/views/login-view/login-view.component.ts\n            \n            component\n            LoginViewComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/components/views/open-apelogin-tile-view/open-apelogin-tile-view.component.ts\n            \n            component\n            OpenAPELoginTileViewComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/components/views/outdoor-weather-detail-view/outdoor-weather-detail-view.component.ts\n            \n            component\n            OutdoorWeatherDetailViewComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/components/views/outdoor-weather-view/outdoor-weather-view.component.ts\n            \n            component\n            OutdoorWeatherViewComponent\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                src/app/components/views/personalization-settings-view/personalization-settings-view.component.ts\n            \n            component\n            PersonalizationSettingsViewComponent\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                src/app/components/views/personalization-view/personalization-view.component.ts\n            \n            component\n            PersonalizationViewComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/components/views/pollenflug-detail-view/pollenflug-detail-view.component.ts\n            \n            component\n            PollenflugDetailViewComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/components/views/pollenflug-small-tile/pollenflug-small-tile.component.ts\n            \n            component\n            PollenflugSmallTileComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/components/views/pollenflug-tile-view/pollenflug-tile-view.component.ts\n            \n            component\n            PollenflugTileViewComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/components/views/registration-view/registration-view.component.ts\n            \n            component\n            RegistrationViewComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/components/views/simple-tile-view/simple-tile-view.component.ts\n            \n            component\n            SimpleTileViewComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/model/credentials.ts\n            \n            interface\n            Credentials\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/model/image.ts\n            \n            interface\n            ImageModel\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/model/mock-data/weather.mock.ts\n            \n            variable\n            AMBROSIA\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/model/mock-data/weather.mock.ts\n            \n            variable\n            BIRKE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/model/mock-data/weather.mock.ts\n            \n            variable\n            DASHBOARDTILES\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/model/mock-data/weather.mock.ts\n            \n            variable\n            ESCHE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/model/mock-data/weather.mock.ts\n            \n            variable\n            FORECAST\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/model/mock-data/weather.mock.ts\n            \n            variable\n            FORECASTTILE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/model/mock-data/weather.mock.ts\n            \n            variable\n            HASEL\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/model/mock-data/weather.mock.ts\n            \n            variable\n            INDOORAIRQUALITY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/model/mock-data/weather.mock.ts\n            \n            variable\n            INDOORAIRQUALITY2\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/model/mock-data/weather.mock.ts\n            \n            variable\n            INDOORROOM1\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/model/mock-data/weather.mock.ts\n            \n            variable\n            INDOORROOM2\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/model/mock-data/weather.mock.ts\n            \n            variable\n            OUTDOORWEA3THE3R114\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/model/mock-data/weather.mock.ts\n            \n            variable\n            OUTDOORWEATHE3R114\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/model/mock-data/weather.mock.ts\n            \n            variable\n            OUTDOORWEATHER\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/model/mock-data/weather.mock.ts\n            \n            variable\n            OUTDOORWEATHER10\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/model/mock-data/weather.mock.ts\n            \n            variable\n            OUTDOORWEATHER11\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/model/mock-data/weather.mock.ts\n            \n            variable\n            OUTDOORWEATHER110\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/model/mock-data/weather.mock.ts\n            \n            variable\n            OUTDOORWEATHER112\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/model/mock-data/weather.mock.ts\n            \n            variable\n            OUTDOORWEATHER113\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/model/mock-data/weather.mock.ts\n            \n            variable\n            OUTDOORWEATHER114\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/model/mock-data/weather.mock.ts\n            \n            variable\n            OUTDOORWEATHER12\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/model/mock-data/weather.mock.ts\n            \n            variable\n            OUTDOORWEATHER13\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/model/mock-data/weather.mock.ts\n            \n            variable\n            OUTDOORWEATHER14\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/model/mock-data/weather.mock.ts\n            \n            variable\n            OUTDOORWEATHER2\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/model/mock-data/weather.mock.ts\n            \n            variable\n            OUTDOORWEATHER3\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/model/mock-data/weather.mock.ts\n            \n            variable\n            OUTDOORWEATHER321\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/model/mock-data/weather.mock.ts\n            \n            variable\n            OUTDOORWEATHER4\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/model/mock-data/weather.mock.ts\n            \n            variable\n            OUTDOORWEATHER41\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/model/mock-data/weather.mock.ts\n            \n            variable\n            POLLEN\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/model/mock-data/weather.mock.ts\n            \n            variable\n            POLLENLIST\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/model/mock-data/weather.mock.ts\n            \n            variable\n            POLLENSMALL\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/model/mock-data/weather.mock.ts\n            \n            variable\n            POLLENSMALL2\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/model/mock-data/weather.mock.ts\n            \n            variable\n            ROGGEN\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/model/mock-data/weather.mock.ts\n            \n            variable\n            SCHLAFZIMMER\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/model/mock-data/weather.mock.ts\n            \n            variable\n            SCHLAFZIMMER2\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/model/mock-data/weather.mock.ts\n            \n            variable\n            WEATHERHISTORY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/model/mock-data/weather.mock.ts\n            \n            variable\n            WEATHERHISTORYBYDAY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/model/mock-data/weather.mock.ts\n            \n            variable\n            WOHNZIMMER\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/model/mock-data/weather.mock.ts\n            \n            variable\n            WOHNZIMMER2\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/model/user-context.ts\n            \n            interface\n            PollenType\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/model/user-context.ts\n            \n            interface\n            UserContext\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/model/user-context.ts\n            \n            interface\n            UserIdentifikation\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/model/user-context.ts\n            \n            variable\n            INITIAL_USER_CONTEXT\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/model/user-context.ts\n            \n            variable\n            INITIAL_USER_IDENTIFIKATION\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/model/weather.ts\n            \n            interface\n            GraphDataSet\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/model/weather.ts\n            \n            interface\n            IndoorRoomData\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/model/weather.ts\n            \n            interface\n            OutdoorWeatherData\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/model/weather.ts\n            \n            interface\n            PollenData\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/model/weather.ts\n            \n            interface\n            Tile\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/model/weather.ts\n            \n            interface\n            TileArrays\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/model/weather.ts\n            \n            interface\n            WeatherData\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/model/weather.ts\n            \n            interface\n            WeatherForecastData\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/model/weather.ts\n            \n            interface\n            WeatherHistoryByDayData\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/model/weather.ts\n            \n            interface\n            WeatherHistoryData\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/route-transition-animation.ts\n            \n            variable\n            routeTransitionAnimations\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/api/esp-configuration-api.service.ts\n            \n            injectable\n            ESPConfigurationAPIService\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/app/services/api/esp-configuration-api.service.ts\n            \n            interface\n            ESPConfiguration\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/app/services/api/user-context-api.service.ts\n            \n            injectable\n            UserContextAPIService\n            \n                9 %\n                (1/11)\n            \n        \n        \n            \n                \n                src/app/services/api/user-context-api.service.ts\n            \n            interface\n            CheckTokenResponse\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/services/api/user-context-api.service.ts\n            \n            interface\n            LoginResponse\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                src/app/services/api/user-context-api.service.ts\n            \n            interface\n            UserContextResponse\n            \n                11 %\n                (1/9)\n            \n        \n        \n            \n                \n                src/app/services/api/weather-api.service.ts\n            \n            injectable\n            WeatherAPIService\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                src/app/services/api/weather-api.service.ts\n            \n            interface\n            ForecastResponse\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                src/app/services/api/weather-api.service.ts\n            \n            interface\n            IndoorRoomResponse\n            \n                12 %\n                (1/8)\n            \n        \n        \n            \n                \n                src/app/services/api/weather-api.service.ts\n            \n            interface\n            OutdoorWeatherResponse\n            \n                10 %\n                (1/10)\n            \n        \n        \n            \n                \n                src/app/services/api/weather-api.service.ts\n            \n            interface\n            PollenResponse\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/app/services/history-tile.service.ts\n            \n            injectable\n            HistoryTileService\n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                src/app/services/history-tile.service.ts\n            \n            variable\n            DAYS\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/services/history-tile.service.ts\n            \n            variable\n            MONTHS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/image.service.ts\n            \n            injectable\n            ImageService\n            \n                80 %\n                (4/5)\n            \n        \n        \n            \n                \n                src/app/services/image.service.ts\n            \n            variable\n            Gradients\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/local-storage.service.ts\n            \n            injectable\n            LocalStorageService\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/app/services/local-storage.service.ts\n            \n            variable\n            DISABLE_LOGIN_IDENTIFIER\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/local-storage.service.ts\n            \n            variable\n            USER_CONTEXT_IDENTIFIER\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/local-storage.service.ts\n            \n            variable\n            USER_IDENTIFIKATION\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/services/speech.service.ts\n            \n            injectable\n            SpeechService\n            \n                60 %\n                (3/5)\n            \n        \n        \n            \n                \n                src/app/services/text.service.ts\n            \n            injectable\n            TextService\n            \n                88 %\n                (8/9)\n            \n        \n        \n            \n                \n                src/app/services/tile.service.ts\n            \n            injectable\n            TileService\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/app/services/user-context.service.ts\n            \n            injectable\n            UserContextService\n            \n                80 %\n                (8/10)\n            \n        \n        \n            \n                \n                src/app/services/weather-data.service.ts\n            \n            injectable\n            WeatherDataService\n            \n                36 %\n                (4/11)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~11.2.10\n        \n            @angular/cdk : ^11.2.11\n        \n            @angular/common : ~11.2.10\n        \n            @angular/compiler : ~11.2.10\n        \n            @angular/core : ~11.2.10\n        \n            @angular/forms : ~11.2.10\n        \n            @angular/material : ^11.2.11\n        \n            @angular/platform-browser : ~11.2.10\n        \n            @angular/platform-browser-dynamic : ~11.2.10\n        \n            @angular/router : ~11.2.10\n        \n            @angular/service-worker : ~11.2.10\n        \n            @rinminase/ng-charts : ^3.3.0\n        \n            ngx-spinner : ^11.0.1\n        \n            rxjs : ~6.6.0\n        \n            tslib : ^2.0.0\n        \n            zone.js : ~0.11.3\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            CardSize   (src/.../card-element.component.ts)\n                        \n                        \n                            Daytime   (src/.../weather.ts)\n                        \n                        \n                            HistoryGraphType   (src/.../history-tile-view.component.ts)\n                        \n                        \n                            Language   (src/.../user-context.ts)\n                        \n                        \n                            Themes   (src/.../user-context.ts)\n                        \n                        \n                            TilePriority   (src/.../weather.ts)\n                        \n                        \n                            TileType   (src/.../weather.ts)\n                        \n                        \n                            TimeInterval   (src/.../history-detail-view.component.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/components/ui-elements/card-element/card-element.component.ts\n    \n        \n            \n                \n                    \n                        \n                        CardSize\n                    \n                \n                        \n                            \n                                 small\n                            \n                        \n                        \n                            \n                                 auto\n                            \n                        \n            \n        \n\n    src/app/model/weather.ts\n    \n        \n            \n                \n                    \n                        \n                        Daytime\n                    \n                \n                        \n                            \n                                 noon\n                            \n                        \n                        \n                            \n                                 night\n                            \n                        \n                        \n                            \n                                 dawn\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        TilePriority\n                    \n                \n                        \n                            \n                                 important\n                            \n                        \n                        \n                            \n                                 high\n                            \n                        \n                        \n                            \n                                 middle\n                            \n                        \n                        \n                            \n                                 low\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        TileType\n                    \n                \n                        \n                            \n                                 indoorRoom\n                            \n                        \n                        \n                            \n                                 pollenSmall\n                            \n                        \n                        \n                            \n                                 pollenList\n                            \n                        \n                        \n                            \n                                 history\n                            \n                        \n                        \n                            \n                                 forecast\n                            \n                        \n                        \n                            \n                                 humidity\n                            \n                        \n                        \n                            \n                                 apparentTemperature\n                            \n                        \n            \n        \n\n    src/app/components/views/history-tile-view/history-tile-view.component.ts\n    \n        \n            \n                \n                    \n                        \n                        HistoryGraphType\n                    \n                \n                        \n                            \n                                 temperature\n                            \n                        \n                        \n                            \n                                 humidity\n                            \n                        \n            \n        \n\n    src/app/model/user-context.ts\n    \n        \n            \n                \n                    \n                        \n                        Language\n                    \n                \n                        \n                            \n                                 de-DE\n                            \n                        \n                        \n                            \n                                 en-EN\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        Themes\n                    \n                \n                        \n                            \n                                 Light\n                            \n                        \n                        \n                            \n                                 Dark\n                            \n                        \n                        \n                            \n                                 Automatic\n                            \n                        \n                        \n                            \n                                 HighContrast\n                            \n                        \n            \n        \n\n    src/app/components/views/history-detail-view/history-detail-view.component.ts\n    \n        \n            \n                \n                    \n                        \n                        TimeInterval\n                    \n                \n                        \n                            \n                                 day\n                            \n                        \n                        \n                            \n                                 week\n                            \n                        \n                        \n                            \n                                 month\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nWeather IO\nEine Smarthome Innovation\nThis project was generated with Angular CLI version 11.2.9.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\n\n\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ScreensModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UiElementsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ViewsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_ScreensModule\n\n\n\ncluster_ScreensModule_declarations\n\n\n\ncluster_UiElementsModule\n\n\n\ncluster_UiElementsModule_declarations\n\n\n\ncluster_UiElementsModule_exports\n\n\n\ncluster_ViewsModule\n\n\n\ncluster_ViewsModule_declarations\n\n\n\ncluster_ViewsModule_exports\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nScreensModule\n\nScreensModule\n\nScreensModule -->\n\nAppRoutingModule->ScreensModule\n\n\n\nAppModule -->\n\nScreensModule->AppModule\n\n\n\n\n\nUiElementsModule\n\nUiElementsModule\n\nAppModule -->\n\nUiElementsModule->AppModule\n\n\n\nScreensModule -->\n\nUiElementsModule->ScreensModule\n\n\n\n\n\nViewsModule\n\nViewsModule\n\nViewsModule -->\n\nUiElementsModule->ViewsModule\n\n\n\n\n\nBackButtonElementComponent \n\nBackButtonElementComponent \n\nBackButtonElementComponent  -->\n\nUiElementsModule->BackButtonElementComponent \n\n\n\n\n\nCardElementComponent \n\nCardElementComponent \n\nCardElementComponent  -->\n\nUiElementsModule->CardElementComponent \n\n\n\n\n\nCheckboxSwitcherElementComponent \n\nCheckboxSwitcherElementComponent \n\nCheckboxSwitcherElementComponent  -->\n\nUiElementsModule->CheckboxSwitcherElementComponent \n\n\n\n\n\nMenuBarElementComponent \n\nMenuBarElementComponent \n\nMenuBarElementComponent  -->\n\nUiElementsModule->MenuBarElementComponent \n\n\n\n\n\nMenuButtonElementComponent \n\nMenuButtonElementComponent \n\nMenuButtonElementComponent  -->\n\nUiElementsModule->MenuButtonElementComponent \n\n\n\n\n\nMenuElementComponent \n\nMenuElementComponent \n\nMenuElementComponent  -->\n\nUiElementsModule->MenuElementComponent \n\n\n\n\n\nNavBarElementComponent \n\nNavBarElementComponent \n\nNavBarElementComponent  -->\n\nUiElementsModule->NavBarElementComponent \n\n\n\n\n\nPollenListElementComponent \n\nPollenListElementComponent \n\nPollenListElementComponent  -->\n\nUiElementsModule->PollenListElementComponent \n\n\n\n\n\nPollenTagElementComponent \n\nPollenTagElementComponent \n\nPollenTagElementComponent  -->\n\nUiElementsModule->PollenTagElementComponent \n\n\n\n\n\nProgressChartElementComponent \n\nProgressChartElementComponent \n\nProgressChartElementComponent  -->\n\nUiElementsModule->ProgressChartElementComponent \n\n\n\n\n\nSliderElementComponent \n\nSliderElementComponent \n\nSliderElementComponent  -->\n\nUiElementsModule->SliderElementComponent \n\n\n\n\n\nTtsPlayerElementComponent \n\nTtsPlayerElementComponent \n\nTtsPlayerElementComponent  -->\n\nUiElementsModule->TtsPlayerElementComponent \n\n\n\nAppModule -->\n\nViewsModule->AppModule\n\n\n\nScreensModule -->\n\nViewsModule->ScreensModule\n\n\n\n\n\nApparentTemperatureTileViewComponent \n\nApparentTemperatureTileViewComponent \n\nApparentTemperatureTileViewComponent  -->\n\nViewsModule->ApparentTemperatureTileViewComponent \n\n\n\n\n\nForecastDetailViewComponent \n\nForecastDetailViewComponent \n\nForecastDetailViewComponent  -->\n\nViewsModule->ForecastDetailViewComponent \n\n\n\n\n\nForecastTileViewComponent \n\nForecastTileViewComponent \n\nForecastTileViewComponent  -->\n\nViewsModule->ForecastTileViewComponent \n\n\n\n\n\nHistoryDetailViewComponent \n\nHistoryDetailViewComponent \n\nHistoryDetailViewComponent  -->\n\nViewsModule->HistoryDetailViewComponent \n\n\n\n\n\nHistoryTileViewComponent \n\nHistoryTileViewComponent \n\nHistoryTileViewComponent  -->\n\nViewsModule->HistoryTileViewComponent \n\n\n\n\n\nHumidityTileViewComponent \n\nHumidityTileViewComponent \n\nHumidityTileViewComponent  -->\n\nViewsModule->HumidityTileViewComponent \n\n\n\n\n\nIndoorDetailViewComponent \n\nIndoorDetailViewComponent \n\nIndoorDetailViewComponent  -->\n\nViewsModule->IndoorDetailViewComponent \n\n\n\n\n\nIndoorTileViewComponent \n\nIndoorTileViewComponent \n\nIndoorTileViewComponent  -->\n\nViewsModule->IndoorTileViewComponent \n\n\n\n\n\nLoginViewComponent \n\nLoginViewComponent \n\nLoginViewComponent  -->\n\nViewsModule->LoginViewComponent \n\n\n\n\n\nOutdoorWeatherDetailViewComponent \n\nOutdoorWeatherDetailViewComponent \n\nOutdoorWeatherDetailViewComponent  -->\n\nViewsModule->OutdoorWeatherDetailViewComponent \n\n\n\n\n\nOutdoorWeatherViewComponent \n\nOutdoorWeatherViewComponent \n\nOutdoorWeatherViewComponent  -->\n\nViewsModule->OutdoorWeatherViewComponent \n\n\n\n\n\nPersonalizationSettingsViewComponent \n\nPersonalizationSettingsViewComponent \n\nPersonalizationSettingsViewComponent  -->\n\nViewsModule->PersonalizationSettingsViewComponent \n\n\n\n\n\nPollenflugDetailViewComponent \n\nPollenflugDetailViewComponent \n\nPollenflugDetailViewComponent  -->\n\nViewsModule->PollenflugDetailViewComponent \n\n\n\n\n\nPollenflugSmallTileComponent \n\nPollenflugSmallTileComponent \n\nPollenflugSmallTileComponent  -->\n\nViewsModule->PollenflugSmallTileComponent \n\n\n\n\n\nPollenflugTileViewComponent \n\nPollenflugTileViewComponent \n\nPollenflugTileViewComponent  -->\n\nViewsModule->PollenflugTileViewComponent \n\n\n\n\n\nRegistrationViewComponent \n\nRegistrationViewComponent \n\nRegistrationViewComponent  -->\n\nViewsModule->RegistrationViewComponent \n\n\n\n\n\nDashboardScreenComponent\n\nDashboardScreenComponent\n\nScreensModule -->\n\nDashboardScreenComponent->ScreensModule\n\n\n\n\n\nDetailScreenComponent\n\nDetailScreenComponent\n\nScreensModule -->\n\nDetailScreenComponent->ScreensModule\n\n\n\n\n\nOnboardingScreenComponent\n\nOnboardingScreenComponent\n\nScreensModule -->\n\nOnboardingScreenComponent->ScreensModule\n\n\n\n\n\nSettingsScreenComponent\n\nSettingsScreenComponent\n\nScreensModule -->\n\nSettingsScreenComponent->ScreensModule\n\n\n\n\n\nBackButtonElementComponent\n\nBackButtonElementComponent\n\nUiElementsModule -->\n\nBackButtonElementComponent->UiElementsModule\n\n\n\n\n\nCardElementComponent\n\nCardElementComponent\n\nUiElementsModule -->\n\nCardElementComponent->UiElementsModule\n\n\n\n\n\nCheckboxSwitcherElementComponent\n\nCheckboxSwitcherElementComponent\n\nUiElementsModule -->\n\nCheckboxSwitcherElementComponent->UiElementsModule\n\n\n\n\n\nMenuBarElementComponent\n\nMenuBarElementComponent\n\nUiElementsModule -->\n\nMenuBarElementComponent->UiElementsModule\n\n\n\n\n\nMenuButtonElementComponent\n\nMenuButtonElementComponent\n\nUiElementsModule -->\n\nMenuButtonElementComponent->UiElementsModule\n\n\n\n\n\nMenuElementComponent\n\nMenuElementComponent\n\nUiElementsModule -->\n\nMenuElementComponent->UiElementsModule\n\n\n\n\n\nNavBarElementComponent\n\nNavBarElementComponent\n\nUiElementsModule -->\n\nNavBarElementComponent->UiElementsModule\n\n\n\n\n\nPollenListElementComponent\n\nPollenListElementComponent\n\nUiElementsModule -->\n\nPollenListElementComponent->UiElementsModule\n\n\n\n\n\nPollenTagElementComponent\n\nPollenTagElementComponent\n\nUiElementsModule -->\n\nPollenTagElementComponent->UiElementsModule\n\n\n\n\n\nProgressChartElementComponent\n\nProgressChartElementComponent\n\nUiElementsModule -->\n\nProgressChartElementComponent->UiElementsModule\n\n\n\n\n\nSliderElementComponent\n\nSliderElementComponent\n\nUiElementsModule -->\n\nSliderElementComponent->UiElementsModule\n\n\n\n\n\nTtsPlayerElementComponent\n\nTtsPlayerElementComponent\n\nUiElementsModule -->\n\nTtsPlayerElementComponent->UiElementsModule\n\n\n\n\n\nApparentTemperatureTileViewComponent\n\nApparentTemperatureTileViewComponent\n\nViewsModule -->\n\nApparentTemperatureTileViewComponent->ViewsModule\n\n\n\n\n\nConfigurationTilePopUpDialogView\n\nConfigurationTilePopUpDialogView\n\nViewsModule -->\n\nConfigurationTilePopUpDialogView->ViewsModule\n\n\n\n\n\nConfigurationTileViewComponent\n\nConfigurationTileViewComponent\n\nViewsModule -->\n\nConfigurationTileViewComponent->ViewsModule\n\n\n\n\n\nConfigurationViewComponent\n\nConfigurationViewComponent\n\nViewsModule -->\n\nConfigurationViewComponent->ViewsModule\n\n\n\n\n\nForecastDetailViewComponent\n\nForecastDetailViewComponent\n\nViewsModule -->\n\nForecastDetailViewComponent->ViewsModule\n\n\n\n\n\nForecastTileViewComponent\n\nForecastTileViewComponent\n\nViewsModule -->\n\nForecastTileViewComponent->ViewsModule\n\n\n\n\n\nHistoryDetailViewComponent\n\nHistoryDetailViewComponent\n\nViewsModule -->\n\nHistoryDetailViewComponent->ViewsModule\n\n\n\n\n\nHistoryTileViewComponent\n\nHistoryTileViewComponent\n\nViewsModule -->\n\nHistoryTileViewComponent->ViewsModule\n\n\n\n\n\nHumidityTileViewComponent\n\nHumidityTileViewComponent\n\nViewsModule -->\n\nHumidityTileViewComponent->ViewsModule\n\n\n\n\n\nIndoorDetailViewComponent\n\nIndoorDetailViewComponent\n\nViewsModule -->\n\nIndoorDetailViewComponent->ViewsModule\n\n\n\n\n\nIndoorTileViewComponent\n\nIndoorTileViewComponent\n\nViewsModule -->\n\nIndoorTileViewComponent->ViewsModule\n\n\n\n\n\nLoginViewComponent\n\nLoginViewComponent\n\nViewsModule -->\n\nLoginViewComponent->ViewsModule\n\n\n\n\n\nOpenAPELoginTileViewComponent\n\nOpenAPELoginTileViewComponent\n\nViewsModule -->\n\nOpenAPELoginTileViewComponent->ViewsModule\n\n\n\n\n\nOutdoorWeatherDetailViewComponent\n\nOutdoorWeatherDetailViewComponent\n\nViewsModule -->\n\nOutdoorWeatherDetailViewComponent->ViewsModule\n\n\n\n\n\nOutdoorWeatherViewComponent\n\nOutdoorWeatherViewComponent\n\nViewsModule -->\n\nOutdoorWeatherViewComponent->ViewsModule\n\n\n\n\n\nPersonalizationSettingsViewComponent\n\nPersonalizationSettingsViewComponent\n\nViewsModule -->\n\nPersonalizationSettingsViewComponent->ViewsModule\n\n\n\n\n\nPersonalizationViewComponent\n\nPersonalizationViewComponent\n\nViewsModule -->\n\nPersonalizationViewComponent->ViewsModule\n\n\n\n\n\nPollenflugDetailViewComponent\n\nPollenflugDetailViewComponent\n\nViewsModule -->\n\nPollenflugDetailViewComponent->ViewsModule\n\n\n\n\n\nPollenflugSmallTileComponent\n\nPollenflugSmallTileComponent\n\nViewsModule -->\n\nPollenflugSmallTileComponent->ViewsModule\n\n\n\n\n\nPollenflugTileViewComponent\n\nPollenflugTileViewComponent\n\nViewsModule -->\n\nPollenflugTileViewComponent->ViewsModule\n\n\n\n\n\nRegistrationViewComponent\n\nRegistrationViewComponent\n\nViewsModule -->\n\nRegistrationViewComponent->ViewsModule\n\n\n\n\n\nSimpleTileViewComponent\n\nSimpleTileViewComponent\n\nViewsModule -->\n\nSimpleTileViewComponent->ViewsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        5 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    39 Components\n                \n            \n        \n        \n            \n                \n                    \n                    11 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    23 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        15 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AMBROSIA   (src/.../weather.mock.ts)\n                        \n                        \n                            BIRKE   (src/.../weather.mock.ts)\n                        \n                        \n                            DASHBOARDTILES   (src/.../weather.mock.ts)\n                        \n                        \n                            DAYS   (src/.../history-tile.service.ts)\n                        \n                        \n                            DISABLE_LOGIN_IDENTIFIER   (src/.../local-storage.service.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            ESCHE   (src/.../weather.mock.ts)\n                        \n                        \n                            FORECAST   (src/.../weather.mock.ts)\n                        \n                        \n                            FORECASTTILE   (src/.../weather.mock.ts)\n                        \n                        \n                            Gradients   (src/.../image.service.ts)\n                        \n                        \n                            HASEL   (src/.../weather.mock.ts)\n                        \n                        \n                            INDOORAIRQUALITY   (src/.../weather.mock.ts)\n                        \n                        \n                            INDOORAIRQUALITY2   (src/.../weather.mock.ts)\n                        \n                        \n                            INDOORROOM1   (src/.../weather.mock.ts)\n                        \n                        \n                            INDOORROOM2   (src/.../weather.mock.ts)\n                        \n                        \n                            INITIAL_USER_CONTEXT   (src/.../user-context.ts)\n                        \n                        \n                            INITIAL_USER_IDENTIFIKATION   (src/.../user-context.ts)\n                        \n                        \n                            MONTHS   (src/.../history-tile.service.ts)\n                        \n                        \n                            OUTDOORWEA3THE3R114   (src/.../weather.mock.ts)\n                        \n                        \n                            OUTDOORWEATHE3R114   (src/.../weather.mock.ts)\n                        \n                        \n                            OUTDOORWEATHER   (src/.../weather.mock.ts)\n                        \n                        \n                            OUTDOORWEATHER10   (src/.../weather.mock.ts)\n                        \n                        \n                            OUTDOORWEATHER11   (src/.../weather.mock.ts)\n                        \n                        \n                            OUTDOORWEATHER110   (src/.../weather.mock.ts)\n                        \n                        \n                            OUTDOORWEATHER112   (src/.../weather.mock.ts)\n                        \n                        \n                            OUTDOORWEATHER113   (src/.../weather.mock.ts)\n                        \n                        \n                            OUTDOORWEATHER114   (src/.../weather.mock.ts)\n                        \n                        \n                            OUTDOORWEATHER12   (src/.../weather.mock.ts)\n                        \n                        \n                            OUTDOORWEATHER13   (src/.../weather.mock.ts)\n                        \n                        \n                            OUTDOORWEATHER14   (src/.../weather.mock.ts)\n                        \n                        \n                            OUTDOORWEATHER2   (src/.../weather.mock.ts)\n                        \n                        \n                            OUTDOORWEATHER3   (src/.../weather.mock.ts)\n                        \n                        \n                            OUTDOORWEATHER321   (src/.../weather.mock.ts)\n                        \n                        \n                            OUTDOORWEATHER4   (src/.../weather.mock.ts)\n                        \n                        \n                            OUTDOORWEATHER41   (src/.../weather.mock.ts)\n                        \n                        \n                            POLLEN   (src/.../weather.mock.ts)\n                        \n                        \n                            POLLENLIST   (src/.../weather.mock.ts)\n                        \n                        \n                            POLLENSMALL   (src/.../weather.mock.ts)\n                        \n                        \n                            POLLENSMALL2   (src/.../weather.mock.ts)\n                        \n                        \n                            ROGGEN   (src/.../weather.mock.ts)\n                        \n                        \n                            routeTransitionAnimations   (src/.../route-transition-animation.ts)\n                        \n                        \n                            SCHLAFZIMMER   (src/.../weather.mock.ts)\n                        \n                        \n                            SCHLAFZIMMER2   (src/.../weather.mock.ts)\n                        \n                        \n                            USER_CONTEXT_IDENTIFIER   (src/.../local-storage.service.ts)\n                        \n                        \n                            USER_IDENTIFIKATION   (src/.../local-storage.service.ts)\n                        \n                        \n                            WEATHERHISTORY   (src/.../weather.mock.ts)\n                        \n                        \n                            WEATHERHISTORYBYDAY   (src/.../weather.mock.ts)\n                        \n                        \n                            WOHNZIMMER   (src/.../weather.mock.ts)\n                        \n                        \n                            WOHNZIMMER2   (src/.../weather.mock.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/model/mock-data/weather.mock.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            AMBROSIA\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         PollenData\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    pollenName: \"Ambrosia\",\n    id: 5,\n    today: '3',\n    tomorrow: '0',\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            BIRKE\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         PollenData\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    pollenName: \"Birke\",\n    id: 4,\n    today: '2',\n    tomorrow: '0',\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            DASHBOARDTILES\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Tile[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    FORECASTTILE,\n    INDOORROOM1,\n    POLLENLIST,\n    INDOORROOM2,\n    POLLENSMALL,\n    POLLENSMALL2,\n]\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ESCHE\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         PollenData\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    pollenName: \"Esche\",\n    id : 1,\n    today: '0',\n    tomorrow: '0',\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            FORECAST\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         WeatherForecastData\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    trend: \"steady\",\n    weatherDescription: \"rainy\",\n    weatherIcon: \"Rainy\"\n  }\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            FORECASTTILE\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Tile\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    type: TileType.forecast,\n    data: FORECAST,\n    id: \"FORECAST\",\n    priority: TilePriority.low,\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            HASEL\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         PollenData\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    pollenName: \"Hasel\",\n    id: 3,\n    today: '1',\n    tomorrow: '0',\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            INDOORAIRQUALITY\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IndoorRoomData[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    WOHNZIMMER,\n    SCHLAFZIMMER\n]\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            INDOORAIRQUALITY2\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IndoorRoomData[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    WOHNZIMMER2,\n    SCHLAFZIMMER2\n]\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            INDOORROOM1\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Tile\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    type: TileType.indoorRoom,\n    data: WOHNZIMMER,\n    id: SCHLAFZIMMER.roomID,\n    priority: TilePriority.low,\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            INDOORROOM2\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Tile\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    type: TileType.indoorRoom,\n    data: SCHLAFZIMMER,\n    id: SCHLAFZIMMER.roomID,\n    priority: TilePriority.low,\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            OUTDOORWEA3THE3R114\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         OutdoorWeatherData\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    temperature: 8,\n    maxTemperature: 20,\n    minTemperature: 4,\n    humidity: 70,\n    timestamp: new Date('May 19, 2021 10:24:00'),\n    weather: \"cloudy\",\n    apparentTemperature: 12,\n    location: \"Stuttgart\",\n    postCode: '71549'\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            OUTDOORWEATHE3R114\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         OutdoorWeatherData\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    temperature: 20,\n    maxTemperature: 20,\n    minTemperature: 4,\n    humidity: 70,\n    timestamp: new Date('May 19, 2021 10:34:00'),\n    weather: \"cloudy\",\n    apparentTemperature: 12,\n    location: \"Stuttgart\",\n    postCode: '71549'\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            OUTDOORWEATHER\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         OutdoorWeatherData\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    temperature: 14,\n    maxTemperature: 20,\n    minTemperature: 14,\n    humidity: 66,\n    timestamp: new Date('May 17, 2021 07:24:00'),\n    weather: \"cloudy\",\n    apparentTemperature: 12,\n    location: \"Stuttgart\",\n    postCode: '71549'\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            OUTDOORWEATHER10\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         OutdoorWeatherData\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    temperature: 14,\n    maxTemperature: 20,\n    minTemperature: 4,\n    humidity: 66,\n    timestamp: new Date('May 16, 2021 07:24:00'),\n    weather: \"cloudy\",\n    apparentTemperature: 12,\n    location: \"Stuttgart\",\n    postCode: '71549'\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            OUTDOORWEATHER11\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         OutdoorWeatherData\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    temperature: 15,\n    maxTemperature: 20,\n    minTemperature: 4,\n    humidity: 50,\n    timestamp: new Date('May 13, 2021 08:24:00'),\n    weather: \"cloudy\",\n    apparentTemperature: 12,\n    location: \"Stuttgart\",\n    postCode: '71549',\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            OUTDOORWEATHER110\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         OutdoorWeatherData\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    temperature: 14,\n    maxTemperature: 20,\n    minTemperature: 4,\n    humidity: 66,\n    timestamp: new Date('May 19, 2021 07:24:00'),\n    weather: \"cloudy\",\n    apparentTemperature: 12,\n    location: \"Stuttgart\",\n    postCode: '71549'\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            OUTDOORWEATHER112\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         OutdoorWeatherData\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    temperature: 15,\n    maxTemperature: 20,\n    minTemperature: 4,\n    humidity: 50,\n    timestamp: new Date('May 12, 2021 08:24:00'),\n    weather: \"cloudy\",\n    apparentTemperature: 12,\n    location: \"Stuttgart\",\n    postCode: '71549'\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            OUTDOORWEATHER113\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         OutdoorWeatherData\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    temperature: 20,\n    maxTemperature: 20,\n    minTemperature: 4,\n    humidity: 40,\n    timestamp: new Date('May 11, 2021 09:24:00'),\n    weather: \"cloudy\",\n    apparentTemperature: 12,\n    location: \"Stuttgart\",\n    postCode: '71549'\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            OUTDOORWEATHER114\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         OutdoorWeatherData\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    temperature: 18,\n    maxTemperature: 20,\n    minTemperature: 4,\n    humidity: 70,\n    timestamp: new Date('May 10, 2021 10:24:00'),\n    weather: \"cloudy\",\n    apparentTemperature: 12,\n    location: \"Stuttgart\",\n    postCode: '71549'\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            OUTDOORWEATHER12\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         OutdoorWeatherData\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    temperature: 15,\n    maxTemperature: 20,\n    minTemperature: 4,\n    humidity: 50,\n    timestamp: new Date('May 16, 2021 08:24:00'),\n    weather: \"cloudy\",\n    apparentTemperature: 12,\n    location: \"Stuttgart\",\n    postCode: '71549'\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            OUTDOORWEATHER13\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         OutdoorWeatherData\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    temperature: 20,\n    maxTemperature: 20,\n    minTemperature: 4,\n    humidity: 40,\n    timestamp: new Date('May 14, 2021 09:24:00'),\n    weather: \"cloudy\",\n    apparentTemperature: 12,\n    location: \"Stuttgart\",\n    postCode: '71549'\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            OUTDOORWEATHER14\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         OutdoorWeatherData\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    temperature: 18,\n    maxTemperature: 20,\n    minTemperature: 4,\n    humidity: 70,\n    timestamp: new Date('May 14, 2021 10:24:00'),\n    weather: \"cloudy\",\n    apparentTemperature: 12,\n    location: \"Stuttgart\",\n    postCode: '71549'\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            OUTDOORWEATHER2\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         OutdoorWeatherData\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    temperature: 15,\n    maxTemperature: 20,\n    minTemperature: 4,\n    humidity: 50,\n    timestamp: new Date('May 17, 2021 08:24:00'),\n    weather: \"cloudy\",\n    apparentTemperature: 12,\n    location: \"Stuttgart\",\n    postCode: '71549'\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            OUTDOORWEATHER3\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         OutdoorWeatherData\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    temperature: 20,\n    maxTemperature: 20,\n    minTemperature: 4,\n    humidity: 40,\n    timestamp: new Date('May 17, 2021 09:24:00'),\n    weather: \"cloudy\",\n    apparentTemperature: 12,\n    location: \"Stuttgart\",\n    postCode: '71549'\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            OUTDOORWEATHER321\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         OutdoorWeatherData\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    temperature: 20,\n    maxTemperature: 20,\n    minTemperature: 4,\n    humidity: 40,\n    timestamp: new Date('May 13, 2021 09:24:00'),\n    weather: \"cloudy\",\n    apparentTemperature: 12,\n    location: \"Stuttgart\",\n    postCode: '71549'\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            OUTDOORWEATHER4\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         OutdoorWeatherData\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    temperature: 18,\n    maxTemperature: 20,\n    minTemperature: 4,\n    humidity: 70,\n    timestamp: new Date('May 17, 2021 10:24:00'),\n    weather: \"cloudy\",\n    apparentTemperature: 12,\n    location: \"Stuttgart\",\n    postCode: '71549'\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            OUTDOORWEATHER41\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         OutdoorWeatherData\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    temperature: 18,\n    maxTemperature: 20,\n    minTemperature: 4,\n    humidity: 70,\n    timestamp: new Date('May 18, 2021 10:24:00'),\n    weather: \"cloudy\",\n    apparentTemperature: 12,\n    location: \"Stuttgart\",\n    postCode: '71549'\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            POLLEN\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         PollenData[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    ESCHE,\n    ROGGEN,\n    HASEL,\n    AMBROSIA,\n    BIRKE,\n    {\n        pollenName: \"Beifuß\",\n        id: 6,\n        today: '0',\n        tomorrow: '0',\n    },\n\n    {\n        pollenName: \"Gräser\",\n        id: 7,\n        today: '3',\n        tomorrow: '0',\n    },\n\n    {\n        pollenName: \"Erle\",\n        id: 8,\n        today: '0',\n        tomorrow: '0',\n    },\n]\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            POLLENLIST\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Tile\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    type: TileType.pollenList,\n    data: POLLEN,\n    id: \"POLLENLIST\",\n    priority: TilePriority.low,\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            POLLENSMALL\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Tile\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    type: TileType.pollenSmall,\n    data: ESCHE,\n    id: ESCHE.id + \"\",\n    priority: TilePriority.low,\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            POLLENSMALL2\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Tile\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    type: TileType.pollenSmall,\n    data: BIRKE,\n    id: BIRKE.id + \"\",\n    priority: TilePriority.low,\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ROGGEN\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         PollenData\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    pollenName: \"Roggen\",\n    id: 2,\n    today: '1',\n    tomorrow: '0',\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            SCHLAFZIMMER\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IndoorRoomData\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    roomID: \"15359845524\",\n    roomName: \"Schlafzimmer\",\n    airQuality: 12,\n    temperature: 22,\n    humidity: 50,\n    timestamp: new Date(),\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            SCHLAFZIMMER2\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IndoorRoomData\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    roomID: \"15359845524\",\n    roomName: \"Schlafzimmer2\",\n    airQuality: 2,\n    temperature: 22,\n    humidity: 5,\n    timestamp: new Date(),\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            WEATHERHISTORY\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         WeatherHistoryData\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    datapoints: [\n        OUTDOORWEATHER,\n        OUTDOORWEATHER10,\n        OUTDOORWEATHER2,\n        OUTDOORWEATHER13,\n        OUTDOORWEATHER14,\n        OUTDOORWEATHER4,\n        OUTDOORWEATHER3,\n        OUTDOORWEATHER12,\n        OUTDOORWEATHER114,\n        OUTDOORWEATHER113,\n        OUTDOORWEATHER112,\n        OUTDOORWEATHER110,\n        OUTDOORWEATHER41,\n        OUTDOORWEATHER321,\n        OUTDOORWEATHER11,\n        OUTDOORWEATHE3R114,\n        OUTDOORWEA3THE3R114,\n    ]\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            WEATHERHISTORYBYDAY\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         WeatherHistoryByDayData\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    averageHumidity: 40,\n    averageTemperature: 20,\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            WOHNZIMMER\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IndoorRoomData\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    roomID: \"328959845524\",\n    roomName: \"Wohnzimmer\",\n    airQuality: 102,\n    temperature: 22,\n    humidity: 50,\n    timestamp: new Date(),\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            WOHNZIMMER2\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IndoorRoomData\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    roomID: \"328959845524\",\n    roomName: \"Wohnzimmer2\",\n    airQuality: 12,\n    temperature: 2,\n    humidity: 50,\n    timestamp: new Date(),\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/services/history-tile.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            DAYS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : ['So','Mo','Di','Mi','Do','Fr','Sa']\n                        \n                    \n\n                \n                    \n                        Readable string constants of days and months\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            MONTHS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : ['Januar','Februar','März','April','Mai','Juni','Juli','August','September','Oktober','November','Dezember']\n                        \n                    \n\n\n            \n        \n\n    src/app/services/local-storage.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            DISABLE_LOGIN_IDENTIFIER\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'wetterstation-disable-login'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            USER_CONTEXT_IDENTIFIER\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'wetterstation-user-context'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            USER_IDENTIFIKATION\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'wetterstation-user-identifikation'\n                        \n                    \n\n                \n                    \n                        Identifier key constants\n\n                    \n                \n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true,\n  testData: false,\n  baseURL: 'http://192.168.178.47:4201/v1/',\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false,\n  testData: true,\n  baseURL: '', // for not production case we are using the Angular proxy. Which is automatically started by calling ng serve.\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/services/image.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            Gradients\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  noon: {\n    background: 'linear-gradient(0deg, rgba(97,194,216,1) 0%, rgba(67,125,219,1) 100%)',\n    filter: 'progid:DXImageTransform.Microsoft.gradient(startColorstr=\"#61c2d8\",endColorstr=\"#437ddb\",GradientType=1)'\n  },\n  dawn: {\n    background: 'linear-gradient(0deg, rgba(238,69,59,1) 0%, rgba(164,9,110,1) 100%)',\n    filter: 'progid:DXImageTransform.Microsoft.gradient(startColorstr=\"#ee453b\",endColorstr=\"#a4096e\",GradientType=1)'\n  },\n  night: {\n    background: 'linear-gradient(0deg, rgba(216,97,204,1) 0%, rgba(70,67,219,1) 100%)',\n    filter: 'progid:DXImageTransform.Microsoft.gradient(startColorstr=\"#d861cc\",endColorstr=\"#4643db\",GradientType=1)'\n  },\n  noonDark: {\n    background: 'linear-gradient(170deg, rgba(20,27,87,1) 0%, rgba(151,208,255,1) 100%)',\n    filter: 'progid:DXImageTransform.Microsoft.gradient(startColorstr=\"#61c2d8\",endColorstr=\"#437ddb\",GradientType=1)'\n  },\n  dawnDark: {\n    background: 'linear-gradient(170deg, rgba(212,108,102,1) 0%, rgba(108,10,72,1) 100%)',\n    filter: 'progid:DXImageTransform.Microsoft.gradient(startColorstr=\"#ee453b\",endColorstr=\"#a4096e\",GradientType=1)'\n  },\n  nightDark: {\n    background: 'linear-gradient(170deg, rgba(119,48,112,1) 0%, rgba(152,152,191,1) 100%)',\n    filter: 'progid:DXImageTransform.Microsoft.gradient(startColorstr=\"#d861cc\",endColorstr=\"#4643db\",GradientType=1)'\n  },\n  highContrast: {\n    background: 'linear-gradient(170deg, rgba(0,0,0,1) 0%, rgba(0,0,0,1) 100%)',\n    filter: 'progid:DXImageTransform.Microsoft.gradient(startColorstr=\"#d861cc\",endColorstr=\"#4643db\",GradientType=1)'\n  }\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/model/user-context.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            INITIAL_USER_CONTEXT\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserContext\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    theme: Themes.Automatic,\n    fontSize: 62.5,\n    pollen: [],\n    selfVoicingEnabled: false,\n    doVentilationReminder: false,\n    reduceMotion: false,\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            INITIAL_USER_IDENTIFIKATION\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserIdentifikation\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    token: '',\n    id: -99,\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/route-transition-animation.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            routeTransitionAnimations\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : trigger('triggerName', [\n\ttransition('Dashboard => Detail, Login => Personalization, Login => Registration, Registration => Personalization', [\n\t\tstyle({ position: 'relative',}),\n\t\tquery(':enter, :leave', [\n\t\t\tstyle({\n\t\t\t\tposition: 'absolute',\n\t\t\t\ttop: 0,\n\t\t\t\tright: 0,\n\t\t\t\twidth: '100%',\n\t\t\t})\n\t\t]),\n\t\tquery(':enter', [style({ \n\t\t\tright: '-100%', \n\t\t\topacity: 0.5,\n\t\t })]),\n\t\tquery(':leave', animateChild()),\n\t\tgroup([\n\t\t\tquery(':leave', [animate('0.6s ease-out', style({ opacity: 0.5 }))]),\n\t\t\tquery(':enter', [animate('0.3s ease-out', style({ right: '0%', opacity: 1 }))])\n\t\t]),\n\t\tquery(':enter', animateChild())\n\t]),\n\t\n\ttransition('Detail => Dashboard', [\n\t\tstyle({ position: 'relative' }),\n\t\tquery(':enter, :leave', [\n\t\t\tstyle({\n\t\t\t\tposition: 'absolute',\n\t\t\t\ttop: 0,\n\t\t\t\tleft: 0,\n\t\t\t\twidth: '100%'\n\t\t\t})\n\t\t]),\n\t\tquery(':enter', [style({ opacity: 0.5 })]),\n\t\tquery(':leave', animateChild()),\n\t\tgroup([\n\t\t\tquery(':leave', [animate('0.6s ease-out', style({ opacity: 0.5 }))]),\n\t\t\tquery(':enter', [animate('0.6s ease-out', style({ opacity: 1 }))])\n\t\t]),\n\t\tquery(':enter', animateChild())\n\t]),\n\n\ttransition('Personalization => Login, Registration => Login, Personalization => Registration', [\n\t\tstyle({ position: 'relative',}),\n\t\tquery(':enter, :leave', [\n\t\t\tstyle({\n\t\t\t\tposition: 'absolute',\n\t\t\t\ttop: 0,\n\t\t\t\tright: 0,\n\t\t\t\twidth: '100%',\n\t\t\t})\n\t\t]),\n\t\tquery(':leave', [style({ \n\t\t\tright: '0%', \n\t\t\topacity: 1,\n\t\t\t\"z-index\": 100,\n\t\t })]),\n\t\t query(':enter', [style({ \n\t\t\topacity: 0.2,\n\t\t })]),\n\t\tquery(':leave', animateChild()),\n\t\tgroup([\n\t\t\tquery(':enter', [animate('0.6s ease-out', style({ opacity: 1 }))]),\n\t\t\tquery(':leave', [animate('0.3s ease-out', style({ right: '-100%', opacity: 0 }))])\n\t\t]),\n\t\tquery(':enter', animateChild())\n\t]),\n])\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
